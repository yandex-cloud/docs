openapi: 3.0.0
info:
  title: Billing API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://billing.api.cloud.yandex.net
paths:
  /billing/v1/billingAccounts/{id}:
    get:
      tags:
      - BillingAccount
      summary: Returns the specified billing account.
      operationId: BillingAccountGet
      parameters:
      - name: id
        in: path
        description: |-
          Required.
          ID of the billing account to return.
          To get the billing account ID, use [list](/docs/billing/api-ref/BillingAccount/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'
      x-y-navtitle: get
  /billing/v1/billingAccounts:
    get:
      tags:
      - BillingAccount
      summary: Retrieves the list of billing accounts available for current user.
      operationId: BillingAccountList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/billing/api-ref/BillingAccount/list#query_params),
          the service returns a [nextPageToken](/docs/billing/api-ref/BillingAccount/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/billing/api-ref/BillingAccount/list#query_params) to the [nextPageToken](/docs/billing/api-ref/BillingAccount/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBillingAccountsResponse'
      x-y-navtitle: list
  /billing/v1/billingAccounts/{billingAccountId}/billableObjectBindings:
    get:
      tags:
      - BillingAccount
      summary: Retrieves the list of billable object bindings associated with the
        specified billing account.
      operationId: BillingAccountListBillableObjectBindings
      parameters:
      - name: billingAccountId
        in: path
        description: |-
          Required.
          ID of the billing account to list associated billable object bindings.
          To get the billing account ID, use [list](/docs/billing/api-ref/BillingAccount/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#query_params),
          the service returns a [nextPageToken](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#query_params) to the [nextPageToken](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBillableObjectBindingsResponse'
      x-y-navtitle: listBillableObjectBindings
    post:
      tags:
      - BillingAccount
      summary: Binds billable object to the specified billing account.
      operationId: BillingAccountBindBillableObject
      parameters:
      - name: billingAccountId
        in: path
        description: |-
          Required.
          ID of the billing account to bind billable object.
          To get the billing account ID, use [list](/docs/billing/api-ref/BillingAccount/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindBillableObjectRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: bindBillableObject
      x-y-operation-metadata:
        $ref: '#/components/schemas/BindBillableObjectMetadata'
      x-y-operation-response: '`BillableObjectBinding`'
  /billing/v1/billingAccounts/{resourceId}:listAccessBindings:
    get:
      tags:
      - BillingAccount
      summary: Lists access bindings for the specified billing account.
      operationId: BillingAccountListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /billing/v1/billingAccounts/{resourceId}:updateAccessBindings:
    patch:
      tags:
      - BillingAccount
      summary: Updates access bindings for the specified billing account.
      operationId: BillingAccountUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
  /billing/v1/budgets/{id}:
    get:
      tags:
      - Budget
      summary: Returns the specified budget.
      operationId: BudgetGet
      parameters:
      - name: id
        in: path
        description: |-
          Required.
          ID of the budget to return.
          To get the budget ID, use [list](/docs/billing/api-ref/Budget/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
      x-y-navtitle: get
  /billing/v1/budgets:
    get:
      tags:
      - Budget
      summary: Retrieves the list of budgets corresponding to the specified billing
        account.
      operationId: BudgetList
      parameters:
      - name: billingAccountId
        in: query
        description: |-
          Required.
          ID of the billing account to list budgets corresponding to.
          To get the billing account ID, use [list](/docs/billing/api-ref/BillingAccount/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/billing/api-ref/Budget/list#query_params),
          the service returns a [nextPageToken](/docs/billing/api-ref/Budget/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/billing/api-ref/Budget/list#query_params) to the [nextPageToken](/docs/billing/api-ref/Budget/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBudgetsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Budget
      summary: Creates a budget for the specified billing account.
      operationId: BudgetCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBudgetRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateBudgetMetadata'
      x-y-operation-response: '[Budget](/docs/billing/api-ref/Budget#representation)'
  /billing/v1/customers:
    get:
      tags:
      - Customer
      summary: Retrieves the list of customers associated with the specified reseller.
      operationId: CustomerList
      parameters:
      - name: resellerId
        in: query
        description: |-
          Required.
          ID of the reseller.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/billing/api-ref/Customer/list#query_params),
          the service returns a [nextPageToken](/docs/billing/api-ref/Customer/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/billing/api-ref/Customer/list#query_params) to the [nextPageToken](/docs/billing/api-ref/Customer/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomersResponse'
      x-y-navtitle: list
  /billing/v1/customers:invite:
    post:
      tags:
      - Customer
      summary: Invites customer to the specified reseller.
      operationId: CustomerInvite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteCustomerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: invite
      x-y-operation-metadata:
        $ref: '#/components/schemas/CustomerMetadata'
      x-y-operation-response: '[Customer](/docs/billing/api-ref/Customer#representation)'
  /billing/v1/customers/{customerId}:activate:
    post:
      tags:
      - Customer
      summary: Activates specified customer. After customer is activated, he can use
        resources associated with his billing account.
      operationId: CustomerActivate
      parameters:
      - name: customerId
        in: path
        description: |-
          Required.
          ID of the customer.
          To get the customer ID, use [list](/docs/billing/api-ref/Customer/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: activate
      x-y-operation-metadata:
        $ref: '#/components/schemas/CustomerMetadata'
      x-y-operation-response: '[Customer](/docs/billing/api-ref/Customer#representation)'
  /billing/v1/customers/{customerId}:suspend:
    post:
      tags:
      - Customer
      summary: Suspend specified customer. After customer is suspended, he can't use
        resources associated with his billing account.
      operationId: CustomerSuspend
      parameters:
      - name: customerId
        in: path
        description: |-
          Required.
          ID of the customer.
          To get the customer ID, use [list](/docs/billing/api-ref/Customer/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: suspend
      x-y-operation-metadata:
        $ref: '#/components/schemas/CustomerMetadata'
      x-y-operation-response: '[Customer](/docs/billing/api-ref/Customer#representation)'
  /billing/v1/services/{id}:
    get:
      tags:
      - Service
      summary: Returns the specified service.
      operationId: ServiceGet
      parameters:
      - name: id
        in: path
        description: |-
          Required.
          ID of the service to return.
          To get the service ID, use [list](/docs/billing/api-ref/Service/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      x-y-navtitle: get
  /billing/v1/services:
    get:
      tags:
      - Service
      summary: Retrieves the list of services.
      operationId: ServiceList
      parameters:
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Service.id](/docs/billing/api-ref/Service#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/billing/api-ref/Service/list#query_params),
          the service returns a [nextPageToken](/docs/billing/api-ref/Service/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/billing/api-ref/Service/list#query_params) to the [nextPageToken](/docs/billing/api-ref/Service/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesResponse'
      x-y-navtitle: list
  /billing/v1/skus/{id}:
    get:
      tags:
      - Sku
      summary: Returns the specified SKU.
      operationId: SkuGet
      parameters:
      - name: id
        in: path
        description: |-
          Required.
          ID of the SKU to return.
          To get the SKU ID, use [list](/docs/billing/api-ref/Sku/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: currency
        in: query
        description: |-
          Required.
          Currency of the SKU.
          Can be one of the following:
          * `RUB`
          * `USD`
          * `KZT`
        schema:
          type: string
      - name: billingAccountId
        in: query
        description: |-
          Optional ID of the billing account.
          If specified, contract prices for concrete billing account are included in the response.
          To get the billing account ID, use [list](/docs/billing/api-ref/BillingAccount/list) request.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
      x-y-navtitle: get
  /billing/v1/skus:
    get:
      tags:
      - Sku
      summary: Retrieves the list of SKUs.
      operationId: SkuList
      parameters:
      - name: currency
        in: query
        description: |-
          Required.
          Currency of the prices.
          Can be one of the following:
          * `RUB`
          * `USD`
          * `KZT`
        schema:
          type: string
      - name: billingAccountId
        in: query
        description: |-
          Optional ID of the billing account.
          If specified, contract prices for concrete billing account are included in the response.
          To get the billing account ID, use [list](/docs/billing/api-ref/BillingAccount/list) request.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Sku.id](/docs/billing/api-ref/Sku#representation) and [Sku.serviceId](/docs/billing/api-ref/Sku#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/billing/api-ref/Sku/list#query_params),
          the service returns a [nextPageToken](/docs/billing/api-ref/Sku/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/billing/api-ref/Sku/list#query_params) to the [nextPageToken](/docs/billing/api-ref/Sku/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSkusResponse'
      x-y-navtitle: list
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    BalanceBudgetSpec:
      description: Balance budget specification describes budget that can be used
        to control [BillingAccount.balance](/docs/billing/api-ref/BillingAccount#representation).
      type: object
      properties:
        amount:
          description: Max balance threshold of the budget. Amount currency is the
            same as corresponding [BillingAccount.currency](/docs/billing/api-ref/BillingAccount#representation).
          type: string
        notificationUserAccountIds:
          description: |-
            IDs of the [UserAccount](/docs/iam/api-ref/UserAccount#representation).
            Specified users will be be notified if the budget exceeds.
          type: array
          items:
            type: string
        thresholdRules:
          description: |-
            List of the `ThresholdRule`.
            Rules define intermediate balance thresholds of the budget.
          type: array
          items:
            $ref: '#/components/schemas/ThresholdRule'
        startDate:
          description: |-
            Start_date of the budget.
            Must be the first day of a month and must be formatted like YYYY-MM-DD.
          type: string
        endDate:
          description: |-
            End date of the budget.
            Must be the last day of a month and must be formatted like YYYY-MM-DD.
          type: string
    BillableObject:
      description: |-
        Represents a link to an object in other service.
        This object is being billed in the scope of a billing account.
      type: object
      properties:
        id:
          description: ID of the object in other service.
          type: string
        type:
          description: |-
            Billable object type. Can be one of the following:
            * `cloud`
          type: string
    BillableObjectBinding:
      description: Represents a binding of the BillableObject to a BillingAccount.
      type: object
      properties:
        effectiveTime:
          description: |-
            Timestamp when binding was created.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        billableObject:
          $ref: '#/components/schemas/BillableObject_in_BillableObjectBinding_billableObject'
    BillingAccount:
      description: A BillingAccount resource. For more information, see [BillingAccount](/docs/billing/concepts/billing-account).
      type: object
      properties:
        id:
          description: ID of the billing account.
          type: string
        name:
          description: Name of the billing account.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        countryCode:
          description: ISO 3166-1 alpha-2 country code of the billing account.
          type: string
        currency:
          description: |-
            Currency of the billing account.
            Can be one of the following:
            * `RUB`
            * `USD`
            * `KZT`
          type: string
        active:
          description: Represents whether corresponding billable objects can be used
            or not.
          type: boolean
          format: boolean
        balance:
          description: Current balance of the billing account.
          type: string
    BindBillableObjectMetadata:
      type: object
      properties:
        billableObjectId:
          description: ID of the `BillableObject` that was bound to billing account.
          type: string
    BindBillableObjectRequest:
      type: object
      properties:
        billableObject:
          $ref: '#/components/schemas/BillableObject_in_BindBillableObjectRequest_billableObject'
    Budget:
      description: A Budget resource. For more information, see [/docs/billing/concepts/budget].
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the budget.
            type: string
          name:
            description: Name of the budget.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          billingAccountId:
            description: ID of the billing account that the budget belongs to.
            type: string
          status:
            $ref: '#/components/schemas/BudgetStatus'
            description: Status of the budget.
      - title: budget_spec
        type: object
        maxProperties: 1
        properties:
          costBudget:
            $ref: '#/components/schemas/CostBudgetSpec'
            description: Cost budget specification.
          expenseBudget:
            $ref: '#/components/schemas/ExpenseBudgetSpec'
            description: Expense budget specification.
          balanceBudget:
            $ref: '#/components/schemas/BalanceBudgetSpec'
            description: Balance budget specification.
    BudgetStatus:
      description: |2-
         - CREATING: The budget is being created.
         - ACTIVE: The budget is active.
         - FINISHED: The budget is finished.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - FINISHED
    CloudFoldersConsumptionFilter:
      description: Filter that can be used for specific cloud and its folders selection.
      type: object
      properties:
        cloudId:
          description: |-
            ID of the [Cloud](/docs/resource-manager/api-ref/Cloud#representation).
            Only consumption within specified cloud is used for the budget calculation.
          type: string
        folderIds:
          description: |-
            IDs of the [Folder](/docs/resource-manager/api-ref/Folder#representation).
            Only consumption within specified folders of the given cloud is used for the budget calculation.
            Empty sequence means no folders filters and the whole cloud consumption will be used.
          type: array
          items:
            type: string
    ConsumptionFilter:
      description: Filter that can be used for specific resources selection.
      type: object
      properties:
        serviceIds:
          description: |-
            IDs of the [Service](/docs/billing/api-ref/Service#representation).
            Only consumption of resources corresponding to the given services is used for the budget calculation.
            Empty sequence means no services filters.
          type: array
          items:
            type: string
        cloudFoldersFilters:
          description: |-
            Cloud and folders consumption filter.
            Only consumption within specified clouds and folders is used for the budget calculation.
            Empty sequence means no cloud and folders filters.
          type: array
          items:
            $ref: '#/components/schemas/CloudFoldersConsumptionFilter'
    CostBudgetSpec:
      description: Cost budget specification describes budget that can be used to
        control cost of cloud resources usage.
      type: object
      allOf:
      - type: object
        properties:
          amount:
            description: Max cost threshold of the budget. Amount currency is the
              same as corresponding [BillingAccount.currency](/docs/billing/api-ref/BillingAccount#representation).
            type: string
          notificationUserAccountIds:
            description: |-
              IDs of the [UserAccount](/docs/iam/api-ref/UserAccount#representation).
              Specified users will be be notified if the budget exceeds.
            type: array
            items:
              type: string
          thresholdRules:
            description: |-
              List of the `ThresholdRule`.
              Rules define intermediate cost thresholds of the budget.
            type: array
            items:
              $ref: '#/components/schemas/ThresholdRule'
          filter:
            $ref: '#/components/schemas/ConsumptionFilter'
            description: Filter that can be used for specific resources selection.
              Only consumption cost of selected resources are used for the budget
              calculation.
          endDate:
            description: |-
              End date of the budget.
              Must be the last day of a month and must be formatted like YYYY-MM-DD.
            type: string
      - title: start_type
        type: object
        maxProperties: 1
        properties:
          resetPeriod:
            $ref: '#/components/schemas/ResetPeriodType'
            description: |-
              Periodic start type that resets budget after specified period is finished.
              First time budget is calculated in the current period, i.e. current month, quarter or year.
          startDate:
            description: |-
              Custom start date of the budget.
              Must be the first day of a month and must be formatted like YYYY-MM-DD.
            type: string
    CreateBudgetMetadata:
      type: object
      properties:
        budgetId:
          description: ID of the budget.
          type: string
    CreateBudgetRequest:
      type: object
      allOf:
      - type: object
        properties:
          billingAccountId:
            description: |-
              Required.
              ID of the billing account to list budgets corresponding to.
              To get the billing account ID, use [list](/docs/billing/api-ref/BillingAccount/list) request.

              The maximum string length in characters is 50.
            type: string
          name:
            description: |-
              Required.
              Name of the budget.
            type: string
      - title: budget_spec
        type: object
        maxProperties: 1
        properties:
          costBudgetSpec:
            $ref: '#/components/schemas/CostBudgetSpec'
            description: Cost budget specification.
          expenseBudgetSpec:
            $ref: '#/components/schemas/ExpenseBudgetSpec'
            description: Expense budget specification.
          balanceBudgetSpec:
            $ref: '#/components/schemas/BalanceBudgetSpec'
            description: Balance budget specification.
    Customer:
      description: A Customer resource.
      type: object
      properties:
        id:
          description: ID of the customer.
          type: string
        billingAccountId:
          description: ID of the [BillingAccount](/docs/billing/api-ref/BillingAccount#representation)
            assigned to the customer.
          type: string
    CustomerMetadata:
      type: object
      properties:
        resellerId:
          description: ID of the reseller.
          type: string
        customerId:
          description: ID of the customer.
          type: string
    CustomerPerson:
      description: Person of the customer. Contains legal information.
      type: object
      properties:
        name:
          description: Name of the person.
          type: string
        longname:
          description: Long name of the person.
          type: string
        phone:
          description: Phone of the person.
          type: string
        email:
          description: Email of the person.
          type: string
        postCode:
          description: Post code of the person.
          type: string
        postAddress:
          description: Post address of the person.
          type: string
        legalAddress:
          description: Legal address of the person.
          type: string
        tin:
          description: Tax identification number of the person.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    ExpenseBudgetSpec:
      description: Expense budget specification describes budget that can be used
        to control expense of cloud resources usage.
      type: object
      allOf:
      - type: object
        properties:
          amount:
            description: Max expense threshold of the budget. Amount currency is the
              same as corresponding [BillingAccount.currency](/docs/billing/api-ref/BillingAccount#representation).
            type: string
          notificationUserAccountIds:
            description: |-
              IDs of the [UserAccount](/docs/iam/api-ref/UserAccount#representation).
              Specified users will be be notified if the budget exceeds.
            type: array
            items:
              type: string
          thresholdRules:
            description: |-
              List of the `ThresholdRule`.
              Rules define intermediate expense thresholds of the budget.
            type: array
            items:
              $ref: '#/components/schemas/ThresholdRule'
          filter:
            $ref: '#/components/schemas/ConsumptionFilter'
            description: Filter that can be used for specific resources selection.
              Only consumption expense of selected resources are used for the budget
              calculation.
          endDate:
            description: |-
              End date of the budget.
              Must be the last day of a month and must be formatted like YYYY-MM-DD.
            type: string
      - title: start_type
        type: object
        maxProperties: 1
        properties:
          resetPeriod:
            $ref: '#/components/schemas/ResetPeriodType'
            description: |-
              Periodic start type that resets budget after specified period is finished.
              First time budget is calculated in the current period, i.e. current month, quarter or year.
          startDate:
            description: |-
              Custom start date of the budget.
              Must be the first day of a month and must be formatted like YYYY-MM-DD.
            type: string
    InviteCustomerRequest:
      type: object
      properties:
        resellerId:
          description: |-
            Required.
            ID of the reseller that customer will be associated with.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the customer.
          type: string
        invitationEmail:
          description: |-
            Required.
            Customer email to send invitation to.
          type: string
        person:
          $ref: '#/components/schemas/CustomerPerson_in_InviteCustomerRequest_person'
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListBillableObjectBindingsResponse:
      type: object
      properties:
        billableObjectBindings:
          description: List of billable object bindings.
          type: array
          items:
            $ref: '#/components/schemas/BillableObjectBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#query_params), use
            [nextPageToken](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#responses) as the value
            for the [pageToken](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/billing/api-ref/BillingAccount/listBillableObjectBindings#responses) to continue paging through the results.
          type: string
    ListBillingAccountsResponse:
      type: object
      properties:
        billingAccounts:
          description: List of billing accounts.
          type: array
          items:
            $ref: '#/components/schemas/BillingAccount'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/billing/api-ref/BillingAccount/list#query_params), use
            [nextPageToken](/docs/billing/api-ref/BillingAccount/list#responses) as the value
            for the [pageToken](/docs/billing/api-ref/BillingAccount/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/billing/api-ref/BillingAccount/list#responses) to continue paging through the results.
          type: string
    ListBudgetsResponse:
      type: object
      properties:
        budgets:
          description: List of budgets.
          type: array
          items:
            $ref: '#/components/schemas/Budget'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/billing/api-ref/Budget/list#query_params), use
            [nextPageToken](/docs/billing/api-ref/Budget/list#responses) as the value
            for the [pageToken](/docs/billing/api-ref/Budget/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/billing/api-ref/Budget/list#responses) to continue paging through the results.
          type: string
    ListCustomersResponse:
      type: object
      properties:
        customers:
          description: List of customers.
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/billing/api-ref/Customer/list#query_params), use
            [nextPageToken](/docs/billing/api-ref/Customer/list#responses) as the value
            for the [pageToken](/docs/billing/api-ref/Customer/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/billing/api-ref/Customer/list#responses) to continue paging through the results.
          type: string
    ListServicesResponse:
      type: object
      properties:
        services:
          description: List of services.
          type: array
          items:
            $ref: '#/components/schemas/Service'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/billing/api-ref/Service/list#query_params), use
            [nextPageToken](/docs/billing/api-ref/Service/list#responses) as the value
            for the [pageToken](/docs/billing/api-ref/Service/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/billing/api-ref/Service/list#responses) to continue paging through the results.
          type: string
    ListSkusResponse:
      type: object
      properties:
        skus:
          description: List of skus.
          type: array
          items:
            $ref: '#/components/schemas/Sku'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/billing/api-ref/Sku/list#query_params), use
            [nextPageToken](/docs/billing/api-ref/Sku/list#responses) as the value
            for the [pageToken](/docs/billing/api-ref/Sku/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/billing/api-ref/Sku/list#responses) to continue paging through the results.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/Status'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PricingExpression:
      description: |-
        Pricing expression of the pricing version.
        Defines price for the sku.
      type: object
      properties:
        rates:
          description: List of rates.
          type: array
          items:
            $ref: '#/components/schemas/Rate'
    PricingVersion:
      description: |-
        Pricing version of the SKU.
        Defines current and past prices for the sku.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PricingVersionType_in_PricingVersion_type'
        effectiveTime:
          description: |-
            Timestamp pricing version is active since inclusive.
            The pricing version is active until next pricing version effective time exclusive.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        pricingExpressions:
          description: List of pricing expressions.
          type: array
          items:
            $ref: '#/components/schemas/PricingExpression'
    PricingVersionType:
      description: |-
        Type of the pricing version.

         - STREET_PRICE: Regular price.
         - CONTRACT_PRICE: Price is overridden by a contract. Defined in the scope of a billing account.
      type: string
      enum:
      - STREET_PRICE
      - CONTRACT_PRICE
    Rate:
      description: |-
        Rate of the pricing expression.
        Define unit price for pricing quantity interval.
      type: object
      properties:
        startPricingQuantity:
          description: Start of the pricing quantity interval. The end of the interval
            is the start pricing quantity of the next rate.
          type: string
        unitPrice:
          description: Unit price for the pricing quantity interval.
          type: string
        currency:
          description: |-
            Currency of the unit price.
            Can be one of the following:
            * `RUB`
            * `USD`
            * `KZT`
          type: string
    ResetPeriodType:
      description: |2-
         - MONTHLY: Reset budget every month.
         - QUARTER: Reset budget every quarter.
         - ANNUALLY: Reset budget every year.
      type: string
      enum:
      - MONTHLY
      - QUARTER
      - ANNUALLY
    Service:
      description: A Service resource.
      type: object
      properties:
        id:
          description: ID of the service.
          type: string
        name:
          description: Name of the service, e.g. `Compute Cloud`, `VPC`.
          type: string
        description:
          description: Description of the service.
          type: string
    Sku:
      description: A Stock keeping unit resource.
      type: object
      properties:
        id:
          description: ID of the SKU.
          type: string
        name:
          description: Name of the SKU.
          type: string
        description:
          description: Description of the sku.
          type: string
        serviceId:
          description: ID of the service that sku belongs to.
          type: string
        pricingUnit:
          description: Pricing unit of the SKU, e.g. `core*hour`, `gbyte*hour`.
          type: string
        pricingVersions:
          description: List of pricing versions.
          type: array
          items:
            $ref: '#/components/schemas/PricingVersion'
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    ThresholdRule:
      description: Rules that define intermediate cost thresholds of the budget.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ThresholdType_in_ThresholdRule_type'
        amount:
          description: |-
            Amount of the rule.
             * Must be less than 100 if type is PERCENT.
             * Must be less than budget's amount if type is AMOUNT.
          type: string
        notificationUserAccountIds:
          description: |-
            IDs of the [UserAccount](/docs/iam/api-ref/UserAccount#representation).
            Specified users will be be notified if the threshold exceeds.
          type: array
          items:
            type: string
    ThresholdType:
      description: |-
        Define the unit of the [ThesholdRule.amount].

         - PERCENT: Percent.
         - AMOUNT: The same as budget amount.
      type: string
      enum:
      - PERCENT
      - AMOUNT
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    BillableObject_in_BillableObjectBinding_billableObject:
      description: |-
        Object that is bound to billing account.

        Represents a link to an object in other service.
        This object is being billed in the scope of a billing account.
      type: object
      properties:
        id:
          description: ID of the object in other service.
          type: string
        type:
          description: |-
            Billable object type. Can be one of the following:
            * `cloud`
          type: string
    BillableObject_in_BindBillableObjectRequest_billableObject:
      description: |-
        `BillableObject` to bind with billing account.

        Represents a link to an object in other service.
        This object is being billed in the scope of a billing account.
      type: object
      properties:
        id:
          description: ID of the object in other service.
          type: string
        type:
          description: |-
            Billable object type. Can be one of the following:
            * `cloud`
          type: string
    CustomerPerson_in_InviteCustomerRequest_person:
      description: |-
        Required.
        Person of the customer.

        Person of the customer. Contains legal information.
      type: object
      properties:
        name:
          description: Name of the person.
          type: string
        longname:
          description: Long name of the person.
          type: string
        phone:
          description: Phone of the person.
          type: string
        email:
          description: Email of the person.
          type: string
        postCode:
          description: Post code of the person.
          type: string
        postAddress:
          description: Post address of the person.
          type: string
        legalAddress:
          description: Legal address of the person.
          type: string
        tin:
          description: Tax identification number of the person.
          type: string
    PricingVersionType_in_PricingVersion_type:
      description: |-
        Type of the pricing version.

        Type of the pricing version.

         - STREET_PRICE: Regular price.
         - CONTRACT_PRICE: Price is overridden by a contract. Defined in the scope of a billing account.
      type: string
      enum:
      - STREET_PRICE
      - CONTRACT_PRICE
    ThresholdType_in_ThresholdRule_type:
      description: |-
        Type of the rule.

        Define the unit of the [ThesholdRule.amount].

         - PERCENT: Percent.
         - AMOUNT: The same as budget amount.
      type: string
      enum:
      - PERCENT
      - AMOUNT
tags:
- name: BillingAccount
  description: A set of methods for managing BillingAccount resources.
- name: Budget
  description: A set of methods for managing Budget resources.
- name: Customer
  description: A set of methods for managing Customer resources.
- name: Service
  description: A set of methods for managing Service resources.
- name: Sku
  description: A set of methods for managing Sku resources.
