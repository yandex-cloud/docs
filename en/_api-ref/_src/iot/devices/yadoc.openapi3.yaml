openapi: 3.0.0
info:
  title: IoT Core Service
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://iot-devices.api.cloud.yandex.net
paths:
  /iot-devices/v1/devices/{deviceId}/publish:
    post:
      tags:
      - DeviceData
      summary: Publishes message on behalf of specified device
      operationId: DeviceDataPublish
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of device publishing message

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishDeviceDataRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishDeviceDataResponse'
      x-y-navtitle: publish
  /iot-devices/v1/devices/{deviceId}:
    get:
      tags:
      - Device
      summary: Returns the specified device.
      description: To get the list of available devices, make a [list](/docs/iot-core/api-ref/Device/list)
        request.
      operationId: DeviceGet
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to return.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: deviceView
        in: query
        description: |-
          Specifies which parts of the device resource should be returned
          in the response.
        schema:
          $ref: '#/components/schemas/DeviceView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      x-y-navtitle: get
    delete:
      tags:
      - Device
      summary: Deletes the specified device.
      operationId: DeviceDelete
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to delete.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDeviceMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Device
      summary: Updates the specified device.
      operationId: DeviceUpdate
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to update.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateDeviceMetadata'
      x-y-operation-response: '[Device](/docs/iot-core/api-ref/Device#representation)'
  /iot-devices/v1/devices:getByName:
    get:
      tags:
      - Device
      operationId: DeviceGetByName
      parameters:
      - name: registryId
        in: query
        description: |-
          Required.
          ID of the registry to get device.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: deviceName
        in: query
        description: |-
          Required.
          Name of the device to return.

          To get a device name make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        schema:
          type: string
      - name: deviceView
        in: query
        description: |-
          Specifies which parts of the device resource should be returned
          in the response.
        schema:
          $ref: '#/components/schemas/DeviceView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
      x-y-navtitle: getByName
  /iot-devices/v1/devices:
    get:
      tags:
      - Device
      summary: Retrieves the list of devices in the specified registry.
      operationId: DeviceList
      parameters:
      - name: registryId
        in: query
        description: |-
          ID of the registry to list devices in.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          ID of the folder to list devices in.

          To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/iot-core/api-ref/Device/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/iot-core/api-ref/Device/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: deviceView
        in: query
        description: |-
          Specifies which parts of the device resource should be returned
          in the response.
        schema:
          $ref: '#/components/schemas/DeviceView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Device
      summary: Creates a device in the specified registry.
      operationId: DeviceCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDeviceMetadata'
      x-y-operation-response: '[Device](/docs/iot-core/api-ref/Device#representation)'
  /iot-devices/v1/devices/{deviceId}/certificates:
    get:
      tags:
      - Device
      summary: Retrieves the list of device certificates for the specified device.
      operationId: DeviceListCertificates
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to list certificates for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceCertificatesResponse'
      x-y-navtitle: listCertificates
    post:
      tags:
      - Device
      summary: Adds a certificate.
      operationId: DeviceAddCertificate
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device for which the certificate is being added.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDeviceCertificateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addCertificate
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddDeviceCertificateMetadata'
      x-y-operation-response: '`DeviceCertificate`'
  /iot-devices/v1/devices/{deviceId}/certificates/{fingerprint}:
    delete:
      tags:
      - Device
      summary: Deletes the specified device certificate.
      operationId: DeviceDeleteCertificate
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to delete a certificate for.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: fingerprint
        in: path
        description: |-
          Required.
          Fingerprint of the certificate to delete.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteCertificate
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDeviceCertificateMetadata'
      x-y-operation-response: Empty
  /iot-devices/v1/devices/{deviceId}/passwords:
    get:
      tags:
      - Device
      summary: Retrieves the list of passwords for the specified device.
      operationId: DeviceListPasswords
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the registry to list passwords in.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicePasswordsResponse'
      x-y-navtitle: listPasswords
    post:
      tags:
      - Device
      summary: Adds password for the specified device.
      operationId: DeviceAddPassword
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to add a password for.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDevicePasswordRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addPassword
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddDevicePasswordMetadata'
      x-y-operation-response: '`DevicePassword`'
  /iot-devices/v1/devices/{deviceId}/passwords/{passwordId}:
    delete:
      tags:
      - Device
      summary: Deletes the specified password.
      operationId: DeviceDeletePassword
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to delete a password for.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: passwordId
        in: path
        description: |-
          Required.
          ID of the password to delete.

          To get a password ID make a [listPasswords](/docs/iot-core/api-ref/Device/listPasswords) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deletePassword
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDevicePasswordMetadata'
      x-y-operation-response: Empty
  /iot-devices/v1/devices/{deviceId}/operations:
    get:
      tags:
      - Device
      summary: Lists operations for the specified device.
      operationId: DeviceListOperations
      parameters:
      - name: deviceId
        in: path
        description: |-
          Required.
          ID of the device to list operations for.

          To get a device ID make a [list](/docs/iot-core/api-ref/Device/list) request.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/iot-core/api-ref/Device/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/iot-core/api-ref/Device/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on [Device.name](/docs/iot-core/api-ref/Device#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceOperationsResponse'
      x-y-navtitle: listOperations
  /iot-devices/v1/registries/{registryId}/publish:
    post:
      tags:
      - RegistryData
      summary: Publishes message on behalf of specified registry
      operationId: RegistryDataPublish
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of registry publishing message

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRegistryDataRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishRegistryDataResponse'
      x-y-navtitle: publish
  /iot-devices/v1/registries/{registryId}:
    get:
      tags:
      - Registry
      summary: Returns the specified registry.
      description: To get the list of available registries, make a [list](/docs/iot-core/api-ref/Registry/list)
        request.
      operationId: RegistryGet
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to return.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
      x-y-navtitle: get
    delete:
      tags:
      - Registry
      summary: Deletes the specified registry.
      operationId: RegistryDelete
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to delete.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRegistryMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Registry
      summary: Updates the specified registry.
      operationId: RegistryUpdate
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to update.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/iot-core/api-ref/Registry#representation)'
  /iot-devices/v1/registries:getByName:
    get:
      tags:
      - Registry
      operationId: RegistryGetByName
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list registries in.

          To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: registryName
        in: query
        description: |-
          Required.
          Name of the registry to return.

          To get a registry Name make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
      x-y-navtitle: getByName
  /iot-devices/v1/registries:
    get:
      tags:
      - Registry
      summary: Retrieves the list of registries in the specified folder.
      operationId: RegistryList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list registries in.

          To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/iot-core/api-ref/Registry/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/iot-core/api-ref/Registry/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistriesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Registry
      summary: Creates a registry in the specified folder.
      operationId: RegistryCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/iot-core/api-ref/Registry#representation)'
  /iot-devices/v1/registries/{registryId}/certificates:
    get:
      tags:
      - Registry
      summary: Retrieves the list of registry certificates for the specified registry.
      operationId: RegistryListCertificates
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to list certificates for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistryCertificatesResponse'
      x-y-navtitle: listCertificates
    post:
      tags:
      - Registry
      summary: Adds a certificate.
      operationId: RegistryAddCertificate
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry for which the certificate is being added.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRegistryCertificateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addCertificate
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddRegistryCertificateMetadata'
      x-y-operation-response: '`RegistryCertificate`'
  /iot-devices/v1/registries/{registryId}/certificates/{fingerprint}:
    delete:
      tags:
      - Registry
      summary: Deletes the specified registry certificate.
      operationId: RegistryDeleteCertificate
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to delete a certificate for.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: fingerprint
        in: path
        description: |-
          Required.
          Fingerprint of the certificate that is being deleted.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteCertificate
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRegistryCertificateMetadata'
      x-y-operation-response: Empty
  /iot-devices/v1/registries/{registryId}/passwords:
    get:
      tags:
      - Registry
      summary: Retrieves the list of passwords for the specified registry.
      operationId: RegistryListPasswords
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to list passwords in.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistryPasswordsResponse'
      x-y-navtitle: listPasswords
    post:
      tags:
      - Registry
      summary: Adds password for the specified registry.
      operationId: RegistryAddPassword
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to add a password for.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRegistryPasswordRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addPassword
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddRegistryPasswordMetadata'
      x-y-operation-response: '`RegistryPassword`'
  /iot-devices/v1/registries/{registryId}/passwords/{passwordId}:
    delete:
      tags:
      - Registry
      summary: Deletes the specified password.
      operationId: RegistryDeletePassword
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to delete a password for.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Device/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: passwordId
        in: path
        description: |-
          Required.
          ID of the password to delete.

          To get a password ID make a [listPasswords](/docs/iot-core/api-ref/Registry/listPasswords) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deletePassword
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRegistryPasswordMetadata'
      x-y-operation-response: Empty
  /iot-devices/v1/registries/{registryId}:listDeviceTopicAliases:
    get:
      tags:
      - Registry
      summary: Retrieves the list of device topic aliases for the specified registry.
      operationId: RegistryListDeviceTopicAliases
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to list aliases for device topic.

          To get a registry ID make a [list](/docs/iot-core/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/iot-core/api-ref/Registry/listDeviceTopicAliases#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/iot-core/api-ref/Registry/listDeviceTopicAliases#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeviceTopicAliasesResponse'
      x-y-navtitle: listDeviceTopicAliases
  /iot-devices/v1/registries/{registryId}/operations:
    get:
      tags:
      - Registry
      summary: Lists operations for the specified registry.
      operationId: RegistryListOperations
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to list operations for.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/iot-core/api-ref/Registry/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/iot-core/api-ref/Registry/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on [Registry.name](/docs/iot-core/api-ref/Registry#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistryOperationsResponse'
      x-y-navtitle: listOperations
components:
  schemas:
    AddDeviceCertificateMetadata:
      type: object
      properties:
        deviceId:
          description: ID of the device certificate that is being added.
          type: string
        fingerprint:
          description: Fingerprint of the certificate that is being added.
          type: string
    AddDeviceCertificateRequest:
      type: object
      properties:
        certificateData:
          description: Public part of the certificate.
          type: string
    AddDevicePasswordMetadata:
      type: object
      properties:
        deviceId:
          description: ID of the device for which the password is being added.
          type: string
        passwordId:
          description: ID of the password that is being added.
          type: string
    AddDevicePasswordRequest:
      type: object
      properties:
        password:
          description: |-
            Passwords for the device.

            The password must contain at least three character categories among the following: upper case latin, lower case latin, numbers and special symbols.

            The minimum string length in characters is 14.
          type: string
    AddRegistryCertificateMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry certificate that is being added.
          type: string
        fingerprint:
          description: Fingerprint of the certificate that is being added.
          type: string
    AddRegistryCertificateRequest:
      type: object
      properties:
        certificateData:
          description: Public part of the certificate that is being added.
          type: string
    AddRegistryPasswordMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry for which the password is being added.
          type: string
        passwordId:
          description: ID of a password that is being added.
          type: string
    AddRegistryPasswordRequest:
      type: object
      properties:
        password:
          description: |-
            Passwords for the registry.

            The password must contain at least three character categories among the following: upper case latin, lower case latin, numbers and special symbols.

            The minimum string length in characters is 14.
          type: string
    CreateDeviceMetadata:
      type: object
      properties:
        deviceId:
          description: ID of the device that is being created.
          type: string
    CreateDeviceRequest:
      type: object
      properties:
        registryId:
          description: |-
            Required.
            ID of the registry to create a device in.

            To get a registry ID, make a [list](/docs/iot-core/api-ref/Registry/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the device. The name must be unique within the registry.

            The maximum string length in characters is 50.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the device.

            The maximum string length in characters is 256.
          type: string
        certificates:
          description: Device certificate.
          type: array
          items:
            $ref: '#/components/schemas/CreateDeviceRequestCertificate'
        topicAliases:
          description: |-
            Alias of a device topic.

            Alias is an alternate name of a device topic assigned by the user. Map alias to canonical topic name prefix, e.g. `my/custom/alias` match to `$device/{id}/events`.
          type: object
          additionalProperties:
            type: string
        password:
          description: |-
            Device password.

            The password must contain at least three character categories among the following: upper case latin, lower case latin, numbers and special symbols.
          type: string
    CreateDeviceRequestCertificate:
      description: Specification of a device certificate.
      type: object
      properties:
        certificateData:
          description: Public part of the device certificate.
          type: string
    CreateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that is being created.
          type: string
    CreateRegistryRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a registry in.

            To get a folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the registry. The name must be unique within the folder.

            The maximum string length in characters is 50.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the registry.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        certificates:
          description: Registry certificates.
          type: array
          items:
            $ref: '#/components/schemas/CreateRegistryRequestCertificate'
        password:
          description: |-
            Registry passwords.

            The password must contain at least three character categories among the following: upper case latin, lower case latin, numbers and special symbols.
          type: string
    CreateRegistryRequestCertificate:
      description: Specification of a registry certificate.
      type: object
      properties:
        certificateData:
          description: Public part of the registry certificate.
          type: string
    DeleteDeviceCertificateMetadata:
      type: object
      properties:
        deviceId:
          description: |-
            Required.
            ID of the device certificate that is being deleted.

            The maximum string length in characters is 50.
          type: string
        fingerprint:
          description: |-
            Required.
            Fingerprint of the certificate that is being deleted.

            The maximum string length in characters is 50.
          type: string
    DeleteDeviceMetadata:
      type: object
      properties:
        deviceId:
          description: ID of the device that is being deleted.
          type: string
    DeleteDevicePasswordMetadata:
      type: object
      properties:
        deviceId:
          description: |-
            Required.
            ID of the device for which the password is being deleted.

            The maximum string length in characters is 50.
          type: string
        passwordId:
          description: |-
            Required.
            ID of the password that is being deleted.

            The maximum string length in characters is 50.
          type: string
    DeleteRegistryCertificateMetadata:
      type: object
      properties:
        registryId:
          description: |-
            Required.
            ID of a registry for which the certificate is being delete.

            The maximum string length in characters is 50.
          type: string
        fingerprint:
          description: |-
            Required.
            Fingerprint of the certificate to deleted.

            The maximum string length in characters is 50.
          type: string
    DeleteRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that is being deleted.
          type: string
    DeleteRegistryPasswordMetadata:
      type: object
      properties:
        registryId:
          description: |-
            Required.
            ID of a registry for which the password is being delete.

            The maximum string length in characters is 50.
          type: string
        passwordId:
          description: |-
            Required.
            ID of the password to delete.

            To get a password ID make a [listPasswords](/docs/iot-core/api-ref/Registry/listPasswords) request.

            The maximum string length in characters is 50.
          type: string
    Device:
      description: A device. For more information, see [Device](/docs/iot-core/concepts/index#device).
      type: object
      properties:
        id:
          description: ID of the device.
          type: string
        registryId:
          description: ID of the registry that the device belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the device. The name is unique within the registry.
          type: string
        description:
          description: Description of the device. 0-256 characters long.
          type: string
        topicAliases:
          description: |-
            Alias of a device topic.

            Alias is an alternate name of a device topic assigned by the user. Map alias to canonical topic name prefix, e.g. `my/custom/alias` match to `$device/abcdef/events`.
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/DeviceStatus_in_Device_status'
        monitoringData:
          $ref: '#/components/schemas/DeviceMonitoringData_in_Device_monitoringData'
    DeviceAlias:
      description: |-
        A device topic alias.

        Alias is an alternate name of a device topic assigned by the user. Map alias to canonical topic name prefix, e.g. `my/custom/alias` match to `$device/abcdef/events`. For more information, see [Using topic aliases](/docs/iot-core/concepts/topic#aliases).
      type: object
      properties:
        deviceId:
          description: ID of the device that the alias belongs to.
          type: string
        topicPrefix:
          description: Prefix of a canonical topic name to be aliased, e.g. `$devices/abcdef`.
          type: string
        alias:
          description: Alias of a device topic.
          type: string
    DeviceCertificate:
      description: A device certificate. For more information, see [Managing device
        certificates](/docs/iot-core/operations/certificates/device-certificates).
      type: object
      properties:
        deviceId:
          description: ID of the device that the certificate belongs to.
          type: string
        fingerprint:
          description: SHA256 hash of the certificate.
          type: string
        certificateData:
          description: Public part of the certificate.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    DeviceMonitoringData:
      type: object
      properties:
        lastAuthIp:
          type: string
        lastAuthTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        lastPubActivityTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        lastSubActivityTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        lastOnlineTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
    DevicePassword:
      description: A device password.
      type: object
      properties:
        deviceId:
          description: ID of the device that the password belongs to.
          type: string
        id:
          description: ID of the password.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    DeviceStatus:
      description: |2-
         - CREATING: Device is being created.
         - ACTIVE: Device is ready to use.
         - DELETING: Device is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    DeviceView:
      description: |2-
         - BASIC: Server responses without monitoring data.
        The default value.
         - FULL: Server responses with monitoring data.
      type: string
      enum:
      - BASIC
      - FULL
      default: BASIC
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ListDeviceCertificatesResponse:
      type: object
      properties:
        certificates:
          description: List of certificates for the specified device.
          type: array
          items:
            $ref: '#/components/schemas/DeviceCertificate'
    ListDeviceOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified device certificate.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/iot-core/api-ref/Device/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/iot-core/api-ref/Device/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListDevicePasswordsResponse:
      type: object
      properties:
        passwords:
          description: List of passwords for the specified device.
          type: array
          items:
            $ref: '#/components/schemas/DevicePassword'
    ListDeviceTopicAliasesResponse:
      type: object
      properties:
        aliases:
          description: List of device aliases for the specified registry.
          type: array
          items:
            $ref: '#/components/schemas/DeviceAlias'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/iot-core/api-ref/Registry/listDeviceTopicAliases#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/iot-core/api-ref/Registry/listDeviceTopicAliases#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListDevicesResponse:
      type: object
      properties:
        devices:
          description: List of devices.
          type: array
          items:
            $ref: '#/components/schemas/Device'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/iot-core/api-ref/Device/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/iot-core/api-ref/Device/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListRegistriesResponse:
      type: object
      properties:
        registries:
          description: List of registries.
          type: array
          items:
            $ref: '#/components/schemas/Registry'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/iot-core/api-ref/Registry/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/iot-core/api-ref/Registry/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListRegistryCertificatesResponse:
      type: object
      properties:
        certificates:
          description: List of certificates for the specified registry.
          type: array
          items:
            $ref: '#/components/schemas/RegistryCertificate'
    ListRegistryOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified registry.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/iot-core/api-ref/Registry/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/iot-core/api-ref/Registry/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListRegistryPasswordsResponse:
      type: object
      properties:
        passwords:
          description: List of passwords for the specified registry.
          type: array
          items:
            $ref: '#/components/schemas/RegistryPassword'
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PublishDeviceDataRequest:
      type: object
      properties:
        topic:
          description: |-
            Required.
            Topic where message should be published

            The maximum string length in characters is 1024.
          type: string
        data:
          description: |-
            Content of the message

            The maximum string length in characters is 262144.
          type: string
          format: byte
    PublishDeviceDataResponse:
      type: object
      properties: {}
    PublishRegistryDataRequest:
      type: object
      properties:
        topic:
          description: |-
            Required.
            Topic where message should be published

            The maximum string length in characters is 1024.
          type: string
        data:
          description: |-
            Content of the message

            The maximum string length in characters is 262144.
          type: string
          format: byte
    PublishRegistryDataResponse:
      type: object
      properties: {}
    Registry:
      description: A registry. For more information, see [Registry](/docs/iot-core/concepts/index#registry).
      type: object
      properties:
        id:
          description: ID of the registry.
          type: string
        folderId:
          description: ID of the folder that the registry belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the registry. The name is unique within the folder.
          type: string
        description:
          description: Description of the registry. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `key:value` pairs. Maximum of 64 per resource.
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/RegistryStatus_in_Registry_status'
        logGroupId:
          description: ID of the logs group for the specified registry.
          type: string
    RegistryCertificate:
      description: A registry certificate. For more information, see [Managing registry
        certificates](/docs/iot-core/operations/certificates/registry-certificates).
      type: object
      properties:
        registryId:
          description: ID of the registry that the certificate belongs to.
          type: string
        fingerprint:
          description: SHA256 hash of the certificates.
          type: string
        certificateData:
          description: Public part of the certificate.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    RegistryPassword:
      description: A registry password.
      type: object
      properties:
        registryId:
          description: ID of the registry that the password belongs to.
          type: string
        id:
          description: ID of the password.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    RegistryStatus:
      description: |2-
         - CREATING: Registry is being created.
         - ACTIVE: Registry is ready to use.
         - DELETING: Registry is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    UpdateDeviceMetadata:
      type: object
      properties:
        deviceId:
          description: ID of the device that is being updated.
          type: string
    UpdateDeviceRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateDeviceRequest_updateMask'
        name:
          description: |-
            Name of the device. The name must be unique within the registry.

            The maximum string length in characters is 50.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the device.

            The maximum string length in characters is 256.
          type: string
        topicAliases:
          description: |-
            Alias of a device topic.

            Alias is an alternate name of a device topic assigned by the user. Map alias to canonical topic name prefix, e.g. `my/custom/alias` match to `$device/{id}/events`.
          type: object
          additionalProperties:
            type: string
    UpdateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that is being updated.
          type: string
    UpdateRegistryRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateRegistryRequest_updateMask'
        name:
          description: |-
            Name of the registry. The name must be unique within the folder.

            The maximum string length in characters is 50.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the registry.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    DeviceStatus_in_Device_status:
      description: |-
        Status of the device.

         - CREATING: Device is being created.
         - ACTIVE: Device is ready to use.
         - DELETING: Device is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    DeviceMonitoringData_in_Device_monitoringData:
      description: Device monitoring data, returns if FULL view specified.
      type: object
      properties:
        lastAuthIp:
          type: string
        lastAuthTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        lastPubActivityTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        lastSubActivityTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        lastOnlineTime:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
    RegistryStatus_in_Registry_status:
      description: |-
        Status of the registry.

         - CREATING: Registry is being created.
         - ACTIVE: Registry is ready to use.
         - DELETING: Registry is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    FieldMask_in_UpdateDeviceRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the device are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateRegistryRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the registry are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: DeviceData
  description: A set of methods to work with IoT Core messages on behalf of device
- name: Device
  description: A set of methods for managing devices.
- name: RegistryData
  description: A set of methods to work with IoT Core messages on behalf of registry
- name: Registry
  description: A set of methods for managing registry.
