openapi: 3.0.0
info:
  title: Key Management Service API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://kms.api.cloud.yandex.net
paths:
  /kms/v1/keys/{keyId}:encrypt:
    post:
      tags:
      - SymmetricCrypto
      summary: Encrypts given plaintext with the specified key.
      operationId: SymmetricCryptoEncrypt
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the symmetric KMS key to use for encryption.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymmetricEncryptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricEncryptResponse'
      x-y-navtitle: encrypt
  /kms/v1/keys/{keyId}:decrypt:
    post:
      tags:
      - SymmetricCrypto
      summary: Decrypts the given ciphertext with the specified key.
      operationId: SymmetricCryptoDecrypt
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the symmetric KMS key to use for decryption.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymmetricDecryptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricDecryptResponse'
      x-y-navtitle: decrypt
  /kms/v1/keys/{keyId}:reEncrypt:
    post:
      tags:
      - SymmetricCrypto
      summary: Re-encrypts a ciphertext with the specified KMS key.
      operationId: SymmetricCryptoReEncrypt
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the new key to be used for encryption.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymmetricReEncryptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricReEncryptResponse'
      x-y-navtitle: reEncrypt
  /kms/v1/keys/{keyId}:generateDataKey:
    post:
      tags:
      - SymmetricCrypto
      summary: |-
        Generates a new symmetric data encryption key (not a KMS key) and returns
        the generated key as plaintext and as ciphertext encrypted with the specified symmetric KMS key.
      operationId: SymmetricCryptoGenerateDataKey
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the symmetric KMS key that the generated data key should be encrypted with.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateDataKeyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateDataKeyResponse'
      x-y-navtitle: generateDataKey
  /kms/v1/keys:
    get:
      tags:
      - SymmetricKey
      summary: Returns the list of symmetric KMS keys in the specified folder.
      operationId: SymmetricKeyList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list symmetric KMS keys in.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/kms/api-ref/SymmetricKey/list#query_params), the service returns a [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/kms/api-ref/SymmetricKey/list#query_params) to the
          [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSymmetricKeysResponse'
      x-y-navtitle: list
    post:
      tags:
      - SymmetricKey
      summary: Creates a symmetric KMS key in the specified folder.
      operationId: SymmetricKeyCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSymmetricKeyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}:
    get:
      tags:
      - SymmetricKey
      summary: Returns the specified symmetric KMS key.
      description: To get the list of available symmetric KMS keys, make a [list](/docs/kms/api-ref/SymmetricKey/list)
        request.
      operationId: SymmetricKeyGet
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the symmetric KMS key to return.
          To get the ID of a symmetric KMS key use a [list](/docs/kms/api-ref/SymmetricKey/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricKey'
      x-y-navtitle: get
    delete:
      tags:
      - SymmetricKey
      summary: |-
        Deletes the specified symmetric KMS key. This action also automatically schedules
        the destruction of all of the key's versions in 72 hours.
      description: |-
        The key and its versions appear absent in [get](/docs/kms/api-ref/SymmetricKey/get) and [list](/docs/kms/api-ref/SymmetricKey/list)
        requests, but can be restored within 72 hours with a request to tech support.
      operationId: SymmetricKeyDelete
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the key to be deleted.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
    patch:
      tags:
      - SymmetricKey
      summary: Updates the specified symmetric KMS key.
      operationId: SymmetricKeyUpdate
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the symmetric KMS key to update.
          To get the ID of a symmetric KMS key use a [list](/docs/kms/api-ref/SymmetricKey/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSymmetricKeyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}/versions:
    get:
      tags:
      - SymmetricKey
      summary: Returns the list of versions of the specified symmetric KMS key.
      operationId: SymmetricKeyListVersions
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the symmetric KMS key to list versions for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/kms/api-ref/SymmetricKey/listVersions#query_params), the service returns a [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/kms/api-ref/SymmetricKey/listVersions#query_params) to the
          [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSymmetricKeyVersionsResponse'
      x-y-navtitle: listVersions
  /kms/v1/keys/{keyId}:setPrimaryVersion:
    post:
      tags:
      - SymmetricKey
      summary: |-
        Sets the primary version for the specified key. The primary version is used
        by default for all encrypt/decrypt operations where no version ID is specified.
      operationId: SymmetricKeySetPrimaryVersion
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the key to set a primary version for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPrimarySymmetricKeyVersionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setPrimaryVersion
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetPrimarySymmetricKeyVersionMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}:scheduleVersionDestruction:
    post:
      tags:
      - SymmetricKey
      summary: Schedules the specified key version for destruction.
      description: Scheduled destruction can be cancelled with the [cancelVersionDestruction](/docs/kms/api-ref/SymmetricKey/cancelVersionDestruction)
        method.
      operationId: SymmetricKeyScheduleVersionDestruction
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the key whose version should be scheduled for destruction.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleSymmetricKeyVersionDestructionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: scheduleVersionDestruction
      x-y-operation-metadata:
        $ref: '#/components/schemas/ScheduleSymmetricKeyVersionDestructionMetadata'
      x-y-operation-response: '`SymmetricKeyVersion`'
  /kms/v1/keys/{keyId}:cancelVersionDestruction:
    post:
      tags:
      - SymmetricKey
      summary: Cancels previously scheduled version destruction, if the version hasn't
        been destroyed yet.
      operationId: SymmetricKeyCancelVersionDestruction
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the key to cancel a version's destruction for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSymmetricKeyVersionDestructionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: cancelVersionDestruction
      x-y-operation-metadata:
        $ref: '#/components/schemas/CancelSymmetricKeyVersionDestructionMetadata'
      x-y-operation-response: '`SymmetricKeyVersion`'
  /kms/v1/keys/{keyId}:rotate:
    post:
      tags:
      - SymmetricKey
      summary: |-
        Rotates the specified key: creates a new key version and makes it the primary version.
        The old version remains available for decryption of ciphertext encrypted with it.
      operationId: SymmetricKeyRotate
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the key to be rotated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: rotate
      x-y-operation-metadata:
        $ref: '#/components/schemas/RotateSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}/operations:
    get:
      tags:
      - SymmetricKey
      summary: Lists operations for the specified symmetric KMS key.
      operationId: SymmetricKeyListOperations
      parameters:
      - name: keyId
        in: path
        description: |-
          Required.
          ID of the symmetric KMS key to get operations for.

          To get the key ID, use a [list](/docs/kms/api-ref/SymmetricKey/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/kms/api-ref/SymmetricKey/listOperations#query_params), the service returns a [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/kms/api-ref/SymmetricKey/listOperations#query_params) to the
          [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSymmetricKeyOperationsResponse'
      x-y-navtitle: listOperations
  /kms/v1/keys/{resourceId}:listAccessBindings:
    get:
      tags:
      - SymmetricKey
      summary: Lists existing access bindings for the specified key.
      operationId: SymmetricKeyListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /kms/v1/keys/{resourceId}:setAccessBindings:
    post:
      tags:
      - SymmetricKey
      summary: Sets access bindings for the key.
      operationId: SymmetricKeySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /kms/v1/keys/{resourceId}:updateAccessBindings:
    post:
      tags:
      - SymmetricKey
      summary: Updates access bindings for the specified key.
      operationId: SymmetricKeyUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    CancelSymmetricKeyVersionDestructionMetadata:
      type: object
      properties:
        keyId:
          description: ID of the key whose version's destruction is being cancelled.
          type: string
        versionId:
          description: ID of the version whose scheduled destruction is being cancelled.
          type: string
    CancelSymmetricKeyVersionDestructionRequest:
      type: object
      properties:
        versionId:
          description: |-
            Required.
            ID of the version whose scheduled destruction should be cancelled.

            The maximum string length in characters is 50.
          type: string
    CreateSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: ID of the key being created.
          type: string
        primaryVersionId:
          description: ID of the primary version of the key being created.
          type: string
    CreateSymmetricKeyRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a symmetric KMS key in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the key.

            The maximum string length in characters is 100.
          type: string
        description:
          description: |-
            Description of the key.

            The maximum string length in characters is 1024.
          type: string
        labels:
          description: |-
            Custom labels for the symmetric KMS key as `key:value` pairs. Maximum 64 per key.
            For example, `"project": "mvp"` or `"source": "dictionary"`.

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        defaultAlgorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_CreateSymmetricKeyRequest_defaultAlgorithm'
        rotationPeriod:
          description: |-
            Interval between automatic rotations. To disable automatic rotation, don't include
            this field in the creation request.
          type: string
        deletionProtection:
          description: Flag that inhibits deletion of the symmetric KMS key
          type: boolean
          format: boolean
    DeleteSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: ID of the key being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GenerateDataKeyRequest:
      type: object
      properties:
        versionId:
          description: |-
            ID of the key version to encrypt the generated data key with.
            Defaults to the primary version if not specified.

            The maximum string length in characters is 50.
          type: string
        aadContext:
          description: |-
            Additional authenticated data (AAD context), optional.
            If specified, this data will be required for decryption with the `SymmetricDecryptRequest`.
            Should be encoded with base64.

            The maximum string length in characters is 8192.
          type: string
          format: byte
        dataKeySpec:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_GenerateDataKeyRequest_dataKeySpec'
        skipPlaintext:
          description: |-
            If `true`, the method won't return the data key as plaintext.
            Default value is `false`.
          type: boolean
          format: boolean
    GenerateDataKeyResponse:
      type: object
      properties:
        keyId:
          description: ID of the symmetric KMS key that was used to encrypt the generated
            data key.
          type: string
        versionId:
          description: ID of the key version that was used for encryption.
          type: string
        dataKeyPlaintext:
          description: |-
            Generated data key as plaintext.
            The field is empty, if the [skipPlaintext](/docs/kms/api-ref/SymmetricCrypto/generateDataKey#body_params) parameter
            was set to `true`.
          type: string
          format: byte
        dataKeyCiphertext:
          description: The encrypted data key.
          type: string
          format: byte
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListSymmetricKeyOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified key.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/kms/api-ref/SymmetricKey/listOperations#query_params), use the [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses) as the value
            for the [pageToken](/docs/kms/api-ref/SymmetricKey/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses) to continue paging through the results.
          type: string
    ListSymmetricKeyVersionsResponse:
      type: object
      properties:
        keyVersions:
          description: List of versions for the specified symmetric KMS key.
          type: array
          items:
            $ref: '#/components/schemas/SymmetricKeyVersion'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number
            of results is greater than the specified [pageSize](/docs/kms/api-ref/SymmetricKey/listVersions#query_params), use
            the [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses) as the value for the [pageToken](/docs/kms/api-ref/SymmetricKey/listVersions#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses) to continue paging through the results.
          type: string
    ListSymmetricKeysResponse:
      type: object
      properties:
        keys:
          description: List of symmetric KMS keys in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/SymmetricKey'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number
            of results is greater than the specified [pageSize](/docs/kms/api-ref/SymmetricKey/list#query_params), use
            the [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses) as the value for the [pageToken](/docs/kms/api-ref/SymmetricKey/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses) to continue paging through the results.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RotateSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: ID of the key being rotated.
          type: string
        newPrimaryVersionId:
          description: ID of the version generated as a result of key rotation.
          type: string
    ScheduleSymmetricKeyVersionDestructionMetadata:
      type: object
      properties:
        keyId:
          description: ID of the key whose version is being scheduled for destruction.
          type: string
        versionId:
          description: ID of the version that is being scheduled for destruction.
          type: string
        destroyAt:
          description: |-
            Time when the version is scheduled to be destroyed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    ScheduleSymmetricKeyVersionDestructionRequest:
      type: object
      properties:
        versionId:
          description: |-
            Required.
            ID of the version to be destroyed.

            The maximum string length in characters is 50.
          type: string
        pendingPeriod:
          description: |-
            Time interval between the version destruction request and actual destruction.
            Default value: 7 days.
          type: string
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).

            The maximum number of elements is 1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    SetPrimarySymmetricKeyVersionMetadata:
      type: object
      properties:
        keyId:
          description: ID of the key that the primary version if being changed for.
          type: string
        versionId:
          description: ID of the version that is being made primary for the key.
          type: string
    SetPrimarySymmetricKeyVersionRequest:
      type: object
      properties:
        versionId:
          description: |-
            Required.
            ID of the version that should become primary for the specified key.

            The maximum string length in characters is 50.
          type: string
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    SymmetricAlgorithm:
      description: |-
        Supported symmetric encryption algorithms.

         - AES_128: AES algorithm with 128-bit keys.
         - AES_192: AES algorithm with 192-bit keys.
         - AES_256: AES algorithm with 256-bit keys.
         - AES_256_HSM: AES algorithm with 256-bit keys hosted by HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricDecryptRequest:
      type: object
      properties:
        aadContext:
          description: |-
            Additional authenticated data, must be the same as was provided
            in the corresponding `SymmetricEncryptRequest`.
            Should be encoded with base64.

            The maximum string length in characters is 8192.
          type: string
          format: byte
        ciphertext:
          description: |-
            Required.
            Ciphertext to be decrypted.
            Should be encoded with base64.
          type: string
          format: byte
    SymmetricDecryptResponse:
      type: object
      properties:
        keyId:
          description: ID of the symmetric KMS key that was used for decryption.
          type: string
        versionId:
          description: ID of the key version that was used for decryption.
          type: string
        plaintext:
          description: Decrypted plaintext.
          type: string
          format: byte
    SymmetricEncryptRequest:
      type: object
      properties:
        versionId:
          description: |-
            ID of the key version to encrypt plaintext with.
            Defaults to the primary version if not specified.

            The maximum string length in characters is 50.
          type: string
        aadContext:
          description: |-
            Additional authenticated data (AAD context), optional.
            If specified, this data will be required for decryption with the `SymmetricDecryptRequest`.
            Should be encoded with base64.

            The maximum string length in characters is 8192.
          type: string
          format: byte
        plaintext:
          description: |-
            Required.
            Plaintext to be encrypted.
            Should be encoded with base64.

            The maximum string length in characters is 32768.
          type: string
          format: byte
    SymmetricEncryptResponse:
      type: object
      properties:
        keyId:
          description: |-
            Required.
            ID of the symmetric KMS key that was used for encryption.

            The maximum string length in characters is 50.
          type: string
        versionId:
          description: |-
            ID of the key version that was used for encryption.

            The maximum string length in characters is 50.
          type: string
        ciphertext:
          description: Resulting ciphertext.
          type: string
          format: byte
    SymmetricKey:
      description: A symmetric KMS key that may contain several versions of the cryptographic
        material.
      type: object
      properties:
        id:
          description: ID of the key.
          type: string
        folderId:
          description: ID of the folder that the key belongs to.
          type: string
        createdAt:
          description: |-
            Time when the key was created.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the key.
          type: string
        description:
          description: Description of the key.
          type: string
        labels:
          description: Custom labels for the key as `key:value` pairs. Maximum 64
            per key.
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyStatus_in_SymmetricKey_status'
        primaryVersion:
          $ref: '#/components/schemas/SymmetricKeyVersion_in_SymmetricKey_primaryVersion'
        defaultAlgorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_SymmetricKey_defaultAlgorithm'
        rotatedAt:
          description: |-
            Time of the last key rotation (time when the last version was created).
            Empty if the key does not have versions yet.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        rotationPeriod:
          description: Time period between automatic key rotations.
          type: string
        deletionProtection:
          description: Flag that inhibits deletion of the key
          type: boolean
          format: boolean
    SymmetricKeyStatus:
      description: |2-
         - CREATING: The key is being created.
         - ACTIVE: The key is active and can be used for encryption and decryption.
        Can be set to INACTIVE using the [update](/docs/kms/api-ref/SymmetricKey/update) method.
         - INACTIVE: The key is inactive and unusable.
        Can be set to ACTIVE using the [update](/docs/kms/api-ref/SymmetricKey/update) method.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - INACTIVE
    SymmetricKeyVersion:
      description: 'Symmetric KMS key version: metadata about actual cryptographic
        data.'
      type: object
      properties:
        id:
          description: ID of the key version.
          type: string
        keyId:
          description: ID of the symmetric KMS key that the version belongs to.
          type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyVersionStatus_in_SymmetricKeyVersion_status'
        algorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_SymmetricKeyVersion_algorithm'
        createdAt:
          description: |-
            Time when the key version was created.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        primary:
          description: |-
            Indication of a primary version, that is to be used by default for all cryptographic
            operations that don't have a key version explicitly specified.
          type: boolean
          format: boolean
        destroyAt:
          description: |-
            Time when the key version is going to be destroyed. Empty unless the status
            is `SCHEDULED_FOR_DESTRUCTION`.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        hostedByHsm:
          description: Indication of the version that is hosted by HSM.
          type: boolean
          format: boolean
    SymmetricKeyVersionStatus:
      description: |-
        Possible version status.

         - ACTIVE: The version is active and can be used for encryption and decryption.
         - SCHEDULED_FOR_DESTRUCTION: The version is scheduled for destruction, the time when it will be destroyed
        is specified in the `destroyAt` field.
         - DESTROYED: The version is destroyed and cannot be recovered.
      type: string
      enum:
      - ACTIVE
      - SCHEDULED_FOR_DESTRUCTION
      - DESTROYED
    SymmetricReEncryptRequest:
      type: object
      properties:
        versionId:
          description: |-
            ID of the version of the new key to be used for encryption.
            Defaults to the primary version if not specified.

            The maximum string length in characters is 50.
          type: string
        aadContext:
          description: |-
            Additional authenticated data to be required for decryption.
            Should be encoded with base64.

            The maximum string length in characters is 8192.
          type: string
          format: byte
        sourceKeyId:
          description: |-
            Required.
            ID of the key that the ciphertext is currently encrypted with. May be the same as for the new key.

            The maximum string length in characters is 50.
          type: string
        sourceAadContext:
          description: |-
            Additional authenticated data provided with the initial encryption request.
            Should be encoded with base64.

            The maximum string length in characters is 8192.
          type: string
          format: byte
        ciphertext:
          description: |-
            Required.
            Ciphertext to re-encrypt.
            Should be encoded with base64.
          type: string
          format: byte
    SymmetricReEncryptResponse:
      type: object
      properties:
        keyId:
          description: ID of the key that the ciphertext is encrypted with now.
          type: string
        versionId:
          description: ID of key version that was used for encryption.
          type: string
        sourceKeyId:
          description: ID of the key that the ciphertext was encrypted with previously.
          type: string
        sourceVersionId:
          description: ID of the key version that was used to decrypt the re-encrypted
            ciphertext.
          type: string
        ciphertext:
          description: Resulting re-encrypted ciphertext.
          type: string
          format: byte
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: ID of the key being updated.
          type: string
    UpdateSymmetricKeyRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateSymmetricKeyRequest_updateMask'
        name:
          description: |-
            New name for the symmetric KMS key.

            The maximum string length in characters is 100.
          type: string
        description:
          description: |-
            New description for the symmetric KMS key.

            The maximum string length in characters is 1024.
          type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyStatus_in_UpdateSymmetricKeyRequest_status'
        labels:
          description: |-
            Custom labels for the symmetric KMS key as `key:value` pairs. Maximum 64 per key.

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        defaultAlgorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_UpdateSymmetricKeyRequest_defaultAlgorithm'
        rotationPeriod:
          description: Time period between automatic symmetric KMS key rotations.
          type: string
        deletionProtection:
          description: Flag that inhibits deletion of the symmetric KMS key
          type: boolean
          format: boolean
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    SymmetricAlgorithm_in_CreateSymmetricKeyRequest_defaultAlgorithm:
      description: |-
        Encryption algorithm to be used with a new key version, generated with the next rotation.

        Supported symmetric encryption algorithms.

         - AES_128: AES algorithm with 128-bit keys.
         - AES_192: AES algorithm with 192-bit keys.
         - AES_256: AES algorithm with 256-bit keys.
         - AES_256_HSM: AES algorithm with 256-bit keys hosted by HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricAlgorithm_in_GenerateDataKeyRequest_dataKeySpec:
      description: |-
        Encryption algorithm and key length for the generated data key.

        Supported symmetric encryption algorithms.

         - AES_128: AES algorithm with 128-bit keys.
         - AES_192: AES algorithm with 192-bit keys.
         - AES_256: AES algorithm with 256-bit keys.
         - AES_256_HSM: AES algorithm with 256-bit keys hosted by HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricKeyStatus_in_SymmetricKey_status:
      description: |-
        Current status of the key.

         - CREATING: The key is being created.
         - ACTIVE: The key is active and can be used for encryption and decryption.
        Can be set to INACTIVE using the [update](/docs/kms/api-ref/SymmetricKey/update) method.
         - INACTIVE: The key is inactive and unusable.
        Can be set to ACTIVE using the [update](/docs/kms/api-ref/SymmetricKey/update) method.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - INACTIVE
    SymmetricKeyVersion_in_SymmetricKey_primaryVersion:
      description: |-
        Primary version of the key, used as the default for all encrypt/decrypt operations,
        when no version ID is specified.

        Symmetric KMS key version: metadata about actual cryptographic data.
      type: object
      properties:
        id:
          description: ID of the key version.
          type: string
        keyId:
          description: ID of the symmetric KMS key that the version belongs to.
          type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyVersionStatus_in_SymmetricKeyVersion_status'
        algorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_SymmetricKeyVersion_algorithm'
        createdAt:
          description: |-
            Time when the key version was created.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        primary:
          description: |-
            Indication of a primary version, that is to be used by default for all cryptographic
            operations that don't have a key version explicitly specified.
          type: boolean
          format: boolean
        destroyAt:
          description: |-
            Time when the key version is going to be destroyed. Empty unless the status
            is `SCHEDULED_FOR_DESTRUCTION`.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        hostedByHsm:
          description: Indication of the version that is hosted by HSM.
          type: boolean
          format: boolean
    SymmetricAlgorithm_in_SymmetricKey_defaultAlgorithm:
      description: |-
        Default encryption algorithm to be used with new versions of the key.

        Supported symmetric encryption algorithms.

         - AES_128: AES algorithm with 128-bit keys.
         - AES_192: AES algorithm with 192-bit keys.
         - AES_256: AES algorithm with 256-bit keys.
         - AES_256_HSM: AES algorithm with 256-bit keys hosted by HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricKeyVersionStatus_in_SymmetricKeyVersion_status:
      description: |-
        Status of the key version.

        Possible version status.

         - ACTIVE: The version is active and can be used for encryption and decryption.
         - SCHEDULED_FOR_DESTRUCTION: The version is scheduled for destruction, the time when it will be destroyed
        is specified in the `destroyAt` field.
         - DESTROYED: The version is destroyed and cannot be recovered.
      type: string
      enum:
      - ACTIVE
      - SCHEDULED_FOR_DESTRUCTION
      - DESTROYED
    SymmetricAlgorithm_in_SymmetricKeyVersion_algorithm:
      description: |-
        Encryption algorithm that should be used when using the key version to encrypt plaintext.

        Supported symmetric encryption algorithms.

         - AES_128: AES algorithm with 128-bit keys.
         - AES_192: AES algorithm with 192-bit keys.
         - AES_256: AES algorithm with 256-bit keys.
         - AES_256_HSM: AES algorithm with 256-bit keys hosted by HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    FieldMask_in_UpdateSymmetricKeyRequest_updateMask:
      description: |-
        Required.
        Field mask that specifies which attributes of the symmetric KMS key are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    SymmetricKeyStatus_in_UpdateSymmetricKeyRequest_status:
      description: |-
        New status for the symmetric KMS key.
        Using the [update](/docs/kms/api-ref/SymmetricKey/update) method you can only set ACTIVE or INACTIVE status.

         - CREATING: The key is being created.
         - ACTIVE: The key is active and can be used for encryption and decryption.
        Can be set to INACTIVE using the [update](/docs/kms/api-ref/SymmetricKey/update) method.
         - INACTIVE: The key is inactive and unusable.
        Can be set to ACTIVE using the [update](/docs/kms/api-ref/SymmetricKey/update) method.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - INACTIVE
    SymmetricAlgorithm_in_UpdateSymmetricKeyRequest_defaultAlgorithm:
      description: |-
        Default encryption algorithm to be used with new versions of the symmetric KMS key.

        Supported symmetric encryption algorithms.

         - AES_128: AES algorithm with 128-bit keys.
         - AES_192: AES algorithm with 192-bit keys.
         - AES_256: AES algorithm with 256-bit keys.
         - AES_256_HSM: AES algorithm with 256-bit keys hosted by HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
tags:
- name: SymmetricCrypto
  description: Set of methods that perform symmetric encryption and decryption.
- name: SymmetricKey
  description: Set of methods for managing symmetric KMS keys.
