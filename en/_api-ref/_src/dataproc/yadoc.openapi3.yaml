openapi: 3.0.0
info:
  title: Data Proc API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://dataproc.api.cloud.yandex.net
paths:
  /dataproc/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified cluster.
      description: To get the list of all available clusters, make a [list](/docs/data-proc/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Data Proc cluster.

          To get a cluster ID make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to delete.

          To get a cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: decommissionTimeout
        in: query
        description: |-
          Timeout to gracefully decommission nodes. In seconds. Default value: 0

          Acceptable values are 0 to 86400, inclusive.
        schema:
          type: string
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the configuration of the specified cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          ID of the cluster to update.

          To get the cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of clusters in the specified folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list clusters in.

          To get the folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/data-proc/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/data-proc/api-ref/Cluster/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/data-proc/api-ref/Cluster/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters clusters listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [Cluster.name](/docs/data-proc/api-ref/Cluster#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-cluster`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Starts the specified cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to start.

          To get a cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stops the specified cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to stop.

          To get a cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Lists operations for the specified cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/data-proc/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/data-proc/api-ref/Cluster/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/data-proc/api-ref/Cluster/listOperations#query_params) to the
          [nextPageToken](/docs/data-proc/api-ref/Cluster/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /dataproc/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of hosts in the specified cluster.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          ID of the cluster to list hosts for.

          To get a cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/data-proc/api-ref/Cluster/listHosts#query_params), the service returns a [nextPageToken](/docs/data-proc/api-ref/Cluster/listHosts#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/data-proc/api-ref/Cluster/listHosts#query_params) to the
          [nextPageToken](/docs/data-proc/api-ref/Cluster/listHosts#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters hosts listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [Cluster.name](/docs/data-proc/api-ref/Cluster#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-host`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /dataproc/v1/clusters/{clusterId}/ui_links:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of links to web interfaces being proxied by Data Proc
        UI Proxy.
      operationId: ClusterListUILinks
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required. ID of the Hadoop cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUILinksResponse'
      x-y-navtitle: listUILinks
  /dataproc/v1/clusters/{clusterId}/jobs:
    get:
      tags:
      - Job
      summary: Retrieves a list of jobs for a cluster.
      operationId: JobList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to list jobs for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/data-proc/api-ref/Job/list#query_params), the service returns a [nextPageToken](/docs/data-proc/api-ref/Job/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/data-proc/api-ref/Job/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters jobs listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [Job.name](/docs/data-proc/api-ref/Job#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-job`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Job
      summary: Creates a job for a cluster.
      operationId: JobCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to create a job for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateJobMetadata'
      x-y-operation-response: '[Job](/docs/data-proc/api-ref/Job#representation)'
  /dataproc/v1/clusters/{clusterId}/jobs/{jobId}:
    get:
      tags:
      - Job
      summary: Returns the specified job.
      operationId: JobGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to request a job from.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: jobId
        in: path
        description: |-
          Required.
          ID of the job to return.

          To get a job ID make a [list](/docs/data-proc/api-ref/Job/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      x-y-navtitle: get
  /dataproc/v1/clusters/{clusterId}/jobs/{jobId}:logs:
    get:
      tags:
      - Job
      summary: Returns a log for specified job.
      operationId: JobListLog
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster that the job is being created for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: jobId
        in: path
        description: |-
          ID of the job being created.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum bytes of job log per response to return. If the number of available
          bytes is larger than [pageSize](/docs/data-proc/api-ref/Job/listLog#query_params), the service returns a [nextPageToken](/docs/data-proc/api-ref/Job/listLog#responses)
          that can be used to get the next page of output in subsequent list requests.
          Default value: 1048576.

          The maximum value is 1048576.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/data-proc/api-ref/Job/listLog#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobLogResponse'
      x-y-navtitle: listLog
  /dataproc/v1/clusters/{clusterId}/jobs/{jobId}:cancel:
    post:
      tags:
      - Job
      summary: Cancels the specified Dataproc job.
      operationId: JobCancel
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the Dataproc cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: jobId
        in: path
        description: |-
          Required.
          Required. ID of the Dataproc job to cancel.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelJobRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: cancel
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateJobMetadata'
      x-y-operation-response: '[Job](/docs/data-proc/api-ref/Job#representation)'
  /dataproc/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified ResourcePreset resource.
      description: To get the list of available ResourcePreset resources, make a [list](/docs/data-proc/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          Required. ID of the resource preset to return.
          To get the resource preset ID, use a [list](/docs/data-proc/api-ref/ResourcePreset/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /dataproc/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available ResourcePreset resources.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/data-proc/api-ref/ResourcePreset/list#query_params), the service returns a [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/data-proc/api-ref/ResourcePreset/list#query_params) to the [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /dataproc/v1/clusters/{clusterId}/subclusters/{subclusterId}:
    get:
      tags:
      - Subcluster
      summary: Returns the specified subcluster.
      description: To get the list of all available subclusters, make a [list](/docs/data-proc/api-ref/Subcluster/list)
        request.
      operationId: SubclusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Data Proc cluster that the subcluster belongs to.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: subclusterId
        in: path
        description: |-
          Required.
          ID of the subcluster to return.

          To get a subcluster ID make a [list](/docs/data-proc/api-ref/Subcluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcluster'
      x-y-navtitle: get
    delete:
      tags:
      - Subcluster
      summary: Deletes the specified subcluster.
      operationId: SubclusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to remove a subcluster from.

          To get a cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: subclusterId
        in: path
        description: |-
          Required.
          ID of the subcluster to delete.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: decommissionTimeout
        in: query
        description: |-
          Timeout to gracefully decommission nodes. In seconds. Default value: 0

          Acceptable values are 0 to 86400, inclusive.
        schema:
          type: string
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteSubclusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Subcluster
      summary: Updates the specified subcluster.
      operationId: SubclusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to update a subcluster in.

          To get a cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: subclusterId
        in: path
        description: |-
          Required.
          ID of the subcluster to update.

          To get a subcluster ID, make a [list](/docs/data-proc/api-ref/Subcluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubclusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateSubclusterMetadata'
      x-y-operation-response: '[Subcluster](/docs/data-proc/api-ref/Subcluster#representation)'
  /dataproc/v1/clusters/{clusterId}/subclusters:
    get:
      tags:
      - Subcluster
      summary: Retrieves a list of subclusters in the specified cluster.
      operationId: SubclusterList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Data Proc cluster to list subclusters in.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/data-proc/api-ref/Subcluster/list#query_params), the service returns a [nextPageToken](/docs/data-proc/api-ref/Subcluster/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/data-proc/api-ref/Subcluster/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters subclusters listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [Subcluster.name](/docs/data-proc/api-ref/Subcluster#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=dataproc123_subcluster456`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubclustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Subcluster
      summary: Creates a subcluster in the specified cluster.
      operationId: SubclusterCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Data Proc cluster to create a subcluster in.

          To get a cluster ID, make a [list](/docs/data-proc/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubclusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateSubclusterMetadata'
      x-y-operation-response: '[Subcluster](/docs/data-proc/api-ref/Subcluster#representation)'
components:
  schemas:
    ApplicationAttempt:
      type: object
      properties:
        id:
          description: ID of YARN application attempt
          type: string
        amContainerId:
          description: ID of YARN Application Master container
          type: string
    ApplicationInfo:
      type: object
      properties:
        id:
          description: ID of YARN application
          type: string
        applicationAttempts:
          description: YARN application attempts
          type: array
          items:
            $ref: '#/components/schemas/ApplicationAttempt'
    AutoscalingConfig:
      type: object
      properties:
        maxHostsCount:
          description: |-
            Upper limit for total instance subcluster count.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
        measurementDuration:
          description: |-
            Required.
            Time in seconds allotted for averaging metrics.

            Acceptable values are 60 seconds to 600 seconds, inclusive.
          type: string
        warmupDuration:
          description: |-
            The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.

            The maximum value is 600 seconds.
          type: string
        stabilizationDuration:
          description: |-
            Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.

            Acceptable values are 60 seconds to 1800 seconds, inclusive.
          type: string
        cpuUtilizationTarget:
          description: |-
            Defines an autoscaling rule based on the average CPU utilization of the instance group.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes during downscaling. In seconds. Default value: 120

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
    CancelJobRequest:
      type: object
      properties: {}
    Cluster:
      description: A Data Proc cluster. For details about the concept, see [documentation](/docs/data-proc/concepts/).
      type: object
      properties:
        id:
          description: ID of the cluster. Generated at creation time.
          type: string
        folderId:
          description: ID of the folder that the cluster belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the cluster. The name is unique within the folder.

            The string length in characters must be 1-63.
          type: string
        description:
          description: |-
            Description of the cluster.

            The string length in characters must be 0-256.
          type: string
        labels:
          description: |-
            Cluster labels as `key:value` pairs.

            No more than 64 per resource.
          type: object
          additionalProperties:
            type: string
        monitoring:
          description: Monitoring systems relevant to the cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        health:
          $ref: '#/components/schemas/Health_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        zoneId:
          description: ID of the availability zone where the cluster resides.
          type: string
        serviceAccountId:
          description: ID of service account for the Data Proc manager agent.
          type: string
        bucket:
          description: Object Storage bucket to be used for Data Proc jobs that are
            run in the cluster.
          type: string
        uiProxy:
          description: Whether UI Proxy feature is enabled.
          type: boolean
          format: boolean
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        hostGroupIds:
          description: Host groups hosting VMs of the cluster.
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
        logGroupId:
          description: |-
            ID of the cloud logging log group to write logs. If not set, default log group for the folder will be used.
            To prevent logs from being sent to the cloud set cluster property dataproc:disable_cloud_logging = true
          type: string
    ClusterConfig:
      type: object
      properties:
        versionId:
          description: |-
            Image version for cluster provisioning.
            All available versions are listed in the [documentation](/docs/managed-hadoop/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_ClusterConfig_hadoop'
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    CreateClusterConfigSpec:
      type: object
      properties:
        versionId:
          description: |-
            Version of the image for cluster provisioning.

            All available versions are listed in the [documentation](/docs/data-proc/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_CreateClusterConfigSpec_hadoop'
        subclustersSpec:
          description: Specification for creating subclusters.
          type: array
          items:
            $ref: '#/components/schemas/CreateSubclusterConfigSpec'
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a cluster in.

            To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the cluster. The name must be unique within the folder.
            The name can't be changed after the Data Proc cluster is created.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Cluster labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/CreateClusterConfigSpec_in_CreateClusterRequest_configSpec'
        zoneId:
          description: |-
            Required.
            ID of the availability zone where the cluster should be placed.

            To get the list of available zones make a [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        serviceAccountId:
          description: |-
            Required.
            ID of the service account to be used by the Data Proc manager agent.
          type: string
        bucket:
          description: Name of the Object Storage bucket to use for Data Proc jobs.
          type: string
        uiProxy:
          description: Enable UI Proxy feature.
          type: boolean
          format: boolean
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        hostGroupIds:
          description: Host groups to place VMs of cluster on.
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
        logGroupId:
          description: ID of the cloud logging log group to write logs. If not set,
            logs will not be sent to logging service
          type: string
    CreateJobMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Required.
            ID of the cluster that the job is being created for.

            The maximum string length in characters is 50.
          type: string
        jobId:
          description: |-
            ID of the job being created.

            The maximum string length in characters is 50.
          type: string
    CreateJobRequest:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Name of the job.

              Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
      - title: job_spec
        type: object
        maxProperties: 1
        properties:
          mapreduceJob:
            $ref: '#/components/schemas/MapreduceJob'
            description: Specification for a MapReduce job.
          sparkJob:
            $ref: '#/components/schemas/SparkJob'
            description: Specification for a Spark job.
          pysparkJob:
            $ref: '#/components/schemas/PysparkJob'
            description: Specification for a PySpark job.
          hiveJob:
            $ref: '#/components/schemas/HiveJob'
            description: Specification for a Hive job.
    CreateSubclusterConfigSpec:
      type: object
      properties:
        name:
          description: |-
            Name of the subcluster.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_CreateSubclusterConfigSpec_role'
        resources:
          $ref: '#/components/schemas/Resources_in_CreateSubclusterConfigSpec_resources'
        subnetId:
          description: |-
            Required.
            ID of the VPC subnet used for hosts in the subcluster.

            The maximum string length in characters is 50.
          type: string
        hostsCount:
          description: |-
            Required.
            Number of hosts in the subcluster.

            The minimum value is 1.
          type: string
          format: int64
        assignPublicIp:
          description: Assign public ip addresses for all hosts in subcluter.
          type: boolean
          format: boolean
        autoscalingConfig:
          $ref: '#/components/schemas/AutoscalingConfig_in_CreateSubclusterConfigSpec_autoscalingConfig'
    CreateSubclusterMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            ID of the cluster that the subcluster is being added to.

            The maximum string length in characters is 50.
          type: string
        subclusterId:
          description: |-
            ID of the subcluster that is being created.

            The maximum string length in characters is 50.
          type: string
    CreateSubclusterRequest:
      type: object
      properties:
        name:
          description: |-
            Name of the subcluster. The name must be unique within the cluster. The name can't be
            changed when the subcluster is created.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_CreateSubclusterRequest_role'
        resources:
          $ref: '#/components/schemas/Resources_in_CreateSubclusterRequest_resources'
        subnetId:
          description: |-
            Required.
            ID of the VPC subnet used for hosts in the subcluster.

            The maximum string length in characters is 50.
          type: string
        hostsCount:
          description: |-
            Required.
            Number of hosts in the subcluster.

            The minimum value is 1.
          type: string
          format: int64
        autoscalingConfig:
          $ref: '#/components/schemas/AutoscalingConfig_in_CreateSubclusterRequest_autoscalingConfig'
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Data Proc cluster that is being deleted.
          type: string
    DeleteSubclusterMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            ID of the cluster whose subcluster is being deleted.

            The maximum string length in characters is 50.
          type: string
        subclusterId:
          description: |-
            ID of the subcluster that is being deleted.

            The maximum string length in characters is 50.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    HadoopConfig:
      description: |-
        Hadoop configuration that describes services installed in a cluster,
        their properties and settings.
      type: object
      properties:
        services:
          description: Set of services used in the cluster (if empty, the default
            set is used).
          type: array
          items:
            $ref: '#/components/schemas/HadoopConfigService'
        properties:
          description: |-
            Properties set for all hosts in `*-site.xml` configurations. The key should indicate
            the service and the property.

            For example, use the key 'hdfs:dfs.replication' to set the `dfs.replication` property
            in the file `/etc/hadoop/conf/hdfs-site.xml`.
          type: object
          additionalProperties:
            type: string
        sshPublicKeys:
          description: List of public SSH keys to access to cluster hosts.
          type: array
          items:
            type: string
        initializationActions:
          description: Set of init-actions
          type: array
          items:
            $ref: '#/components/schemas/InitializationAction'
    HadoopConfigService:
      type: string
      enum:
      - HDFS
      - YARN
      - MAPREDUCE
      - HIVE
      - TEZ
      - ZOOKEEPER
      - HBASE
      - SQOOP
      - FLUME
      - SPARK
      - ZEPPELIN
      - OOZIE
      - LIVY
    Health:
      description: |2-
         - HEALTH_UNKNOWN: Object is in unknown state (we have no data).
         - ALIVE: Object is alive and well (for example, all hosts of the cluster are alive).
         - DEAD: Object is inoperable (it cannot perform any of its essential functions).
         - DEGRADED: Object is partially alive (it can perform some of its essential functions).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    HiveJob:
      type: object
      allOf:
      - type: object
        properties:
          properties:
            description: Property names and values, used to configure Data Proc and
              Hive.
            type: object
            additionalProperties:
              type: string
          continueOnFailure:
            description: Flag indicating whether a job should continue to run if a
              query fails.
            type: boolean
            format: boolean
          scriptVariables:
            description: Query variables and their values.
            type: object
            additionalProperties:
              type: string
          jarFileUris:
            description: JAR file URIs to add to CLASSPATH of the Hive driver and
              each task.
            type: array
            items:
              type: string
      - title: query_type
        type: object
        maxProperties: 1
        properties:
          queryFileUri:
            description: URI of the script with all the necessary Hive queries.
            type: string
          queryList:
            $ref: '#/components/schemas/QueryList'
            description: List of Hive queries to be used in the job.
    Host:
      description: A Data Proc host. For details about the concept, see [documentation](/docs/data-proc/concepts/).
      type: object
      properties:
        name:
          description: |-
            Name of the Data Proc host. The host name is assigned by Data Proc at creation time
            and cannot be changed. The name is generated to be unique across all Data Proc
            hosts that exist on the platform, as it defines the FQDN of the host.
          type: string
        subclusterId:
          description: ID of the Data Proc subcluster that the host belongs to.
          type: string
        health:
          $ref: '#/components/schemas/Health_in_Host_health'
        computeInstanceId:
          description: ID of the Compute virtual machine that is used as the Data
            Proc host.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_Host_role'
    InitializationAction:
      type: object
      properties:
        uri:
          description: URI of the executable file
          type: string
        args:
          description: Arguments to the initialization action
          type: array
          items:
            type: string
        timeout:
          description: Execution timeout
          type: string
          format: int64
    Job:
      description: A Data Proc job. For details about the concept, see [documentation](/docs/dataproc/concepts/jobs).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the job. Generated at creation time.
            type: string
          clusterId:
            description: ID of the Data Proc cluster that the job belongs to.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          startedAt:
            description: |-
              The time when the job was started.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          finishedAt:
            description: |-
              The time when the job was finished.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          name:
            description: Name of the job, specified in the [create](/docs/data-proc/api-ref/Job/create)
              request.
            type: string
          createdBy:
            description: The id of the user who created the job
            type: string
          status:
            $ref: '#/components/schemas/JobStatus'
            description: Job status.
          applicationInfo:
            $ref: '#/components/schemas/ApplicationInfo'
            description: Attributes of YARN application.
      - title: job_spec
        type: object
        maxProperties: 1
        properties:
          mapreduceJob:
            $ref: '#/components/schemas/MapreduceJob'
            description: Specification for a MapReduce job.
          sparkJob:
            $ref: '#/components/schemas/SparkJob'
            description: Specification for a Spark job.
          pysparkJob:
            $ref: '#/components/schemas/PysparkJob'
            description: Specification for a PySpark job.
          hiveJob:
            $ref: '#/components/schemas/HiveJob'
            description: Specification for a Hive job.
    JobStatus:
      description: |2-
         - PROVISIONING: Job is logged in the database and is waiting for the agent to run it.
         - PENDING: Job is acquired by the agent and is in the queue for execution.
         - RUNNING: Job is being run in the cluster.
         - ERROR: Job failed to finish the run properly.
         - DONE: Job is finished.
         - CANCELLED: Job is cancelled.
         - CANCELLING: Job is waiting for cancellation.
      type: string
      enum:
      - PROVISIONING
      - PENDING
      - RUNNING
      - ERROR
      - DONE
      - CANCELLED
      - CANCELLING
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: Requested list of hosts.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/data-proc/api-ref/Cluster/listHosts#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/data-proc/api-ref/Cluster/listHosts#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/data-proc/api-ref/Cluster/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/data-proc/api-ref/Cluster/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of clusters in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/data-proc/api-ref/Cluster/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/data-proc/api-ref/Cluster/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListJobLogResponse:
      type: object
      properties:
        content:
          description: Requested part of Data Proc Job log.
          type: string
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListLog requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListLog request. Subsequent ListLog
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListJobsResponse:
      type: object
      properties:
        jobs:
          description: List of jobs for the specified cluster.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/data-proc/api-ref/Job/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/data-proc/api-ref/Job/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of ResourcePreset resources.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/data-proc/api-ref/ResourcePreset/list#query_params), use the [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses) as the value
            for the [pageToken](/docs/data-proc/api-ref/ResourcePreset/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses) to continue paging through the results.

            The maximum string length in characters is 100.
          type: string
    ListSubclustersResponse:
      type: object
      properties:
        subclusters:
          description: List of subclusters in the specified cluster.
          type: array
          items:
            $ref: '#/components/schemas/Subcluster'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/data-proc/api-ref/Subcluster/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/data-proc/api-ref/Subcluster/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListUILinksResponse:
      type: object
      properties:
        links:
          description: Requested list of ui links.
          type: array
          items:
            $ref: '#/components/schemas/UILink'
    MapreduceJob:
      type: object
      allOf:
      - type: object
        properties:
          args:
            description: Optional arguments to pass to the driver.
            type: array
            items:
              type: string
          jarFileUris:
            description: JAR file URIs to add to CLASSPATH of the Data Proc driver
              and each task.
            type: array
            items:
              type: string
          fileUris:
            description: |-
              URIs of resource files to be copied to the working directory of Data Proc drivers
              and distributed Hadoop tasks.
            type: array
            items:
              type: string
          archiveUris:
            description: URIs of archives to be extracted to the working directory
              of Data Proc drivers and tasks.
            type: array
            items:
              type: string
          properties:
            description: Property names and values, used to configure Data Proc and
              MapReduce.
            type: object
            additionalProperties:
              type: string
      - title: driver
        type: object
        maxProperties: 1
        properties:
          mainJarFileUri:
            description: HCFS URI of the .jar file containing the driver class.
            type: string
          mainClass:
            description: The name of the driver class.
            type: string
    Monitoring:
      description: Metadata of a monitoring system for a Data Proc cluster.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PysparkJob:
      type: object
      properties:
        args:
          description: Optional arguments to pass to the driver.
          type: array
          items:
            type: string
        jarFileUris:
          description: JAR file URIs to add to CLASSPATH of the Data Proc driver and
            each task.
          type: array
          items:
            type: string
        fileUris:
          description: |-
            URIs of resource files to be copied to the working directory of Data Proc drivers
            and distributed Hadoop tasks.
          type: array
          items:
            type: string
        archiveUris:
          description: URIs of archives to be extracted to the working directory of
            Data Proc drivers and tasks.
          type: array
          items:
            type: string
        properties:
          description: Property names and values, used to configure Data Proc and
            PySpark.
          type: object
          additionalProperties:
            type: string
        mainPythonFileUri:
          description: URI of the file with the driver code. Must be a .py file.
          type: string
        pythonFileUris:
          description: URIs of Python files to pass to the PySpark framework.
          type: array
          items:
            type: string
        packages:
          description: List of maven coordinates of jars to include on the driver
            and executor classpaths.
          type: array
          items:
            type: string
        repositories:
          description: List of additional remote repositories to search for the maven
            coordinates given with --packages.
          type: array
          items:
            type: string
        excludePackages:
          description: List of groupId:artifactId, to exclude while resolving the
            dependencies provided in --packages to avoid dependency conflicts.
          type: array
          items:
            type: string
    QueryList:
      type: object
      properties:
        queries:
          description: List of Hive queries.
          type: array
          items:
            type: string
    ResourcePreset:
      description: A ResourcePreset resource for describing hardware configuration
        presets.
      type: object
      properties:
        id:
          description: ID of the ResourcePreset resource.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for a Data Proc host created with the preset.
          type: string
          format: int64
        memory:
          description: RAM volume for a Data Proc host created with the preset, in
            bytes.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the resource preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive.
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
    Role:
      description: |2-
         - MASTERNODE: The subcluster fulfills the master role.

        Master can run the following services, depending on the requested components:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: The subcluster is a DATANODE in a Data Proc cluster.

        DATANODE can run the following services, depending on the requested components:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * Spark libraries
         - COMPUTENODE: The subcluster is a COMPUTENODE in a Data Proc cluster.

        COMPUTENODE can run the following services, depending on the requested components:
        * YARN NodeManager
        * Spark libraries
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    SparkJob:
      type: object
      properties:
        args:
          description: Optional arguments to pass to the driver.
          type: array
          items:
            type: string
        jarFileUris:
          description: JAR file URIs to add to CLASSPATH of the Data Proc driver and
            each task.
          type: array
          items:
            type: string
        fileUris:
          description: |-
            URIs of resource files to be copied to the working directory of Data Proc drivers
            and distributed Hadoop tasks.
          type: array
          items:
            type: string
        archiveUris:
          description: URIs of archives to be extracted to the working directory of
            Data Proc drivers and tasks.
          type: array
          items:
            type: string
        properties:
          description: Property names and values, used to configure Data Proc and
            Spark.
          type: object
          additionalProperties:
            type: string
        mainJarFileUri:
          description: The HCFS URI of the JAR file containing the `main` class for
            the job.
          type: string
        mainClass:
          description: The name of the driver class.
          type: string
        packages:
          description: List of maven coordinates of jars to include on the driver
            and executor classpaths.
          type: array
          items:
            type: string
        repositories:
          description: List of additional remote repositories to search for the maven
            coordinates given with --packages.
          type: array
          items:
            type: string
        excludePackages:
          description: List of groupId:artifactId, to exclude while resolving the
            dependencies provided in --packages to avoid dependency conflicts.
          type: array
          items:
            type: string
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Data Proc cluster that is being started.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Data Proc cluster that is being stopped.
          type: string
    StopClusterRequest:
      type: object
      properties:
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes. In seconds. Default value: 0

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
    Subcluster:
      description: A Data Proc subcluster. For details about the concept, see [documentation](/docs/data-proc/concepts/).
      type: object
      properties:
        id:
          description: ID of the subcluster. Generated at creation time.
          type: string
        clusterId:
          description: ID of the Data Proc cluster that the subcluster belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the subcluster. The name is unique within the cluster.

            The string length in characters must be 1-63.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_Subcluster_role'
        resources:
          $ref: '#/components/schemas/Resources_in_Subcluster_resources'
        subnetId:
          description: ID of the VPC subnet used for hosts in the subcluster.
          type: string
        hostsCount:
          description: Number of hosts in the subcluster.
          type: string
          format: int64
        assignPublicIp:
          description: Assign public ip addresses for all hosts in subcluter.
          type: boolean
          format: boolean
        autoscalingConfig:
          $ref: '#/components/schemas/AutoscalingConfig_in_Subcluster_autoscalingConfig'
        instanceGroupId:
          description: ID of Compute Instance Group for autoscaling subclusters
          type: string
    UILink:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
    UpdateClusterConfigSpec:
      type: object
      properties:
        subclustersSpec:
          description: New configuration for subclusters in a cluster.
          type: array
          items:
            $ref: '#/components/schemas/UpdateSubclusterConfigSpec'
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_UpdateClusterConfigSpec_hadoop'
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the cluster that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description for the cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            A new set of cluster labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/UpdateClusterConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            New name for the Data Proc cluster. The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        serviceAccountId:
          description: ID of the new service account to be used by the Data Proc manager
            agent.
          type: string
        bucket:
          description: Name of the new Object Storage bucket to use for Data Proc
            jobs.
          type: string
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes. In seconds. Default value: 0

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
        uiProxy:
          description: Enable UI Proxy feature.
          type: boolean
          format: boolean
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
        logGroupId:
          description: ID of the cloud logging log group to write logs. If not set,
            logs will not be sent to logging service
          type: string
    UpdateSubclusterConfigSpec:
      type: object
      properties:
        id:
          description: |-
            ID of the subcluster to update.

            To get the subcluster ID make a [list](/docs/data-proc/api-ref/Subcluster/list) request.
          type: string
        name:
          description: |-
            Name of the subcluster.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_UpdateSubclusterConfigSpec_resources'
        hostsCount:
          description: |-
            Number of hosts in the subcluster.

            The minimum value is 1.
          type: string
          format: int64
        autoscalingConfig:
          $ref: '#/components/schemas/AutoscalingConfig_in_UpdateSubclusterConfigSpec_autoscalingConfig'
    UpdateSubclusterMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            ID of the cluster whose subcluster is being updated.

            The maximum string length in characters is 50.
          type: string
        subclusterId:
          description: |-
            ID of the subcluster that is being updated.

            The maximum string length in characters is 50.
          type: string
    UpdateSubclusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateSubclusterRequest_updateMask'
        resources:
          $ref: '#/components/schemas/Resources_in_UpdateSubclusterRequest_resources'
        name:
          description: |-
            New name for the subcluster. The name must be unique within the cluster.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        hostsCount:
          description: |-
            Required.
            New number of hosts in the subcluster.

            The minimum value is 1.
          type: string
          format: int64
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes. In seconds. Default value: 0

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
        autoscalingConfig:
          $ref: '#/components/schemas/AutoscalingConfig_in_UpdateSubclusterRequest_autoscalingConfig'
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ClusterConfig_in_Cluster_config:
      description: Configuration of the cluster.
      type: object
      properties:
        versionId:
          description: |-
            Image version for cluster provisioning.
            All available versions are listed in the [documentation](/docs/managed-hadoop/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_ClusterConfig_hadoop'
    Health_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: Object is in unknown state (we have no data).
         - ALIVE: Object is alive and well (for example, all hosts of the cluster are alive).
         - DEAD: Object is inoperable (it cannot perform any of its essential functions).
         - DEGRADED: Object is partially alive (it can perform some of its essential functions).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Cluster status.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    HadoopConfig_in_ClusterConfig_hadoop:
      description: |-
        Data Proc specific configuration options.

        Hadoop configuration that describes services installed in a cluster,
        their properties and settings.
      type: object
      properties:
        services:
          description: Set of services used in the cluster (if empty, the default
            set is used).
          type: array
          items:
            $ref: '#/components/schemas/HadoopConfigService'
        properties:
          description: |-
            Properties set for all hosts in `*-site.xml` configurations. The key should indicate
            the service and the property.

            For example, use the key 'hdfs:dfs.replication' to set the `dfs.replication` property
            in the file `/etc/hadoop/conf/hdfs-site.xml`.
          type: object
          additionalProperties:
            type: string
        sshPublicKeys:
          description: List of public SSH keys to access to cluster hosts.
          type: array
          items:
            type: string
        initializationActions:
          description: Set of init-actions
          type: array
          items:
            $ref: '#/components/schemas/InitializationAction'
    HadoopConfig_in_CreateClusterConfigSpec_hadoop:
      description: |-
        Data Proc specific options.

        Hadoop configuration that describes services installed in a cluster,
        their properties and settings.
      type: object
      properties:
        services:
          description: Set of services used in the cluster (if empty, the default
            set is used).
          type: array
          items:
            $ref: '#/components/schemas/HadoopConfigService'
        properties:
          description: |-
            Properties set for all hosts in `*-site.xml` configurations. The key should indicate
            the service and the property.

            For example, use the key 'hdfs:dfs.replication' to set the `dfs.replication` property
            in the file `/etc/hadoop/conf/hdfs-site.xml`.
          type: object
          additionalProperties:
            type: string
        sshPublicKeys:
          description: List of public SSH keys to access to cluster hosts.
          type: array
          items:
            type: string
        initializationActions:
          description: Set of init-actions
          type: array
          items:
            $ref: '#/components/schemas/InitializationAction'
    CreateClusterConfigSpec_in_CreateClusterRequest_configSpec:
      description: |-
        Required.
        Configuration and resources for hosts that should be created with the cluster.
      type: object
      properties:
        versionId:
          description: |-
            Version of the image for cluster provisioning.

            All available versions are listed in the [documentation](/docs/data-proc/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_CreateClusterConfigSpec_hadoop'
        subclustersSpec:
          description: Specification for creating subclusters.
          type: array
          items:
            $ref: '#/components/schemas/CreateSubclusterConfigSpec'
    Role_in_CreateSubclusterConfigSpec_role:
      description: |-
        Required.
        Role of the subcluster in the Data Proc cluster.

         - MASTERNODE: The subcluster fulfills the master role.

        Master can run the following services, depending on the requested components:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: The subcluster is a DATANODE in a Data Proc cluster.

        DATANODE can run the following services, depending on the requested components:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * Spark libraries
         - COMPUTENODE: The subcluster is a COMPUTENODE in a Data Proc cluster.

        COMPUTENODE can run the following services, depending on the requested components:
        * YARN NodeManager
        * Spark libraries
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Resources_in_CreateSubclusterConfigSpec_resources:
      description: |-
        Required.
        Resource configuration for hosts in the subcluster.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the resource preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive.
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
    AutoscalingConfig_in_CreateSubclusterConfigSpec_autoscalingConfig:
      description: Configuration for instance group based subclusters
      type: object
      properties:
        maxHostsCount:
          description: |-
            Upper limit for total instance subcluster count.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
        measurementDuration:
          description: |-
            Required.
            Time in seconds allotted for averaging metrics.

            Acceptable values are 60 seconds to 600 seconds, inclusive.
          type: string
        warmupDuration:
          description: |-
            The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.

            The maximum value is 600 seconds.
          type: string
        stabilizationDuration:
          description: |-
            Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.

            Acceptable values are 60 seconds to 1800 seconds, inclusive.
          type: string
        cpuUtilizationTarget:
          description: |-
            Defines an autoscaling rule based on the average CPU utilization of the instance group.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes during downscaling. In seconds. Default value: 120

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
    Role_in_CreateSubclusterRequest_role:
      description: |-
        Required.
        Role that is fulfilled by hosts of the subcluster.

         - MASTERNODE: The subcluster fulfills the master role.

        Master can run the following services, depending on the requested components:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: The subcluster is a DATANODE in a Data Proc cluster.

        DATANODE can run the following services, depending on the requested components:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * Spark libraries
         - COMPUTENODE: The subcluster is a COMPUTENODE in a Data Proc cluster.

        COMPUTENODE can run the following services, depending on the requested components:
        * YARN NodeManager
        * Spark libraries
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Resources_in_CreateSubclusterRequest_resources:
      description: |-
        Required.
        Resources allocated for each host in the subcluster.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the resource preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive.
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
    AutoscalingConfig_in_CreateSubclusterRequest_autoscalingConfig:
      description: Configuration for instance group based subclusters
      type: object
      properties:
        maxHostsCount:
          description: |-
            Upper limit for total instance subcluster count.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
        measurementDuration:
          description: |-
            Required.
            Time in seconds allotted for averaging metrics.

            Acceptable values are 60 seconds to 600 seconds, inclusive.
          type: string
        warmupDuration:
          description: |-
            The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.

            The maximum value is 600 seconds.
          type: string
        stabilizationDuration:
          description: |-
            Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.

            Acceptable values are 60 seconds to 1800 seconds, inclusive.
          type: string
        cpuUtilizationTarget:
          description: |-
            Defines an autoscaling rule based on the average CPU utilization of the instance group.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes during downscaling. In seconds. Default value: 120

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
    Health_in_Host_health:
      description: |-
        Status code of the aggregated health of the host.

         - HEALTH_UNKNOWN: Object is in unknown state (we have no data).
         - ALIVE: Object is alive and well (for example, all hosts of the cluster are alive).
         - DEAD: Object is inoperable (it cannot perform any of its essential functions).
         - DEGRADED: Object is partially alive (it can perform some of its essential functions).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    Role_in_Host_role:
      description: |-
        Role of the host in the cluster.

         - MASTERNODE: The subcluster fulfills the master role.

        Master can run the following services, depending on the requested components:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: The subcluster is a DATANODE in a Data Proc cluster.

        DATANODE can run the following services, depending on the requested components:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * Spark libraries
         - COMPUTENODE: The subcluster is a COMPUTENODE in a Data Proc cluster.

        COMPUTENODE can run the following services, depending on the requested components:
        * YARN NodeManager
        * Spark libraries
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Role_in_Subcluster_role:
      description: |-
        Role that is fulfilled by hosts of the subcluster.

         - MASTERNODE: The subcluster fulfills the master role.

        Master can run the following services, depending on the requested components:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: The subcluster is a DATANODE in a Data Proc cluster.

        DATANODE can run the following services, depending on the requested components:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * Spark libraries
         - COMPUTENODE: The subcluster is a COMPUTENODE in a Data Proc cluster.

        COMPUTENODE can run the following services, depending on the requested components:
        * YARN NodeManager
        * Spark libraries
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Resources_in_Subcluster_resources:
      description: Resources allocated for each host in the subcluster.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the resource preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive.
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
    AutoscalingConfig_in_Subcluster_autoscalingConfig:
      description: Configuration for instance group based subclusters
      type: object
      properties:
        maxHostsCount:
          description: |-
            Upper limit for total instance subcluster count.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
        measurementDuration:
          description: |-
            Required.
            Time in seconds allotted for averaging metrics.

            Acceptable values are 60 seconds to 600 seconds, inclusive.
          type: string
        warmupDuration:
          description: |-
            The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.

            The maximum value is 600 seconds.
          type: string
        stabilizationDuration:
          description: |-
            Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.

            Acceptable values are 60 seconds to 1800 seconds, inclusive.
          type: string
        cpuUtilizationTarget:
          description: |-
            Defines an autoscaling rule based on the average CPU utilization of the instance group.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes during downscaling. In seconds. Default value: 120

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
    HadoopConfig_in_UpdateClusterConfigSpec_hadoop:
      description: |-
        Hadoop specific options

        Hadoop configuration that describes services installed in a cluster,
        their properties and settings.
      type: object
      properties:
        services:
          description: Set of services used in the cluster (if empty, the default
            set is used).
          type: array
          items:
            $ref: '#/components/schemas/HadoopConfigService'
        properties:
          description: |-
            Properties set for all hosts in `*-site.xml` configurations. The key should indicate
            the service and the property.

            For example, use the key 'hdfs:dfs.replication' to set the `dfs.replication` property
            in the file `/etc/hadoop/conf/hdfs-site.xml`.
          type: object
          additionalProperties:
            type: string
        sshPublicKeys:
          description: List of public SSH keys to access to cluster hosts.
          type: array
          items:
            type: string
        initializationActions:
          description: Set of init-actions
          type: array
          items:
            $ref: '#/components/schemas/InitializationAction'
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the cluster should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    UpdateClusterConfigSpec_in_UpdateClusterRequest_configSpec:
      description: Configuration and resources for hosts that should be created with
        the Data Proc cluster.
      type: object
      properties:
        subclustersSpec:
          description: New configuration for subclusters in a cluster.
          type: array
          items:
            $ref: '#/components/schemas/UpdateSubclusterConfigSpec'
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_UpdateClusterConfigSpec_hadoop'
    Resources_in_UpdateSubclusterConfigSpec_resources:
      description: Resource configuration for each host in the subcluster.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the resource preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive.
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
    AutoscalingConfig_in_UpdateSubclusterConfigSpec_autoscalingConfig:
      description: Configuration for instance group based subclusters
      type: object
      properties:
        maxHostsCount:
          description: |-
            Upper limit for total instance subcluster count.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
        measurementDuration:
          description: |-
            Required.
            Time in seconds allotted for averaging metrics.

            Acceptable values are 60 seconds to 600 seconds, inclusive.
          type: string
        warmupDuration:
          description: |-
            The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.

            The maximum value is 600 seconds.
          type: string
        stabilizationDuration:
          description: |-
            Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.

            Acceptable values are 60 seconds to 1800 seconds, inclusive.
          type: string
        cpuUtilizationTarget:
          description: |-
            Defines an autoscaling rule based on the average CPU utilization of the instance group.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes during downscaling. In seconds. Default value: 120

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
    FieldMask_in_UpdateSubclusterRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the subcluster should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Resources_in_UpdateSubclusterRequest_resources:
      description: New configuration of resources that should be allocated for each
        host in the subcluster.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the resource preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive.
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
    AutoscalingConfig_in_UpdateSubclusterRequest_autoscalingConfig:
      description: Configuration for instance group based subclusters
      type: object
      properties:
        maxHostsCount:
          description: |-
            Upper limit for total instance subcluster count.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
        measurementDuration:
          description: |-
            Required.
            Time in seconds allotted for averaging metrics.

            Acceptable values are 60 seconds to 600 seconds, inclusive.
          type: string
        warmupDuration:
          description: |-
            The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.

            The maximum value is 600 seconds.
          type: string
        stabilizationDuration:
          description: |-
            Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.

            Acceptable values are 60 seconds to 1800 seconds, inclusive.
          type: string
        cpuUtilizationTarget:
          description: |-
            Defines an autoscaling rule based on the average CPU utilization of the instance group.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
        decommissionTimeout:
          description: |-
            Timeout to gracefully decommission nodes during downscaling. In seconds. Default value: 120

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
tags:
- name: Cluster
  description: A set of methods for managing Data Proc clusters.
- name: Job
  description: A set of methods for managing Data Proc jobs.
- name: ResourcePreset
  description: A set of methods for managing ResourcePreset resources.
- name: Subcluster
  description: A set of methods for managing Data Proc subclusters.
