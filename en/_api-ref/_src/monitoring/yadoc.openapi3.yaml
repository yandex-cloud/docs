openapi: 3.0.0
info:
  title: Monitoring API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v2
  x-y-docUri: api-ref
  x-y-baseUrl: https://monitoring.api.cloud.yandex.net
paths:
  /monitoring/v2/metrics:
    get:
      tags:
      - MetricsMeta
      summary: Retrieves the list of metrics.
      operationId: MetricsMetaListMetrics
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the metric belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: selectors
        in: query
        description: Metric selectors.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Maximum number of metrics in response.
          0 means default page size = 30, maximum page size = 10000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/monitoring/api-ref/MetricsMeta/listMetrics#query_params) to the
          [nextPageToken](/docs/monitoring/api-ref/MetricsMeta/listMetrics#responses) returned by a previous list request.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetricsResponse'
      x-y-navtitle: listMetrics
  /monitoring/v2/metrics/names:
    get:
      tags:
      - MetricsMeta
      summary: Retrieves the list of metric names.
      operationId: MetricsMetaListMetricNames
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the metric belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: selectors
        in: query
        description: Metric selectors.
        schema:
          type: string
      - name: nameFilter
        in: query
        description: Substring name filter text.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Maximum number of metrics in response.
          0 means default page size = 30, maximum page size = 10000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/monitoring/api-ref/MetricsMeta/listMetricNames#query_params) to the
          [nextPageToken](/docs/monitoring/api-ref/MetricsMeta/listMetrics#responses) returned by a previous list request.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMetricNamesResponse'
      x-y-navtitle: listMetricNames
  /monitoring/v2/metrics/labels:
    get:
      tags:
      - MetricsMeta
      summary: Retrieves the list of label keys.
      operationId: MetricsMetaListLabelKeys
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the metric belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: selectors
        in: query
        description: Metric selectors.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelKeysResponse'
      x-y-navtitle: listLabelKeys
  /monitoring/v2/metrics/labels/{labelKey}/values:
    get:
      tags:
      - MetricsMeta
      summary: Retries the list of values for a given label key.
      operationId: MetricsMetaListLabelValues
      parameters:
      - name: labelKey
        in: path
        description: |-
          Required.
          For which label key perform values lookup.
        required: true
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the metric belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: selectors
        in: query
        description: Metric selectors.
        schema:
          type: string
      - name: valueFilter
        in: query
        description: Substring value filter text.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Maximum number of metrics in response.
          0 means default page size = 30, maximum page size = 10000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/monitoring/api-ref/MetricsMeta/listLabelValues#query_params) to the
          [nextPageToken](/docs/monitoring/api-ref/MetricsMeta/listMetrics#responses) returned by a previous list request.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelValuesResponse'
      x-y-navtitle: listLabelValues
components:
  schemas:
    DataQuery:
      type: object
      properties:
        query:
          description: |-
            Required.
            Query text.
          type: string
        fromTime:
          description: |-
            Required.
            The beginning of the time interval, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        toTime:
          description: |-
            Required.
            The end of the time interval, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        downsampling:
          $ref: '#/components/schemas/Downsampling_in_DataQuery_downsampling'
    Downsampling:
      description: List of available aggregate functions for downsampling.
      type: object
      allOf:
      - type: object
        properties:
          gridAggregation:
            $ref: '#/components/schemas/GridAggregation'
            description: Function that is used for downsampling.
          gapFilling:
            $ref: '#/components/schemas/GapFilling'
            description: Parameters for filling gaps in data.
      - title: mode
        type: object
        maxProperties: 1
        properties:
          maxPoints:
            description: |-
              Maximum number of points to be returned.

              Value must be greater than 10.
            type: string
            format: int64
          gridInterval:
            description: |-
              Time interval (grid) for downsampling in milliseconds.
              Points in the specified range are aggregated into one time point.

              Value must be greater than 0.
            type: string
            format: int64
          disabled:
            description: Disable downsampling.
            type: boolean
            format: boolean
    GapFilling:
      description: |-
        List of available gap filling policy for downsampling.

         - NULL: Returns `null` as a metric value and `timestamp` as a time series value.
         - NONE: Returns no value and no timestamp.
         - PREVIOUS: Returns the value from the previous time interval.
      type: string
      enum:
      - "NULL"
      - NONE
      - PREVIOUS
    GridAggregation:
      description: |-
        List of available aggregate functions for downsampling.

         - MAX: Max value.
         - MIN: Min value.
         - SUM: Sum of values.
         - AVG: Average value.
         - LAST: Last value.
         - COUNT: Total count of points.
      type: string
      enum:
      - MAX
      - MIN
      - SUM
      - AVG
      - LAST
      - COUNT
    ListLabelKeysResponse:
      type: object
      properties:
        keys:
          description: Found label keys.
          type: array
          items:
            type: string
    ListLabelValuesResponse:
      type: object
      properties:
        values:
          description: List of values by given label key.
          type: array
          items:
            type: string
        metricsCount:
          description: Metrics count given by selectors.
          type: string
          format: int64
        absent:
          description: Flag determining that there are has some metrics without the
            given label.
          type: boolean
          format: boolean
        nextPageToken:
          description: This token allows you to get the next page of results for list
            requests.
          type: string
    ListMetricNamesResponse:
      type: object
      properties:
        names:
          description: List of metric names.
          type: array
          items:
            type: string
        nextPageToken:
          description: This token allows you to get the next page of results for list
            requests.
          type: string
    ListMetricsResponse:
      type: object
      properties:
        metrics:
          description: List of metrics.
          type: array
          items:
            $ref: '#/components/schemas/ListMetricsResponseMetricMeta'
        nextPageToken:
          description: This token allows you to get the next page of results for list
            requests.
          type: string
    ListMetricsResponseMetricMeta:
      type: object
      properties:
        name:
          description: Name of the metric.
          type: string
        labels:
          description: Metric labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        type:
          $ref: '#/components/schemas/MetricType_in_ListMetricsResponseMetricMeta_type'
    MetricData:
      type: object
      properties:
        name:
          description: Name of the metric.
          type: string
        labels:
          description: List of metric labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        type:
          $ref: '#/components/schemas/MetricType_in_MetricData_type'
        timeseries:
          $ref: '#/components/schemas/Timeseries_in_MetricData_timeseries'
    MetricType:
      description: |2-
         - DGAUGE: Gauge with fractional values.
         - IGAUGE: Gauge with integer values.
         - COUNTER: Counter.
         - RATE: Rate.
      type: string
      enum:
      - DGAUGE
      - IGAUGE
      - COUNTER
      - RATE
    ReadMetricsDataResponse:
      type: object
      properties:
        metrics:
          description: List of metrics with timeseries.
          type: array
          items:
            $ref: '#/components/schemas/MetricData'
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Timeseries:
      type: object
      properties:
        timestamps:
          description: List of timestamps as unix-time milliseconds.
          type: array
          items:
            type: string
            format: int64
        doubleValues:
          description: List of double values.
          type: array
          items:
            type: number
            format: double
        int64Values:
          description: List of int64 values. Only for `IGAUGE` metric type.
          type: array
          items:
            type: string
            format: int64
    WriteMetricsDataRequestRawData:
      type: object
      properties:
        contentType:
          description: |-
            Required.
            Query content type. Use "application/json".
          type: string
        content:
          description: |-
            Required.
            Query content.
          type: string
          format: byte
    WriteMetricsDataRequestTypedData:
      type: object
      properties:
        metrics:
          description: List of metrics with timeseries.
          type: array
          items:
            $ref: '#/components/schemas/MetricData'
    WriteMetricsDataResponse:
      type: object
      properties:
        writtenMetricsCount:
          description: Number of successfully written metrics.
          type: string
          format: int64
        partialFailureError:
          $ref: '#/components/schemas/Status_in_WriteMetricsDataResponse_partialFailureError'
    Downsampling_in_DataQuery_downsampling:
      description: |-
        Required.
        Downsampling parameters.

        List of available aggregate functions for downsampling.
      type: object
      allOf:
      - type: object
        properties:
          gridAggregation:
            $ref: '#/components/schemas/GridAggregation'
            description: Function that is used for downsampling.
          gapFilling:
            $ref: '#/components/schemas/GapFilling'
            description: Parameters for filling gaps in data.
      - title: mode
        type: object
        maxProperties: 1
        properties:
          maxPoints:
            description: |-
              Maximum number of points to be returned.

              Value must be greater than 10.
            type: string
            format: int64
          gridInterval:
            description: |-
              Time interval (grid) for downsampling in milliseconds.
              Points in the specified range are aggregated into one time point.

              Value must be greater than 0.
            type: string
            format: int64
          disabled:
            description: Disable downsampling.
            type: boolean
            format: boolean
    MetricType_in_ListMetricsResponseMetricMeta_type:
      description: |-
        Type of the metric.

         - DGAUGE: Gauge with fractional values.
         - IGAUGE: Gauge with integer values.
         - COUNTER: Counter.
         - RATE: Rate.
      type: string
      enum:
      - DGAUGE
      - IGAUGE
      - COUNTER
      - RATE
    MetricType_in_MetricData_type:
      description: |-
        Type of the metric.

         - DGAUGE: Gauge with fractional values.
         - IGAUGE: Gauge with integer values.
         - COUNTER: Counter.
         - RATE: Rate.
      type: string
      enum:
      - DGAUGE
      - IGAUGE
      - COUNTER
      - RATE
    Timeseries_in_MetricData_timeseries:
      description: Metric values.
      type: object
      properties:
        timestamps:
          description: List of timestamps as unix-time milliseconds.
          type: array
          items:
            type: string
            format: int64
        doubleValues:
          description: List of double values.
          type: array
          items:
            type: number
            format: double
        int64Values:
          description: List of int64 values. Only for `IGAUGE` metric type.
          type: array
          items:
            type: string
            format: int64
    Status_in_WriteMetricsDataResponse_partialFailureError:
      description: |-
        Error message if the writing failed.

        The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
tags:
- name: MetricsData
  description: A set of methods for managing metric data.
- name: MetricsMeta
  description: A set of methods for managing metric metadata.
