openapi: "3.0"
info:
  title: Yandex Virtual Private Cloud API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about Yandex.Cloud API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://vpc.api.cloud.yandex.net
paths:
  /vpc/v1/networks/{networkId}:
    get:
      tags:
      - Network
      summary: Returns the specified Network resource.
      description: Get the list of available Network resources by making a [list](/docs/vpc/api-ref/Network/list)
        request.
      operationId: NetworkGet
      parameters:
      - name: networkId
        in: path
        description: |-
          Required.
          ID of the Network resource to return.
          To get the network ID, use a [list](/docs/vpc/api-ref/Network/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
      x-y-navtitle: get
    delete:
      tags:
      - Network
      summary: Deletes the specified network.
      operationId: NetworkDelete
      parameters:
      - name: networkId
        in: path
        description: |-
          Required.
          ID of the Network resource to update.
          To get the network ID, use a [list](/docs/vpc/api-ref/Network/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteNetworkMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Network
      summary: |-
        Updates the specified network.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: NetworkUpdate
      parameters:
      - name: networkId
        in: path
        description: |-
          Required.
          ID of the Network resource to update.
          To get the network ID use a [list](/docs/vpc/api-ref/Network/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateNetworkMetadata'
      x-y-operation-response: '[Network](/docs/vpc/api-ref/Network#representation)'
  /vpc/v1/networks:
    get:
      tags:
      - Network
      summary: Retrieves the list of Network resources in the specified folder.
      operationId: NetworkList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list networks in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/vpc/api-ref/Network/list#query_params),
          the service returns a [nextPageToken](/docs/vpc/api-ref/Network/list#responses)
          that can be used to get the next page of results in subsequent list requests. Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/vpc/api-ref/Network/list#query_params) to the
          [nextPageToken](/docs/vpc/api-ref/Network/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Network.name](/docs/vpc/api-ref/Network#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworksResponse'
      x-y-navtitle: list
    post:
      tags:
      - Network
      summary: |-
        Creates a network in the specified folder using the data specified in the request.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: NetworkCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateNetworkMetadata'
      x-y-operation-response: '[Network](/docs/vpc/api-ref/Network#representation)'
  /vpc/v1/networks/{networkId}/subnets:
    get:
      tags:
      - Network
      summary: Lists subnets from the specified network.
      operationId: NetworkListSubnets
      parameters:
      - name: networkId
        in: path
        description: |-
          Required.
          ID of the Network resource to list subnets for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/vpc/api-ref/Network/listSubnets#query_params),
          the service returns a [nextPageToken](/docs/vpc/api-ref/Network/listSubnets#responses)
          that can be used to get the next page of results in subsequent list requests. Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [pageToken](/docs/vpc/api-ref/Network/listSubnets#query_params)
          to the [nextPageToken](/docs/vpc/api-ref/Network/listSubnets#responses)
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkSubnetsResponse'
      x-y-navtitle: listSubnets
  /vpc/v1/networks/{networkId}/operations:
    get:
      tags:
      - Network
      summary: Lists operations for the specified network.
      operationId: NetworkListOperations
      parameters:
      - name: networkId
        in: path
        description: |-
          Required.
          ID of the Network resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/vpc/api-ref/Network/listOperations#query_params), the service returns a [nextPageToken](/docs/vpc/api-ref/Network/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests. Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/vpc/api-ref/Network/listOperations#query_params) to the
          [nextPageToken](/docs/vpc/api-ref/Network/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNetworkOperationsResponse'
      x-y-navtitle: listOperations
  /vpc/v1/networks/{networkId}:move:
    post:
      tags:
      - Network
      summary: Move network to another folder.
      operationId: NetworkMove
      parameters:
      - name: networkId
        in: path
        description: |-
          Required.
          ID of the Network resource to move.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveNetworkRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveNetworkMetadata'
      x-y-operation-response: '[Network](/docs/vpc/api-ref/Network#representation)'
  /vpc/v1/routeTables/{routeTableId}:
    get:
      tags:
      - RouteTable
      summary: Returns the specified RouteTable resource.
      description: To get the list of available RouteTable resources, make a [list](/docs/vpc/api-ref/RouteTable/list)
        request.
      operationId: RouteTableGet
      parameters:
      - name: routeTableId
        in: path
        description: |-
          Required.
          ID of the RouteTable resource to return.
          To get the route table ID use a [list](/docs/vpc/api-ref/RouteTable/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteTable'
      x-y-navtitle: get
    delete:
      tags:
      - RouteTable
      summary: Deletes the specified route table.
      operationId: RouteTableDelete
      parameters:
      - name: routeTableId
        in: path
        description: |-
          Required.
          ID of the route table to delete.
          To get the route table ID use a [list](/docs/vpc/api-ref/RouteTable/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRouteTableMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - RouteTable
      summary: |-
        Updates the specified route table.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: RouteTableUpdate
      parameters:
      - name: routeTableId
        in: path
        description: |-
          Required.
          ID of the RouteTable resource to update.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRouteTableRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateRouteTableMetadata'
      x-y-operation-response: '[RouteTable](/docs/vpc/api-ref/RouteTable#representation)'
  /vpc/v1/routeTables:
    get:
      tags:
      - RouteTable
      summary: Retrieves the list of RouteTable resources in the specified folder.
      operationId: RouteTableList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the route table belongs to.
          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/vpc/api-ref/RouteTable/list#query_params),
          the service returns a [nextPageToken](/docs/vpc/api-ref/RouteTable/list#responses)
          that can be used to get the next page of results in subsequent list requests. Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/vpc/api-ref/RouteTable/list#query_params) to the
          [nextPageToken](/docs/vpc/api-ref/RouteTable/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [RouteTable.name](/docs/vpc/api-ref/RouteTable#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRouteTablesResponse'
      x-y-navtitle: list
    post:
      tags:
      - RouteTable
      summary: |-
        Creates a route table in the specified folder and network.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: RouteTableCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRouteTableRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateRouteTableMetadata'
      x-y-operation-response: '[RouteTable](/docs/vpc/api-ref/RouteTable#representation)'
  /vpc/v1/routeTables/{routeTableId}/operations:
    get:
      tags:
      - RouteTable
      summary: List operations for the specified route table.
      operationId: RouteTableListOperations
      parameters:
      - name: routeTableId
        in: path
        description: |-
          Required.
          ID of the RouteTable resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/vpc/api-ref/RouteTable/listOperations#query_params), the service returns a [nextPageToken](/docs/vpc/api-ref/RouteTable/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests. Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/vpc/api-ref/RouteTable/listOperations#query_params) to the
          [nextPageToken](/docs/vpc/api-ref/RouteTable/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRouteTableOperationsResponse'
      x-y-navtitle: listOperations
  /vpc/v1/routeTables/{routeTableId}:move:
    post:
      tags:
      - RouteTable
      summary: Move route table to another folder.
      operationId: RouteTableMove
      parameters:
      - name: routeTableId
        in: path
        description: |-
          Required.
          ID of the RouteTable resource to move.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveRouteTableRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveRouteTableMetadata'
      x-y-operation-response: '[RouteTable](/docs/vpc/api-ref/RouteTable#representation)'
  /vpc/v1/subnets/{subnetId}:
    get:
      tags:
      - Subnet
      summary: Returns the specified Subnet resource.
      description: To get the list of available Subnet resources, make a [list](/docs/vpc/api-ref/Subnet/list)
        request.
      operationId: SubnetGet
      parameters:
      - name: subnetId
        in: path
        description: |-
          Required.
          ID of the Subnet resource to return.
          To get the subnet ID use a [list](/docs/vpc/api-ref/Subnet/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subnet'
      x-y-navtitle: get
    delete:
      tags:
      - Subnet
      summary: Deletes the specified subnet.
      operationId: SubnetDelete
      parameters:
      - name: subnetId
        in: path
        description: |-
          Required.
          ID of the subnet to delete.
          To get the subnet ID use a [list](/docs/vpc/api-ref/Subnet/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteSubnetMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Subnet
      summary: |-
        Updates the specified subnet.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: SubnetUpdate
      parameters:
      - name: subnetId
        in: path
        description: |-
          Required.
          ID of the Subnet resource to update.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubnetRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateSubnetMetadata'
      x-y-operation-response: '[Subnet](/docs/vpc/api-ref/Subnet#representation)'
  /vpc/v1/subnets:
    get:
      tags:
      - Subnet
      summary: Retrieves the list of Subnet resources in the specified folder.
      operationId: SubnetList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list subnets in.
          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/vpc/api-ref/Subnet/list#query_params),
          the service returns a [nextPageToken](/docs/vpc/api-ref/Subnet/list#responses)
          that can be used to get the next page of results in subsequent list requests. Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/vpc/api-ref/Subnet/list#query_params) to the
          [nextPageToken](/docs/vpc/api-ref/Subnet/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Subnet.name](/docs/vpc/api-ref/Subnet#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubnetsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Subnet
      summary: |-
        Creates a subnet in the specified folder and network.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: SubnetCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubnetRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateSubnetMetadata'
      x-y-operation-response: '[Subnet](/docs/vpc/api-ref/Subnet#representation)'
  /vpc/v1/subnets/{subnetId}/operations:
    get:
      tags:
      - Subnet
      summary: List operations for the specified subnet.
      operationId: SubnetListOperations
      parameters:
      - name: subnetId
        in: path
        description: |-
          Required.
          ID of the Subnet resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/vpc/api-ref/Subnet/listOperations#query_params), the service returns a [nextPageToken](/docs/vpc/api-ref/Subnet/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests. Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/vpc/api-ref/Subnet/listOperations#query_params) to the
          [nextPageToken](/docs/vpc/api-ref/Subnet/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubnetOperationsResponse'
      x-y-navtitle: listOperations
  /vpc/v1/subnets/{subnetId}:move:
    post:
      tags:
      - Subnet
      summary: Move subnet to another folder.
      operationId: SubnetMove
      parameters:
      - name: subnetId
        in: path
        description: |-
          Required.
          ID of the Subnet resource to move.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveSubnetRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveSubnetMetadata'
      x-y-operation-response: '[Subnet](/docs/vpc/api-ref/Subnet#representation)'
components:
  schemas:
    CreateNetworkMetadata:
      type: object
      properties:
        networkId:
          description: ID of the Network that is being created.
          type: string
    CreateNetworkRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder for this request to create a network in.
            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the network.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the network.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `` key:value `` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    CreateRouteTableMetadata:
      type: object
      properties:
        routeTableId:
          description: ID of the route table that is being created.
          type: string
    CreateRouteTableRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder that the route table belongs to.
            To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the route table.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the route table.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels, `` key:value `` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        networkId:
          description: |-
            Required.
            ID of the network the route table belongs to.

            The maximum string length in characters is 50.
          type: string
        staticRoutes:
          description: List of static routes.
          type: array
          items:
            $ref: '#/components/schemas/StaticRoute'
    CreateSubnetMetadata:
      type: object
      properties:
        subnetId:
          description: ID of the subnet that is being created.
          type: string
    CreateSubnetRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a subnet in.
            To get folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the subnet.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the subnet.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels, `` key:value `` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        networkId:
          description: |-
            Required.
            ID of the network to create subnet in.

            The maximum string length in characters is 50.
          type: string
        zoneId:
          description: |-
            ID of the availability zone where the subnet resides.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        v4CidrBlocks:
          description: |-
            CIDR block.
            The range of internal addresses that are defined for this subnet.
            This field can be set only at Subnet resource creation time and cannot be changed.
            For example, 10.0.0.0/22 or 192.168.0.0/24.
            Minimum subnet size is /28, maximum subnet size is /16.
          type: array
          items:
            type: string
        routeTableId:
          description: |-
            ID of route table the subnet is linked to.

            The maximum string length in characters is 50.
          type: string
    DeleteNetworkMetadata:
      type: object
      properties:
        networkId:
          description: ID of the network that is being deleted.
          type: string
    DeleteRouteTableMetadata:
      type: object
      properties:
        routeTableId:
          description: ID of the RouteTable resource that is being deleted.
          type: string
    DeleteSubnetMetadata:
      type: object
      properties:
        subnetId:
          description: ID of the Subnet resource that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ListNetworkOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified network.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/vpc/api-ref/Network/listOperations#query_params), use the [nextPageToken](/docs/vpc/api-ref/Network/listOperations#responses) as the value
            for the [pageToken](/docs/vpc/api-ref/Network/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/vpc/api-ref/Network/listOperations#responses) to continue paging through the results.
          type: string
    ListNetworkSubnetsResponse:
      type: object
      properties:
        subnets:
          description: List of subnets that belong to the network which is specified
            in the request.
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/vpc/api-ref/Network/listSubnets#query_params), use
            the [nextPageToken](/docs/vpc/api-ref/Network/listSubnets#responses) as the value
            for the [pageToken](/docs/vpc/api-ref/Network/listSubnets#query_params) query parameter
            in the next list request. Subsequent list requests will have their own
            [nextPageToken](/docs/vpc/api-ref/Network/listSubnets#responses) to continue paging through the results.
          type: string
    ListNetworksResponse:
      type: object
      properties:
        networks:
          description: List of Network resources.
          type: array
          items:
            $ref: '#/components/schemas/Network'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/vpc/api-ref/Network/list#query_params), use
            the [nextPageToken](/docs/vpc/api-ref/Network/list#responses) as the value
            for the [pageToken](/docs/vpc/api-ref/Network/list#query_params) query parameter
            in the next list request. Subsequent list requests will have their own
            [nextPageToken](/docs/vpc/api-ref/Network/list#responses) to continue paging through the results.
          type: string
    ListRouteTableOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified RouteTable resource.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/vpc/api-ref/RouteTable/listOperations#query_params), use the [nextPageToken](/docs/vpc/api-ref/RouteTable/listOperations#responses) as the value
            for the [pageToken](/docs/vpc/api-ref/RouteTable/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/vpc/api-ref/RouteTable/listOperations#responses) to continue paging through the results.
          type: string
    ListRouteTablesResponse:
      type: object
      properties:
        routeTables:
          description: List of RouteTable resources.
          type: array
          items:
            $ref: '#/components/schemas/RouteTable'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/vpc/api-ref/RouteTable/list#query_params), use
            the [nextPageToken](/docs/vpc/api-ref/RouteTable/list#responses) as the value
            for the [pageToken](/docs/vpc/api-ref/RouteTable/list#query_params) query parameter
            in the next list request. Subsequent list requests will have their own
            [nextPageToken](/docs/vpc/api-ref/RouteTable/list#responses) to continue paging through the results.
          type: string
    ListSubnetOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified Subnet resource.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/vpc/api-ref/Subnet/listOperations#query_params), use the [nextPageToken](/docs/vpc/api-ref/Subnet/listOperations#responses) as the value
            for the [pageToken](/docs/vpc/api-ref/Subnet/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/vpc/api-ref/Subnet/listOperations#responses) to continue paging through the results.
          type: string
    ListSubnetsResponse:
      type: object
      properties:
        subnets:
          description: List of Subnet resources.
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/vpc/api-ref/Subnet/list#query_params), use
            the [nextPageToken](/docs/vpc/api-ref/Subnet/list#responses) as the value
            for the [pageToken](/docs/vpc/api-ref/Subnet/list#query_params) query parameter
            in the next list request. Subsequent list requests will have their own
            [nextPageToken](/docs/vpc/api-ref/Subnet/list#responses) to continue paging through the results.
          type: string
    MoveNetworkMetadata:
      type: object
      properties:
        networkId:
          description: ID of the network that is being moved.
          type: string
    MoveNetworkRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    MoveRouteTableMetadata:
      type: object
      properties:
        routeTableId:
          description: ID of the RouteTable resource that is being moved.
          type: string
    MoveRouteTableRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    MoveSubnetMetadata:
      type: object
      properties:
        subnetId:
          description: ID of the Subnet resource that is being moved.
          type: string
    MoveSubnetRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    Network:
      description: A Network resource. For more information, see [Networks](/docs/vpc/concepts/network).
      type: object
      properties:
        id:
          description: ID of the network.
          type: string
        folderId:
          description: ID of the folder that the network belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the network.
            The name is unique within the folder. 3-63 characters long.
          type: string
        description:
          description: Optional description of the network. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `` key:value `` pairs. Мaximum of 64 per
            resource.
          type: object
          additionalProperties:
            type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/Status'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RouteTable:
      description: A RouteTable resource. For more information, see [Static Routes](/docs/vpc/concepts/static-routes).
      type: object
      properties:
        id:
          description: ID of the route table.
          type: string
        folderId:
          description: ID of the folder that the route table belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the route table. The name is unique within the project.
            3-63 characters long.
          type: string
        description:
          description: Optional description of the route table. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `` key:value `` pairs. Мaximum of 64 per
            resource.
          type: object
          additionalProperties:
            type: string
        networkId:
          description: ID of the network the route table belongs to.
          type: string
        staticRoutes:
          description: List of static routes.
          type: array
          items:
            $ref: '#/components/schemas/StaticRoute'
    StaticRoute:
      description: A StaticRoute resource. For more information, see [Static Routes](/docs/vpc/concepts/static-routes).
      type: object
      allOf:
      - type: object
        properties:
          labels:
            description: Resource labels as `` key:value `` pairs. Мaximum of 64 per
              resource.
            type: object
            additionalProperties:
              type: string
      - title: destination
        type: object
        maxProperties: 1
        properties:
          destinationPrefix:
            description: Destination subnet in CIDR notation
            type: string
      - title: next_hop
        type: object
        maxProperties: 1
        properties:
          nextHopAddress:
            description: Next hop IP address
            type: string
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subnet:
      description: A Subnet resource. For more information, see [Subnets](/docs/vpc/concepts/subnets).
      type: object
      properties:
        id:
          description: ID of the subnet.
          type: string
        folderId:
          description: ID of the folder that the subnet belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the subnet. The name is unique within the project.
            3-63 characters long.
          type: string
        description:
          description: Optional description of the subnet. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `` key:value `` pairs. Мaximum of 64 per
            resource.
          type: object
          additionalProperties:
            type: string
        networkId:
          description: ID of the network the subnet belongs to.
          type: string
        zoneId:
          description: ID of the availability zone where the subnet resides.
          type: string
        v4CidrBlocks:
          description: |-
            CIDR block.
            The range of internal addresses that are defined for this subnet.
            This field can be set only at Subnet resource creation time and cannot be changed.
            For example, 10.0.0.0/22 or 192.168.0.0/24.
            Minimum subnet size is /28, maximum subnet size is /16.
          type: array
          items:
            type: string
        v6CidrBlocks:
          description: IPv6 not available yet.
          type: array
          items:
            type: string
        routeTableId:
          description: ID of route table the subnet is linked to.
          type: string
    UpdateNetworkMetadata:
      type: object
      properties:
        networkId:
          description: ID of the Network resource that is being updated.
          type: string
    UpdateNetworkRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateNetworkRequest_updateMask'
        name:
          description: |-
            Name of the network.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the network.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `` key:value `` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    UpdateRouteTableMetadata:
      type: object
      properties:
        routeTableId:
          description: ID of the RouteTable resource that is being updated.
          type: string
    UpdateRouteTableRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateRouteTableRequest_updateMask'
        name:
          description: |-
            Name of the route table.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the route table.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `` key:value `` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        staticRoutes:
          description: List of static routes.
          type: array
          items:
            $ref: '#/components/schemas/StaticRoute'
    UpdateSubnetMetadata:
      type: object
      properties:
        subnetId:
          description: ID of the Subnet resource that is being updated.
          type: string
    UpdateSubnetRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateSubnetRequest_updateMask'
        name:
          description: |-
            Name of the subnet.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the subnet.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `` key:value `` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        routeTableId:
          description: |-
            ID of route table the subnet is linked to.

            The maximum string length in characters is 50.
          type: string
    FieldMask_in_UpdateNetworkRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Network resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateRouteTableRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the RouteTable resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateSubnetRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Subnet resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Network
  description: A set of methods for managing Network resources.
- name: RouteTable
  description: A set of methods for managing RouteTable resources.
- name: Subnet
  description: A set of methods for managing Subnet resources.
