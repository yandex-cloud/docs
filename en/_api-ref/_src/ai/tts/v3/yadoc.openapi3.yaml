openapi: 3.0.0
info:
  title: SpeechKit Text To Speech Service API
  description: The service does not operate with resources. For more information about
    API architecture, see [API Concepts](/docs/api-design-guide/). <br><br><strong>
    API has limitation â€” the request cannot exceed 250 characters and 24 seconds for
    synthesis.</strong> <br><br> Service is available at tts.api.cloud.yandex.net,
    port 443.
  version: v3
  x-y-docUri: new-v3/api-ref
  x-y-baseUrl: https://tts.api.cloud.yandex.net
paths: {}
components:
  schemas:
    AudioChunk:
      type: object
      properties:
        data:
          description: Sequence of bytes of the synthesized audio in format specified
            in output_audio_spec.
          type: string
          format: byte
    AudioContent:
      type: object
      allOf:
      - type: object
        properties:
          audioSpec:
            $ref: '#/components/schemas/AudioFormatOptions'
            description: Description of the audio format.
      - title: AudioSource
        type: object
        maxProperties: 1
        properties:
          content:
            description: Bytes with audio data.
            type: string
            format: byte
    AudioFormatOptions:
      type: object
      allOf:
      - title: AudioFormat
        type: object
        maxProperties: 1
        properties:
          rawAudio:
            $ref: '#/components/schemas/RawAudio'
            description: The audio format specified in request parameters.
          containerAudio:
            $ref: '#/components/schemas/ContainerAudio'
            description: The audio format specified inside the container metadata.
    AudioTemplate:
      type: object
      properties:
        audio:
          $ref: '#/components/schemas/AudioContent_in_AudioTemplate_audio'
        textTemplate:
          $ref: '#/components/schemas/TextTemplate_in_AudioTemplate_textTemplate'
        variables:
          description: Describing variables in audio.
          type: array
          items:
            $ref: '#/components/schemas/AudioVariable'
    AudioVariable:
      type: object
      properties:
        variableName:
          description: The name of the variable.
          type: string
        variableStartMs:
          description: Start time of the variable in milliseconds.
          type: string
          format: int64
        variableLengthMs:
          description: Length of the variable in milliseconds.
          type: string
          format: int64
    ContainerAudio:
      type: object
      properties:
        containerAudioType:
          $ref: '#/components/schemas/ContainerAudioContainerAudioType_in_ContainerAudio_containerAudioType'
    ContainerAudioContainerAudioType:
      description: |2-
         - WAV: Audio bit depth 16-bit signed little-endian (Linear PCM).
         - OGG_OPUS: Data is encoded using the OPUS audio codec and compressed using the OGG container format.
         - MP3: Data is encoded using MPEG-1/2 Layer III and compressed using the MP3 container format.
      type: string
      enum:
      - WAV
      - OGG_OPUS
      - MP3
    Hints:
      type: object
      allOf:
      - title: Hint
        type: object
        maxProperties: 1
        properties:
          voice:
            description: Name of speaker to use.
            type: string
          audioTemplate:
            $ref: '#/components/schemas/AudioTemplate'
            description: Template for synthesizing.
          speed:
            description: Hint to change speed.
            type: number
            format: double
          volume:
            description: |-
              Hint to regulate normalization level.
              * For `MAX_PEAK` loudness_normalization_type: volume changes in a range (0;1], default value is 0.7.
              * For `LUFS` loudness_normalization_type: volume changes in a range [-145;0), default value is -19.
            type: number
            format: double
          role:
            description: Hint to specify pronunciation character for the speaker.
            type: string
    RawAudio:
      type: object
      properties:
        audioEncoding:
          $ref: '#/components/schemas/RawAudioAudioEncoding_in_RawAudio_audioEncoding'
        sampleRateHertz:
          description: Sampling frequency of the signal.
          type: string
          format: int64
    RawAudioAudioEncoding:
      description: ' - LINEAR16_PCM: Audio bit depth 16-bit signed little-endian (Linear
        PCM).'
      type: string
      enum:
      - LINEAR16_PCM
    TextTemplate:
      type: object
      properties:
        textTemplate:
          description: |-
            Template text.

            Sample:`The {animal} goes to the {place}.`
          type: string
        variables:
          description: |-
            Defining variables in template text.

            Sample: `{animal: cat, place: forest}`
          type: array
          items:
            $ref: '#/components/schemas/TextVariable'
    TextVariable:
      type: object
      properties:
        variableName:
          description: The name of the variable.
          type: string
        variableValue:
          description: The text of the variable.
          type: string
    UtteranceSynthesisRequestLoudnessNormalizationType:
      description: |2-
         - MAX_PEAK: The type of normalization, wherein the gain is changed to bring the highest PCM sample value or analog signal peak to a given level.
         - LUFS: The type of normalization based on EBU R 128 recommendation.
      type: string
      enum:
      - MAX_PEAK
      - LUFS
    UtteranceSynthesisResponse:
      type: object
      properties:
        audioChunk:
          $ref: '#/components/schemas/AudioChunk_in_UtteranceSynthesisResponse_audioChunk'
    AudioContent_in_AudioTemplate_audio:
      description: Audio file.
      type: object
      allOf:
      - type: object
        properties:
          audioSpec:
            $ref: '#/components/schemas/AudioFormatOptions'
            description: Description of the audio format.
      - title: AudioSource
        type: object
        maxProperties: 1
        properties:
          content:
            description: Bytes with audio data.
            type: string
            format: byte
    TextTemplate_in_AudioTemplate_textTemplate:
      description: Template and description of its variables.
      type: object
      properties:
        textTemplate:
          description: |-
            Template text.

            Sample:`The {animal} goes to the {place}.`
          type: string
        variables:
          description: |-
            Defining variables in template text.

            Sample: `{animal: cat, place: forest}`
          type: array
          items:
            $ref: '#/components/schemas/TextVariable'
    ContainerAudioContainerAudioType_in_ContainerAudio_containerAudioType:
      description: |2-
         - WAV: Audio bit depth 16-bit signed little-endian (Linear PCM).
         - OGG_OPUS: Data is encoded using the OPUS audio codec and compressed using the OGG container format.
         - MP3: Data is encoded using MPEG-1/2 Layer III and compressed using the MP3 container format.
      type: string
      enum:
      - WAV
      - OGG_OPUS
      - MP3
    RawAudioAudioEncoding_in_RawAudio_audioEncoding:
      description: |-
        Encoding type.

         - LINEAR16_PCM: Audio bit depth 16-bit signed little-endian (Linear PCM).
      type: string
      enum:
      - LINEAR16_PCM
    AudioChunk_in_UtteranceSynthesisResponse_audioChunk:
      description: Part of synthesized audio.
      type: object
      properties:
        data:
          description: Sequence of bytes of the synthesized audio in format specified
            in output_audio_spec.
          type: string
          format: byte
tags:
- name: Synthesizer
  description: A set of methods for voice synthesis.
