openapi: 3.0.0
info:
  title: Data Transfer API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://datatransfer.api.cloud.yandex.net
paths:
  /v1/endpoint/{endpointId}:
    get:
      tags:
      - Endpoint
      operationId: EndpointGet
      parameters:
      - name: endpointId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      x-y-navtitle: get
    delete:
      tags:
      - Endpoint
      operationId: EndpointDelete
      parameters:
      - name: endpointId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteEndpointMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Endpoint
      operationId: EndpointUpdate
      parameters:
      - name: endpointId
        in: path
        description: Identifier of the endpoint to be updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateEndpointMetadata'
      x-y-operation-response: '[Endpoint](/docs/datatransfer/api-ref/Endpoint#representation)'
  /v1/endpoints/list/{folderId}:
    get:
      tags:
      - Endpoint
      operationId: EndpointList
      parameters:
      - name: folderId
        in: path
        description: Identifier of the folder containing the endpoints to be listed.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of endpoints to be sent in the response message. If the
          folder contains more endpoints than page_size, next_page_token will be included
          in the response message. Include it into the subsequent ListEndpointRequest to
          fetch the next page. Defaults to 100 if not specified. The maximum allowed value
          for this field is 500.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Opaque value identifying the endpoints page to be fetched. Should be empty in
          the first ListEndpointsRequest. Subsequent request should have this field filled
          with the next_page_token from the previous ListEndpointsResponse.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsResponse'
      x-y-navtitle: list
  /v1/endpoint:
    post:
      tags:
      - Endpoint
      operationId: EndpointCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateEndpointMetadata'
      x-y-operation-response: '[Endpoint](/docs/datatransfer/api-ref/Endpoint#representation)'
  /v1/transfer:
    post:
      tags:
      - Transfer
      operationId: TransferCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateTransferMetadata'
      x-y-operation-response: '[Transfer](/docs/datatransfer/api-ref/Transfer#representation)'
  /v1/transfer/{transferId}:
    get:
      tags:
      - Transfer
      operationId: TransferGet
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
      x-y-navtitle: get
    delete:
      tags:
      - Transfer
      operationId: TransferDelete
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteTransferMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Transfer
      operationId: TransferUpdate
      parameters:
      - name: transferId
        in: path
        description: Identifier of the transfer to be updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateTransferMetadata'
      x-y-operation-response: '[Transfer](/docs/datatransfer/api-ref/Transfer#representation)'
  /v1/transfers/list/{folderId}:
    get:
      tags:
      - Transfer
      operationId: TransferList
      parameters:
      - name: folderId
        in: path
        description: Identifier of the folder containing the transfers to be listed.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of transfers to be sent in the response message. If the
          folder contains more transfers than page_size, next_page_token will be included
          in the response message. Include it into the subsequent ListTransfersRequest to
          fetch the next page. Defaults to 100 if not specified. The maximum allowed value
          for this field is 500.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Opaque value identifying the transfers page to be fetched. Should be empty in
          the first ListTransfersRequest. Subsequent request should have this field filled
          with the next_page_token from the previous ListTransfersResponse.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransfersResponse'
      x-y-navtitle: list
  /v1/transfer/{transferId}:deactivate:
    post:
      tags:
      - Transfer
      operationId: TransferDeactivate
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deactivate
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeactivateTransferMetadata'
      x-y-operation-response: Empty
  /v1/transfer/{transferId}:activate:
    post:
      tags:
      - Transfer
      operationId: TransferActivate
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: activate
      x-y-operation-metadata:
        $ref: '#/components/schemas/ActivateTransferMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    ActivateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    ActivateTransferRequest:
      type: object
      properties: {}
    AltName:
      type: object
      properties:
        fromName:
          description: From table name
          type: string
        toName:
          description: To table name
          type: string
    CleanupPolicy:
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    ClickhouseCleanupPolicy:
      type: string
      enum:
      - CLICKHOUSE_CLEANUP_POLICY_DISABLED
      - CLICKHOUSE_CLEANUP_POLICY_DROP
    ClickhouseConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/ClickhouseConnectionOptions'
    ClickhouseConnectionOptions:
      type: object
      allOf:
      - type: object
        properties:
          database:
            type: string
          user:
            type: string
          password:
            $ref: '#/components/schemas/Secret'
      - title: address
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseClickhouse'
    ClickhouseShard:
      type: object
      properties:
        name:
          type: string
        hosts:
          type: array
          items:
            type: string
    ClickhouseSharding:
      type: object
      allOf:
      - title: sharding
        type: object
        maxProperties: 1
        properties:
          columnValueHash:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueHash'
          customMapping:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueMapping'
          transferId:
            $ref: '#/components/schemas/Empty'
    ClickhouseShardingColumnValueHash:
      type: object
      properties:
        columnName:
          type: string
    ClickhouseShardingColumnValueMapping:
      type: object
      properties:
        columnName:
          type: string
        mapping:
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueMappingValueToShard'
    ClickhouseShardingColumnValueMappingValueToShard:
      type: object
      properties:
        columnValue:
          $ref: '#/components/schemas/ColumnValue_in_ClickhouseShardingColumnValueMappingValueToShard_columnValue'
        shardName:
          type: string
    ClickhouseSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/ClickhouseConnection_in_ClickhouseSource_connection'
        subnetId:
          type: string
        securityGroups:
          type: array
          items:
            type: string
        includeTables:
          type: array
          items:
            type: string
        excludeTables:
          type: array
          items:
            type: string
    ClickhouseTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/ClickhouseConnection_in_ClickhouseTarget_connection'
        subnetId:
          type: string
        securityGroups:
          type: array
          items:
            type: string
        clickhouseClusterName:
          type: string
        altNames:
          type: array
          items:
            $ref: '#/components/schemas/AltName'
        sharding:
          $ref: '#/components/schemas/ClickhouseSharding_in_ClickhouseTarget_sharding'
        cleanupPolicy:
          $ref: '#/components/schemas/ClickhouseCleanupPolicy_in_ClickhouseTarget_cleanupPolicy'
    ColumnValue:
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          stringValue:
            type: string
    CreateEndpointMetadata:
      type: object
      properties:
        endpointId:
          type: string
    CreateEndpointRequest:
      type: object
      properties:
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_CreateEndpointRequest_settings'
    CreateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    CreateTransferRequest:
      type: object
      properties:
        sourceId:
          type: string
        targetId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        folderId:
          type: string
        type:
          $ref: '#/components/schemas/TransferType_in_CreateTransferRequest_type'
    DeactivateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    DeactivateTransferRequest:
      type: object
      properties: {}
    DeleteEndpointMetadata:
      type: object
      properties:
        endpointId:
          type: string
    DeleteTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    Endpoint:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_Endpoint_settings'
    EndpointSettings:
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ListEndpointsResponse:
      type: object
      properties:
        endpoints:
          description: |-
            The list of endpoints. If there are more endpoints in the folder, then
            next_page_token is a non-empty string to be included into the subsequent
            ListEndpointsRequest to fetch the next endpoints page.
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
        nextPageToken:
          description: |-
            Opaque value identifying the next endpoints page. This field is empty if there
            are no more endpoints in the folder. Otherwise it is non-empty and should be
            included in the subsequent ListEndpointsRequest to fetch the next endpoints
            page.
          type: string
    ListTransfersResponse:
      type: object
      properties:
        transfers:
          description: |-
            The list of transfers. If there are more transfers in the folder, then
            next_page_token is a non-empty string to be included into the subsequent
            ListTransfersRequest to fetch the next transfers page.
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        nextPageToken:
          description: |-
            Opaque value identifying the next transfers page. This field is empty if there
            are no more transfers in the folder. Otherwise it is non-empty and should be
            included in the subsequent ListTransfersRequest to fetch the next transfers
            page.
          type: string
    MongoCollection:
      type: object
      properties:
        databaseName:
          type: string
        collectionName:
          type: string
    MongoConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/MongoConnectionOptions'
    MongoConnectionOptions:
      type: object
      allOf:
      - type: object
        properties:
          user:
            type: string
          password:
            $ref: '#/components/schemas/Secret'
          authSource:
            type: string
      - title: address
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMongo'
    MongoSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MongoConnection_in_MongoSource_connection'
        subnetId:
          type: string
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        collections:
          type: array
          items:
            $ref: '#/components/schemas/MongoCollection'
        excludedCollections:
          type: array
          items:
            $ref: '#/components/schemas/MongoCollection'
        secondaryPreferredMode:
          type: boolean
          format: boolean
    MongoTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MongoConnection_in_MongoTarget_connection'
        subnetId:
          type: string
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          type: string
        cleanupPolicy:
          $ref: '#/components/schemas/CleanupPolicy_in_MongoTarget_cleanupPolicy'
    MysqlConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: |-
              Managed cluster

              Managed Service for MySQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMysql'
            description: |-
              On-premise

              Connection options for on-premise MySQL
    MysqlObjectTransferSettings:
      type: object
      properties:
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_view'
        routine:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_routine'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_trigger'
    MysqlSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MysqlConnection_in_MysqlSource_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: |-
            Database name

            You can leave it empty, then it will be possible to transfer tables from several
            databases at the same time from this source.
          type: string
        serviceDatabase:
          description: |-
            Database for service tables

            Default: data source database. Here created technical tables (__tm_keeper,
            __tm_gtid_keeper).
          type: string
        user:
          description: |-
            Username

            User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_MysqlSource_password'
        includeTablesRegex:
          type: array
          items:
            type: string
        excludeTablesRegex:
          type: array
          items:
            type: string
        timezone:
          description: |-
            Database timezone

            Is used for parsing timestamps for saving source timezones. Accepts values from
            IANA timezone database. Default: local timezone.
          type: string
        objectTransferSettings:
          $ref: '#/components/schemas/MysqlObjectTransferSettings_in_MysqlSource_objectTransferSettings'
    MysqlTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MysqlConnection_in_MysqlTarget_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: |-
            Database name

            Allowed to leave it empty, then the tables will be created in databases with the
            same names as on the source. If this field is empty, then you must fill below db
            schema for service table.
          type: string
        user:
          description: |-
            Username

            User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_MysqlTarget_password'
        sqlMode:
          description: |-
            sql_mode

            Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
          type: string
        skipConstraintChecks:
          description: |-
            Disable constraints checks

            Recommend to disable for increase replication speed, but if schema contain
            cascading operations we don't recommend to disable. This option set
            FOREIGN_KEY_CHECKS=0 and UNIQUE_CHECKS=0.
          type: boolean
          format: boolean
        timezone:
          description: |-
            Database timezone

            Is used for parsing timestamps for saving source timezones. Accepts values from
            IANA timezone database. Default: local timezone.
          type: string
        cleanupPolicy:
          $ref: '#/components/schemas/CleanupPolicy_in_MysqlTarget_cleanupPolicy'
        serviceDatabase:
          description: |-
            Database schema for service table

            Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
          type: string
    ObjectTransferStage:
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    OnPremiseClickhouse:
      type: object
      properties:
        shards:
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseShard'
        httpPort:
          type: string
          format: int64
        nativePort:
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremiseClickhouse_tlsMode'
    OnPremiseMongo:
      type: object
      properties:
        hosts:
          type: array
          items:
            type: string
        port:
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremiseMongo_tlsMode'
        replicaSet:
          type: string
    OnPremiseMysql:
      type: object
      properties:
        hosts:
          type: array
          items:
            type: string
        port:
          description: |-
            Database port

            Default: 3306.
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremiseMysql_tlsMode'
        subnetId:
          description: |-
            Network interface for endpoint

            Default: public IPv4.
          type: string
    OnPremisePostgres:
      type: object
      properties:
        hosts:
          type: array
          items:
            type: string
        port:
          description: |-
            Database port

            Will be used if the cluster ID is not specified. Default: 6432.
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremisePostgres_tlsMode'
        subnetId:
          description: |-
            Network interface for endpoint

            Default: public IPv4.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/Status'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PostgresConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: |-
              Managed cluster

              Managed Service for PostgreSQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremisePostgres'
            description: |-
              On-premise

              Connection options for on-premise PostgreSQL
    PostgresObjectTransferSettings:
      type: object
      properties:
        sequence:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequence'
        sequenceOwnedBy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceOwnedBy'
        table:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_table'
        primaryKey:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_primaryKey'
        fkConstraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_fkConstraint'
        defaultValues:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_defaultValues'
        constraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_constraint'
        index:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_index'
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_view'
        function:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_function'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_trigger'
        type:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_type'
        rule:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_rule'
        collation:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_collation'
        policy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_policy'
        cast:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_cast'
        materializedView:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_materializedView'
    PostgresSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PostgresConnection_in_PostgresSource_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: Database name
          type: string
        user:
          description: |-
            Username

            User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_PostgresSource_password'
        includeTables:
          description: |-
            Included tables

            If none or empty list is presented, all tables are replicated. Full table name
            with schema. Can contain schema_name.* patterns.
          type: array
          items:
            type: string
        excludeTables:
          description: |-
            Excluded tables

            If none or empty list is presented, all tables are replicated. Full table name
            with schema. Can contain schema_name.* patterns.
          type: array
          items:
            type: string
        slotByteLagLimit:
          description: |-
            Maximum WAL size for the replication slot

            Maximum WAL size held by the replication slot. Exceeding this limit will result
            in a replication failure and deletion of the replication slot. Unlimited by
            default.
          type: string
          format: int64
        serviceSchema:
          description: |-
            Database schema for service tables

            Default: public. Here created technical tables (__consumer_keeper,
            __data_transfer_mole_finder).
          type: string
        objectTransferSettings:
          $ref: '#/components/schemas/PostgresObjectTransferSettings_in_PostgresSource_objectTransferSettings'
    PostgresTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PostgresConnection_in_PostgresTarget_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: Database name
          type: string
        user:
          description: |-
            Username

            User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_PostgresTarget_password'
        cleanupPolicy:
          $ref: '#/components/schemas/CleanupPolicy_in_PostgresTarget_cleanupPolicy'
    Secret:
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Password
            type: string
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    TLSConfig:
      type: object
      properties:
        caCertificate:
          description: |-
            CA certificate

            X.509 certificate of the certificate authority which issued the server's
            certificate, in PEM format. When CA certificate is specified TLS is used to
            connect to the server.
          type: string
    TLSMode:
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    Transfer:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        source:
          $ref: '#/components/schemas/Endpoint_in_Transfer_source'
        target:
          $ref: '#/components/schemas/Endpoint_in_Transfer_target'
        status:
          $ref: '#/components/schemas/TransferStatus_in_Transfer_status'
        type:
          $ref: '#/components/schemas/TransferType_in_Transfer_type'
        warning:
          type: string
    TransferStatus:
      type: string
      enum:
      - CREATING
      - CREATED
      - RUNNING
      - STOPPING
      - STOPPED
      - ERROR
      - SNAPSHOTTING
      - DONE
    TransferType:
      description: |2-
         - SNAPSHOT_AND_INCREMENT: Snapshot and increment
         - SNAPSHOT_ONLY: Snapshot
         - INCREMENT_ONLY: Increment
      type: string
      enum:
      - SNAPSHOT_AND_INCREMENT
      - SNAPSHOT_ONLY
      - INCREMENT_ONLY
    UpdateEndpointMetadata:
      type: object
      properties:
        endpointId:
          type: string
    UpdateEndpointRequest:
      type: object
      properties:
        name:
          description: The new endpoint name. Must be unique within the folder.
          type: string
        description:
          description: The new description for the endpoint.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_UpdateEndpointRequest_settings'
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateEndpointRequest_updateMask'
    UpdateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    UpdateTransferRequest:
      type: object
      properties:
        description:
          description: The new description for the transfer.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        name:
          description: The new transfer name. Must be unique within the folder.
          type: string
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateTransferRequest_updateMask'
    ColumnValue_in_ClickhouseShardingColumnValueMappingValueToShard_columnValue:
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          stringValue:
            type: string
    ClickhouseConnection_in_ClickhouseSource_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/ClickhouseConnectionOptions'
    ClickhouseConnection_in_ClickhouseTarget_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/ClickhouseConnectionOptions'
    ClickhouseSharding_in_ClickhouseTarget_sharding:
      type: object
      allOf:
      - title: sharding
        type: object
        maxProperties: 1
        properties:
          columnValueHash:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueHash'
          customMapping:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueMapping'
          transferId:
            $ref: '#/components/schemas/Empty'
    ClickhouseCleanupPolicy_in_ClickhouseTarget_cleanupPolicy:
      type: string
      enum:
      - CLICKHOUSE_CLEANUP_POLICY_DISABLED
      - CLICKHOUSE_CLEANUP_POLICY_DROP
    EndpointSettings_in_CreateEndpointRequest_settings:
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    TransferType_in_CreateTransferRequest_type:
      description: |2-
         - SNAPSHOT_AND_INCREMENT: Snapshot and increment
         - SNAPSHOT_ONLY: Snapshot
         - INCREMENT_ONLY: Increment
      type: string
      enum:
      - SNAPSHOT_AND_INCREMENT
      - SNAPSHOT_ONLY
      - INCREMENT_ONLY
    EndpointSettings_in_Endpoint_settings:
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    MongoConnection_in_MongoSource_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/MongoConnectionOptions'
    MongoConnection_in_MongoTarget_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/MongoConnectionOptions'
    CleanupPolicy_in_MongoTarget_cleanupPolicy:
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    ObjectTransferStage_in_MysqlObjectTransferSettings_view:
      description: |-
        Views

        CREATE VIEW ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_MysqlObjectTransferSettings_routine:
      description: |-
        Routines

        CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_MysqlObjectTransferSettings_trigger:
      description: |-
        Triggers

        CREATE TRIGGER ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    MysqlConnection_in_MysqlSource_connection:
      description: |-
        Connection settings

        Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: |-
              Managed cluster

              Managed Service for MySQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMysql'
            description: |-
              On-premise

              Connection options for on-premise MySQL
    Secret_in_MysqlSource_password:
      description: |-
        Password

        Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Password
            type: string
    MysqlObjectTransferSettings_in_MysqlSource_objectTransferSettings:
      description: |-
        Schema migration

        Select database objects to be transferred during activation or deactivation.
      type: object
      properties:
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_view'
        routine:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_routine'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_trigger'
    MysqlConnection_in_MysqlTarget_connection:
      description: |-
        Connection settings

        Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: |-
              Managed cluster

              Managed Service for MySQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMysql'
            description: |-
              On-premise

              Connection options for on-premise MySQL
    Secret_in_MysqlTarget_password:
      description: |-
        Password

        Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Password
            type: string
    CleanupPolicy_in_MysqlTarget_cleanupPolicy:
      description: |-
        Cleanup policy

        Cleanup policy for activate, reactivate and reupload processes. Default is
        DISABLED.
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    TLSMode_in_OnPremiseClickhouse_tlsMode:
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    TLSMode_in_OnPremiseMongo_tlsMode:
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    TLSMode_in_OnPremiseMysql_tlsMode:
      description: |-
        TLS mode

        TLS settings for server connection. Disabled by default.
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    TLSMode_in_OnPremisePostgres_tlsMode:
      description: |-
        TLS mode

        TLS settings for server connection. Disabled by default.
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    ObjectTransferStage_in_PostgresObjectTransferSettings_sequence:
      description: |-
        Sequences

        CREATE SEQUENCE ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceOwnedBy:
      description: |-
        Owned sequences

        CREATE SEQUENCE ... OWNED BY ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_table:
      description: |-
        Tables

        CREATE TABLE ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_primaryKey:
      description: |-
        Primary keys

        ALTER TABLE ... ADD PRIMARY KEY ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_fkConstraint:
      description: |-
        Foreign keys

        ALTER TABLE ... ADD FOREIGN KEY ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_defaultValues:
      description: |-
        Default values

        ALTER TABLE ... ALTER COLUMN ... SET DEFAULT ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_constraint:
      description: |-
        Constraints

        ALTER TABLE ... ADD CONSTRAINT ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_index:
      description: |-
        Indexes

        CREATE INDEX ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_view:
      description: |-
        Views

        CREATE VIEW ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_function:
      description: |-
        Functions

        CREATE FUNCTION ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_trigger:
      description: |-
        Triggers

        CREATE TRIGGER ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_type:
      description: |-
        Types

        CREATE TYPE ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_rule:
      description: |-
        Rules

        CREATE RULE ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_collation:
      description: |-
        Collations

        CREATE COLLATION ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_policy:
      description: |-
        Policies

        CREATE POLICY ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_cast:
      description: |-
        Casts

        CREATE CAST ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_materializedView:
      description: |-
        Materialized views

        CREATE MATERIALIZED VIEW ...
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    PostgresConnection_in_PostgresSource_connection:
      description: |-
        Connection settings

        Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: |-
              Managed cluster

              Managed Service for PostgreSQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremisePostgres'
            description: |-
              On-premise

              Connection options for on-premise PostgreSQL
    Secret_in_PostgresSource_password:
      description: |-
        Password

        Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Password
            type: string
    PostgresObjectTransferSettings_in_PostgresSource_objectTransferSettings:
      description: |-
        Schema migration

        Select database objects to be transferred during activation or deactivation.
      type: object
      properties:
        sequence:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequence'
        sequenceOwnedBy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceOwnedBy'
        table:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_table'
        primaryKey:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_primaryKey'
        fkConstraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_fkConstraint'
        defaultValues:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_defaultValues'
        constraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_constraint'
        index:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_index'
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_view'
        function:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_function'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_trigger'
        type:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_type'
        rule:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_rule'
        collation:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_collation'
        policy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_policy'
        cast:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_cast'
        materializedView:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_materializedView'
    PostgresConnection_in_PostgresTarget_connection:
      description: |-
        Connection settings

        Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: |-
              Managed cluster

              Managed Service for PostgreSQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremisePostgres'
            description: |-
              On-premise

              Connection options for on-premise PostgreSQL
    Secret_in_PostgresTarget_password:
      description: |-
        Password

        Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Password
            type: string
    CleanupPolicy_in_PostgresTarget_cleanupPolicy:
      description: |-
        Cleanup policy

        Cleanup policy for activate, reactivate and reupload processes. Default is
        DISABLED.
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    Endpoint_in_Transfer_source:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_Endpoint_settings'
    Endpoint_in_Transfer_target:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_Endpoint_settings'
    TransferStatus_in_Transfer_status:
      type: string
      enum:
      - CREATING
      - CREATED
      - RUNNING
      - STOPPING
      - STOPPED
      - ERROR
      - SNAPSHOTTING
      - DONE
    TransferType_in_Transfer_type:
      description: |2-
         - SNAPSHOT_AND_INCREMENT: Snapshot and increment
         - SNAPSHOT_ONLY: Snapshot
         - INCREMENT_ONLY: Increment
      type: string
      enum:
      - SNAPSHOT_AND_INCREMENT
      - SNAPSHOT_ONLY
      - INCREMENT_ONLY
    EndpointSettings_in_UpdateEndpointRequest_settings:
      description: The new endpoint name. Must be unique within the folder.
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    FieldMask_in_UpdateEndpointRequest_updateMask:
      description: |-
        Field mask specifying endpoint fields to be updated. Semantics for this field is
        described here:
        https://pkg.go.dev/google.golang.org/protobuf/types/known/fieldmaskpb#FieldMask
        The only exception is that if the repeated field is specified in the mask, then
        the new value replaces the old one instead of being appended to the old one.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateTransferRequest_updateMask:
      description: |-
        Field mask specifying transfer fields to be updated. Semantics for this field is
        described here:
        https://pkg.go.dev/google.golang.org/protobuf/types/known/fieldmaskpb#FieldMask
        The only exception is that if the repeated field is specified in the mask, then
        the new value replaces the old one instead of being appended to the old one.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Endpoint
- name: Transfer
