openapi: 3.0.0
info:
  title: Data Transfer API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://datatransfer.api.cloud.yandex.net
paths:
  /v1/endpoint/{endpointId}:
    get:
      tags:
      - Endpoint
      operationId: EndpointGet
      parameters:
      - name: endpointId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      x-y-navtitle: get
    delete:
      tags:
      - Endpoint
      operationId: EndpointDelete
      parameters:
      - name: endpointId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteEndpointMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Endpoint
      operationId: EndpointUpdate
      parameters:
      - name: endpointId
        in: path
        description: Identifier of the endpoint to be updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndpointRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateEndpointMetadata'
      x-y-operation-response: '[Endpoint](/docs/datatransfer/api-ref/Endpoint#representation)'
  /v1/endpoints/list/{folderId}:
    get:
      tags:
      - Endpoint
      operationId: EndpointList
      parameters:
      - name: folderId
        in: path
        description: Identifier of the folder containing the endpoints to be listed.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of endpoints to be sent in the response message. If the
          folder contains more endpoints than `page_size`, `next_page_token` will be
          included
          in the response message. Include it into the subsequent `ListEndpointRequest` to
          fetch the next page. Defaults to `100` if not specified. The maximum allowed
          value
          for this field is `500`.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Opaque value identifying the endpoints page to be fetched. Should be empty in
          the first `ListEndpointsRequest`. Subsequent requests should have this field
          filled
          with the `next_page_token` from the previous `ListEndpointsResponse`.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsResponse'
      x-y-navtitle: list
  /v1/endpoint:
    post:
      tags:
      - Endpoint
      operationId: EndpointCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateEndpointMetadata'
      x-y-operation-response: '[Endpoint](/docs/datatransfer/api-ref/Endpoint#representation)'
  /v1/transfer:
    post:
      tags:
      - Transfer
      operationId: TransferCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateTransferMetadata'
      x-y-operation-response: '[Transfer](/docs/datatransfer/api-ref/Transfer#representation)'
  /v1/transfer/{transferId}:
    get:
      tags:
      - Transfer
      operationId: TransferGet
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
      x-y-navtitle: get
    delete:
      tags:
      - Transfer
      operationId: TransferDelete
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteTransferMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Transfer
      operationId: TransferUpdate
      parameters:
      - name: transferId
        in: path
        description: Identifier of the transfer to be updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateTransferMetadata'
      x-y-operation-response: '[Transfer](/docs/datatransfer/api-ref/Transfer#representation)'
  /v1/transfers/list/{folderId}:
    get:
      tags:
      - Transfer
      operationId: TransferList
      parameters:
      - name: folderId
        in: path
        description: Identifier of the folder containing the transfers to be listed.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of transfers to be sent in the response message. If the
          folder contains more transfers than `page_size`, `next_page_token` will be
          included
          in the response message. Include it into the subsequent `ListTransfersRequest`
          to
          fetch the next page. Defaults to `100` if not specified. The maximum allowed
          value
          for this field is `500`.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Opaque value identifying the transfers page to be fetched. Should be empty in
          the first `ListTransfersRequest`. Subsequent requests should have this field
          filled
          with the `next_page_token` from the previous `ListTransfersResponse`.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTransfersResponse'
      x-y-navtitle: list
  /v1/transfer/{transferId}:deactivate:
    post:
      tags:
      - Transfer
      operationId: TransferDeactivate
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deactivate
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeactivateTransferMetadata'
      x-y-operation-response: Empty
  /v1/transfer/{transferId}:activate:
    post:
      tags:
      - Transfer
      operationId: TransferActivate
      parameters:
      - name: transferId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateTransferRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: activate
      x-y-operation-metadata:
        $ref: '#/components/schemas/ActivateTransferMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    ActivateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    ActivateTransferRequest:
      type: object
      properties: {}
    AltName:
      type: object
      properties:
        fromName:
          description: Source table name
          type: string
        toName:
          description: Target table name
          type: string
    AuditTrailsV1Parser:
      type: object
      properties: {}
    CleanupPolicy:
      description: |2-
         - DISABLED: Don't cleanup
         - DROP: Drop
         - TRUNCATE: Truncate
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    ClickhouseCleanupPolicy:
      type: string
      enum:
      - CLICKHOUSE_CLEANUP_POLICY_DISABLED
      - CLICKHOUSE_CLEANUP_POLICY_DROP
      - CLICKHOUSE_CLEANUP_POLICY_TRUNCATE
    ClickhouseConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/ClickhouseConnectionOptions'
    ClickhouseConnectionOptions:
      type: object
      allOf:
      - type: object
        properties:
          database:
            description: Database
            type: string
          user:
            type: string
          password:
            $ref: '#/components/schemas/Secret'
      - title: address
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseClickhouse'
    ClickhouseShard:
      type: object
      properties:
        name:
          type: string
        hosts:
          type: array
          items:
            type: string
    ClickhouseSharding:
      type: object
      allOf:
      - title: sharding
        type: object
        maxProperties: 1
        properties:
          columnValueHash:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueHash'
          customMapping:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueMapping'
          transferId:
            $ref: '#/components/schemas/Empty'
    ClickhouseShardingColumnValueHash:
      type: object
      properties:
        columnName:
          type: string
    ClickhouseShardingColumnValueMapping:
      type: object
      properties:
        columnName:
          type: string
        mapping:
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueMappingValueToShard'
    ClickhouseShardingColumnValueMappingValueToShard:
      type: object
      properties:
        columnValue:
          $ref: '#/components/schemas/ColumnValue_in_ClickhouseShardingColumnValueMappingValueToShard_columnValue'
        shardName:
          type: string
    ClickhouseSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/ClickhouseConnection_in_ClickhouseSource_connection'
        subnetId:
          type: string
        securityGroups:
          type: array
          items:
            type: string
        includeTables:
          description: |-
            While list of tables for replication. If none or empty list is presented - will
            replicate all tables. Can contain * patterns.
          type: array
          items:
            type: string
        excludeTables:
          description: |-
            Exclude list of tables for replication. If none or empty list is presented -
            will replicate all tables. Can contain * patterns.
          type: array
          items:
            type: string
    ClickhouseTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/ClickhouseConnection_in_ClickhouseTarget_connection'
        subnetId:
          type: string
        securityGroups:
          type: array
          items:
            type: string
        clickhouseClusterName:
          type: string
        altNames:
          description: Alternative table names in target
          type: array
          items:
            $ref: '#/components/schemas/AltName'
        sharding:
          $ref: '#/components/schemas/ClickhouseSharding_in_ClickhouseTarget_sharding'
        cleanupPolicy:
          $ref: '#/components/schemas/ClickhouseCleanupPolicy_in_ClickhouseTarget_cleanupPolicy'
    CloudLoggingParser:
      type: object
      properties: {}
    ColSchema:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/ColumnType_in_ColSchema_type'
        key:
          type: boolean
          format: boolean
        required:
          type: boolean
          format: boolean
        path:
          type: string
    ColumnType:
      type: string
      enum:
      - INT64
      - INT32
      - INT16
      - INT8
      - UINT64
      - UINT32
      - UINT16
      - UINT8
      - DOUBLE
      - BOOLEAN
      - STRING
      - UTF8
      - ANY
      - DATETIME
    ColumnValue:
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          stringValue:
            type: string
    CreateEndpointMetadata:
      type: object
      properties:
        endpointId:
          type: string
    CreateEndpointRequest:
      type: object
      properties:
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_CreateEndpointRequest_settings'
    CreateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    CreateTransferRequest:
      type: object
      properties:
        sourceId:
          type: string
        targetId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        folderId:
          type: string
        type:
          $ref: '#/components/schemas/TransferType_in_CreateTransferRequest_type'
    DataSchema:
      type: object
      allOf:
      - title: schema
        type: object
        maxProperties: 1
        properties:
          fields:
            $ref: '#/components/schemas/FieldList'
          jsonFields:
            type: string
    DataTransformationOptions:
      type: object
      properties:
        cloudFunction:
          description: Cloud function
          type: string
        serviceAccountId:
          description: Service account
          type: string
        numberOfRetries:
          description: Number of retries
          type: string
          format: int64
        bufferSize:
          description: Buffer size for function
          type: string
        bufferFlushInterval:
          description: Flush interval
          type: string
        invocationTimeout:
          description: Invocation timeout
          type: string
    DeactivateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    DeactivateTransferRequest:
      type: object
      properties: {}
    DeleteEndpointMetadata:
      type: object
      properties:
        endpointId:
          type: string
    DeleteTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    Endpoint:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_Endpoint_settings'
    EndpointSettings:
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          kafkaSource:
            $ref: '#/components/schemas/KafkaSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          kafkaTarget:
            $ref: '#/components/schemas/KafkaTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    FieldList:
      type: object
      properties:
        fields:
          description: Column schema
          type: array
          items:
            $ref: '#/components/schemas/ColSchema'
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GenericParserCommon:
      type: object
      properties:
        dataSchema:
          $ref: '#/components/schemas/DataSchema_in_GenericParserCommon_dataSchema'
        nullKeysAllowed:
          description: Allow null keys, if no - null keys will be putted to unparsed
            data
          type: boolean
          format: boolean
        addRestColumn:
          description: Will add _rest column for all unknown fields
          type: boolean
          format: boolean
    KafkaAuth:
      type: object
      allOf:
      - title: security
        type: object
        maxProperties: 1
        properties:
          sasl:
            $ref: '#/components/schemas/KafkaSaslSecurity'
            description: Authentication with SASL
          noAuth:
            $ref: '#/components/schemas/NoAuth'
            description: No authentication
    KafkaConnectionOptions:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          clusterId:
            description: Managed Service for Kafka cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseKafka'
            description: Connection options for on-premise Kafka
    KafkaMechanism:
      type: string
      enum:
      - KAFKA_MECHANISM_SHA256
      - KAFKA_MECHANISM_SHA512
    KafkaSaslSecurity:
      type: object
      properties:
        user:
          description: User name
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_KafkaSaslSecurity_password'
        mechanism:
          $ref: '#/components/schemas/KafkaMechanism_in_KafkaSaslSecurity_mechanism'
    KafkaSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/KafkaConnectionOptions_in_KafkaSource_connection'
        auth:
          $ref: '#/components/schemas/KafkaAuth_in_KafkaSource_auth'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        topicName:
          description: Full source topic name
          type: string
        transformer:
          $ref: '#/components/schemas/DataTransformationOptions_in_KafkaSource_transformer'
        parser:
          $ref: '#/components/schemas/Parser_in_KafkaSource_parser'
    KafkaTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/KafkaConnectionOptions_in_KafkaTarget_connection'
        auth:
          $ref: '#/components/schemas/KafkaAuth_in_KafkaTarget_auth'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        topicSettings:
          $ref: '#/components/schemas/KafkaTargetTopicSettings_in_KafkaTarget_topicSettings'
    KafkaTargetTopic:
      type: object
      properties:
        topicName:
          description: Topic name
          type: string
        saveTxOrder:
          description: |-
            Save transactions order
            Not to split events queue into separate per-table queues.
          type: boolean
          format: boolean
    KafkaTargetTopicSettings:
      type: object
      allOf:
      - title: topic_settings
        type: object
        maxProperties: 1
        properties:
          topic:
            $ref: '#/components/schemas/KafkaTargetTopic'
            description: Full topic name
          topicPrefix:
            description: |-
              Topic prefix

              Analogue of the Debezium setting database.server.name.
              Messages will be sent to topic with name <topic_prefix>.<schema>.<table_name>.
            type: string
    ListEndpointsResponse:
      type: object
      properties:
        endpoints:
          description: |-
            The list of endpoints. If there are more endpoints in the folder, then
            `next_page_token` is a non-empty string to be included into the subsequent
            `ListEndpointsRequest` to fetch the next endpoints page.
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
        nextPageToken:
          description: |-
            Opaque value identifying the next endpoints page. This field is empty if there
            are no more endpoints in the folder. Otherwise, it is non-empty and should be
            included in the subsequent `ListEndpointsRequest` to fetch the next endpoints
            page.
          type: string
    ListTransfersResponse:
      type: object
      properties:
        transfers:
          description: |-
            The list of transfers. If there are more transfers in the folder, then
            `next_page_token` is a non-empty string to be included into the subsequent
            `ListTransfersRequest` to fetch the next transfers page.
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        nextPageToken:
          description: |-
            Opaque value identifying the next transfers page. This field is empty if there
            are no more transfers in the folder. Otherwise it is non-empty and should be
            included in the subsequent `ListTransfersRequest` to fetch the next transfers
            page.
          type: string
    MongoCollection:
      type: object
      properties:
        databaseName:
          type: string
        collectionName:
          type: string
    MongoConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/MongoConnectionOptions'
    MongoConnectionOptions:
      type: object
      allOf:
      - type: object
        properties:
          user:
            description: User name
            type: string
          password:
            $ref: '#/components/schemas/Secret'
            description: Password for user
          authSource:
            description: Database name associated with the credentials
            type: string
      - title: address
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMongo'
    MongoSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MongoConnection_in_MongoSource_connection'
        subnetId:
          type: string
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        collections:
          description: |-
            List of collections for replication. Empty list implies replication of all
            tables on the deployment. Allowed to use * as collection name.
          type: array
          items:
            $ref: '#/components/schemas/MongoCollection'
        excludedCollections:
          description: |-
            List of forbidden collections for replication. Allowed to use * as collection
            name for forbid all collections of concrete schema.
          type: array
          items:
            $ref: '#/components/schemas/MongoCollection'
        secondaryPreferredMode:
          description: Read mode for mongo client
          type: boolean
          format: boolean
    MongoTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MongoConnection_in_MongoTarget_connection'
        subnetId:
          type: string
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: Database name
          type: string
        cleanupPolicy:
          $ref: '#/components/schemas/CleanupPolicy_in_MongoTarget_cleanupPolicy'
    MysqlConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: Managed Service for MySQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMysql'
            description: Connection options for on-premise MySQL
    MysqlObjectTransferSettings:
      type: object
      properties:
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_view'
        routine:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_routine'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_trigger'
        tables:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_tables'
    MysqlSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MysqlConnection_in_MysqlSource_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: |-
            Database name

            You can leave it empty, then it will be possible to transfer tables from several
            databases at the same time from this source.
          type: string
        serviceDatabase:
          description: |-
            Database for service tables

            Default: data source database. Here created technical tables (__tm_keeper,
            __tm_gtid_keeper).
          type: string
        user:
          description: User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_MysqlSource_password'
        includeTablesRegex:
          type: array
          items:
            type: string
        excludeTablesRegex:
          type: array
          items:
            type: string
        timezone:
          description: |-
            Database timezone

            Is used for parsing timestamps for saving source timezones. Accepts values from
            IANA timezone database. Default: local timezone.
          type: string
        objectTransferSettings:
          $ref: '#/components/schemas/MysqlObjectTransferSettings_in_MysqlSource_objectTransferSettings'
    MysqlTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/MysqlConnection_in_MysqlTarget_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: |-
            Database name

            Allowed to leave it empty, then the tables will be created in databases with the
            same names as on the source. If this field is empty, then you must fill below db
            schema for service table.
          type: string
        user:
          description: User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_MysqlTarget_password'
        sqlMode:
          description: 'Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.'
          type: string
        skipConstraintChecks:
          description: |-
            Disable constraints checks

            Recommend to disable for increase replication speed, but if schema contain
            cascading operations we don't recommend to disable. This option set
            FOREIGN_KEY_CHECKS=0 and UNIQUE_CHECKS=0.
          type: boolean
          format: boolean
        timezone:
          description: |-
            Database timezone

            Is used for parsing timestamps for saving source timezones. Accepts values from
            IANA timezone database. Default: local timezone.
          type: string
        cleanupPolicy:
          $ref: '#/components/schemas/CleanupPolicy_in_MysqlTarget_cleanupPolicy'
        serviceDatabase:
          description: |-
            Database schema for service table

            Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
          type: string
    NoAuth:
      description: No authentication
      type: object
      properties: {}
    ObjectTransferStage:
      description: |2-
         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    OnPremiseClickhouse:
      type: object
      properties:
        shards:
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseShard'
        httpPort:
          type: string
          format: int64
        nativePort:
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremiseClickhouse_tlsMode'
    OnPremiseKafka:
      type: object
      properties:
        brokerUrls:
          description: Kafka broker URLs
          type: array
          items:
            type: string
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremiseKafka_tlsMode'
        subnetId:
          description: Network interface for endpoint. If none will assume public
            ipv4
          type: string
    OnPremiseMongo:
      type: object
      properties:
        hosts:
          type: array
          items:
            type: string
        port:
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremiseMongo_tlsMode'
        replicaSet:
          type: string
    OnPremiseMysql:
      type: object
      properties:
        hosts:
          type: array
          items:
            type: string
        port:
          description: Database port
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremiseMysql_tlsMode'
        subnetId:
          description: Network interface for endpoint. If none will assume public
            ipv4
          type: string
    OnPremisePostgres:
      type: object
      properties:
        hosts:
          type: array
          items:
            type: string
        port:
          description: Will be used if the cluster ID is not specified.
          type: string
          format: int64
        tlsMode:
          $ref: '#/components/schemas/TLSMode_in_OnPremisePostgres_tlsMode'
        subnetId:
          description: Network interface for endpoint. If none will assume public
            ipv4
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: "Creation timestamp.\n\nString in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format. The range of possible values is from \n`0001-01-01T00:00:00Z`
              to `9999-12-31T23:59:59.999999999Z`, i.e. from 0 to 9 digits for fractions
              of a second.\n\nTo work with values in this field, use the APIs described
              in the \n[Protocol Buffers reference](https://developers.google.com/protocol-buffers/docs/reference/overview).
              \nIn some languages, built-in datetime utilities do not support nanosecond
              precision (9 digits)."
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: "The time when the Operation resource was last modified.\n\nString
              in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format. The
              range of possible values is from \n`0001-01-01T00:00:00Z` to `9999-12-31T23:59:59.999999999Z`,
              i.e. from 0 to 9 digits for fractions of a second.\n\nTo work with values
              in this field, use the APIs described in the \n[Protocol Buffers reference](https://developers.google.com/protocol-buffers/docs/reference/overview).
              \nIn some languages, built-in datetime utilities do not support nanosecond
              precision (9 digits)."
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/Status'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Parser:
      type: object
      allOf:
      - title: parser
        type: object
        maxProperties: 1
        properties:
          jsonParser:
            $ref: '#/components/schemas/GenericParserCommon'
          auditTrailsV1Parser:
            $ref: '#/components/schemas/AuditTrailsV1Parser'
          cloudLoggingParser:
            $ref: '#/components/schemas/CloudLoggingParser'
          tskvParser:
            $ref: '#/components/schemas/GenericParserCommon'
    PostgresConnection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: Managed Service for PostgreSQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremisePostgres'
            description: Connection options for on-premise PostgreSQL
    PostgresObjectTransferSettings:
      type: object
      properties:
        sequence:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequence'
        sequenceOwnedBy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceOwnedBy'
        sequenceSet:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceSet'
        table:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_table'
        primaryKey:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_primaryKey'
        fkConstraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_fkConstraint'
        defaultValues:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_defaultValues'
        constraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_constraint'
        index:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_index'
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_view'
        materializedView:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_materializedView'
        function:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_function'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_trigger'
        type:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_type'
        rule:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_rule'
        collation:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_collation'
        policy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_policy'
        cast:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_cast'
    PostgresSource:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PostgresConnection_in_PostgresSource_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: Database name
          type: string
        user:
          description: User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_PostgresSource_password'
        includeTables:
          description: |-
            Included tables

            If none or empty list is presented, all tables are replicated. Full table name
            with schema. Can contain schema_name.* patterns.
          type: array
          items:
            type: string
        excludeTables:
          description: |-
            Excluded tables

            If none or empty list is presented, all tables are replicated. Full table name
            with schema. Can contain schema_name.* patterns.
          type: array
          items:
            type: string
        slotByteLagLimit:
          description: |-
            Maximum lag of replication slot (in bytes); after exceeding this limit
            replication will be aborted.
          type: string
          format: int64
        serviceSchema:
          description: |-
            Database schema for service tables (__consumer_keeper,
            __data_transfer_mole_finder). Default is public
          type: string
        objectTransferSettings:
          $ref: '#/components/schemas/PostgresObjectTransferSettings_in_PostgresSource_objectTransferSettings'
    PostgresTarget:
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/PostgresConnection_in_PostgresTarget_connection'
        securityGroups:
          description: Security groups
          type: array
          items:
            type: string
        database:
          description: Database name
          type: string
        user:
          description: User for database access.
          type: string
        password:
          $ref: '#/components/schemas/Secret_in_PostgresTarget_password'
        cleanupPolicy:
          $ref: '#/components/schemas/CleanupPolicy_in_PostgresTarget_cleanupPolicy'
    Secret:
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Raw secret value
            type: string
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    TLSConfig:
      type: object
      properties:
        caCertificate:
          description: |-
            CA certificate

            X.509 certificate of the certificate authority which issued the server's
            certificate, in PEM format. When CA certificate is specified TLS is used to
            connect to the server.
          type: string
    TLSMode:
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    Transfer:
      description: Transfer core entity
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        source:
          $ref: '#/components/schemas/Endpoint_in_Transfer_source'
        target:
          $ref: '#/components/schemas/Endpoint_in_Transfer_target'
        status:
          $ref: '#/components/schemas/TransferStatus_in_Transfer_status'
        type:
          $ref: '#/components/schemas/TransferType_in_Transfer_type'
        warning:
          type: string
    TransferStatus:
      description: |2-
         - CREATING: Transfer does some work before running
         - CREATED: Transfer created but not started by user
         - RUNNING: Transfer currently doing replication work
         - STOPPING: Transfer shutdown
         - STOPPED: Transfer stopped by user
         - ERROR: Transfer stopped by system
         - SNAPSHOTTING: Transfer copy snapshot
         - DONE: Transfer reach terminal phase
      type: string
      enum:
      - CREATING
      - CREATED
      - RUNNING
      - STOPPING
      - STOPPED
      - ERROR
      - SNAPSHOTTING
      - DONE
    TransferType:
      description: |2-
         - SNAPSHOT_AND_INCREMENT: Snapshot and increment
         - SNAPSHOT_ONLY: Snapshot
         - INCREMENT_ONLY: Increment
      type: string
      enum:
      - SNAPSHOT_AND_INCREMENT
      - SNAPSHOT_ONLY
      - INCREMENT_ONLY
    UpdateEndpointMetadata:
      type: object
      properties:
        endpointId:
          type: string
    UpdateEndpointRequest:
      type: object
      properties:
        name:
          description: The new endpoint name. Must be unique within the folder.
          type: string
        description:
          description: The new description for the endpoint.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_UpdateEndpointRequest_settings'
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateEndpointRequest_updateMask'
    UpdateTransferMetadata:
      type: object
      properties:
        transferId:
          type: string
    UpdateTransferRequest:
      type: object
      properties:
        description:
          description: The new description for the transfer.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        name:
          description: The new transfer name. Must be unique within the folder.
          type: string
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateTransferRequest_updateMask'
    ColumnValue_in_ClickhouseShardingColumnValueMappingValueToShard_columnValue:
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          stringValue:
            type: string
    ClickhouseConnection_in_ClickhouseSource_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/ClickhouseConnectionOptions'
    ClickhouseConnection_in_ClickhouseTarget_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/ClickhouseConnectionOptions'
    ClickhouseSharding_in_ClickhouseTarget_sharding:
      type: object
      allOf:
      - title: sharding
        type: object
        maxProperties: 1
        properties:
          columnValueHash:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueHash'
          customMapping:
            $ref: '#/components/schemas/ClickhouseShardingColumnValueMapping'
          transferId:
            $ref: '#/components/schemas/Empty'
    ClickhouseCleanupPolicy_in_ClickhouseTarget_cleanupPolicy:
      type: string
      enum:
      - CLICKHOUSE_CLEANUP_POLICY_DISABLED
      - CLICKHOUSE_CLEANUP_POLICY_DROP
      - CLICKHOUSE_CLEANUP_POLICY_TRUNCATE
    ColumnType_in_ColSchema_type:
      type: string
      enum:
      - INT64
      - INT32
      - INT16
      - INT8
      - UINT64
      - UINT32
      - UINT16
      - UINT8
      - DOUBLE
      - BOOLEAN
      - STRING
      - UTF8
      - ANY
      - DATETIME
    EndpointSettings_in_CreateEndpointRequest_settings:
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          kafkaSource:
            $ref: '#/components/schemas/KafkaSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          kafkaTarget:
            $ref: '#/components/schemas/KafkaTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    TransferType_in_CreateTransferRequest_type:
      description: |2-
         - SNAPSHOT_AND_INCREMENT: Snapshot and increment
         - SNAPSHOT_ONLY: Snapshot
         - INCREMENT_ONLY: Increment
      type: string
      enum:
      - SNAPSHOT_AND_INCREMENT
      - SNAPSHOT_ONLY
      - INCREMENT_ONLY
    EndpointSettings_in_Endpoint_settings:
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          kafkaSource:
            $ref: '#/components/schemas/KafkaSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          kafkaTarget:
            $ref: '#/components/schemas/KafkaTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    DataSchema_in_GenericParserCommon_dataSchema:
      type: object
      allOf:
      - title: schema
        type: object
        maxProperties: 1
        properties:
          fields:
            $ref: '#/components/schemas/FieldList'
          jsonFields:
            type: string
    Secret_in_KafkaSaslSecurity_password:
      description: Password for user
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Raw secret value
            type: string
    KafkaMechanism_in_KafkaSaslSecurity_mechanism:
      description: SASL mechanism for authentication
      type: string
      enum:
      - KAFKA_MECHANISM_SHA256
      - KAFKA_MECHANISM_SHA512
    KafkaConnectionOptions_in_KafkaSource_connection:
      description: Connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          clusterId:
            description: Managed Service for Kafka cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseKafka'
            description: Connection options for on-premise Kafka
    KafkaAuth_in_KafkaSource_auth:
      description: Authentication settings
      type: object
      allOf:
      - title: security
        type: object
        maxProperties: 1
        properties:
          sasl:
            $ref: '#/components/schemas/KafkaSaslSecurity'
            description: Authentication with SASL
          noAuth:
            $ref: '#/components/schemas/NoAuth'
            description: No authentication
    DataTransformationOptions_in_KafkaSource_transformer:
      description: Data transformation rules
      type: object
      properties:
        cloudFunction:
          description: Cloud function
          type: string
        serviceAccountId:
          description: Service account
          type: string
        numberOfRetries:
          description: Number of retries
          type: string
          format: int64
        bufferSize:
          description: Buffer size for function
          type: string
        bufferFlushInterval:
          description: Flush interval
          type: string
        invocationTimeout:
          description: Invocation timeout
          type: string
    Parser_in_KafkaSource_parser:
      description: Data parsing rules
      type: object
      allOf:
      - title: parser
        type: object
        maxProperties: 1
        properties:
          jsonParser:
            $ref: '#/components/schemas/GenericParserCommon'
          auditTrailsV1Parser:
            $ref: '#/components/schemas/AuditTrailsV1Parser'
          cloudLoggingParser:
            $ref: '#/components/schemas/CloudLoggingParser'
          tskvParser:
            $ref: '#/components/schemas/GenericParserCommon'
    KafkaConnectionOptions_in_KafkaTarget_connection:
      description: Connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          clusterId:
            description: Managed Service for Kafka cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseKafka'
            description: Connection options for on-premise Kafka
    KafkaAuth_in_KafkaTarget_auth:
      description: Authentication settings
      type: object
      allOf:
      - title: security
        type: object
        maxProperties: 1
        properties:
          sasl:
            $ref: '#/components/schemas/KafkaSaslSecurity'
            description: Authentication with SASL
          noAuth:
            $ref: '#/components/schemas/NoAuth'
            description: No authentication
    KafkaTargetTopicSettings_in_KafkaTarget_topicSettings:
      description: Target topic settings
      type: object
      allOf:
      - title: topic_settings
        type: object
        maxProperties: 1
        properties:
          topic:
            $ref: '#/components/schemas/KafkaTargetTopic'
            description: Full topic name
          topicPrefix:
            description: |-
              Topic prefix

              Analogue of the Debezium setting database.server.name.
              Messages will be sent to topic with name <topic_prefix>.<schema>.<table_name>.
            type: string
    MongoConnection_in_MongoSource_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/MongoConnectionOptions'
    MongoConnection_in_MongoTarget_connection:
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          connectionOptions:
            $ref: '#/components/schemas/MongoConnectionOptions'
    CleanupPolicy_in_MongoTarget_cleanupPolicy:
      description: |2-
         - DISABLED: Don't cleanup
         - DROP: Drop
         - TRUNCATE: Truncate
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    ObjectTransferStage_in_MysqlObjectTransferSettings_view:
      description: |-
        Views

        CREATE VIEW ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_MysqlObjectTransferSettings_routine:
      description: |-
        Routines

        CREATE PROCEDURE ... ; CREATE FUNCTION ... ;

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_MysqlObjectTransferSettings_trigger:
      description: |-
        Triggers

        CREATE TRIGGER ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_MysqlObjectTransferSettings_tables:
      description: |2-
         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    MysqlConnection_in_MysqlSource_connection:
      description: Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: Managed Service for MySQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMysql'
            description: Connection options for on-premise MySQL
    Secret_in_MysqlSource_password:
      description: Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Raw secret value
            type: string
    MysqlObjectTransferSettings_in_MysqlSource_objectTransferSettings:
      description: |-
        Schema migration

        Select database objects to be transferred during activation or deactivation.
      type: object
      properties:
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_view'
        routine:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_routine'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_trigger'
        tables:
          $ref: '#/components/schemas/ObjectTransferStage_in_MysqlObjectTransferSettings_tables'
    MysqlConnection_in_MysqlTarget_connection:
      description: Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: Managed Service for MySQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremiseMysql'
            description: Connection options for on-premise MySQL
    Secret_in_MysqlTarget_password:
      description: Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Raw secret value
            type: string
    CleanupPolicy_in_MysqlTarget_cleanupPolicy:
      description: |-
        Cleanup policy

        Cleanup policy for activate, reactivate and reupload processes. Default is
        DISABLED.

         - DISABLED: Don't cleanup
         - DROP: Drop
         - TRUNCATE: Truncate
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    TLSMode_in_OnPremiseClickhouse_tlsMode:
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    TLSMode_in_OnPremiseKafka_tlsMode:
      description: TLS settings for broker connection. Disabled by default.
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    TLSMode_in_OnPremiseMongo_tlsMode:
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    TLSMode_in_OnPremiseMysql_tlsMode:
      description: TLS settings for server connection. Disabled by default.
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    TLSMode_in_OnPremisePostgres_tlsMode:
      description: TLS settings for server connection. Disabled by default.
      type: object
      allOf:
      - title: tls_mode
        type: object
        maxProperties: 1
        properties:
          disabled:
            $ref: '#/components/schemas/Empty'
          enabled:
            $ref: '#/components/schemas/TLSConfig'
    ObjectTransferStage_in_PostgresObjectTransferSettings_sequence:
      description: |-
        Sequences

        CREATE SEQUENCE ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceOwnedBy:
      description: |-
        Owned sequences

        CREATE SEQUENCE ... OWNED BY ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceSet:
      description: |2-
         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_table:
      description: |-
        Tables

        CREATE TABLE ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_primaryKey:
      description: |-
        Primary keys

        ALTER TABLE ... ADD PRIMARY KEY ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_fkConstraint:
      description: |-
        Foreign keys

        ALTER TABLE ... ADD FOREIGN KEY ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_defaultValues:
      description: |-
        Default values

        ALTER TABLE ... ALTER COLUMN ... SET DEFAULT ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_constraint:
      description: |-
        Constraints

        ALTER TABLE ... ADD CONSTRAINT ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_index:
      description: |-
        Indexes

        CREATE INDEX ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_view:
      description: |-
        Views

        CREATE VIEW ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_materializedView:
      description: |-
        Materialized views

        CREATE MATERIALIZED VIEW ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_function:
      description: |-
        Functions

        CREATE FUNCTION ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_trigger:
      description: |-
        Triggers

        CREATE TRIGGER ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_type:
      description: |-
        Types

        CREATE TYPE ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_rule:
      description: |-
        Rules

        CREATE RULE ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_collation:
      description: |-
        Collations

        CREATE COLLATION ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_policy:
      description: |-
        Policies

        CREATE POLICY ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    ObjectTransferStage_in_PostgresObjectTransferSettings_cast:
      description: |-
        Casts

        CREATE CAST ...

         - BEFORE_DATA: Before data transfer
         - AFTER_DATA: After data transfer
         - NEVER: Don't copy
      type: string
      enum:
      - BEFORE_DATA
      - AFTER_DATA
      - NEVER
    PostgresConnection_in_PostgresSource_connection:
      description: Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: Managed Service for PostgreSQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremisePostgres'
            description: Connection options for on-premise PostgreSQL
    Secret_in_PostgresSource_password:
      description: Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Raw secret value
            type: string
    PostgresObjectTransferSettings_in_PostgresSource_objectTransferSettings:
      description: Select database objects to be transferred during activation or
        deactivation.
      type: object
      properties:
        sequence:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequence'
        sequenceOwnedBy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceOwnedBy'
        sequenceSet:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_sequenceSet'
        table:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_table'
        primaryKey:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_primaryKey'
        fkConstraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_fkConstraint'
        defaultValues:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_defaultValues'
        constraint:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_constraint'
        index:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_index'
        view:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_view'
        materializedView:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_materializedView'
        function:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_function'
        trigger:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_trigger'
        type:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_type'
        rule:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_rule'
        collation:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_collation'
        policy:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_policy'
        cast:
          $ref: '#/components/schemas/ObjectTransferStage_in_PostgresObjectTransferSettings_cast'
    PostgresConnection_in_PostgresTarget_connection:
      description: Database connection settings
      type: object
      allOf:
      - title: connection
        type: object
        maxProperties: 1
        properties:
          mdbClusterId:
            description: Managed Service for PostgreSQL cluster ID
            type: string
          onPremise:
            $ref: '#/components/schemas/OnPremisePostgres'
            description: Connection options for on-premise PostgreSQL
    Secret_in_PostgresTarget_password:
      description: Password for database access.
      type: object
      allOf:
      - title: value
        type: object
        maxProperties: 1
        properties:
          raw:
            description: Raw secret value
            type: string
    CleanupPolicy_in_PostgresTarget_cleanupPolicy:
      description: |-
        Cleanup policy for activate, reactivate and reupload processes. Default is
        truncate.

         - DISABLED: Don't cleanup
         - DROP: Drop
         - TRUNCATE: Truncate
      type: string
      enum:
      - DISABLED
      - DROP
      - TRUNCATE
    Endpoint_in_Transfer_source:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_Endpoint_settings'
    Endpoint_in_Transfer_target:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/EndpointSettings_in_Endpoint_settings'
    TransferStatus_in_Transfer_status:
      description: |2-
         - CREATING: Transfer does some work before running
         - CREATED: Transfer created but not started by user
         - RUNNING: Transfer currently doing replication work
         - STOPPING: Transfer shutdown
         - STOPPED: Transfer stopped by user
         - ERROR: Transfer stopped by system
         - SNAPSHOTTING: Transfer copy snapshot
         - DONE: Transfer reach terminal phase
      type: string
      enum:
      - CREATING
      - CREATED
      - RUNNING
      - STOPPING
      - STOPPED
      - ERROR
      - SNAPSHOTTING
      - DONE
    TransferType_in_Transfer_type:
      description: |2-
         - SNAPSHOT_AND_INCREMENT: Snapshot and increment
         - SNAPSHOT_ONLY: Snapshot
         - INCREMENT_ONLY: Increment
      type: string
      enum:
      - SNAPSHOT_AND_INCREMENT
      - SNAPSHOT_ONLY
      - INCREMENT_ONLY
    EndpointSettings_in_UpdateEndpointRequest_settings:
      description: The new endpoint name. Must be unique within the folder.
      type: object
      allOf:
      - title: settings
        type: object
        maxProperties: 1
        properties:
          mysqlSource:
            $ref: '#/components/schemas/MysqlSource'
          postgresSource:
            $ref: '#/components/schemas/PostgresSource'
          kafkaSource:
            $ref: '#/components/schemas/KafkaSource'
          mongoSource:
            $ref: '#/components/schemas/MongoSource'
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseSource'
          mysqlTarget:
            $ref: '#/components/schemas/MysqlTarget'
          postgresTarget:
            $ref: '#/components/schemas/PostgresTarget'
          clickhouseTarget:
            $ref: '#/components/schemas/ClickhouseTarget'
          kafkaTarget:
            $ref: '#/components/schemas/KafkaTarget'
          mongoTarget:
            $ref: '#/components/schemas/MongoTarget'
    FieldMask_in_UpdateEndpointRequest_updateMask:
      description: |-
        Field mask specifying endpoint fields to be updated. Semantics for this field is
        described here:
        <https://pkg.go.dev/google.golang.org/protobuf/types/known/fieldmaskpb#FieldMask>
        The only exception: if the repeated field is specified in the mask, then
        the new value replaces the old one instead of being appended to the old one.

        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateTransferRequest_updateMask:
      description: |-
        Field mask specifying transfer fields to be updated. Semantics for this field is
        described here:
        <https://pkg.go.dev/google.golang.org/protobuf/types/known/fieldmaskpb#FieldMask>
        The only exception: if the repeated field is specified in the mask, then
        the new value replaces the old one instead of being appended to the old one.

        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Endpoint
- name: Transfer
