openapi: 3.0.0
info:
  title: Managed Service for MongoDB API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /managed-mongodb/v1/backups/{backupId}:
    get:
      tags:
      - Backup
      summary: Returns the specified MongoDB backup.
      description: To get the list of available MongoDB backups, make a [list](/docs/managed-mongodb/api-ref/Backup/list)
        request.
      operationId: BackupGet
      parameters:
      - name: backupId
        in: path
        description: |-
          Required.
          ID of the backup to return information about.
          To get the backup ID, use a [listBackups](/docs/managed-mongodb/api-ref/Cluster/listBackups) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      x-y-navtitle: get
    delete:
      tags:
      - Backup
      summary: Returns the list of available backups for the specified MongoDB cluster.
      operationId: BackupDelete
      parameters:
      - name: backupId
        in: path
        description: |-
          Required.
          Required. ID of the backup to delete.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteBackupMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/backups:
    get:
      tags:
      - Backup
      summary: Retrieves the list of backups available for the specified folder.
      operationId: BackupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list backups in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Backup/list#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Backup/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: "Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Backup/list#query_params)
          to the \n[nextPageToken](/docs/managed-mongodb/api-ref/Backup/list#responses)
          returned by the previous list request.\n\nThe maximum string length in characters
          is 100."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      x-y-navtitle: list
  /managed-mongodb/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified MongoDB Cluster resource.
      description: To get the list of available MongoDB Cluster resources, make a
        [list](/docs/managed-mongodb/api-ref/Cluster/list) request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB Cluster resource to return.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified MongoDB cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to delete.
          To get the MongoDB cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified MongoDB cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB Cluster resource to update.
          To get the MongoDB cluster ID use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters:
    get:
      tags:
      - Cluster
      summary: |-
        Retrieves the list of MongoDB Cluster resources that belong
        to the specified folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list MongoDB clusters in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Cluster/list#query_params)
          to the [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can only use filtering with the [Cluster.name](/docs/managed-mongodb/api-ref/Cluster#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a MongoDB cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Start the specified MongoDB cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to start.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stop the specified MongoDB cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to stop.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters/{clusterId}:move:
    post:
      tags:
      - Cluster
      summary: Moves the specified MongoDB cluster to the specified folder.
      operationId: ClusterMove
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to move.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters/{clusterId}:backup:
    post:
      tags:
      - Cluster
      summary: Creates a backup for the specified MongoDB cluster.
      operationId: ClusterBackup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to back up.
          To get the MongoDB cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: backup
      x-y-operation-metadata:
        $ref: '#/components/schemas/BackupClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters:restore:
    post:
      tags:
      - Cluster
      summary: Creates a new MongoDB cluster using the specified backup.
      operationId: ClusterRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restore
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestoreClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters/{clusterId}:rescheduleMaintenance:
    post:
      tags:
      - Cluster
      summary: Reschedules planned maintenance operation.
      operationId: ClusterRescheduleMaintenance
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to reschedule the maintenance operation for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMaintenanceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: rescheduleMaintenance
      x-y-operation-metadata:
        $ref: '#/components/schemas/RescheduleMaintenanceMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-mongodb/api-ref/Cluster#representation)'
  /managed-mongodb/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: Retrieves logs for the specified MongoDB cluster.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to request logs for.
          To get the MongoDB cluster ID use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from the logs table to request.
          If no columns are specified, entire log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        description: Type of the service to request logs about.
        schema:
          $ref: '#/components/schemas/ListClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listLogs#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listLogs#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Cluster/listLogs#query_params) to the
          [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listLogs#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /managed-mongodb/v1/clusters/{clusterId}:stream_logs:
    get:
      tags:
      - Cluster
      summary: Same as ListLogs but using server-side streaming. Also allows for 'tail
        -f' semantics.
      operationId: ClusterStreamLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the MongoDB cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: Columns from logs table to get in the response.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        schema:
          $ref: '#/components/schemas/StreamClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.
          If this field is not set, all existing logs will be sent and then the new ones as
          they appear. In essence it has 'tail -f' semantics.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: recordToken
        in: query
        description: |-
          Record token. Set `record_token` to the `next_record_token` returned by a previous StreamLogs
          request to start streaming from next log record.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname], [LogRecord.logs.message.severity] fields.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.
          Examples of a filter: `message.hostname='node1.db.cloud.yandex.net'`, `message.severity IN ('E', 'F')`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamLogRecord'
      x-y-navtitle: streamLogs
  /managed-mongodb/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Operation resources for the specified cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB Cluster resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Cluster/listOperations#query_params) to the
          [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listOperations#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-mongodb/v1/clusters/{clusterId}/backups:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of available backups for the specified MongoDB cluster.
      operationId: ClusterListBackups
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster.
          To get the MongoDB cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listBackups#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listBackups#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Cluster/listBackups#query_params) to the
          [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listBackups#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterBackupsResponse'
      x-y-navtitle: listBackups
  /managed-mongodb/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of hosts for the specified cluster.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster.
          To get the MongoDB cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listHosts#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listHosts#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Cluster/listHosts#query_params) to the
          [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listHosts#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /managed-mongodb/v1/clusters/{clusterId}/hosts:batchCreate:
    post:
      tags:
      - Cluster
      summary: Creates new hosts for a cluster.
      operationId: ClusterAddHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to add hosts to.
          To get the MongoDB cluster ID use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}/hosts:batchDelete:
    post:
      tags:
      - Cluster
      summary: Deletes the specified hosts for a cluster.
      operationId: ClusterDeleteHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to remove hosts from.
          To get the MongoDB cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}:enableSharding:
    post:
      tags:
      - Cluster
      summary: |-
        Enables sharding for the cluster: creates 3 mongoinfra (or 3 mongocfg and 2 mongos) hosts
        that would support adding and using shards in the cluster.
      operationId: ClusterEnableSharding
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to enable sharding for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableClusterShardingRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: enableSharding
      x-y-operation-metadata:
        $ref: '#/components/schemas/EnableClusterShardingMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}/shards/{shardName}:
    get:
      tags:
      - Cluster
      summary: Returns the specified shard.
      operationId: ClusterGetShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster that the shard belongs to.
          To get the cluster ID use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Required.
          Name of the MongoDB shard to return.
          To get the name of the shard use a [listShards](/docs/managed-mongodb/api-ref/Cluster/listShards) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shard'
      x-y-navtitle: getShard
    delete:
      tags:
      - Cluster
      summary: Deletes the specified shard.
      operationId: ClusterDeleteShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to delete a shard in.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Required.
          Name of the MongoDB shard to delete.
          To get the name of the shard use a [listShards](/docs/managed-mongodb/api-ref/Cluster/listShards) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterShardMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}/shards:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of shards.
      operationId: ClusterListShards
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to list databases in.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listShards#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listShards#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Cluster/listShards#query_params) to the
          [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listShards#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterShardsResponse'
      x-y-navtitle: listShards
    post:
      tags:
      - Cluster
      summary: Creates a new shard.
      operationId: ClusterAddShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to add a shard to.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterShardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterShardMetadata'
      x-y-operation-response: '`Shard`'
  /managed-mongodb/v1/clusters/{clusterId}:resetupHosts:
    post:
      tags:
      - Cluster
      summary: Resetups hosts.
      operationId: ClusterResetupHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the MongoDB cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetupHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: resetupHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/ResetupHostsMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}:restartHosts:
    post:
      tags:
      - Cluster
      summary: Restarts hosts.
      operationId: ClusterRestartHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the MongoDB cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestartHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restartHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestartHostsMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}:stepdownHosts:
    post:
      tags:
      - Cluster
      summary: Stepdown hosts.
      operationId: ClusterStepdownHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the MongoDB cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StepdownHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stepdownHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/StepdownHostsMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}/databases/{databaseName}:
    get:
      tags:
      - Database
      summary: Returns the specified MongoDB Database resource.
      description: To get the list of available MongoDB Database resources, make a
        [list](/docs/managed-mongodb/api-ref/Database/list) request.
      operationId: DatabaseGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster that the database belongs to.
          To get the cluster ID use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Required.
          Name of the MongoDB database to return.
          To get the name of the database use a [list](/docs/managed-mongodb/api-ref/Database/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      x-y-navtitle: get
    delete:
      tags:
      - Database
      summary: Deletes the specified MongoDB database.
      operationId: DatabaseDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to delete a database in.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Required.
          Name of the database to delete.
          To get the name of the database, use a [list](/docs/managed-mongodb/api-ref/Database/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDatabaseMetadata'
      x-y-operation-response: Empty
  /managed-mongodb/v1/clusters/{clusterId}/databases:
    get:
      tags:
      - Database
      summary: Retrieves the list of MongoDB Database resources in the specified cluster.
      operationId: DatabaseList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to list databases in.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/Database/list#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/Database/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: "Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/Database/list#query_params)
          to the \n[nextPageToken](/docs/managed-mongodb/api-ref/Database/list#responses)
          returned by the previous list request.\n\nThe maximum string length in characters
          is 100."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Database
      summary: Creates a new MongoDB database in the specified cluster.
      operationId: DatabaseCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to create a database in.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/managed-mongodb/api-ref/Database#representation)'
  /managed-mongodb/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified ResourcePreset resource.
      description: To get the list of available ResourcePreset resources, make a [list](/docs/managed-mongodb/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          ID of the resource preset to return.
          To get the resource preset ID, use a [list](/docs/managed-mongodb/api-ref/ResourcePreset/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /managed-mongodb/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available ResourcePreset resources.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/ResourcePreset/list#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/ResourcePreset/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: "Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/ResourcePreset/list#query_params)
          to the \n[nextPageToken](/docs/managed-mongodb/api-ref/ResourcePreset/list#responses)
          returned by the previous list request.\n\nThe maximum string length in characters
          is 100."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /managed-mongodb/v1/clusters/{clusterId}/users/{userName}:
    get:
      tags:
      - User
      summary: Returns the specified MongoDB User resource.
      description: To get the list of available MongoDB User resources, make a [list](/docs/managed-mongodb/api-ref/User/list)
        request.
      operationId: UserGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the MongoDB User resource to return.
          To get the name of the user, use a [list](/docs/managed-mongodb/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-y-navtitle: get
    delete:
      tags:
      - User
      summary: Deletes the specified MongoDB user.
      operationId: UserDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to delete.
          To get the name of the user use a [list](/docs/managed-mongodb/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteUserMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - User
      summary: Updates the specified MongoDB user.
      operationId: UserUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to be updated.
          To get the name of the user, use a [list](/docs/managed-mongodb/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-mongodb/api-ref/User#representation)'
  /managed-mongodb/v1/clusters/{clusterId}/users:
    get:
      tags:
      - User
      summary: Retrieves the list of MongoDB User resources in the specified cluster.
      operationId: UserList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to list MongoDB users in.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-mongodb/api-ref/User/list#query_params), the service returns a [nextPageToken](/docs/managed-mongodb/api-ref/User/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: "Page token. To get the next page of results, set [pageToken](/docs/managed-mongodb/api-ref/User/list#query_params)
          to the \n[nextPageToken](/docs/managed-mongodb/api-ref/User/list#responses)
          returned by the previous list request.\n\nThe maximum string length in characters
          is 100."
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      x-y-navtitle: list
    post:
      tags:
      - User
      summary: Creates a MongoDB user in the specified cluster.
      operationId: UserCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster to create a user in.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-mongodb/api-ref/User#representation)'
  /managed-mongodb/v1/clusters/{clusterId}/users/{userName}:grantPermission:
    post:
      tags:
      - User
      summary: Grants permission to the specified MongoDB user.
      operationId: UserGrantPermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to grant the permission to.
          To get the name of the user, use a [list](/docs/managed-mongodb/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: grantPermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/GrantUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-mongodb/api-ref/User#representation)'
  /managed-mongodb/v1/clusters/{clusterId}/users/{userName}:revokePermission:
    post:
      tags:
      - User
      summary: Revokes permission from the specified MongoDB user.
      operationId: UserRevokePermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the MongoDB cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to revoke a permission from.
          To get the name of the user, use a [list](/docs/managed-mongodb/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: revokePermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/RevokeUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-mongodb/api-ref/User#representation)'
components:
  schemas:
    Access:
      type: object
      properties:
        dataLens:
          description: Allow access for DataLens
          type: boolean
          format: boolean
        dataTransfer:
          description: Allow access for DataTransfer.
          type: boolean
          format: boolean
    AddClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster to which the hosts are being added.
          type: string
        hostNames:
          description: Names of hosts that are being added to the cluster.
          type: array
          items:
            type: string
    AddClusterHostsRequest:
      type: object
      properties:
        hostSpecs:
          description: |-
            Required.
            Configurations for MongoDB hosts that should be added to the cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    AddClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster that a shard is being added to.
          type: string
        shardName:
          description: Name of the shard being added.
          type: string
    AddClusterShardRequest:
      type: object
      properties:
        shardName:
          description: |-
            Required.
            Name of the MongoDB shard to create.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        hostSpecs:
          description: |-
            Required.
            Configurations for mongod hosts to be created with the shard.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    AnytimeMaintenanceWindow:
      type: object
      properties: {}
    Backup:
      description: "A MongoDB Backup resource. For more information, see the \n[Developer's
        Guide](/docs/managed-mongodb/concepts)."
      type: object
      properties:
        id:
          description: ID of the backup.
          type: string
        folderId:
          description: ID of the folder that the backup belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format
            (i.e. when the backup operation was completed).

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        sourceClusterId:
          description: ID of the MongoDB cluster that the backup was created for.
          type: string
        startedAt:
          description: |-
            Time when the backup operation was started.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        sourceShardNames:
          description: Shard names used as a source for backup.
          type: array
          items:
            type: string
        size:
          description: Size of backup in bytes
          type: string
          format: int64
        type:
          $ref: '#/components/schemas/BackupBackupType_in_Backup_type'
    BackupBackupType:
      description: |2-
         - AUTOMATED: Backup created by automated daily schedule
         - MANUAL: Backup created by user request
      type: string
      enum:
      - AUTOMATED
      - MANUAL
    BackupClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster that is being backed up.
          type: string
    Cluster:
      description: A managed MongoDB cluster. For more information, see the [documentation](/docs/managed-mongodb/concepts).
      type: object
      properties:
        id:
          description: |-
            ID of the MongoDB cluster.
            This ID is assigned by MDB at creation time.
          type: string
        folderId:
          description: ID of the folder that the MongoDB cluster belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the MongoDB cluster.
            The name is unique within the folder. 1-63 characters long.
          type: string
        description:
          description: Description of the MongoDB cluster. 0-256 characters long.
          type: string
        labels:
          description: Custom labels for the MongoDB cluster as `` key:value `` pairs.
            Maximum 64 per resource.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the MongoDB cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        networkId:
          description: ID of the network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        sharded:
          description: Indicates current sharding status of the cluster.
          type: boolean
          format: boolean
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_Cluster_maintenanceWindow'
        plannedOperation:
          $ref: '#/components/schemas/MaintenanceOperation_in_Cluster_plannedOperation'
        securityGroupIds:
          description: User security groups
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
    ClusterConfig:
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: 'Version of MongoDB server software. Possible values: `3.6`,
              `4.0`, `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`.'
            type: string
          featureCompatibilityVersion:
            description: |-
              MongoDB feature compatibility version. See usage details in [MongoDB documentation](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion/).

              Possible values:
              * `3.6` - persist data compatibility for version 3.6. After setting this option the data will not be compatible with 3.4 or lower.
              * `4.0` - persist data compatibility for version 4.0. After setting this option the data will not be compatible with 3.6 or lower.
              * `4.2` - persist data compatibility for version 4.2. After setting this option the data will not be compatible with 4.0 or lower.
              * `4.4` - persist data compatibility for version 4.4. After setting this option the data will not be compatible with 4.2 or lower.
              * `5.0` - persist data compatibility for version 5.0. After setting this option the data will not be compatible with 5.0 or lower.
            type: string
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Time to start the daily backup, in the UTC timezone.
          backupRetainPeriodDays:
            description: Retain period of automatically created backup in days
            type: integer
            format: int64
          access:
            $ref: '#/components/schemas/Access'
            description: Access policy to DB
      - title: mongodb
        type: object
        maxProperties: 1
        properties:
          mongodb_3_6:
            $ref: '#/components/schemas/Mongodb3_6'
            description: Configuration and resource allocation for a MongoDB 3.6 cluster.
          mongodb_4_0:
            $ref: '#/components/schemas/Mongodb4_0'
            description: Configuration and resource allocation for a MongoDB 4.0 cluster.
          mongodb_4_2:
            $ref: '#/components/schemas/Mongodb4_2'
            description: Configuration and resource allocation for a MongoDB 4.2 cluster.
          mongodb_4_4:
            $ref: '#/components/schemas/Mongodb4_4'
            description: Configuration and resource allocation for a MongoDB 4.4 cluster.
          mongodb_5_0:
            $ref: '#/components/schemas/Mongodb5_0'
            description: Configuration and resource allocation for a MongoDB 5.0 cluster.
          mongodb_4_4Enterprise:
            $ref: '#/components/schemas/Mongodb4_4_enterprise'
            description: Configuration and resource allocation for a MongoDB 4.4 Enterprise
              cluster.
          mongodb_5_0Enterprise:
            $ref: '#/components/schemas/Mongodb5_0_enterprise'
            description: Configuration and resource allocation for a MongoDB 5.0 Enterprise
              cluster.
    ClusterEnvironment:
      description: |2-
         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes
        are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: State of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is alive and well (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConfigSpec:
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: 'Version of MongoDB used in the cluster. Possible values:
              `3.6`, `4.0`, `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`.'
            type: string
          featureCompatibilityVersion:
            description: |-
              MongoDB feature compatibility version. See usage details in [MongoDB documentation](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion/).

              Possible values:
              * `3.6` - persist data compatibility for version 3.6. After setting this option the data will not be compatible with 3.4 or older.
              * `4.0` - persist data compatibility for version 4.0. After setting this option the data will not be compatible with 3.6 or older.
              * `4.2` - persist data compatibility for version 4.2. After setting this option the data will not be compatible with 4.0 or older.
              * `4.4` - persist data compatibility for version 4.4. After setting this option the data will not be compatible with 4.2 or older.
              * `5.0` - persist data compatibility for version 5.0. After setting this option the data will not be compatible with 4.4 or older.
            type: string
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Time to start the daily backup, in the UTC timezone.
          backupRetainPeriodDays:
            description: |-
              Retain period of automatically created backup in days

              Acceptable values are 7 to 35, inclusive.
            type: integer
            format: int64
          access:
            $ref: '#/components/schemas/Access'
            description: Access policy to DB
      - title: mongodb_spec
        type: object
        maxProperties: 1
        properties:
          mongodbSpec_3_6:
            $ref: '#/components/schemas/MongodbSpec3_6'
            description: Configuration and resource allocation for a MongoDB 3.6 cluster.
          mongodbSpec_4_0:
            $ref: '#/components/schemas/MongodbSpec4_0'
            description: Configuration and resource allocation for a MongoDB 4.0 cluster.
          mongodbSpec_4_2:
            $ref: '#/components/schemas/MongodbSpec4_2'
            description: Configuration and resource allocation for a MongoDB 4.2 cluster.
          mongodbSpec_4_4:
            $ref: '#/components/schemas/MongodbSpec4_4'
            description: Configuration and resource allocation for a MongoDB 4.4 cluster.
          mongodbSpec_5_0:
            $ref: '#/components/schemas/MongodbSpec5_0'
            description: Configuration and resource allocation for a MongoDB 5.0 cluster.
          mongodbSpec_4_4Enterprise:
            $ref: '#/components/schemas/MongodbSpec4_4_enterprise'
            description: Configuration and resource allocation for a MongoDB 4.4 Enterprise
              cluster.
          mongodbSpec_5_0Enterprise:
            $ref: '#/components/schemas/MongodbSpec5_0_enterprise'
            description: Configuration and resource allocation for a MongoDB 5.0 Enterprise
              cluster.
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create MongoDB cluster in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the MongoDB cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        description:
          description: |-
            Description of the MongoDB cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the MongoDB cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
        databaseSpecs:
          description: |-
            Required.
            Descriptions of databases to be created in the MongoDB cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseSpec'
        userSpecs:
          description: |-
            Required.
            Descriptions of database users to be created in the MongoDB cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/UserSpec'
        hostSpecs:
          description: |-
            Required.
            Individual configurations for hosts that should be created for the MongoDB cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Required.
            ID of the network to create the cluster in.

            The maximum string length in characters is 50.
          type: string
        securityGroupIds:
          description: User security groups
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
    CreateDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster where a database is being created.
          type: string
        databaseName:
          description: Name of the MongoDB database that is being created.
          type: string
    CreateDatabaseRequest:
      type: object
      properties:
        databaseSpec:
          $ref: '#/components/schemas/DatabaseSpec_in_CreateDatabaseRequest_databaseSpec'
    CreateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster the user is being created in.
          type: string
        userName:
          description: Name of the user that is being created.
          type: string
    CreateUserRequest:
      type: object
      properties:
        userSpec:
          $ref: '#/components/schemas/UserSpec_in_CreateUserRequest_userSpec'
    Database:
      description: "A MongoDB Database resource. For more information, see the \n[Developer's
        Guide](/docs/managed-mongodb/concepts)."
      type: object
      properties:
        name:
          description: Name of the database.
          type: string
        clusterId:
          description: ID of the MongoDB cluster that the database belongs to.
          type: string
    DatabaseSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the MongoDB database. 1-63 characters long.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]{1,63} ``.
          type: string
    DeleteBackupMetadata:
      type: object
      properties:
        backupId:
          description: Required. ID of the deleting MongoDB backup.
          type: string
    DeleteClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster to remove hosts from.
          type: string
        hostNames:
          description: Names of hosts that are being deleted.
          type: array
          items:
            type: string
    DeleteClusterHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Required.
            Names of hosts to delete.

            Must contain at least one element.
            The maximum string length in characters for each value is 253.
          type: array
          items:
            type: string
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster that is being deleted.
          type: string
    DeleteClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster that a shard is being deleted in.
          type: string
        shardName:
          description: Name of the shard being deleted.
          type: string
    DeleteDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster where a database is being deleted.
          type: string
        databaseName:
          description: Name of the MongoDB database that is being deleted.
          type: string
    DeleteUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster the user belongs to.
          type: string
        userName:
          description: Name of the user that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    EnableClusterShardingMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster that sharding is being enabled for.
          type: string
    EnableClusterShardingRequest:
      type: object
      properties:
        mongocfg:
          $ref: '#/components/schemas/EnableClusterShardingRequestMongoCfg_in_EnableClusterShardingRequest_mongocfg'
        mongos:
          $ref: '#/components/schemas/EnableClusterShardingRequestMongos_in_EnableClusterShardingRequest_mongos'
        hostSpecs:
          description: |-
            Required.
            Configurations for mongos and mongocfg hosts.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        mongoinfra:
          $ref: '#/components/schemas/EnableClusterShardingRequestMongoInfra_in_EnableClusterShardingRequest_mongoinfra'
    EnableClusterShardingRequestMongoCfg:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_EnableClusterShardingRequestMongoCfg_resources'
    EnableClusterShardingRequestMongoInfra:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_EnableClusterShardingRequestMongoInfra_resources'
    EnableClusterShardingRequestMongos:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_EnableClusterShardingRequestMongos_resources'
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GrantUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            ID of the MongoDB cluster the user belongs to.
            To get the cluster ID, use a [list](/docs/managed-mongodb/api-ref/Cluster/list) request.
          type: string
        userName:
          description: Name of the user that is being granted a permission.
          type: string
    GrantUserPermissionRequest:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/Permission_in_GrantUserPermissionRequest_permission'
    Host:
      type: object
      properties:
        name:
          description: |-
            Name of the MongoDB host. The host name is assigned by MDB at creation time, and cannot be changed.
            1-63 characters long.

            The name is unique across all MDB hosts that exist on the platform, as it defines the FQDN of the host.
          type: string
        clusterId:
          description: ID of the MongoDB host. The ID is assigned by MDB at creation
            time.
          type: string
        zoneId:
          description: ID of the availability zone where the MongoDB host resides.
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        role:
          $ref: '#/components/schemas/HostRole_in_Host_role'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        services:
          description: Services provided by the host.
          type: array
          items:
            $ref: '#/components/schemas/Service'
        subnetId:
          description: ID of the subnet that the host belongs to.
          type: string
        assignPublicIp:
          description: Flag showing public IP assignment status to this host.
          type: boolean
          format: boolean
        shardName:
          description: Shard which this host belongs to.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_Host_type'
    HostHealth:
      description: |2-
         - HEALTH_UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable, and cannot perform any of its essential functions.
         - DEGRADED: The host is degraded, and can perform only some of its essential functions.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    HostRole:
      description: |2-
         - ROLE_UNKNOWN: Role of the host in the cluster is unknown.
         - PRIMARY: Host is the primary MongoDB server in the cluster.
         - SECONDARY: Host is a secondary MongoDB server in the cluster.
      type: string
      enum:
      - ROLE_UNKNOWN
      - PRIMARY
      - SECONDARY
      default: ROLE_UNKNOWN
    HostSpec:
      type: object
      properties:
        zoneId:
          description: |-
            ID of the availability zone where the host resides.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet that the host should belong to. This subnet should be a part
            of the network that the cluster belongs to.
            The network ID is set in the [Cluster.networkId](/docs/managed-mongodb/api-ref/Cluster#representation) field.

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Whether the host should get a public IP address on creation.

            After a host has been created, this setting cannot be changed. To remove an assigned public IP, or to assign
            a public IP to a host without one, recreate the host with `assignPublicIp` set as needed.

            Possible values:
            * false - don't assign a public IP to the host.
            * true - the host should have a public IP address.
          type: boolean
          format: boolean
        type:
          $ref: '#/components/schemas/HostType_in_HostSpec_type'
        shardName:
          description: |-
            Name of the shard that the host belongs to.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    HostType:
      description: |2-
         - MONGOD: A mongod host.
         - MONGOS: A mongos host.
         - MONGOCFG: A mongocfg host.
         - MONGOINFRA: A mongoinfra (mongos+mongocfg) host.
      type: string
      enum:
      - MONGOD
      - MONGOS
      - MONGOCFG
      - MONGOINFRA
    ListBackupsResponse:
      type: object
      properties:
        backups:
          description: List of Backup resources.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Backup/list#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Backup/list#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Backup/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Backup/list#responses) to continue paging through the results.
          type: string
    ListClusterBackupsResponse:
      type: object
      properties:
        backups:
          description: List of MongoDB Backup resources.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listBackups#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listBackups#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Cluster/listBackups#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listBackups#responses) to continue paging through the results.
          type: string
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: List of Host resources.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listHosts#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listHosts#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Cluster/listHosts#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listHosts#responses) to continue paging through the results.
          type: string
    ListClusterLogsRequestServiceType:
      description: |2-
         - MONGOD: Logs of MongoDB activity.
         - AUDIT: MongoDB Enterprise audit logs
      type: string
      enum:
      - MONGOD
      - MONGOS
      - MONGOCFG
      - AUDIT
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listLogs#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listLogs#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listLogs#responses) to continue paging through the results.
            This value is interchangeable with `next_record_token` from StreamLogs method.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of Operation resources for the specified MongoDB cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listOperations#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listOperations#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClusterShardsResponse:
      type: object
      properties:
        shards:
          description: List of MongoDB shards.
          type: array
          items:
            $ref: '#/components/schemas/Shard'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/listShards#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listShards#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Cluster/listShards#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/listShards#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of MongoDB Cluster resources.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Cluster/list#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/list#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Cluster/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Cluster/list#responses) to continue paging through the results.
          type: string
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          description: List of MongoDB databases.
          type: array
          items:
            $ref: '#/components/schemas/Database'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/Database/list#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/Database/list#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/Database/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/Database/list#responses) to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of ResourcePreset resources.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/ResourcePreset/list#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/ResourcePreset/list#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/ResourcePreset/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/ResourcePreset/list#responses) to continue paging through the results.
          type: string
    ListUsersResponse:
      type: object
      properties:
        users:
          description: List of MongoDB User resources.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-mongodb/api-ref/User/list#query_params), use the [nextPageToken](/docs/managed-mongodb/api-ref/User/list#responses) as the value
            for the [pageToken](/docs/managed-mongodb/api-ref/User/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-mongodb/api-ref/User/list#responses) to continue paging through the results.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    MaintenanceOperation:
      description: A planned maintenance operation.
      type: object
      properties:
        info:
          description: |-
            Information about this maintenance operation.

            The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: |-
            Time until which this maintenance operation is delayed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    MaintenanceWindow:
      description: A maintenance window settings.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: Maintenance operation can be scheduled anytime.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: Maintenance operation can be scheduled on a weekly basis.
    MongoCfgConfig3_6:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig3_6Storage_in_MongoCfgConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfiling_in_MongoCfgConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig3_6Network_in_MongoCfgConfig3_6_net'
    MongoCfgConfig3_6Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of incoming connections.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig3_6OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfilingMode_in_MongoCfgConfig3_6OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v3.6/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig3_6OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data. This is the default
        profiler level.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig3_6Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig3_6StorageWiredTiger_in_MongoCfgConfig3_6Storage_wiredTiger'
    MongoCfgConfig3_6StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6StorageWiredTigerEngineConfig_in_MongoCfgConfig3_6StorageWiredTiger_engineConfig'
    MongoCfgConfig3_6StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_0:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_0Storage_in_MongoCfgConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfiling_in_MongoCfgConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_0Network_in_MongoCfgConfig4_0_net'
    MongoCfgConfig4_0Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_0OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfilingMode_in_MongoCfgConfig4_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.0/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_0OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_0Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_0StorageWiredTiger_in_MongoCfgConfig4_0Storage_wiredTiger'
    MongoCfgConfig4_0StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0StorageWiredTigerEngineConfig_in_MongoCfgConfig4_0StorageWiredTiger_engineConfig'
    MongoCfgConfig4_0StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_2:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_2Storage_in_MongoCfgConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfiling_in_MongoCfgConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_2Network_in_MongoCfgConfig4_2_net'
    MongoCfgConfig4_2Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_2OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfilingMode_in_MongoCfgConfig4_2OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.2/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_2OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_2Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_2StorageWiredTiger_in_MongoCfgConfig4_2Storage_wiredTiger'
    MongoCfgConfig4_2StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2StorageWiredTigerEngineConfig_in_MongoCfgConfig4_2StorageWiredTiger_engineConfig'
    MongoCfgConfig4_2StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_4:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4Storage_in_MongoCfgConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfiling_in_MongoCfgConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4Network_in_MongoCfgConfig4_4_net'
    MongoCfgConfig4_4Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_4OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfilingMode_in_MongoCfgConfig4_4OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_4OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_4Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_4StorageWiredTiger_in_MongoCfgConfig4_4Storage_wiredTiger'
    MongoCfgConfig4_4StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4StorageWiredTigerEngineConfig_in_MongoCfgConfig4_4StorageWiredTiger_engineConfig'
    MongoCfgConfig4_4StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_4_enterprise:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorage_in_MongoCfgConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfiling_in_MongoCfgConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseNetwork_in_MongoCfgConfig4_4_enterprise_net'
    MongoCfgConfig4_4_enterpriseNetwork:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_4_enterpriseOperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfilingMode_in_MongoCfgConfig4_4_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_4_enterpriseOperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_4_enterpriseStorage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorageWiredTiger_in_MongoCfgConfig4_4_enterpriseStorage_wiredTiger'
    MongoCfgConfig4_4_enterpriseStorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorageWiredTigerEngineConfig_in_MongoCfgConfig4_4_enterpriseStorageWiredTiger_engineConfig'
    MongoCfgConfig4_4_enterpriseStorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig5_0:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0Storage_in_MongoCfgConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfiling_in_MongoCfgConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0Network_in_MongoCfgConfig5_0_net'
    MongoCfgConfig5_0Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig5_0OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfilingMode_in_MongoCfgConfig5_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig5_0OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig5_0Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig5_0StorageWiredTiger_in_MongoCfgConfig5_0Storage_wiredTiger'
    MongoCfgConfig5_0StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0StorageWiredTigerEngineConfig_in_MongoCfgConfig5_0StorageWiredTiger_engineConfig'
    MongoCfgConfig5_0StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig5_0_enterprise:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorage_in_MongoCfgConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfiling_in_MongoCfgConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseNetwork_in_MongoCfgConfig5_0_enterprise_net'
    MongoCfgConfig5_0_enterpriseNetwork:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig5_0_enterpriseOperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfilingMode_in_MongoCfgConfig5_0_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig5_0_enterpriseOperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig5_0_enterpriseStorage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorageWiredTiger_in_MongoCfgConfig5_0_enterpriseStorage_wiredTiger'
    MongoCfgConfig5_0_enterpriseStorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorageWiredTigerEngineConfig_in_MongoCfgConfig5_0_enterpriseStorageWiredTiger_engineConfig'
    MongoCfgConfig5_0_enterpriseStorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfigSet3_6:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_defaultConfig'
    MongoCfgConfigSet4_0:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_defaultConfig'
    MongoCfgConfigSet4_2:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_defaultConfig'
    MongoCfgConfigSet4_4:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_defaultConfig'
    MongoCfgConfigSet4_4_enterprise:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_defaultConfig'
    MongoCfgConfigSet5_0:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_defaultConfig'
    MongoCfgConfigSet5_0_enterprise:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_defaultConfig'
    MongodConfig3_6:
      description: |-
        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v3.6/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig3_6Storage_in_MongodConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig3_6OperationProfiling_in_MongodConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig3_6Network_in_MongodConfig3_6_net'
    MongodConfig3_6Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig3_6OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig3_6OperationProfilingMode_in_MongodConfig3_6OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig3_6OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig3_6Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTiger_in_MongodConfig3_6Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig3_6StorageJournal_in_MongodConfig3_6Storage_journal'
    MongodConfig3_6StorageJournal:
      type: object
      properties:
        enabled:
          description: |-
            Whether the journal is enabled or disabled.
            Possible values:
            * true (default) - the journal is enabled.
            * false - the journal is disabled.
          type: boolean
          format: boolean
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig3_6StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTigerEngineConfig_in_MongodConfig3_6StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTigerCollectionConfig_in_MongodConfig3_6StorageWiredTiger_collectionConfig'
    MongodConfig3_6StorageWiredTigerCollectionConfig:
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTigerCollectionConfigCompressor_in_MongodConfig3_6StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig3_6StorageWiredTigerCollectionConfigCompressor:
      description: |2-
         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v3.6/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v3.6/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig3_6StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_0:
      description: |-
        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_0Storage_in_MongodConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_0OperationProfiling_in_MongodConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_0Network_in_MongodConfig4_0_net'
    MongodConfig4_0Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_0OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_0OperationProfilingMode_in_MongodConfig4_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_0OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_0Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTiger_in_MongodConfig4_0Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_0StorageJournal_in_MongodConfig4_0Storage_journal'
    MongodConfig4_0StorageJournal:
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_0StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTigerEngineConfig_in_MongodConfig4_0StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTigerCollectionConfig_in_MongodConfig4_0StorageWiredTiger_collectionConfig'
    MongodConfig4_0StorageWiredTigerCollectionConfig:
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_0StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig4_0StorageWiredTigerCollectionConfigCompressor:
      description: |2-
         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.0/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.0/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_0StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_2:
      description: |-
        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.2/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_2Storage_in_MongodConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_2OperationProfiling_in_MongodConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_2Network_in_MongodConfig4_2_net'
    MongodConfig4_2Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_2OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_2OperationProfilingMode_in_MongodConfig4_2OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_2OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_2Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTiger_in_MongodConfig4_2Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_2StorageJournal_in_MongodConfig4_2Storage_journal'
    MongodConfig4_2StorageJournal:
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_2StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTigerEngineConfig_in_MongodConfig4_2StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTigerCollectionConfig_in_MongodConfig4_2StorageWiredTiger_collectionConfig'
    MongodConfig4_2StorageWiredTigerCollectionConfig:
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_2StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig4_2StorageWiredTigerCollectionConfigCompressor:
      description: |2-
         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.2/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.2/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_2StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_4:
      description: |-
        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4Storage_in_MongodConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4OperationProfiling_in_MongodConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4Network_in_MongodConfig4_4_net'
    MongodConfig4_4Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_4OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_4OperationProfilingMode_in_MongodConfig4_4OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_4OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_4Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTiger_in_MongodConfig4_4Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_4StorageJournal_in_MongodConfig4_4Storage_journal'
    MongodConfig4_4StorageJournal:
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_4StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTigerEngineConfig_in_MongodConfig4_4StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTigerCollectionConfig_in_MongodConfig4_4StorageWiredTiger_collectionConfig'
    MongodConfig4_4StorageWiredTigerCollectionConfig:
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_4StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig4_4StorageWiredTigerCollectionConfigCompressor:
      description: |2-
         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.4/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.4/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_4StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_4_enterprise:
      description: |-
        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorage_in_MongodConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseOperationProfiling_in_MongodConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseNetwork_in_MongodConfig4_4_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSecurity_in_MongodConfig4_4_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseAuditLog_in_MongodConfig4_4_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSetParameter_in_MongodConfig4_4_enterprise_setParameter'
    MongodConfig4_4_enterpriseAuditLog:
      type: object
      properties:
        filter:
          description: Audit filter
          type: string
    MongodConfig4_4_enterpriseNetwork:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_4_enterpriseOperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseOperationProfilingMode_in_MongodConfig4_4_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_4_enterpriseOperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_4_enterpriseSecurity:
      type: object
      properties:
        enableEncryption:
          description: If encryption at rest should be enabled or not
          type: boolean
          format: boolean
        kmip:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSecurityKMIP_in_MongodConfig4_4_enterpriseSecurity_kmip'
    MongodConfig4_4_enterpriseSecurityKMIP:
      type: object
      properties:
        serverName:
          description: KMIP server name
          type: string
        port:
          description: KMIP server port
          type: integer
          format: int64
        serverCa:
          description: KMIP Server CA
          type: string
        clientCertificate:
          description: KMIP client certificate + private key (unencrypted)
          type: string
        keyIdentifier:
          description: KMIP Key identifier (if any)
          type: string
    MongodConfig4_4_enterpriseSetParameter:
      type: object
      properties:
        auditAuthorizationSuccess:
          description: Enables the auditing of authorization successes
          type: boolean
          format: boolean
    MongodConfig4_4_enterpriseStorage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTiger_in_MongodConfig4_4_enterpriseStorage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageJournal_in_MongodConfig4_4_enterpriseStorage_journal'
    MongodConfig4_4_enterpriseStorageJournal:
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_4_enterpriseStorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTigerEngineConfig_in_MongodConfig4_4_enterpriseStorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfig_in_MongodConfig4_4_enterpriseStorageWiredTiger_collectionConfig'
    MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfig:
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfigCompressor:
      description: |2-
         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.4/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.4/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_4_enterpriseStorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig5_0:
      description: |-
        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0Storage_in_MongodConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0OperationProfiling_in_MongodConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0Network_in_MongodConfig5_0_net'
    MongodConfig5_0Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig5_0OperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig5_0OperationProfilingMode_in_MongodConfig5_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig5_0OperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig5_0Storage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTiger_in_MongodConfig5_0Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig5_0StorageJournal_in_MongodConfig5_0Storage_journal'
    MongodConfig5_0StorageJournal:
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig5_0StorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTigerEngineConfig_in_MongodConfig5_0StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTigerCollectionConfig_in_MongodConfig5_0StorageWiredTiger_collectionConfig'
    MongodConfig5_0StorageWiredTigerCollectionConfig:
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTigerCollectionConfigCompressor_in_MongodConfig5_0StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig5_0StorageWiredTigerCollectionConfigCompressor:
      description: |2-
         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v5.0/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v5.0/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig5_0StorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig5_0_enterprise:
      description: |-
        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorage_in_MongodConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseOperationProfiling_in_MongodConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseNetwork_in_MongodConfig5_0_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSecurity_in_MongodConfig5_0_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseAuditLog_in_MongodConfig5_0_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSetParameter_in_MongodConfig5_0_enterprise_setParameter'
    MongodConfig5_0_enterpriseAuditLog:
      type: object
      properties:
        filter:
          description: Audit filter
          type: string
        runtimeConfiguration:
          description: Allows runtime configuration of audit filter and auditAuthorizationSuccess
          type: boolean
          format: boolean
    MongodConfig5_0_enterpriseNetwork:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig5_0_enterpriseOperationProfiling:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseOperationProfilingMode_in_MongodConfig5_0_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig5_0_enterpriseOperationProfilingMode:
      description: |2-
         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig5_0_enterpriseSecurity:
      type: object
      properties:
        enableEncryption:
          description: If encryption at rest should be enabled or not
          type: boolean
          format: boolean
        kmip:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSecurityKMIP_in_MongodConfig5_0_enterpriseSecurity_kmip'
    MongodConfig5_0_enterpriseSecurityKMIP:
      type: object
      properties:
        serverName:
          description: KMIP server name
          type: string
        port:
          description: KMIP server port
          type: integer
          format: int64
        serverCa:
          description: KMIP Server CA
          type: string
        clientCertificate:
          description: KMIP client certificate + private key (unencrypted)
          type: string
        keyIdentifier:
          description: KMIP Key identifier (if any)
          type: string
    MongodConfig5_0_enterpriseSetParameter:
      type: object
      properties:
        auditAuthorizationSuccess:
          description: Enables the auditing of authorization successes
          type: boolean
          format: boolean
    MongodConfig5_0_enterpriseStorage:
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTiger_in_MongodConfig5_0_enterpriseStorage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageJournal_in_MongodConfig5_0_enterpriseStorage_journal'
    MongodConfig5_0_enterpriseStorageJournal:
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig5_0_enterpriseStorageWiredTiger:
      description: Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTigerEngineConfig_in_MongodConfig5_0_enterpriseStorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfig_in_MongodConfig5_0_enterpriseStorageWiredTiger_collectionConfig'
    MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfig:
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfigCompressor_in_MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfigCompressor:
      description: |2-
         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v5.0/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v5.0/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig5_0_enterpriseStorageWiredTigerEngineConfig:
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfigSet3_6:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodConfigSet3_6_defaultConfig'
    MongodConfigSet4_0:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodConfigSet4_0_defaultConfig'
    MongodConfigSet4_2:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodConfigSet4_2_defaultConfig'
    MongodConfigSet4_4:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodConfigSet4_4_defaultConfig'
    MongodConfigSet4_4_enterprise:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_defaultConfig'
    MongodConfigSet5_0:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodConfigSet5_0_defaultConfig'
    MongodConfigSet5_0_enterprise:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_defaultConfig'
    Mongodb3_6:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/Mongodb3_6Mongod_in_Mongodb3_6_mongod'
        mongocfg:
          $ref: '#/components/schemas/Mongodb3_6MongoCfg_in_Mongodb3_6_mongocfg'
        mongos:
          $ref: '#/components/schemas/Mongodb3_6Mongos_in_Mongodb3_6_mongos'
        mongoinfra:
          $ref: '#/components/schemas/Mongodb3_6MongoInfra_in_Mongodb3_6_mongoinfra'
    Mongodb3_6MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet3_6_in_Mongodb3_6MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6MongoCfg_resources'
    Mongodb3_6MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet3_6_in_Mongodb3_6MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet3_6_in_Mongodb3_6MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6MongoInfra_resources'
    Mongodb3_6Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet3_6_in_Mongodb3_6Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6Mongod_resources'
    Mongodb3_6Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet3_6_in_Mongodb3_6Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6Mongos_resources'
    Mongodb4_0:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/Mongodb4_0Mongod_in_Mongodb4_0_mongod'
        mongocfg:
          $ref: '#/components/schemas/Mongodb4_0MongoCfg_in_Mongodb4_0_mongocfg'
        mongos:
          $ref: '#/components/schemas/Mongodb4_0Mongos_in_Mongodb4_0_mongos'
        mongoinfra:
          $ref: '#/components/schemas/Mongodb4_0MongoInfra_in_Mongodb4_0_mongoinfra'
    Mongodb4_0MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_0_in_Mongodb4_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0MongoCfg_resources'
    Mongodb4_0MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_0_in_Mongodb4_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_0_in_Mongodb4_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0MongoInfra_resources'
    Mongodb4_0Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_0_in_Mongodb4_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0Mongod_resources'
    Mongodb4_0Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_0_in_Mongodb4_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0Mongos_resources'
    Mongodb4_2:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/Mongodb4_2Mongod_in_Mongodb4_2_mongod'
        mongocfg:
          $ref: '#/components/schemas/Mongodb4_2MongoCfg_in_Mongodb4_2_mongocfg'
        mongos:
          $ref: '#/components/schemas/Mongodb4_2Mongos_in_Mongodb4_2_mongos'
        mongoinfra:
          $ref: '#/components/schemas/Mongodb4_2MongoInfra_in_Mongodb4_2_mongoinfra'
    Mongodb4_2MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_2_in_Mongodb4_2MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2MongoCfg_resources'
    Mongodb4_2MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_2_in_Mongodb4_2MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_2_in_Mongodb4_2MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2MongoInfra_resources'
    Mongodb4_2Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_2_in_Mongodb4_2Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2Mongod_resources'
    Mongodb4_2Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_2_in_Mongodb4_2Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2Mongos_resources'
    Mongodb4_4:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/Mongodb4_4Mongod_in_Mongodb4_4_mongod'
        mongocfg:
          $ref: '#/components/schemas/Mongodb4_4MongoCfg_in_Mongodb4_4_mongocfg'
        mongos:
          $ref: '#/components/schemas/Mongodb4_4Mongos_in_Mongodb4_4_mongos'
        mongoinfra:
          $ref: '#/components/schemas/Mongodb4_4MongoInfra_in_Mongodb4_4_mongoinfra'
    Mongodb4_4MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_in_Mongodb4_4MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4MongoCfg_resources'
    Mongodb4_4MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_4_in_Mongodb4_4MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_in_Mongodb4_4MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4MongoInfra_resources'
    Mongodb4_4Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_4_in_Mongodb4_4Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4Mongod_resources'
    Mongodb4_4Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_4_in_Mongodb4_4Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4Mongos_resources'
    Mongodb4_4_enterprise:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/Mongodb4_4_enterpriseMongod_in_Mongodb4_4_enterprise_mongod'
        mongocfg:
          $ref: '#/components/schemas/Mongodb4_4_enterpriseMongoCfg_in_Mongodb4_4_enterprise_mongocfg'
        mongos:
          $ref: '#/components/schemas/Mongodb4_4_enterpriseMongos_in_Mongodb4_4_enterprise_mongos'
        mongoinfra:
          $ref: '#/components/schemas/Mongodb4_4_enterpriseMongoInfra_in_Mongodb4_4_enterprise_mongoinfra'
    Mongodb4_4_enterpriseMongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongoCfg_resources'
    Mongodb4_4_enterpriseMongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongoInfra_resources'
    Mongodb4_4_enterpriseMongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongod_resources'
    Mongodb4_4_enterpriseMongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongos_resources'
    Mongodb5_0:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/Mongodb5_0Mongod_in_Mongodb5_0_mongod'
        mongocfg:
          $ref: '#/components/schemas/Mongodb5_0MongoCfg_in_Mongodb5_0_mongocfg'
        mongos:
          $ref: '#/components/schemas/Mongodb5_0Mongos_in_Mongodb5_0_mongos'
        mongoinfra:
          $ref: '#/components/schemas/Mongodb5_0MongoInfra_in_Mongodb5_0_mongoinfra'
    Mongodb5_0MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_in_Mongodb5_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0MongoCfg_resources'
    Mongodb5_0MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet5_0_in_Mongodb5_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_in_Mongodb5_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0MongoInfra_resources'
    Mongodb5_0Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet5_0_in_Mongodb5_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0Mongod_resources'
    Mongodb5_0Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet5_0_in_Mongodb5_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0Mongos_resources'
    Mongodb5_0_enterprise:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/Mongodb5_0_enterpriseMongod_in_Mongodb5_0_enterprise_mongod'
        mongocfg:
          $ref: '#/components/schemas/Mongodb5_0_enterpriseMongoCfg_in_Mongodb5_0_enterprise_mongocfg'
        mongos:
          $ref: '#/components/schemas/Mongodb5_0_enterpriseMongos_in_Mongodb5_0_enterprise_mongos'
        mongoinfra:
          $ref: '#/components/schemas/Mongodb5_0_enterpriseMongoInfra_in_Mongodb5_0_enterprise_mongoinfra'
    Mongodb5_0_enterpriseMongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongoCfg_resources'
    Mongodb5_0_enterpriseMongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongoInfra_resources'
    Mongodb5_0_enterpriseMongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongod_resources'
    Mongodb5_0_enterpriseMongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongos_resources'
    MongodbSpec3_6:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/MongodbSpec3_6Mongod_in_MongodbSpec3_6_mongod'
        mongocfg:
          $ref: '#/components/schemas/MongodbSpec3_6MongoCfg_in_MongodbSpec3_6_mongocfg'
        mongos:
          $ref: '#/components/schemas/MongodbSpec3_6Mongos_in_MongodbSpec3_6_mongos'
        mongoinfra:
          $ref: '#/components/schemas/MongodbSpec3_6MongoInfra_in_MongodbSpec3_6_mongoinfra'
    MongodbSpec3_6MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongodbSpec3_6MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6MongoCfg_resources'
    MongodbSpec3_6MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongodbSpec3_6MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongodbSpec3_6MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6MongoInfra_resources'
    MongodbSpec3_6Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodbSpec3_6Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6Mongod_resources'
    MongodbSpec3_6Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongodbSpec3_6Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6Mongos_resources'
    MongodbSpec4_0:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/MongodbSpec4_0Mongod_in_MongodbSpec4_0_mongod'
        mongocfg:
          $ref: '#/components/schemas/MongodbSpec4_0MongoCfg_in_MongodbSpec4_0_mongocfg'
        mongos:
          $ref: '#/components/schemas/MongodbSpec4_0Mongos_in_MongodbSpec4_0_mongos'
        mongoinfra:
          $ref: '#/components/schemas/MongodbSpec4_0MongoInfra_in_MongodbSpec4_0_mongoinfra'
    MongodbSpec4_0MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongodbSpec4_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0MongoCfg_resources'
    MongodbSpec4_0MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongodbSpec4_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongodbSpec4_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0MongoInfra_resources'
    MongodbSpec4_0Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodbSpec4_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0Mongod_resources'
    MongodbSpec4_0Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongodbSpec4_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0Mongos_resources'
    MongodbSpec4_2:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/MongodbSpec4_2Mongod_in_MongodbSpec4_2_mongod'
        mongocfg:
          $ref: '#/components/schemas/MongodbSpec4_2MongoCfg_in_MongodbSpec4_2_mongocfg'
        mongos:
          $ref: '#/components/schemas/MongodbSpec4_2Mongos_in_MongodbSpec4_2_mongos'
        mongoinfra:
          $ref: '#/components/schemas/MongodbSpec4_2MongoInfra_in_MongodbSpec4_2_mongoinfra'
    MongodbSpec4_2MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongodbSpec4_2MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2MongoCfg_resources'
    MongodbSpec4_2MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongodbSpec4_2MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongodbSpec4_2MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2MongoInfra_resources'
    MongodbSpec4_2Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodbSpec4_2Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2Mongod_resources'
    MongodbSpec4_2Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongodbSpec4_2Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2Mongos_resources'
    MongodbSpec4_4:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/MongodbSpec4_4Mongod_in_MongodbSpec4_4_mongod'
        mongocfg:
          $ref: '#/components/schemas/MongodbSpec4_4MongoCfg_in_MongodbSpec4_4_mongocfg'
        mongos:
          $ref: '#/components/schemas/MongodbSpec4_4Mongos_in_MongodbSpec4_4_mongos'
        mongoinfra:
          $ref: '#/components/schemas/MongodbSpec4_4MongoInfra_in_MongodbSpec4_4_mongoinfra'
    MongodbSpec4_4MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongodbSpec4_4MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4MongoCfg_resources'
    MongodbSpec4_4MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongodbSpec4_4MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongodbSpec4_4MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4MongoInfra_resources'
    MongodbSpec4_4Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodbSpec4_4Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4Mongod_resources'
    MongodbSpec4_4Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongodbSpec4_4Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4Mongos_resources'
    MongodbSpec4_4_enterprise:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/MongodbSpec4_4_enterpriseMongod_in_MongodbSpec4_4_enterprise_mongod'
        mongocfg:
          $ref: '#/components/schemas/MongodbSpec4_4_enterpriseMongoCfg_in_MongodbSpec4_4_enterprise_mongocfg'
        mongos:
          $ref: '#/components/schemas/MongodbSpec4_4_enterpriseMongos_in_MongodbSpec4_4_enterprise_mongos'
        mongoinfra:
          $ref: '#/components/schemas/MongodbSpec4_4_enterpriseMongoInfra_in_MongodbSpec4_4_enterprise_mongoinfra'
    MongodbSpec4_4_enterpriseMongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongoCfg_resources'
    MongodbSpec4_4_enterpriseMongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongoInfra_resources'
    MongodbSpec4_4_enterpriseMongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongod_resources'
    MongodbSpec4_4_enterpriseMongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongos_resources'
    MongodbSpec5_0:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/MongodbSpec5_0Mongod_in_MongodbSpec5_0_mongod'
        mongocfg:
          $ref: '#/components/schemas/MongodbSpec5_0MongoCfg_in_MongodbSpec5_0_mongocfg'
        mongos:
          $ref: '#/components/schemas/MongodbSpec5_0Mongos_in_MongodbSpec5_0_mongos'
        mongoinfra:
          $ref: '#/components/schemas/MongodbSpec5_0MongoInfra_in_MongodbSpec5_0_mongoinfra'
    MongodbSpec5_0MongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongodbSpec5_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0MongoCfg_resources'
    MongodbSpec5_0MongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongodbSpec5_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongodbSpec5_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0MongoInfra_resources'
    MongodbSpec5_0Mongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodbSpec5_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0Mongod_resources'
    MongodbSpec5_0Mongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongodbSpec5_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0Mongos_resources'
    MongodbSpec5_0_enterprise:
      type: object
      properties:
        mongod:
          $ref: '#/components/schemas/MongodbSpec5_0_enterpriseMongod_in_MongodbSpec5_0_enterprise_mongod'
        mongocfg:
          $ref: '#/components/schemas/MongodbSpec5_0_enterpriseMongoCfg_in_MongodbSpec5_0_enterprise_mongocfg'
        mongos:
          $ref: '#/components/schemas/MongodbSpec5_0_enterpriseMongos_in_MongodbSpec5_0_enterprise_mongos'
        mongoinfra:
          $ref: '#/components/schemas/MongodbSpec5_0_enterpriseMongoInfra_in_MongodbSpec5_0_enterprise_mongoinfra'
    MongodbSpec5_0_enterpriseMongoCfg:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongoCfg_resources'
    MongodbSpec5_0_enterpriseMongoInfra:
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongoInfra_resources'
    MongodbSpec5_0_enterpriseMongod:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongod_resources'
    MongodbSpec5_0_enterpriseMongos:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongos_resources'
    MongosConfig3_6:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig3_6Network_in_MongosConfig3_6_net'
    MongosConfig3_6Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of incoming connections.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_0:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_0Network_in_MongosConfig4_0_net'
    MongosConfig4_0Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_2:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_2Network_in_MongosConfig4_2_net'
    MongosConfig4_2Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_4:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4Network_in_MongosConfig4_4_net'
    MongosConfig4_4Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_4_enterprise:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4_enterpriseNetwork_in_MongosConfig4_4_enterprise_net'
    MongosConfig4_4_enterpriseNetwork:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig5_0:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0Network_in_MongosConfig5_0_net'
    MongosConfig5_0Network:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig5_0_enterprise:
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0_enterpriseNetwork_in_MongosConfig5_0_enterprise_net'
    MongosConfig5_0_enterpriseNetwork:
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfigSet3_6:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_defaultConfig'
    MongosConfigSet4_0:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_defaultConfig'
    MongosConfigSet4_2:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_defaultConfig'
    MongosConfigSet4_4:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_defaultConfig'
    MongosConfigSet4_4_enterprise:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_defaultConfig'
    MongosConfigSet5_0:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_defaultConfig'
    MongosConfigSet5_0_enterprise:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_defaultConfig'
    Monitoring:
      description: Monitoring system.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts for the MongoDB cluster.
          type: string
    MoveClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster being moved.
          type: string
        sourceFolderId:
          description: ID of the source folder.
          type: string
        destinationFolderId:
          description: ID of the destnation folder.
          type: string
    MoveClusterRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Permission:
      type: object
      properties:
        databaseName:
          description: Name of the database that the permission grants access to.
          type: string
        roles:
          description: MongoDB roles for the `databaseName` database that the permission
            grants.
          type: array
          items:
            type: string
    RescheduleMaintenanceMetadata:
      description: Rescheduled maintenance operation metadata.
      type: object
      properties:
        clusterId:
          description: Required. ID of the MongoDB cluster.
          type: string
        delayedUntil:
          description: |-
            Required. The time until which this maintenance operation is to be delayed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    RescheduleMaintenanceRequest:
      type: object
      properties:
        rescheduleType:
          $ref: '#/components/schemas/RescheduleMaintenanceRequestRescheduleType_in_RescheduleMaintenanceRequest_rescheduleType'
        delayedUntil:
          description: |-
            The time until which this maintenance operation should be delayed. The value should be ahead of the first time when the maintenance operation has been scheduled for no more than two weeks. The value can also point to the past moment of time if [reschedule_type.IMMEDIATE] reschedule type is chosen.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    RescheduleMaintenanceRequestRescheduleType:
      description: |2-
         - IMMEDIATE: Start the maintenance operation immediately.
         - NEXT_AVAILABLE_WINDOW: Start the maintenance operation within the next available maintenance window.
         - SPECIFIC_TIME: Start the maintenance operation at the specific time.
      type: string
      enum:
      - IMMEDIATE
      - NEXT_AVAILABLE_WINDOW
      - SPECIFIC_TIME
    ResetupHostsMetadata:
      type: object
      properties:
        clusterId:
          description: Required. ID of the MongoDB cluster.
          type: string
        hostNames:
          description: Required. The name of hosts to resetup.
          type: array
          items:
            type: string
    ResetupHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Required.
            Required. Name of the hosts to resetup.

            Must contain at least one element.
            The maximum string length in characters for each value is 253.
          type: array
          items:
            type: string
    ResourcePreset:
      description: A ResourcePreset resource for describing hardware configuration
        presets.
      type: object
      properties:
        id:
          description: ID of the ResourcePreset resource.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for a MongoDB host created with the preset.
          type: string
          format: int64
        memory:
          description: RAM volume for a MongoDB host created with the preset, in bytes.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    RestartHostsMetadata:
      type: object
      properties:
        clusterId:
          description: Required. ID of the MongoDB cluster.
          type: string
        hostNames:
          description: Required. The name of hosts to restart.
          type: array
          items:
            type: string
    RestartHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Required.
            Required. Name of the hosts to restart.

            Must contain at least one element.
            The maximum string length in characters for each value is 253.
          type: array
          items:
            type: string
    RestoreClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the new MongoDB cluster that is being created from a
            backup.
          type: string
        backupId:
          description: ID of the backup that is being used for creating a cluster.
          type: string
    RestoreClusterRequest:
      type: object
      properties:
        backupId:
          description: |-
            Required.
            ID of the backup to create a cluster from.
            To get the backup ID, use a [listBackups](/docs/managed-mongodb/api-ref/Cluster/listBackups) request.
          type: string
        name:
          description: |-
            Required.
            Name of the new MongoDB cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the new MongoDB cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the MongoDB cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_RestoreClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_RestoreClusterRequest_configSpec'
        hostSpecs:
          description: |-
            Required.
            Configurations for MongoDB hosts that should be created for
            the cluster that is being created from the backup.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Required.
            ID of the network to create the MongoDB cluster in.

            The maximum string length in characters is 50.
          type: string
        folderId:
          description: |-
            Required. ID of the folder to create the MongoDB cluster in.

            The maximum string length in characters is 50.
          type: string
        recoveryTargetSpec:
          $ref: '#/components/schemas/RestoreClusterRequestRecoveryTargetSpec_in_RestoreClusterRequest_recoveryTargetSpec'
        securityGroupIds:
          description: User security groups
          type: array
          items:
            type: string
    RestoreClusterRequestRecoveryTargetSpec:
      type: object
      properties:
        timestamp:
          description: |-
            Timestamp of the recovery target

            Value must be greater than 0.
          type: string
          format: int64
    RevokeUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster the user belongs to.
          type: string
        userName:
          description: Name of the user whose permission is being revoked.
          type: string
    RevokeUserPermissionRequest:
      type: object
      properties:
        databaseName:
          description: |-
            Required.
            Name of the database that the user should lose access to.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    Service:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServiceType_in_Service_type'
        health:
          $ref: '#/components/schemas/ServiceHealth_in_Service_health'
    ServiceHealth:
      description: |2-
         - HEALTH_UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      default: HEALTH_UNKNOWN
    ServiceType:
      description: |2-
         - MONGOD: The host is running a mongod daemon.
         - MONGOS: The host is running a mongos daemon.
         - MONGOCFG: The host is running a MongoDB config server.
      type: string
      enum:
      - MONGOD
      - MONGOS
      - MONGOCFG
    Shard:
      type: object
      properties:
        name:
          description: Name of the shard.
          type: string
        clusterId:
          description: ID of the cluster that the shard belongs to.
          type: string
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster.
          type: string
    StepdownHostsMetadata:
      type: object
      properties:
        clusterId:
          description: Required. ID of the MongoDB cluster.
          type: string
        hostNames:
          description: Required. The name of hosts to resetup.
          type: array
          items:
            type: string
    StepdownHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Required.
            Required. Name of the hosts to resetup.

            Must contain at least one element.
            The maximum string length in characters for each value is 253.
          type: array
          items:
            type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster.
          type: string
    StreamClusterLogsRequestServiceType:
      description: |2-
         - MONGOD: Logs of MongoDB activity.
         - AUDIT: MongoDB Enterprise audit logs
      type: string
      enum:
      - MONGOD
      - MONGOS
      - MONGOCFG
      - AUDIT
    StreamLogRecord:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/LogRecord_in_StreamLogRecord_record'
        nextRecordToken:
          description: |-
            This token allows you to continue streaming logs starting from the exact
            same record. To continue streaming, specify value of `next_record_token`
            as value for `record_token` parameter in the next StreamLogs request.
            This value is interchangeable with `next_page_token` from ListLogs method.
          type: string
    TimeOfDay:
      description: |-
        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB Cluster resource that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the MongoDB cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the MongoDB cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            The new set of labels will completely replace the old ones. To add a label, request the current
            set with the [get](/docs/managed-mongodb/api-ref/Cluster/get) method, then send an [update](/docs/managed-mongodb/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            New name for the cluster.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow'
        securityGroupIds:
          description: User security groups
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
    UpdateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the MongoDB cluster the user belongs to.
          type: string
        userName:
          description: Name of the user that is being updated.
          type: string
    UpdateUserRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateUserRequest_updateMask'
        password:
          description: |-
            New password for the user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: New set of permissions for the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    User:
      description: "A MongoDB User resource. For more information, see the \n[Developer's
        Guide](/docs/managed-mongodb/concepts)."
      type: object
      properties:
        name:
          description: Name of the MongoDB user.
          type: string
        clusterId:
          description: ID of the MongoDB cluster the user belongs to.
          type: string
        permissions:
          description: Set of permissions granted to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    UserSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the MongoDB user.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the MongoDB user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions to grant to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    WeeklyMaintenanceWindow:
      description: Weelky maintenance window settings.
      type: object
      properties:
        day:
          $ref: '#/components/schemas/WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day'
        hour:
          description: |-
            Hour of the day in UTC (in `HH` format).

            Acceptable values are 1 to 24, inclusive.
          type: string
          format: int64
    WeeklyMaintenanceWindowWeekDay:
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    BackupBackupType_in_Backup_type:
      description: |-
        How this backup was created (manual/automatic/etc...)

         - AUTOMATED: Backup created by automated daily schedule
         - MANUAL: Backup created by user request
      type: string
      enum:
      - AUTOMATED
      - MANUAL
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the MongoDB cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes
        are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterConfig_in_Cluster_config:
      description: Configuration of the MongoDB cluster.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: 'Version of MongoDB server software. Possible values: `3.6`,
              `4.0`, `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`.'
            type: string
          featureCompatibilityVersion:
            description: |-
              MongoDB feature compatibility version. See usage details in [MongoDB documentation](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion/).

              Possible values:
              * `3.6` - persist data compatibility for version 3.6. After setting this option the data will not be compatible with 3.4 or lower.
              * `4.0` - persist data compatibility for version 4.0. After setting this option the data will not be compatible with 3.6 or lower.
              * `4.2` - persist data compatibility for version 4.2. After setting this option the data will not be compatible with 4.0 or lower.
              * `4.4` - persist data compatibility for version 4.4. After setting this option the data will not be compatible with 4.2 or lower.
              * `5.0` - persist data compatibility for version 5.0. After setting this option the data will not be compatible with 5.0 or lower.
            type: string
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Time to start the daily backup, in the UTC timezone.
          backupRetainPeriodDays:
            description: Retain period of automatically created backup in days
            type: integer
            format: int64
          access:
            $ref: '#/components/schemas/Access'
            description: Access policy to DB
      - title: mongodb
        type: object
        maxProperties: 1
        properties:
          mongodb_3_6:
            $ref: '#/components/schemas/Mongodb3_6'
            description: Configuration and resource allocation for a MongoDB 3.6 cluster.
          mongodb_4_0:
            $ref: '#/components/schemas/Mongodb4_0'
            description: Configuration and resource allocation for a MongoDB 4.0 cluster.
          mongodb_4_2:
            $ref: '#/components/schemas/Mongodb4_2'
            description: Configuration and resource allocation for a MongoDB 4.2 cluster.
          mongodb_4_4:
            $ref: '#/components/schemas/Mongodb4_4'
            description: Configuration and resource allocation for a MongoDB 4.4 cluster.
          mongodb_5_0:
            $ref: '#/components/schemas/Mongodb5_0'
            description: Configuration and resource allocation for a MongoDB 5.0 cluster.
          mongodb_4_4Enterprise:
            $ref: '#/components/schemas/Mongodb4_4_enterprise'
            description: Configuration and resource allocation for a MongoDB 4.4 Enterprise
              cluster.
          mongodb_5_0Enterprise:
            $ref: '#/components/schemas/Mongodb5_0_enterprise'
            description: Configuration and resource allocation for a MongoDB 5.0 Enterprise
              cluster.
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: State of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is alive and well (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    MaintenanceWindow_in_Cluster_maintenanceWindow:
      description: |-
        Maintenance window for the cluster.

        A maintenance window settings.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: Maintenance operation can be scheduled anytime.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: Maintenance operation can be scheduled on a weekly basis.
    MaintenanceOperation_in_Cluster_plannedOperation:
      description: |-
        Planned maintenance operation to be started for the cluster within the nearest [maintenanceWindow](/docs/managed-mongodb/api-ref/Cluster#representation).

        A planned maintenance operation.
      type: object
      properties:
        info:
          description: |-
            Information about this maintenance operation.

            The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: |-
            Time until which this maintenance operation is delayed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Required.
        Deployment environment of the MongoDB cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes
        are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: |-
        Required.
        Configuration and resources for hosts that should be created for the MongoDB cluster.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: 'Version of MongoDB used in the cluster. Possible values:
              `3.6`, `4.0`, `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`.'
            type: string
          featureCompatibilityVersion:
            description: |-
              MongoDB feature compatibility version. See usage details in [MongoDB documentation](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion/).

              Possible values:
              * `3.6` - persist data compatibility for version 3.6. After setting this option the data will not be compatible with 3.4 or older.
              * `4.0` - persist data compatibility for version 4.0. After setting this option the data will not be compatible with 3.6 or older.
              * `4.2` - persist data compatibility for version 4.2. After setting this option the data will not be compatible with 4.0 or older.
              * `4.4` - persist data compatibility for version 4.4. After setting this option the data will not be compatible with 4.2 or older.
              * `5.0` - persist data compatibility for version 5.0. After setting this option the data will not be compatible with 4.4 or older.
            type: string
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Time to start the daily backup, in the UTC timezone.
          backupRetainPeriodDays:
            description: |-
              Retain period of automatically created backup in days

              Acceptable values are 7 to 35, inclusive.
            type: integer
            format: int64
          access:
            $ref: '#/components/schemas/Access'
            description: Access policy to DB
      - title: mongodb_spec
        type: object
        maxProperties: 1
        properties:
          mongodbSpec_3_6:
            $ref: '#/components/schemas/MongodbSpec3_6'
            description: Configuration and resource allocation for a MongoDB 3.6 cluster.
          mongodbSpec_4_0:
            $ref: '#/components/schemas/MongodbSpec4_0'
            description: Configuration and resource allocation for a MongoDB 4.0 cluster.
          mongodbSpec_4_2:
            $ref: '#/components/schemas/MongodbSpec4_2'
            description: Configuration and resource allocation for a MongoDB 4.2 cluster.
          mongodbSpec_4_4:
            $ref: '#/components/schemas/MongodbSpec4_4'
            description: Configuration and resource allocation for a MongoDB 4.4 cluster.
          mongodbSpec_5_0:
            $ref: '#/components/schemas/MongodbSpec5_0'
            description: Configuration and resource allocation for a MongoDB 5.0 cluster.
          mongodbSpec_4_4Enterprise:
            $ref: '#/components/schemas/MongodbSpec4_4_enterprise'
            description: Configuration and resource allocation for a MongoDB 4.4 Enterprise
              cluster.
          mongodbSpec_5_0Enterprise:
            $ref: '#/components/schemas/MongodbSpec5_0_enterprise'
            description: Configuration and resource allocation for a MongoDB 5.0 Enterprise
              cluster.
    DatabaseSpec_in_CreateDatabaseRequest_databaseSpec:
      description: |-
        Required.
        Configuration of the database to create.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the MongoDB database. 1-63 characters long.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]{1,63} ``.
          type: string
    UserSpec_in_CreateUserRequest_userSpec:
      description: Properties of the user to be created.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the MongoDB user.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the MongoDB user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions to grant to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    EnableClusterShardingRequestMongoCfg_in_EnableClusterShardingRequest_mongocfg:
      description: mongocfg specification for sharding.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_EnableClusterShardingRequestMongoCfg_resources'
    EnableClusterShardingRequestMongos_in_EnableClusterShardingRequest_mongos:
      description: mongos specification for sharding.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_EnableClusterShardingRequestMongos_resources'
    EnableClusterShardingRequestMongoInfra_in_EnableClusterShardingRequest_mongoinfra:
      description: mongos specification for sharding.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_EnableClusterShardingRequestMongoInfra_resources'
    Resources_in_EnableClusterShardingRequestMongoCfg_resources:
      description: |-
        Required.
        Resources for mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Resources_in_EnableClusterShardingRequestMongoInfra_resources:
      description: |-
        Required.
        Resources for mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Resources_in_EnableClusterShardingRequestMongos_resources:
      description: |-
        Required.
        Resources for mongos hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Permission_in_GrantUserPermissionRequest_permission:
      description: |-
        Required.
        Permission that should be granted to the specified user.
      type: object
      properties:
        databaseName:
          description: Name of the database that the permission grants access to.
          type: string
        roles:
          description: MongoDB roles for the `databaseName` database that the permission
            grants.
          type: array
          items:
            type: string
    Resources_in_Host_resources:
      description: Resources allocated to the MongoDB host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    HostRole_in_Host_role:
      description: |-
        Role of the host in the cluster.

         - ROLE_UNKNOWN: Role of the host in the cluster is unknown.
         - PRIMARY: Host is the primary MongoDB server in the cluster.
         - SECONDARY: Host is a secondary MongoDB server in the cluster.
      type: string
      enum:
      - ROLE_UNKNOWN
      - PRIMARY
      - SECONDARY
      default: ROLE_UNKNOWN
    HostHealth_in_Host_health:
      description: |-
        Status code of the aggregated health of the host.

         - HEALTH_UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable, and cannot perform any of its essential functions.
         - DEGRADED: The host is degraded, and can perform only some of its essential functions.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    HostType_in_Host_type:
      description: |-
        Host type

         - MONGOD: A mongod host.
         - MONGOS: A mongos host.
         - MONGOCFG: A mongocfg host.
         - MONGOINFRA: A mongoinfra (mongos+mongocfg) host.
      type: string
      enum:
      - MONGOD
      - MONGOS
      - MONGOCFG
      - MONGOINFRA
    HostType_in_HostSpec_type:
      description: |-
        Type of the host to be deployed.

         - MONGOD: A mongod host.
         - MONGOS: A mongos host.
         - MONGOCFG: A mongocfg host.
         - MONGOINFRA: A mongoinfra (mongos+mongocfg) host.
      type: string
      enum:
      - MONGOD
      - MONGOS
      - MONGOCFG
      - MONGOINFRA
    MongoCfgConfig3_6Storage_in_MongoCfgConfig3_6_storage:
      description: '`storage` section of mongocfg configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig3_6StorageWiredTiger_in_MongoCfgConfig3_6Storage_wiredTiger'
    MongoCfgConfig3_6OperationProfiling_in_MongoCfgConfig3_6_operationProfiling:
      description: '`operationProfiling` section of mongocfg configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfilingMode_in_MongoCfgConfig3_6OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v3.6/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig3_6Network_in_MongoCfgConfig3_6_net:
      description: '`net` section of mongocfg configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of incoming connections.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig3_6OperationProfilingMode_in_MongoCfgConfig3_6OperationProfiling_mode:
      description: |-
        Operation profiling level. For details, see [MongoDB documentation](https://docs.mongodb.com/v3.6/tutorial/manage-the-database-profiler/).

         - OFF: The profiler is off and does not collect any data. This is the default
        profiler level.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig3_6StorageWiredTiger_in_MongoCfgConfig3_6Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6StorageWiredTigerEngineConfig_in_MongoCfgConfig3_6StorageWiredTiger_engineConfig'
    MongoCfgConfig3_6StorageWiredTigerEngineConfig_in_MongoCfgConfig3_6StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_0Storage_in_MongoCfgConfig4_0_storage:
      description: '`storage` section of mongocfg configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_0StorageWiredTiger_in_MongoCfgConfig4_0Storage_wiredTiger'
    MongoCfgConfig4_0OperationProfiling_in_MongoCfgConfig4_0_operationProfiling:
      description: '`operationProfiling` section of mongocfg configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfilingMode_in_MongoCfgConfig4_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.0/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_0Network_in_MongoCfgConfig4_0_net:
      description: '`net` section of mongocfg configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_0OperationProfilingMode_in_MongoCfgConfig4_0OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_0StorageWiredTiger_in_MongoCfgConfig4_0Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0StorageWiredTigerEngineConfig_in_MongoCfgConfig4_0StorageWiredTiger_engineConfig'
    MongoCfgConfig4_0StorageWiredTigerEngineConfig_in_MongoCfgConfig4_0StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_2Storage_in_MongoCfgConfig4_2_storage:
      description: '`storage` section of mongocfg configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_2StorageWiredTiger_in_MongoCfgConfig4_2Storage_wiredTiger'
    MongoCfgConfig4_2OperationProfiling_in_MongoCfgConfig4_2_operationProfiling:
      description: '`operationProfiling` section of mongocfg configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfilingMode_in_MongoCfgConfig4_2OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.2/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_2Network_in_MongoCfgConfig4_2_net:
      description: '`net` section of mongocfg configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_2OperationProfilingMode_in_MongoCfgConfig4_2OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_2StorageWiredTiger_in_MongoCfgConfig4_2Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2StorageWiredTigerEngineConfig_in_MongoCfgConfig4_2StorageWiredTiger_engineConfig'
    MongoCfgConfig4_2StorageWiredTigerEngineConfig_in_MongoCfgConfig4_2StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_4Storage_in_MongoCfgConfig4_4_storage:
      description: '`storage` section of mongocfg configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_4StorageWiredTiger_in_MongoCfgConfig4_4Storage_wiredTiger'
    MongoCfgConfig4_4OperationProfiling_in_MongoCfgConfig4_4_operationProfiling:
      description: '`operationProfiling` section of mongocfg configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfilingMode_in_MongoCfgConfig4_4OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_4Network_in_MongoCfgConfig4_4_net:
      description: '`net` section of mongocfg configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_4OperationProfilingMode_in_MongoCfgConfig4_4OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_4StorageWiredTiger_in_MongoCfgConfig4_4Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4StorageWiredTigerEngineConfig_in_MongoCfgConfig4_4StorageWiredTiger_engineConfig'
    MongoCfgConfig4_4StorageWiredTigerEngineConfig_in_MongoCfgConfig4_4StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig4_4_enterpriseStorage_in_MongoCfgConfig4_4_enterprise_storage:
      description: '`storage` section of mongocfg configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorageWiredTiger_in_MongoCfgConfig4_4_enterpriseStorage_wiredTiger'
    MongoCfgConfig4_4_enterpriseOperationProfiling_in_MongoCfgConfig4_4_enterprise_operationProfiling:
      description: '`operationProfiling` section of mongocfg configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfilingMode_in_MongoCfgConfig4_4_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig4_4_enterpriseNetwork_in_MongoCfgConfig4_4_enterprise_net:
      description: '`net` section of mongocfg configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig4_4_enterpriseOperationProfilingMode_in_MongoCfgConfig4_4_enterpriseOperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig4_4_enterpriseStorageWiredTiger_in_MongoCfgConfig4_4_enterpriseStorage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorageWiredTigerEngineConfig_in_MongoCfgConfig4_4_enterpriseStorageWiredTiger_engineConfig'
    MongoCfgConfig4_4_enterpriseStorageWiredTigerEngineConfig_in_MongoCfgConfig4_4_enterpriseStorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig5_0Storage_in_MongoCfgConfig5_0_storage:
      description: '`storage` section of mongocfg configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig5_0StorageWiredTiger_in_MongoCfgConfig5_0Storage_wiredTiger'
    MongoCfgConfig5_0OperationProfiling_in_MongoCfgConfig5_0_operationProfiling:
      description: '`operationProfiling` section of mongocfg configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfilingMode_in_MongoCfgConfig5_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig5_0Network_in_MongoCfgConfig5_0_net:
      description: '`net` section of mongocfg configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig5_0OperationProfilingMode_in_MongoCfgConfig5_0OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig5_0StorageWiredTiger_in_MongoCfgConfig5_0Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0StorageWiredTigerEngineConfig_in_MongoCfgConfig5_0StorageWiredTiger_engineConfig'
    MongoCfgConfig5_0StorageWiredTigerEngineConfig_in_MongoCfgConfig5_0StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig5_0_enterpriseStorage_in_MongoCfgConfig5_0_enterprise_storage:
      description: '`storage` section of mongocfg configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorageWiredTiger_in_MongoCfgConfig5_0_enterpriseStorage_wiredTiger'
    MongoCfgConfig5_0_enterpriseOperationProfiling_in_MongoCfgConfig5_0_enterprise_operationProfiling:
      description: '`operationProfiling` section of mongocfg configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfilingMode_in_MongoCfgConfig5_0_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode. For details see [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/#operationProfiling.slowOpThresholdMs).

            Value must be greater than 0.
          type: integer
          format: int64
    MongoCfgConfig5_0_enterpriseNetwork_in_MongoCfgConfig5_0_enterprise_net:
      description: '`net` section of mongocfg configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongocfg will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongoCfgConfig5_0_enterpriseOperationProfilingMode_in_MongoCfgConfig5_0_enterpriseOperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongoCfgConfig5_0_enterpriseStorageWiredTiger_in_MongoCfgConfig5_0_enterpriseStorage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorageWiredTigerEngineConfig_in_MongoCfgConfig5_0_enterpriseStorageWiredTiger_engineConfig'
    MongoCfgConfig5_0_enterpriseStorageWiredTigerEngineConfig_in_MongoCfgConfig5_0_enterpriseStorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_effectiveConfig:
      description: |-
        Effective mongocfg settings for a MongoDB 3.6 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig3_6Storage_in_MongoCfgConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfiling_in_MongoCfgConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig3_6Network_in_MongoCfgConfig3_6_net'
    MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_userConfig:
      description: User-defined mongocfg settings for a MongoDB 3.6 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig3_6Storage_in_MongoCfgConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfiling_in_MongoCfgConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig3_6Network_in_MongoCfgConfig3_6_net'
    MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_defaultConfig:
      description: Default mongocfg configuration for a MongoDB 3.6 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig3_6Storage_in_MongoCfgConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfiling_in_MongoCfgConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig3_6Network_in_MongoCfgConfig3_6_net'
    MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_effectiveConfig:
      description: |-
        Effective mongocfg settings for a MongoDB 4.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_0Storage_in_MongoCfgConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfiling_in_MongoCfgConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_0Network_in_MongoCfgConfig4_0_net'
    MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_userConfig:
      description: User-defined mongocfg settings for a MongoDB 4.0 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_0Storage_in_MongoCfgConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfiling_in_MongoCfgConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_0Network_in_MongoCfgConfig4_0_net'
    MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_defaultConfig:
      description: Default mongocfg configuration for a MongoDB 4.0 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_0Storage_in_MongoCfgConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfiling_in_MongoCfgConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_0Network_in_MongoCfgConfig4_0_net'
    MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_effectiveConfig:
      description: |-
        Effective mongocfg settings for a MongoDB 4.2 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_2Storage_in_MongoCfgConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfiling_in_MongoCfgConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_2Network_in_MongoCfgConfig4_2_net'
    MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_userConfig:
      description: User-defined mongocfg settings for a MongoDB 4.2 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_2Storage_in_MongoCfgConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfiling_in_MongoCfgConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_2Network_in_MongoCfgConfig4_2_net'
    MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_defaultConfig:
      description: Default mongocfg configuration for a MongoDB 4.2 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_2Storage_in_MongoCfgConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfiling_in_MongoCfgConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_2Network_in_MongoCfgConfig4_2_net'
    MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_effectiveConfig:
      description: |-
        Effective mongocfg settings for a MongoDB 4.4 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4Storage_in_MongoCfgConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfiling_in_MongoCfgConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4Network_in_MongoCfgConfig4_4_net'
    MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_userConfig:
      description: User-defined mongocfg settings for a MongoDB 4.4 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4Storage_in_MongoCfgConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfiling_in_MongoCfgConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4Network_in_MongoCfgConfig4_4_net'
    MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_defaultConfig:
      description: Default mongocfg configuration for a MongoDB 4.4 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4Storage_in_MongoCfgConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfiling_in_MongoCfgConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4Network_in_MongoCfgConfig4_4_net'
    MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_effectiveConfig:
      description: |-
        Effective mongocfg settings for a MongoDB 4.4 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorage_in_MongoCfgConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfiling_in_MongoCfgConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseNetwork_in_MongoCfgConfig4_4_enterprise_net'
    MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_userConfig:
      description: User-defined mongocfg settings for a MongoDB 4.4 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorage_in_MongoCfgConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfiling_in_MongoCfgConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseNetwork_in_MongoCfgConfig4_4_enterprise_net'
    MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_defaultConfig:
      description: Default mongocfg configuration for a MongoDB 4.4 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorage_in_MongoCfgConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfiling_in_MongoCfgConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseNetwork_in_MongoCfgConfig4_4_enterprise_net'
    MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_effectiveConfig:
      description: |-
        Effective mongocfg settings for a MongoDB 5.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0Storage_in_MongoCfgConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfiling_in_MongoCfgConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0Network_in_MongoCfgConfig5_0_net'
    MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_userConfig:
      description: User-defined mongocfg settings for a MongoDB 5.0 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0Storage_in_MongoCfgConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfiling_in_MongoCfgConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0Network_in_MongoCfgConfig5_0_net'
    MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_defaultConfig:
      description: Default mongocfg configuration for a MongoDB 5.0 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0Storage_in_MongoCfgConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfiling_in_MongoCfgConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0Network_in_MongoCfgConfig5_0_net'
    MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_effectiveConfig:
      description: |-
        Effective mongocfg settings for a MongoDB 5.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorage_in_MongoCfgConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfiling_in_MongoCfgConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseNetwork_in_MongoCfgConfig5_0_enterprise_net'
    MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_userConfig:
      description: User-defined mongocfg settings for a MongoDB 5.0 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorage_in_MongoCfgConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfiling_in_MongoCfgConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseNetwork_in_MongoCfgConfig5_0_enterprise_net'
    MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_defaultConfig:
      description: Default mongocfg configuration for a MongoDB 5.0 cluster.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorage_in_MongoCfgConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfiling_in_MongoCfgConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseNetwork_in_MongoCfgConfig5_0_enterprise_net'
    MongodConfig3_6Storage_in_MongodConfig3_6_storage:
      description: '`storage` section of mongod configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTiger_in_MongodConfig3_6Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig3_6StorageJournal_in_MongodConfig3_6Storage_journal'
    MongodConfig3_6OperationProfiling_in_MongodConfig3_6_operationProfiling:
      description: '`operationProfiling` section of mongod configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig3_6OperationProfilingMode_in_MongodConfig3_6OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig3_6Network_in_MongodConfig3_6_net:
      description: '`net` section of mongod configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig3_6OperationProfilingMode_in_MongodConfig3_6OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig3_6StorageWiredTiger_in_MongodConfig3_6Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTigerEngineConfig_in_MongodConfig3_6StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTigerCollectionConfig_in_MongodConfig3_6StorageWiredTiger_collectionConfig'
    MongodConfig3_6StorageJournal_in_MongodConfig3_6Storage_journal:
      description: Configuration of the MongoDB [journal](https://docs.mongodb.com/v3.6/reference/glossary/#term-journal).
      type: object
      properties:
        enabled:
          description: |-
            Whether the journal is enabled or disabled.
            Possible values:
            * true (default) - the journal is enabled.
            * false - the journal is disabled.
          type: boolean
          format: boolean
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig3_6StorageWiredTigerEngineConfig_in_MongodConfig3_6StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig3_6StorageWiredTigerCollectionConfig_in_MongodConfig3_6StorageWiredTiger_collectionConfig:
      description: Collection configuration for WiredTiger.
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig3_6StorageWiredTigerCollectionConfigCompressor_in_MongodConfig3_6StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig3_6StorageWiredTigerCollectionConfigCompressor_in_MongodConfig3_6StorageWiredTigerCollectionConfig_blockCompressor:
      description: |-
        Default type of compression to use for collection data.

         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v3.6/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v3.6/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_0Storage_in_MongodConfig4_0_storage:
      description: '`storage` section of mongod configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTiger_in_MongodConfig4_0Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_0StorageJournal_in_MongodConfig4_0Storage_journal'
    MongodConfig4_0OperationProfiling_in_MongodConfig4_0_operationProfiling:
      description: '`operationProfiling` section of mongod configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_0OperationProfilingMode_in_MongodConfig4_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_0Network_in_MongodConfig4_0_net:
      description: '`net` section of mongod configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_0OperationProfilingMode_in_MongodConfig4_0OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_0StorageWiredTiger_in_MongodConfig4_0Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTigerEngineConfig_in_MongodConfig4_0StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTigerCollectionConfig_in_MongodConfig4_0StorageWiredTiger_collectionConfig'
    MongodConfig4_0StorageJournal_in_MongodConfig4_0Storage_journal:
      description: Configuration of the MongoDB [journal](https://docs.mongodb.com/v4.0/reference/glossary/#term-journal).
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_0StorageWiredTigerEngineConfig_in_MongodConfig4_0StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_0StorageWiredTigerCollectionConfig_in_MongodConfig4_0StorageWiredTiger_collectionConfig:
      description: Collection configuration for WiredTiger.
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_0StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_0StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig4_0StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_0StorageWiredTigerCollectionConfig_blockCompressor:
      description: |-
        Default type of compression to use for collection data.

         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.0/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.0/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_2Storage_in_MongodConfig4_2_storage:
      description: '`storage` section of mongod configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTiger_in_MongodConfig4_2Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_2StorageJournal_in_MongodConfig4_2Storage_journal'
    MongodConfig4_2OperationProfiling_in_MongodConfig4_2_operationProfiling:
      description: '`operationProfiling` section of mongod configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_2OperationProfilingMode_in_MongodConfig4_2OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_2Network_in_MongodConfig4_2_net:
      description: '`net` section of mongod configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_2OperationProfilingMode_in_MongodConfig4_2OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_2StorageWiredTiger_in_MongodConfig4_2Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTigerEngineConfig_in_MongodConfig4_2StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTigerCollectionConfig_in_MongodConfig4_2StorageWiredTiger_collectionConfig'
    MongodConfig4_2StorageJournal_in_MongodConfig4_2Storage_journal:
      description: Configuration of the MongoDB [journal](https://docs.mongodb.com/v4.2/reference/glossary/#term-journal).
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_2StorageWiredTigerEngineConfig_in_MongodConfig4_2StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_2StorageWiredTigerCollectionConfig_in_MongodConfig4_2StorageWiredTiger_collectionConfig:
      description: Collection configuration for WiredTiger.
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_2StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_2StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig4_2StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_2StorageWiredTigerCollectionConfig_blockCompressor:
      description: |-
        Default type of compression to use for collection data.

         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.2/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.2/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_4Storage_in_MongodConfig4_4_storage:
      description: '`storage` section of mongod configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTiger_in_MongodConfig4_4Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_4StorageJournal_in_MongodConfig4_4Storage_journal'
    MongodConfig4_4OperationProfiling_in_MongodConfig4_4_operationProfiling:
      description: '`operationProfiling` section of mongod configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_4OperationProfilingMode_in_MongodConfig4_4OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_4Network_in_MongodConfig4_4_net:
      description: '`net` section of mongod configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_4OperationProfilingMode_in_MongodConfig4_4OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_4StorageWiredTiger_in_MongodConfig4_4Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTigerEngineConfig_in_MongodConfig4_4StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTigerCollectionConfig_in_MongodConfig4_4StorageWiredTiger_collectionConfig'
    MongodConfig4_4StorageJournal_in_MongodConfig4_4Storage_journal:
      description: Configuration of the MongoDB [journal](https://docs.mongodb.com/v4.4/reference/glossary/#term-journal).
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_4StorageWiredTigerEngineConfig_in_MongodConfig4_4StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_4StorageWiredTigerCollectionConfig_in_MongodConfig4_4StorageWiredTiger_collectionConfig:
      description: Collection configuration for WiredTiger.
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_4StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_4StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig4_4StorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_4StorageWiredTigerCollectionConfig_blockCompressor:
      description: |-
        Default type of compression to use for collection data.

         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.4/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.4/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig4_4_enterpriseStorage_in_MongodConfig4_4_enterprise_storage:
      description: '`storage` section of mongod configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTiger_in_MongodConfig4_4_enterpriseStorage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageJournal_in_MongodConfig4_4_enterpriseStorage_journal'
    MongodConfig4_4_enterpriseOperationProfiling_in_MongodConfig4_4_enterprise_operationProfiling:
      description: '`operationProfiling` section of mongod configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseOperationProfilingMode_in_MongodConfig4_4_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig4_4_enterpriseNetwork_in_MongodConfig4_4_enterprise_net:
      description: '`net` section of mongod configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig4_4_enterpriseSecurity_in_MongodConfig4_4_enterprise_security:
      description: '`security` section of mongod configuration.'
      type: object
      properties:
        enableEncryption:
          description: If encryption at rest should be enabled or not
          type: boolean
          format: boolean
        kmip:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSecurityKMIP_in_MongodConfig4_4_enterpriseSecurity_kmip'
    MongodConfig4_4_enterpriseAuditLog_in_MongodConfig4_4_enterprise_auditLog:
      description: '`AuditLog` section of mongod configuration.'
      type: object
      properties:
        filter:
          description: Audit filter
          type: string
    MongodConfig4_4_enterpriseSetParameter_in_MongodConfig4_4_enterprise_setParameter:
      description: '`SetParameter` section of mongod configuration.'
      type: object
      properties:
        auditAuthorizationSuccess:
          description: Enables the auditing of authorization successes
          type: boolean
          format: boolean
    MongodConfig4_4_enterpriseOperationProfilingMode_in_MongodConfig4_4_enterpriseOperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig4_4_enterpriseSecurityKMIP_in_MongodConfig4_4_enterpriseSecurity_kmip:
      description: '`kmip` section of mongod security config'
      type: object
      properties:
        serverName:
          description: KMIP server name
          type: string
        port:
          description: KMIP server port
          type: integer
          format: int64
        serverCa:
          description: KMIP Server CA
          type: string
        clientCertificate:
          description: KMIP client certificate + private key (unencrypted)
          type: string
        keyIdentifier:
          description: KMIP Key identifier (if any)
          type: string
    MongodConfig4_4_enterpriseStorageWiredTiger_in_MongodConfig4_4_enterpriseStorage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTigerEngineConfig_in_MongodConfig4_4_enterpriseStorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfig_in_MongodConfig4_4_enterpriseStorageWiredTiger_collectionConfig'
    MongodConfig4_4_enterpriseStorageJournal_in_MongodConfig4_4_enterpriseStorage_journal:
      description: Configuration of the MongoDB [journal](https://docs.mongodb.com/v4.4/reference/glossary/#term-journal).
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig4_4_enterpriseStorageWiredTigerEngineConfig_in_MongodConfig4_4_enterpriseStorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfig_in_MongodConfig4_4_enterpriseStorageWiredTiger_collectionConfig:
      description: Collection configuration for WiredTiger.
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfig_blockCompressor'
    ? MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfigCompressor_in_MongodConfig4_4_enterpriseStorageWiredTigerCollectionConfig_blockCompressor
    : description: |-
        Default type of compression to use for collection data.

         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v4.4/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v4.4/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig5_0Storage_in_MongodConfig5_0_storage:
      description: '`storage` section of mongod configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTiger_in_MongodConfig5_0Storage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig5_0StorageJournal_in_MongodConfig5_0Storage_journal'
    MongodConfig5_0OperationProfiling_in_MongodConfig5_0_operationProfiling:
      description: '`operationProfiling` section of mongod configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig5_0OperationProfilingMode_in_MongodConfig5_0OperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig5_0Network_in_MongodConfig5_0_net:
      description: '`net` section of mongod configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig5_0OperationProfilingMode_in_MongodConfig5_0OperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig5_0StorageWiredTiger_in_MongodConfig5_0Storage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTigerEngineConfig_in_MongodConfig5_0StorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTigerCollectionConfig_in_MongodConfig5_0StorageWiredTiger_collectionConfig'
    MongodConfig5_0StorageJournal_in_MongodConfig5_0Storage_journal:
      description: Configuration of the MongoDB [journal](https://docs.mongodb.com/v5.0/reference/glossary/#term-journal).
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig5_0StorageWiredTigerEngineConfig_in_MongodConfig5_0StorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig5_0StorageWiredTigerCollectionConfig_in_MongodConfig5_0StorageWiredTiger_collectionConfig:
      description: Collection configuration for WiredTiger.
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig5_0StorageWiredTigerCollectionConfigCompressor_in_MongodConfig5_0StorageWiredTigerCollectionConfig_blockCompressor'
    MongodConfig5_0StorageWiredTigerCollectionConfigCompressor_in_MongodConfig5_0StorageWiredTigerCollectionConfig_blockCompressor:
      description: |-
        Default type of compression to use for collection data.

         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v5.0/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v5.0/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig5_0_enterpriseStorage_in_MongodConfig5_0_enterprise_storage:
      description: '`storage` section of mongod configuration.'
      type: object
      properties:
        wiredTiger:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTiger_in_MongodConfig5_0_enterpriseStorage_wiredTiger'
        journal:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageJournal_in_MongodConfig5_0_enterpriseStorage_journal'
    MongodConfig5_0_enterpriseOperationProfiling_in_MongodConfig5_0_enterprise_operationProfiling:
      description: '`operationProfiling` section of mongod configuration.'
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseOperationProfilingMode_in_MongodConfig5_0_enterpriseOperationProfiling_mode'
        slowOpThreshold:
          description: |-
            The slow operation time threshold, in milliseconds. Operations that run
            for longer than this threshold are considered slow, and are processed by the profiler
            running in the SLOW_OP mode.

            Value must be greater than 0.
          type: integer
          format: int64
    MongodConfig5_0_enterpriseNetwork_in_MongodConfig5_0_enterprise_net:
      description: '`net` section of mongod configuration.'
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongod will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongodConfig5_0_enterpriseSecurity_in_MongodConfig5_0_enterprise_security:
      description: '`security` section of mongod configuration.'
      type: object
      properties:
        enableEncryption:
          description: If encryption at rest should be enabled or not
          type: boolean
          format: boolean
        kmip:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSecurityKMIP_in_MongodConfig5_0_enterpriseSecurity_kmip'
    MongodConfig5_0_enterpriseAuditLog_in_MongodConfig5_0_enterprise_auditLog:
      description: '`AuditLog` section of mongod configuration.'
      type: object
      properties:
        filter:
          description: Audit filter
          type: string
        runtimeConfiguration:
          description: Allows runtime configuration of audit filter and auditAuthorizationSuccess
          type: boolean
          format: boolean
    MongodConfig5_0_enterpriseSetParameter_in_MongodConfig5_0_enterprise_setParameter:
      description: '`SetParameter` section of mongod configuration.'
      type: object
      properties:
        auditAuthorizationSuccess:
          description: Enables the auditing of authorization successes
          type: boolean
          format: boolean
    MongodConfig5_0_enterpriseOperationProfilingMode_in_MongodConfig5_0_enterpriseOperationProfiling_mode:
      description: |-
        Mode which specifies operations that should be profiled.

         - OFF: The profiler is off and does not collect any data.
         - SLOW_OP: The profiler collects data for operations that take longer than the value of `slowOpThreshold`.
         - ALL: The profiler collects data for all operations.
      type: string
      enum:
      - "OFF"
      - SLOW_OP
      - ALL
    MongodConfig5_0_enterpriseSecurityKMIP_in_MongodConfig5_0_enterpriseSecurity_kmip:
      description: '`kmip` section of mongod security config'
      type: object
      properties:
        serverName:
          description: KMIP server name
          type: string
        port:
          description: KMIP server port
          type: integer
          format: int64
        serverCa:
          description: KMIP Server CA
          type: string
        clientCertificate:
          description: KMIP client certificate + private key (unencrypted)
          type: string
        keyIdentifier:
          description: KMIP Key identifier (if any)
          type: string
    MongodConfig5_0_enterpriseStorageWiredTiger_in_MongodConfig5_0_enterpriseStorage_wiredTiger:
      description: |-
        Configuration of the WiredTiger storage engine.

        Configuration of WiredTiger storage engine.
      type: object
      properties:
        engineConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTigerEngineConfig_in_MongodConfig5_0_enterpriseStorageWiredTiger_engineConfig'
        collectionConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfig_in_MongodConfig5_0_enterpriseStorageWiredTiger_collectionConfig'
    MongodConfig5_0_enterpriseStorageJournal_in_MongodConfig5_0_enterpriseStorage_journal:
      description: Configuration of the MongoDB [journal](https://docs.mongodb.com/v5.0/reference/glossary/#term-journal).
      type: object
      properties:
        commitInterval:
          description: |-
            Commit interval between journal operations, in milliseconds.
            Default: 100.

            Acceptable values are 1 to 500, inclusive.
          type: integer
          format: int64
    MongodConfig5_0_enterpriseStorageWiredTigerEngineConfig_in_MongodConfig5_0_enterpriseStorageWiredTiger_engineConfig:
      description: Engine configuration for WiredTiger.
      type: object
      properties:
        cacheSizeGb:
          description: The maximum size of the internal cache that WiredTiger will
            use for all data.
          type: number
          format: double
    MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfig_in_MongodConfig5_0_enterpriseStorageWiredTiger_collectionConfig:
      description: Collection configuration for WiredTiger.
      type: object
      properties:
        blockCompressor:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfigCompressor_in_MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfig_blockCompressor'
    ? MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfigCompressor_in_MongodConfig5_0_enterpriseStorageWiredTigerCollectionConfig_blockCompressor
    : description: |-
        Default type of compression to use for collection data.

         - NONE: No compression.
         - SNAPPY: The [Snappy](https://docs.mongodb.com/v5.0/reference/glossary/#term-snappy) compression.
         - ZLIB: The [zlib](https://docs.mongodb.com/v5.0/reference/glossary/#term-zlib) compression.
      type: string
      enum:
      - NONE
      - SNAPPY
      - ZLIB
    MongodConfig3_6_in_MongodConfigSet3_6_effectiveConfig:
      description: |-
        Effective mongod settings for a MongoDB 3.6 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v3.6/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig3_6Storage_in_MongodConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig3_6OperationProfiling_in_MongodConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig3_6Network_in_MongodConfig3_6_net'
    MongodConfig3_6_in_MongodConfigSet3_6_userConfig:
      description: |-
        User-defined mongod settings for a MongoDB 3.6 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v3.6/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig3_6Storage_in_MongodConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig3_6OperationProfiling_in_MongodConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig3_6Network_in_MongodConfig3_6_net'
    MongodConfig3_6_in_MongodConfigSet3_6_defaultConfig:
      description: |-
        Default mongod configuration for a MongoDB 3.6 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v3.6/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig3_6Storage_in_MongodConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig3_6OperationProfiling_in_MongodConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig3_6Network_in_MongodConfig3_6_net'
    MongodConfig4_0_in_MongodConfigSet4_0_effectiveConfig:
      description: |-
        Effective mongod settings for a MongoDB 4.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_0Storage_in_MongodConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_0OperationProfiling_in_MongodConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_0Network_in_MongodConfig4_0_net'
    MongodConfig4_0_in_MongodConfigSet4_0_userConfig:
      description: |-
        User-defined mongod settings for a MongoDB 4.0 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_0Storage_in_MongodConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_0OperationProfiling_in_MongodConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_0Network_in_MongodConfig4_0_net'
    MongodConfig4_0_in_MongodConfigSet4_0_defaultConfig:
      description: |-
        Default mongod configuration for a MongoDB 4.0 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_0Storage_in_MongodConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_0OperationProfiling_in_MongodConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_0Network_in_MongodConfig4_0_net'
    MongodConfig4_2_in_MongodConfigSet4_2_effectiveConfig:
      description: |-
        Effective mongod settings for a MongoDB 4.2 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.2/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_2Storage_in_MongodConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_2OperationProfiling_in_MongodConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_2Network_in_MongodConfig4_2_net'
    MongodConfig4_2_in_MongodConfigSet4_2_userConfig:
      description: |-
        User-defined mongod settings for a MongoDB 4.2 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.2/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_2Storage_in_MongodConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_2OperationProfiling_in_MongodConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_2Network_in_MongodConfig4_2_net'
    MongodConfig4_2_in_MongodConfigSet4_2_defaultConfig:
      description: |-
        Default mongod configuration for a MongoDB 4.2 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.2/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_2Storage_in_MongodConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_2OperationProfiling_in_MongodConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_2Network_in_MongodConfig4_2_net'
    MongodConfig4_4_in_MongodConfigSet4_4_effectiveConfig:
      description: |-
        Effective mongod settings for a MongoDB 4.4 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4Storage_in_MongodConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4OperationProfiling_in_MongodConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4Network_in_MongodConfig4_4_net'
    MongodConfig4_4_in_MongodConfigSet4_4_userConfig:
      description: |-
        User-defined mongod settings for a MongoDB 4.4 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4Storage_in_MongodConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4OperationProfiling_in_MongodConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4Network_in_MongodConfig4_4_net'
    MongodConfig4_4_in_MongodConfigSet4_4_defaultConfig:
      description: |-
        Default mongod configuration for a MongoDB 4.4 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4Storage_in_MongodConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4OperationProfiling_in_MongodConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4Network_in_MongodConfig4_4_net'
    MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_effectiveConfig:
      description: |-
        Effective mongod settings for a MongoDB 4.4 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorage_in_MongodConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseOperationProfiling_in_MongodConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseNetwork_in_MongodConfig4_4_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSecurity_in_MongodConfig4_4_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseAuditLog_in_MongodConfig4_4_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSetParameter_in_MongodConfig4_4_enterprise_setParameter'
    MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_userConfig:
      description: |-
        User-defined mongod settings for a MongoDB 4.4 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorage_in_MongodConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseOperationProfiling_in_MongodConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseNetwork_in_MongodConfig4_4_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSecurity_in_MongodConfig4_4_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseAuditLog_in_MongodConfig4_4_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSetParameter_in_MongodConfig4_4_enterprise_setParameter'
    MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_defaultConfig:
      description: |-
        Default mongod configuration for a MongoDB 4.4 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorage_in_MongodConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseOperationProfiling_in_MongodConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseNetwork_in_MongodConfig4_4_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSecurity_in_MongodConfig4_4_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseAuditLog_in_MongodConfig4_4_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSetParameter_in_MongodConfig4_4_enterprise_setParameter'
    MongodConfig5_0_in_MongodConfigSet5_0_effectiveConfig:
      description: |-
        Effective mongod settings for a MongoDB 5.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0Storage_in_MongodConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0OperationProfiling_in_MongodConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0Network_in_MongodConfig5_0_net'
    MongodConfig5_0_in_MongodConfigSet5_0_userConfig:
      description: |-
        User-defined mongod settings for a MongoDB 5.0 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0Storage_in_MongodConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0OperationProfiling_in_MongodConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0Network_in_MongodConfig5_0_net'
    MongodConfig5_0_in_MongodConfigSet5_0_defaultConfig:
      description: |-
        Default mongod configuration for a MongoDB 5.0 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0Storage_in_MongodConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0OperationProfiling_in_MongodConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0Network_in_MongodConfig5_0_net'
    MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_effectiveConfig:
      description: |-
        Effective mongod settings for a MongoDB 5.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorage_in_MongodConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseOperationProfiling_in_MongodConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseNetwork_in_MongodConfig5_0_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSecurity_in_MongodConfig5_0_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseAuditLog_in_MongodConfig5_0_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSetParameter_in_MongodConfig5_0_enterprise_setParameter'
    MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_userConfig:
      description: |-
        User-defined mongod settings for a MongoDB 5.0 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorage_in_MongodConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseOperationProfiling_in_MongodConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseNetwork_in_MongodConfig5_0_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSecurity_in_MongodConfig5_0_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseAuditLog_in_MongodConfig5_0_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSetParameter_in_MongodConfig5_0_enterprise_setParameter'
    MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_defaultConfig:
      description: |-
        Default mongod configuration for a MongoDB 5.0 cluster.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorage_in_MongodConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseOperationProfiling_in_MongodConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseNetwork_in_MongodConfig5_0_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSecurity_in_MongodConfig5_0_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseAuditLog_in_MongodConfig5_0_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSetParameter_in_MongodConfig5_0_enterprise_setParameter'
    Mongodb3_6Mongod_in_Mongodb3_6_mongod:
      description: Configuration and resource allocation for mongod in a MongoDB 3.6
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet3_6_in_Mongodb3_6Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6Mongod_resources'
    Mongodb3_6MongoCfg_in_Mongodb3_6_mongocfg:
      description: Configuration and resource allocation for mongocfg in a MongoDB
        3.6 cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet3_6_in_Mongodb3_6MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6MongoCfg_resources'
    Mongodb3_6Mongos_in_Mongodb3_6_mongos:
      description: Configuration and resource allocation for mongos in a MongoDB 3.6
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet3_6_in_Mongodb3_6Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6Mongos_resources'
    Mongodb3_6MongoInfra_in_Mongodb3_6_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        in a MongoDB 3.6 cluster.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet3_6_in_Mongodb3_6MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet3_6_in_Mongodb3_6MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb3_6MongoInfra_resources'
    MongoCfgConfigSet3_6_in_Mongodb3_6MongoCfg_config:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_defaultConfig'
    Resources_in_Mongodb3_6MongoCfg_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet3_6_in_Mongodb3_6MongoInfra_configMongos:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_defaultConfig'
    MongoCfgConfigSet3_6_in_Mongodb3_6MongoInfra_configMongocfg:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongoCfgConfigSet3_6_defaultConfig'
    Resources_in_Mongodb3_6MongoInfra_resources:
      description: Resources allocated to mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfigSet3_6_in_Mongodb3_6Mongod_config:
      description: Configuration for a mongod 3.6 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodConfigSet3_6_defaultConfig'
    Resources_in_Mongodb3_6Mongod_resources:
      description: Resources allocated to MongoDB hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet3_6_in_Mongodb3_6Mongos_config:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongosConfigSet3_6_defaultConfig'
    Resources_in_Mongodb3_6Mongos_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Mongodb4_0Mongod_in_Mongodb4_0_mongod:
      description: Configuration and resource allocation for mongod in a MongoDB 4.0
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_0_in_Mongodb4_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0Mongod_resources'
    Mongodb4_0MongoCfg_in_Mongodb4_0_mongocfg:
      description: Configuration and resource allocation for mongocfg in a MongoDB
        4.0 cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_0_in_Mongodb4_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0MongoCfg_resources'
    Mongodb4_0Mongos_in_Mongodb4_0_mongos:
      description: Configuration and resource allocation for mongos in a MongoDB 4.0
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_0_in_Mongodb4_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0Mongos_resources'
    Mongodb4_0MongoInfra_in_Mongodb4_0_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        in a MongoDB 4.0 cluster.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_0_in_Mongodb4_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_0_in_Mongodb4_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_0MongoInfra_resources'
    MongoCfgConfigSet4_0_in_Mongodb4_0MongoCfg_config:
      description: Configuration for mongocfg 4.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_defaultConfig'
    Resources_in_Mongodb4_0MongoCfg_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_0_in_Mongodb4_0MongoInfra_configMongos:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_defaultConfig'
    MongoCfgConfigSet4_0_in_Mongodb4_0MongoInfra_configMongocfg:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongoCfgConfigSet4_0_defaultConfig'
    Resources_in_Mongodb4_0MongoInfra_resources:
      description: Resources allocated to mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfigSet4_0_in_Mongodb4_0Mongod_config:
      description: Configuration for mongod 4.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodConfigSet4_0_defaultConfig'
    Resources_in_Mongodb4_0Mongod_resources:
      description: Resources allocated to mongod hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_0_in_Mongodb4_0Mongos_config:
      description: Configuration for mongos 4.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongosConfigSet4_0_defaultConfig'
    Resources_in_Mongodb4_0Mongos_resources:
      description: Resources allocated to mongos hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Mongodb4_2Mongod_in_Mongodb4_2_mongod:
      description: Configuration and resource allocation for mongod in a MongoDB 4.2
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_2_in_Mongodb4_2Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2Mongod_resources'
    Mongodb4_2MongoCfg_in_Mongodb4_2_mongocfg:
      description: Configuration and resource allocation for mongocfg in a MongoDB
        4.2 cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_2_in_Mongodb4_2MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2MongoCfg_resources'
    Mongodb4_2Mongos_in_Mongodb4_2_mongos:
      description: Configuration and resource allocation for mongos in a MongoDB 4.2
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_2_in_Mongodb4_2Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2Mongos_resources'
    Mongodb4_2MongoInfra_in_Mongodb4_2_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        in a MongoDB 4.2 cluster.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_2_in_Mongodb4_2MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_2_in_Mongodb4_2MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_2MongoInfra_resources'
    MongoCfgConfigSet4_2_in_Mongodb4_2MongoCfg_config:
      description: Configuration for mongocfg 4.2 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_defaultConfig'
    Resources_in_Mongodb4_2MongoCfg_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_2_in_Mongodb4_2MongoInfra_configMongos:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_defaultConfig'
    MongoCfgConfigSet4_2_in_Mongodb4_2MongoInfra_configMongocfg:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongoCfgConfigSet4_2_defaultConfig'
    Resources_in_Mongodb4_2MongoInfra_resources:
      description: Resources allocated to mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfigSet4_2_in_Mongodb4_2Mongod_config:
      description: Configuration for mongod 4.2 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodConfigSet4_2_defaultConfig'
    Resources_in_Mongodb4_2Mongod_resources:
      description: Resources allocated to mongod hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_2_in_Mongodb4_2Mongos_config:
      description: Configuration for mongos 4.2 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongosConfigSet4_2_defaultConfig'
    Resources_in_Mongodb4_2Mongos_resources:
      description: Resources allocated to mongos hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Mongodb4_4Mongod_in_Mongodb4_4_mongod:
      description: Configuration and resource allocation for mongod in a MongoDB 4.4
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_4_in_Mongodb4_4Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4Mongod_resources'
    Mongodb4_4MongoCfg_in_Mongodb4_4_mongocfg:
      description: Configuration and resource allocation for mongocfg in a MongoDB
        4.4 cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_in_Mongodb4_4MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4MongoCfg_resources'
    Mongodb4_4Mongos_in_Mongodb4_4_mongos:
      description: Configuration and resource allocation for mongos in a MongoDB 4.4
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_4_in_Mongodb4_4Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4Mongos_resources'
    Mongodb4_4MongoInfra_in_Mongodb4_4_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        in a MongoDB 4.4 cluster.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_4_in_Mongodb4_4MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_in_Mongodb4_4MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4MongoInfra_resources'
    MongoCfgConfigSet4_4_in_Mongodb4_4MongoCfg_config:
      description: Configuration for mongocfg 4.4 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_defaultConfig'
    Resources_in_Mongodb4_4MongoCfg_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_4_in_Mongodb4_4MongoInfra_configMongos:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_defaultConfig'
    MongoCfgConfigSet4_4_in_Mongodb4_4MongoInfra_configMongocfg:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongoCfgConfigSet4_4_defaultConfig'
    Resources_in_Mongodb4_4MongoInfra_resources:
      description: Resources allocated to mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfigSet4_4_in_Mongodb4_4Mongod_config:
      description: Configuration for mongod 4.4 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodConfigSet4_4_defaultConfig'
    Resources_in_Mongodb4_4Mongod_resources:
      description: Resources allocated to mongod hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_4_in_Mongodb4_4Mongos_config:
      description: Configuration for mongos 4.4 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongosConfigSet4_4_defaultConfig'
    Resources_in_Mongodb4_4Mongos_resources:
      description: Resources allocated to mongos hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Mongodb4_4_enterpriseMongod_in_Mongodb4_4_enterprise_mongod:
      description: Configuration and resource allocation for mongod in a MongoDB 4.4
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongod_resources'
    Mongodb4_4_enterpriseMongoCfg_in_Mongodb4_4_enterprise_mongocfg:
      description: Configuration and resource allocation for mongocfg in a MongoDB
        4.4 cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongoCfg_resources'
    Mongodb4_4_enterpriseMongos_in_Mongodb4_4_enterprise_mongos:
      description: Configuration and resource allocation for mongos in a MongoDB 4.4
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongos_resources'
    Mongodb4_4_enterpriseMongoInfra_in_Mongodb4_4_enterprise_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        in a MongoDB 4.4 cluster.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb4_4_enterpriseMongoInfra_resources'
    MongoCfgConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoCfg_config:
      description: Configuration for mongocfg 4.4 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_defaultConfig'
    Resources_in_Mongodb4_4_enterpriseMongoCfg_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoInfra_configMongos:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_defaultConfig'
    MongoCfgConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongoInfra_configMongocfg:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongoCfgConfigSet4_4_enterprise_defaultConfig'
    Resources_in_Mongodb4_4_enterpriseMongoInfra_resources:
      description: Resources allocated to mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongod_config:
      description: Configuration for mongod 4.4 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodConfigSet4_4_enterprise_defaultConfig'
    Resources_in_Mongodb4_4_enterpriseMongod_resources:
      description: Resources allocated to mongod hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet4_4_enterprise_in_Mongodb4_4_enterpriseMongos_config:
      description: Configuration for mongos 4.4 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_defaultConfig'
    Resources_in_Mongodb4_4_enterpriseMongos_resources:
      description: Resources allocated to mongos hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Mongodb5_0Mongod_in_Mongodb5_0_mongod:
      description: Configuration and resource allocation for mongod in a MongoDB 5.0
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet5_0_in_Mongodb5_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0Mongod_resources'
    Mongodb5_0MongoCfg_in_Mongodb5_0_mongocfg:
      description: Configuration and resource allocation for mongocfg in a MongoDB
        5.0 cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_in_Mongodb5_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0MongoCfg_resources'
    Mongodb5_0Mongos_in_Mongodb5_0_mongos:
      description: Configuration and resource allocation for mongos in a MongoDB 5.0
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet5_0_in_Mongodb5_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0Mongos_resources'
    Mongodb5_0MongoInfra_in_Mongodb5_0_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        in a MongoDB 5.0 cluster.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet5_0_in_Mongodb5_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_in_Mongodb5_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0MongoInfra_resources'
    MongoCfgConfigSet5_0_in_Mongodb5_0MongoCfg_config:
      description: Configuration for mongocfg 5.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_defaultConfig'
    Resources_in_Mongodb5_0MongoCfg_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet5_0_in_Mongodb5_0MongoInfra_configMongos:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_defaultConfig'
    MongoCfgConfigSet5_0_in_Mongodb5_0MongoInfra_configMongocfg:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongoCfgConfigSet5_0_defaultConfig'
    Resources_in_Mongodb5_0MongoInfra_resources:
      description: Resources allocated to mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfigSet5_0_in_Mongodb5_0Mongod_config:
      description: Configuration for mongod 5.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodConfigSet5_0_defaultConfig'
    Resources_in_Mongodb5_0Mongod_resources:
      description: Resources allocated to mongod hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet5_0_in_Mongodb5_0Mongos_config:
      description: Configuration for mongos 5.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongosConfigSet5_0_defaultConfig'
    Resources_in_Mongodb5_0Mongos_resources:
      description: Resources allocated to mongos hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    Mongodb5_0_enterpriseMongod_in_Mongodb5_0_enterprise_mongod:
      description: Configuration and resource allocation for mongod in a MongoDB 5.0
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongod_resources'
    Mongodb5_0_enterpriseMongoCfg_in_Mongodb5_0_enterprise_mongocfg:
      description: Configuration and resource allocation for mongocfg in a MongoDB
        5.0 cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongoCfg_resources'
    Mongodb5_0_enterpriseMongos_in_Mongodb5_0_enterprise_mongos:
      description: Configuration and resource allocation for mongos in a MongoDB 5.0
        cluster.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongos_resources'
    Mongodb5_0_enterpriseMongoInfra_in_Mongodb5_0_enterprise_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        in a MongoDB 5.0 cluster.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_Mongodb5_0_enterpriseMongoInfra_resources'
    MongoCfgConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoCfg_config:
      description: Configuration for mongocfg 5.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_defaultConfig'
    Resources_in_Mongodb5_0_enterpriseMongoCfg_resources:
      description: Resources allocated to mongocfg hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoInfra_configMongos:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_defaultConfig'
    MongoCfgConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongoInfra_configMongocfg:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongoCfgConfigSet5_0_enterprise_defaultConfig'
    Resources_in_Mongodb5_0_enterpriseMongoInfra_resources:
      description: Resources allocated to mongoinfra (mongos+mongocfg) hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongod_config:
      description: Configuration for mongod 5.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodConfigSet5_0_enterprise_defaultConfig'
    Resources_in_Mongodb5_0_enterpriseMongod_resources:
      description: Resources allocated to mongod hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfigSet5_0_enterprise_in_Mongodb5_0_enterpriseMongos_config:
      description: Configuration for mongos 5.0 hosts.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_defaultConfig'
    Resources_in_Mongodb5_0_enterpriseMongos_resources:
      description: Resources allocated to mongos hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodbSpec3_6Mongod_in_MongodbSpec3_6_mongod:
      description: Configuration and resource allocation for mongod 3.6 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig3_6_in_MongodbSpec3_6Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6Mongod_resources'
    MongodbSpec3_6MongoCfg_in_MongodbSpec3_6_mongocfg:
      description: Configuration and resource allocation for mongocfg 3.6 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongodbSpec3_6MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6MongoCfg_resources'
    MongodbSpec3_6Mongos_in_MongodbSpec3_6_mongos:
      description: Configuration and resource allocation for mongos 3.6 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongodbSpec3_6Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6Mongos_resources'
    MongodbSpec3_6MongoInfra_in_MongodbSpec3_6_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        3.6 hosts.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig3_6_in_MongodbSpec3_6MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig3_6_in_MongodbSpec3_6MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec3_6MongoInfra_resources'
    MongoCfgConfig3_6_in_MongodbSpec3_6MongoCfg_config:
      description: Configuration for mongocfg 3.6 hosts.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig3_6Storage_in_MongoCfgConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfiling_in_MongoCfgConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig3_6Network_in_MongoCfgConfig3_6_net'
    Resources_in_MongodbSpec3_6MongoCfg_resources:
      description: Resources allocated to each mongocfg host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig3_6_in_MongodbSpec3_6MongoInfra_configMongos:
      description: Configuration for mongoinfra 3.6 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig3_6Network_in_MongosConfig3_6_net'
    MongoCfgConfig3_6_in_MongodbSpec3_6MongoInfra_configMongocfg:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig3_6Storage_in_MongoCfgConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig3_6OperationProfiling_in_MongoCfgConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig3_6Network_in_MongoCfgConfig3_6_net'
    Resources_in_MongodbSpec3_6MongoInfra_resources:
      description: Resources allocated to each mongoinfra (mongos+mongocfg) host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfig3_6_in_MongodbSpec3_6Mongod_config:
      description: |-
        Configuration for mongod 3.6 hosts.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v3.6/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig3_6Storage_in_MongodConfig3_6_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig3_6OperationProfiling_in_MongodConfig3_6_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig3_6Network_in_MongodConfig3_6_net'
    Resources_in_MongodbSpec3_6Mongod_resources:
      description: Resources allocated to each mongod host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig3_6_in_MongodbSpec3_6Mongos_config:
      description: Configuration for mongos 3.6 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig3_6Network_in_MongosConfig3_6_net'
    Resources_in_MongodbSpec3_6Mongos_resources:
      description: Resources allocated to each mongos host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodbSpec4_0Mongod_in_MongodbSpec4_0_mongod:
      description: Configuration and resource allocation for mongod 4.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_0_in_MongodbSpec4_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0Mongod_resources'
    MongodbSpec4_0MongoCfg_in_MongodbSpec4_0_mongocfg:
      description: Configuration and resource allocation for mongocfg 4.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongodbSpec4_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0MongoCfg_resources'
    MongodbSpec4_0Mongos_in_MongodbSpec4_0_mongos:
      description: Configuration and resource allocation for mongos 4.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongodbSpec4_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0Mongos_resources'
    MongodbSpec4_0MongoInfra_in_MongodbSpec4_0_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        4.0 hosts.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_0_in_MongodbSpec4_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_0_in_MongodbSpec4_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_0MongoInfra_resources'
    MongoCfgConfig4_0_in_MongodbSpec4_0MongoCfg_config:
      description: Configuration for mongocfg 4.0 hosts.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_0Storage_in_MongoCfgConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfiling_in_MongoCfgConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_0Network_in_MongoCfgConfig4_0_net'
    Resources_in_MongodbSpec4_0MongoCfg_resources:
      description: Resources allocated to each mongocfg host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_0_in_MongodbSpec4_0MongoInfra_configMongos:
      description: Configuration for mongoinfra 4.0 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_0Network_in_MongosConfig4_0_net'
    MongoCfgConfig4_0_in_MongodbSpec4_0MongoInfra_configMongocfg:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_0Storage_in_MongoCfgConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_0OperationProfiling_in_MongoCfgConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_0Network_in_MongoCfgConfig4_0_net'
    Resources_in_MongodbSpec4_0MongoInfra_resources:
      description: Resources allocated to each mongoinfra (mongos+mongocfg) host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfig4_0_in_MongodbSpec4_0Mongod_config:
      description: |-
        Configuration for mongod 4.0 hosts.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_0Storage_in_MongodConfig4_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_0OperationProfiling_in_MongodConfig4_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_0Network_in_MongodConfig4_0_net'
    Resources_in_MongodbSpec4_0Mongod_resources:
      description: Resources allocated to each mongod host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_0_in_MongodbSpec4_0Mongos_config:
      description: Configuration for mongos 4.0 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_0Network_in_MongosConfig4_0_net'
    Resources_in_MongodbSpec4_0Mongos_resources:
      description: Resources allocated to each mongos host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodbSpec4_2Mongod_in_MongodbSpec4_2_mongod:
      description: Configuration and resource allocation for mongod 4.2 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_2_in_MongodbSpec4_2Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2Mongod_resources'
    MongodbSpec4_2MongoCfg_in_MongodbSpec4_2_mongocfg:
      description: Configuration and resource allocation for mongocfg 4.2 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongodbSpec4_2MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2MongoCfg_resources'
    MongodbSpec4_2Mongos_in_MongodbSpec4_2_mongos:
      description: Configuration and resource allocation for mongos 4.2 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongodbSpec4_2Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2Mongos_resources'
    MongodbSpec4_2MongoInfra_in_MongodbSpec4_2_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        4.2 hosts.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_2_in_MongodbSpec4_2MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_2_in_MongodbSpec4_2MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_2MongoInfra_resources'
    MongoCfgConfig4_2_in_MongodbSpec4_2MongoCfg_config:
      description: Configuration for mongocfg 4.2 hosts.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_2Storage_in_MongoCfgConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfiling_in_MongoCfgConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_2Network_in_MongoCfgConfig4_2_net'
    Resources_in_MongodbSpec4_2MongoCfg_resources:
      description: Resources allocated to each mongocfg host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_2_in_MongodbSpec4_2MongoInfra_configMongos:
      description: Configuration for mongoinfra 4.2 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_2Network_in_MongosConfig4_2_net'
    MongoCfgConfig4_2_in_MongodbSpec4_2MongoInfra_configMongocfg:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_2Storage_in_MongoCfgConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_2OperationProfiling_in_MongoCfgConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_2Network_in_MongoCfgConfig4_2_net'
    Resources_in_MongodbSpec4_2MongoInfra_resources:
      description: Resources allocated to each mongoinfra (mongos+mongocfg) host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfig4_2_in_MongodbSpec4_2Mongod_config:
      description: |-
        Configuration for mongod 4.2 hosts.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.2/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_2Storage_in_MongodConfig4_2_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_2OperationProfiling_in_MongodConfig4_2_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_2Network_in_MongodConfig4_2_net'
    Resources_in_MongodbSpec4_2Mongod_resources:
      description: Resources allocated to each mongod host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_2_in_MongodbSpec4_2Mongos_config:
      description: Configuration for mongos 4.2 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_2Network_in_MongosConfig4_2_net'
    Resources_in_MongodbSpec4_2Mongos_resources:
      description: Resources allocated to each mongos host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodbSpec4_4Mongod_in_MongodbSpec4_4_mongod:
      description: Configuration and resource allocation for mongod 4.4 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_4_in_MongodbSpec4_4Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4Mongod_resources'
    MongodbSpec4_4MongoCfg_in_MongodbSpec4_4_mongocfg:
      description: Configuration and resource allocation for mongocfg 4.4 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongodbSpec4_4MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4MongoCfg_resources'
    MongodbSpec4_4Mongos_in_MongodbSpec4_4_mongos:
      description: Configuration and resource allocation for mongos 4.4 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongodbSpec4_4Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4Mongos_resources'
    MongodbSpec4_4MongoInfra_in_MongodbSpec4_4_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        4.4 hosts.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_4_in_MongodbSpec4_4MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_4_in_MongodbSpec4_4MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4MongoInfra_resources'
    MongoCfgConfig4_4_in_MongodbSpec4_4MongoCfg_config:
      description: Configuration for mongocfg 4.4 hosts.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4Storage_in_MongoCfgConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfiling_in_MongoCfgConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4Network_in_MongoCfgConfig4_4_net'
    Resources_in_MongodbSpec4_4MongoCfg_resources:
      description: Resources allocated to each mongocfg host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_4_in_MongodbSpec4_4MongoInfra_configMongos:
      description: Configuration for mongoinfra 4.4 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4Network_in_MongosConfig4_4_net'
    MongoCfgConfig4_4_in_MongodbSpec4_4MongoInfra_configMongocfg:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4Storage_in_MongoCfgConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4OperationProfiling_in_MongoCfgConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4Network_in_MongoCfgConfig4_4_net'
    Resources_in_MongodbSpec4_4MongoInfra_resources:
      description: Resources allocated to each mongoinfra (mongos+mongocfg) host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfig4_4_in_MongodbSpec4_4Mongod_config:
      description: |-
        Configuration for mongod 4.4 hosts.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4Storage_in_MongodConfig4_4_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4OperationProfiling_in_MongodConfig4_4_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4Network_in_MongodConfig4_4_net'
    Resources_in_MongodbSpec4_4Mongod_resources:
      description: Resources allocated to each mongod host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_4_in_MongodbSpec4_4Mongos_config:
      description: Configuration for mongos 4.4 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4Network_in_MongosConfig4_4_net'
    Resources_in_MongodbSpec4_4Mongos_resources:
      description: Resources allocated to each mongos host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodbSpec4_4_enterpriseMongod_in_MongodbSpec4_4_enterprise_mongod:
      description: Configuration and resource allocation for mongod 4.4 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongod_resources'
    MongodbSpec4_4_enterpriseMongoCfg_in_MongodbSpec4_4_enterprise_mongocfg:
      description: Configuration and resource allocation for mongocfg 4.4 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongoCfg_resources'
    MongodbSpec4_4_enterpriseMongos_in_MongodbSpec4_4_enterprise_mongos:
      description: Configuration and resource allocation for mongos 4.4 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongos_resources'
    MongodbSpec4_4_enterpriseMongoInfra_in_MongodbSpec4_4_enterprise_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        4.4 hosts.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec4_4_enterpriseMongoInfra_resources'
    MongoCfgConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoCfg_config:
      description: Configuration for mongocfg 4.4 hosts.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorage_in_MongoCfgConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfiling_in_MongoCfgConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseNetwork_in_MongoCfgConfig4_4_enterprise_net'
    Resources_in_MongodbSpec4_4_enterpriseMongoCfg_resources:
      description: Resources allocated to each mongocfg host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoInfra_configMongos:
      description: Configuration for mongoinfra 4.4 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4_enterpriseNetwork_in_MongosConfig4_4_enterprise_net'
    MongoCfgConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongoInfra_configMongocfg:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseStorage_in_MongoCfgConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseOperationProfiling_in_MongoCfgConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig4_4_enterpriseNetwork_in_MongoCfgConfig4_4_enterprise_net'
    Resources_in_MongodbSpec4_4_enterpriseMongoInfra_resources:
      description: Resources allocated to each mongoinfra (mongos+mongocfg) host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongod_config:
      description: |-
        Configuration for mongod 4.4 hosts.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v4.4/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseStorage_in_MongodConfig4_4_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseOperationProfiling_in_MongodConfig4_4_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseNetwork_in_MongodConfig4_4_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSecurity_in_MongodConfig4_4_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseAuditLog_in_MongodConfig4_4_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig4_4_enterpriseSetParameter_in_MongodConfig4_4_enterprise_setParameter'
    Resources_in_MongodbSpec4_4_enterpriseMongod_resources:
      description: Resources allocated to each mongod host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig4_4_enterprise_in_MongodbSpec4_4_enterpriseMongos_config:
      description: Configuration for mongos 4.4 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4_enterpriseNetwork_in_MongosConfig4_4_enterprise_net'
    Resources_in_MongodbSpec4_4_enterpriseMongos_resources:
      description: Resources allocated to each mongos host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodbSpec5_0Mongod_in_MongodbSpec5_0_mongod:
      description: Configuration and resource allocation for mongod 5.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig5_0_in_MongodbSpec5_0Mongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0Mongod_resources'
    MongodbSpec5_0MongoCfg_in_MongodbSpec5_0_mongocfg:
      description: Configuration and resource allocation for mongocfg 5.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongodbSpec5_0MongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0MongoCfg_resources'
    MongodbSpec5_0Mongos_in_MongodbSpec5_0_mongos:
      description: Configuration and resource allocation for mongos 5.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongodbSpec5_0Mongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0Mongos_resources'
    MongodbSpec5_0MongoInfra_in_MongodbSpec5_0_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        5.0 hosts.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig5_0_in_MongodbSpec5_0MongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig5_0_in_MongodbSpec5_0MongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0MongoInfra_resources'
    MongoCfgConfig5_0_in_MongodbSpec5_0MongoCfg_config:
      description: Configuration for mongocfg 5.0 hosts.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0Storage_in_MongoCfgConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfiling_in_MongoCfgConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0Network_in_MongoCfgConfig5_0_net'
    Resources_in_MongodbSpec5_0MongoCfg_resources:
      description: Resources allocated to each mongocfg host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig5_0_in_MongodbSpec5_0MongoInfra_configMongos:
      description: Configuration for mongoinfra 5.0 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0Network_in_MongosConfig5_0_net'
    MongoCfgConfig5_0_in_MongodbSpec5_0MongoInfra_configMongocfg:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0Storage_in_MongoCfgConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0OperationProfiling_in_MongoCfgConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0Network_in_MongoCfgConfig5_0_net'
    Resources_in_MongodbSpec5_0MongoInfra_resources:
      description: Resources allocated to each mongoinfra (mongos+mongocfg) host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfig5_0_in_MongodbSpec5_0Mongod_config:
      description: |-
        Configuration for mongod 5.0 hosts.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0Storage_in_MongodConfig5_0_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0OperationProfiling_in_MongodConfig5_0_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0Network_in_MongodConfig5_0_net'
    Resources_in_MongodbSpec5_0Mongod_resources:
      description: Resources allocated to each mongod host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig5_0_in_MongodbSpec5_0Mongos_config:
      description: Configuration for mongos 5.0 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0Network_in_MongosConfig5_0_net'
    Resources_in_MongodbSpec5_0Mongos_resources:
      description: Resources allocated to each mongos host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodbSpec5_0_enterpriseMongod_in_MongodbSpec5_0_enterprise_mongod:
      description: Configuration and resource allocation for mongod 5.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongodConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongod_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongod_resources'
    MongodbSpec5_0_enterpriseMongoCfg_in_MongodbSpec5_0_enterprise_mongocfg:
      description: Configuration and resource allocation for mongocfg 5.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoCfg_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongoCfg_resources'
    MongodbSpec5_0_enterpriseMongos_in_MongodbSpec5_0_enterprise_mongos:
      description: Configuration and resource allocation for mongos 5.0 hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongos_config'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongos_resources'
    MongodbSpec5_0_enterpriseMongoInfra_in_MongodbSpec5_0_enterprise_mongoinfra:
      description: Configuration and resource allocation for mongoinfra (mongos+mongocfg)
        5.0 hosts.
      type: object
      properties:
        configMongos:
          $ref: '#/components/schemas/MongosConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoInfra_configMongos'
        configMongocfg:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoInfra_configMongocfg'
        resources:
          $ref: '#/components/schemas/Resources_in_MongodbSpec5_0_enterpriseMongoInfra_resources'
    MongoCfgConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoCfg_config:
      description: Configuration for mongocfg 5.0 hosts.
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorage_in_MongoCfgConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfiling_in_MongoCfgConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseNetwork_in_MongoCfgConfig5_0_enterprise_net'
    Resources_in_MongodbSpec5_0_enterpriseMongoCfg_resources:
      description: Resources allocated to each mongocfg host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoInfra_configMongos:
      description: Configuration for mongoinfra 5.0 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0_enterpriseNetwork_in_MongosConfig5_0_enterprise_net'
    MongoCfgConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongoInfra_configMongocfg:
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseStorage_in_MongoCfgConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseOperationProfiling_in_MongoCfgConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongoCfgConfig5_0_enterpriseNetwork_in_MongoCfgConfig5_0_enterprise_net'
    Resources_in_MongodbSpec5_0_enterpriseMongoInfra_resources:
      description: Resources allocated to each mongoinfra (mongos+mongocfg) host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongodConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongod_config:
      description: |-
        Configuration for mongod 5.0 hosts.

        Configuration of a mongod daemon. Supported options are a limited subset of all
        options described in [MongoDB documentation](https://docs.mongodb.com/v5.0/reference/configuration-options/).
      type: object
      properties:
        storage:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseStorage_in_MongodConfig5_0_enterprise_storage'
        operationProfiling:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseOperationProfiling_in_MongodConfig5_0_enterprise_operationProfiling'
        net:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseNetwork_in_MongodConfig5_0_enterprise_net'
        security:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSecurity_in_MongodConfig5_0_enterprise_security'
        auditLog:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseAuditLog_in_MongodConfig5_0_enterprise_auditLog'
        setParameter:
          $ref: '#/components/schemas/MongodConfig5_0_enterpriseSetParameter_in_MongodConfig5_0_enterprise_setParameter'
    Resources_in_MongodbSpec5_0_enterpriseMongod_resources:
      description: Resources allocated to each mongod host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig5_0_enterprise_in_MongodbSpec5_0_enterpriseMongos_config:
      description: Configuration for mongos 5.0 hosts.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0_enterpriseNetwork_in_MongosConfig5_0_enterprise_net'
    Resources_in_MongodbSpec5_0_enterpriseMongos_resources:
      description: Resources allocated to each mongos host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-mongodb/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd - network HDD drive,
            * network-ssd - network SSD drive,
            * local-ssd - local SSD storage.
          type: string
    MongosConfig3_6Network_in_MongosConfig3_6_net:
      description: Network settings for mongos.
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of incoming connections.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_0Network_in_MongosConfig4_0_net:
      description: Network settings for mongos.
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_2Network_in_MongosConfig4_2_net:
      description: Network settings for mongos.
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_4Network_in_MongosConfig4_4_net:
      description: Network settings for mongos.
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig4_4_enterpriseNetwork_in_MongosConfig4_4_enterprise_net:
      description: Network settings for mongos.
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig5_0Network_in_MongosConfig5_0_net:
      description: Network settings for mongos.
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig5_0_enterpriseNetwork_in_MongosConfig5_0_enterprise_net:
      description: Network settings for mongos.
      type: object
      properties:
        maxIncomingConnections:
          description: |-
            The maximum number of simultaneous connections that mongos will accept.

            Acceptable values are 10 to 16384, inclusive.
          type: integer
          format: int64
    MongosConfig3_6_in_MongosConfigSet3_6_effectiveConfig:
      description: |-
        Effective settings for a MongoDB 3.6 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig3_6Network_in_MongosConfig3_6_net'
    MongosConfig3_6_in_MongosConfigSet3_6_userConfig:
      description: User-defined settings for a MongoDB 3.6 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig3_6Network_in_MongosConfig3_6_net'
    MongosConfig3_6_in_MongosConfigSet3_6_defaultConfig:
      description: Default configuration for a MongoDB 3.6 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig3_6Network_in_MongosConfig3_6_net'
    MongosConfig4_0_in_MongosConfigSet4_0_effectiveConfig:
      description: |-
        Effective mongos settings for a MongoDB 4.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_0Network_in_MongosConfig4_0_net'
    MongosConfig4_0_in_MongosConfigSet4_0_userConfig:
      description: User-defined mongos settings for a MongoDB 4.0 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_0Network_in_MongosConfig4_0_net'
    MongosConfig4_0_in_MongosConfigSet4_0_defaultConfig:
      description: Default mongos configuration for a MongoDB 4.0 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_0Network_in_MongosConfig4_0_net'
    MongosConfig4_2_in_MongosConfigSet4_2_effectiveConfig:
      description: |-
        Effective mongos settings for a MongoDB 4.2 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_2Network_in_MongosConfig4_2_net'
    MongosConfig4_2_in_MongosConfigSet4_2_userConfig:
      description: User-defined mongos settings for a MongoDB 4.2 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_2Network_in_MongosConfig4_2_net'
    MongosConfig4_2_in_MongosConfigSet4_2_defaultConfig:
      description: Default mongos configuration for a MongoDB 4.2 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_2Network_in_MongosConfig4_2_net'
    MongosConfig4_4_in_MongosConfigSet4_4_effectiveConfig:
      description: |-
        Effective mongos settings for a MongoDB 4.4 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4Network_in_MongosConfig4_4_net'
    MongosConfig4_4_in_MongosConfigSet4_4_userConfig:
      description: User-defined mongos settings for a MongoDB 4.4 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4Network_in_MongosConfig4_4_net'
    MongosConfig4_4_in_MongosConfigSet4_4_defaultConfig:
      description: Default mongos configuration for a MongoDB 4.4 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4Network_in_MongosConfig4_4_net'
    MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_effectiveConfig:
      description: |-
        Effective mongos settings for a MongoDB 4.4 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4_enterpriseNetwork_in_MongosConfig4_4_enterprise_net'
    MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_userConfig:
      description: User-defined mongos settings for a MongoDB 4.4 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4_enterpriseNetwork_in_MongosConfig4_4_enterprise_net'
    MongosConfig4_4_enterprise_in_MongosConfigSet4_4_enterprise_defaultConfig:
      description: Default mongos configuration for a MongoDB 4.4 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig4_4_enterpriseNetwork_in_MongosConfig4_4_enterprise_net'
    MongosConfig5_0_in_MongosConfigSet5_0_effectiveConfig:
      description: |-
        Effective mongos settings for a MongoDB 5.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0Network_in_MongosConfig5_0_net'
    MongosConfig5_0_in_MongosConfigSet5_0_userConfig:
      description: User-defined mongos settings for a MongoDB 5.0 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0Network_in_MongosConfig5_0_net'
    MongosConfig5_0_in_MongosConfigSet5_0_defaultConfig:
      description: Default mongos configuration for a MongoDB 5.0 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0Network_in_MongosConfig5_0_net'
    MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_effectiveConfig:
      description: |-
        Effective mongos settings for a MongoDB 5.0 cluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0_enterpriseNetwork_in_MongosConfig5_0_enterprise_net'
    MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_userConfig:
      description: User-defined mongos settings for a MongoDB 5.0 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0_enterpriseNetwork_in_MongosConfig5_0_enterprise_net'
    MongosConfig5_0_enterprise_in_MongosConfigSet5_0_enterprise_defaultConfig:
      description: Default mongos configuration for a MongoDB 5.0 cluster.
      type: object
      properties:
        net:
          $ref: '#/components/schemas/MongosConfig5_0_enterpriseNetwork_in_MongosConfig5_0_enterprise_net'
    RescheduleMaintenanceRequestRescheduleType_in_RescheduleMaintenanceRequest_rescheduleType:
      description: |-
        Required.
        The type of reschedule request.

         - IMMEDIATE: Start the maintenance operation immediately.
         - NEXT_AVAILABLE_WINDOW: Start the maintenance operation within the next available maintenance window.
         - SPECIFIC_TIME: Start the maintenance operation at the specific time.
      type: string
      enum:
      - IMMEDIATE
      - NEXT_AVAILABLE_WINDOW
      - SPECIFIC_TIME
    ClusterEnvironment_in_RestoreClusterRequest_environment:
      description: |-
        Required.
        Deployment environment of the new MongoDB cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes
        are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_RestoreClusterRequest_configSpec:
      description: |-
        Required.
        Configuration for the MongoDB cluster to be created.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: 'Version of MongoDB used in the cluster. Possible values:
              `3.6`, `4.0`, `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`.'
            type: string
          featureCompatibilityVersion:
            description: |-
              MongoDB feature compatibility version. See usage details in [MongoDB documentation](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion/).

              Possible values:
              * `3.6` - persist data compatibility for version 3.6. After setting this option the data will not be compatible with 3.4 or older.
              * `4.0` - persist data compatibility for version 4.0. After setting this option the data will not be compatible with 3.6 or older.
              * `4.2` - persist data compatibility for version 4.2. After setting this option the data will not be compatible with 4.0 or older.
              * `4.4` - persist data compatibility for version 4.4. After setting this option the data will not be compatible with 4.2 or older.
              * `5.0` - persist data compatibility for version 5.0. After setting this option the data will not be compatible with 4.4 or older.
            type: string
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Time to start the daily backup, in the UTC timezone.
          backupRetainPeriodDays:
            description: |-
              Retain period of automatically created backup in days

              Acceptable values are 7 to 35, inclusive.
            type: integer
            format: int64
          access:
            $ref: '#/components/schemas/Access'
            description: Access policy to DB
      - title: mongodb_spec
        type: object
        maxProperties: 1
        properties:
          mongodbSpec_3_6:
            $ref: '#/components/schemas/MongodbSpec3_6'
            description: Configuration and resource allocation for a MongoDB 3.6 cluster.
          mongodbSpec_4_0:
            $ref: '#/components/schemas/MongodbSpec4_0'
            description: Configuration and resource allocation for a MongoDB 4.0 cluster.
          mongodbSpec_4_2:
            $ref: '#/components/schemas/MongodbSpec4_2'
            description: Configuration and resource allocation for a MongoDB 4.2 cluster.
          mongodbSpec_4_4:
            $ref: '#/components/schemas/MongodbSpec4_4'
            description: Configuration and resource allocation for a MongoDB 4.4 cluster.
          mongodbSpec_5_0:
            $ref: '#/components/schemas/MongodbSpec5_0'
            description: Configuration and resource allocation for a MongoDB 5.0 cluster.
          mongodbSpec_4_4Enterprise:
            $ref: '#/components/schemas/MongodbSpec4_4_enterprise'
            description: Configuration and resource allocation for a MongoDB 4.4 Enterprise
              cluster.
          mongodbSpec_5_0Enterprise:
            $ref: '#/components/schemas/MongodbSpec5_0_enterprise'
            description: Configuration and resource allocation for a MongoDB 5.0 Enterprise
              cluster.
    RestoreClusterRequestRecoveryTargetSpec_in_RestoreClusterRequest_recoveryTargetSpec:
      description: Specification of the moment to which the MongoDB cluster should
        be restored.
      type: object
      properties:
        timestamp:
          description: |-
            Timestamp of the recovery target

            Value must be greater than 0.
          type: string
          format: int64
    ServiceType_in_Service_type:
      description: |-
        Type of the service provided by the host.

         - MONGOD: The host is running a mongod daemon.
         - MONGOS: The host is running a mongos daemon.
         - MONGOCFG: The host is running a MongoDB config server.
      type: string
      enum:
      - MONGOD
      - MONGOS
      - MONGOCFG
    ServiceHealth_in_Service_health:
      description: |-
        Status code of server availability.

         - HEALTH_UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      default: HEALTH_UNKNOWN
    LogRecord_in_StreamLogRecord_record:
      description: One of the requested log records.
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the MongoDB Cluster resource should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: New configuration and resources for hosts in the cluster.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: 'Version of MongoDB used in the cluster. Possible values:
              `3.6`, `4.0`, `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`.'
            type: string
          featureCompatibilityVersion:
            description: |-
              MongoDB feature compatibility version. See usage details in [MongoDB documentation](https://docs.mongodb.com/manual/reference/command/setFeatureCompatibilityVersion/).

              Possible values:
              * `3.6` - persist data compatibility for version 3.6. After setting this option the data will not be compatible with 3.4 or older.
              * `4.0` - persist data compatibility for version 4.0. After setting this option the data will not be compatible with 3.6 or older.
              * `4.2` - persist data compatibility for version 4.2. After setting this option the data will not be compatible with 4.0 or older.
              * `4.4` - persist data compatibility for version 4.4. After setting this option the data will not be compatible with 4.2 or older.
              * `5.0` - persist data compatibility for version 5.0. After setting this option the data will not be compatible with 4.4 or older.
            type: string
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Time to start the daily backup, in the UTC timezone.
          backupRetainPeriodDays:
            description: |-
              Retain period of automatically created backup in days

              Acceptable values are 7 to 35, inclusive.
            type: integer
            format: int64
          access:
            $ref: '#/components/schemas/Access'
            description: Access policy to DB
      - title: mongodb_spec
        type: object
        maxProperties: 1
        properties:
          mongodbSpec_3_6:
            $ref: '#/components/schemas/MongodbSpec3_6'
            description: Configuration and resource allocation for a MongoDB 3.6 cluster.
          mongodbSpec_4_0:
            $ref: '#/components/schemas/MongodbSpec4_0'
            description: Configuration and resource allocation for a MongoDB 4.0 cluster.
          mongodbSpec_4_2:
            $ref: '#/components/schemas/MongodbSpec4_2'
            description: Configuration and resource allocation for a MongoDB 4.2 cluster.
          mongodbSpec_4_4:
            $ref: '#/components/schemas/MongodbSpec4_4'
            description: Configuration and resource allocation for a MongoDB 4.4 cluster.
          mongodbSpec_5_0:
            $ref: '#/components/schemas/MongodbSpec5_0'
            description: Configuration and resource allocation for a MongoDB 5.0 cluster.
          mongodbSpec_4_4Enterprise:
            $ref: '#/components/schemas/MongodbSpec4_4_enterprise'
            description: Configuration and resource allocation for a MongoDB 4.4 Enterprise
              cluster.
          mongodbSpec_5_0Enterprise:
            $ref: '#/components/schemas/MongodbSpec5_0_enterprise'
            description: Configuration and resource allocation for a MongoDB 5.0 Enterprise
              cluster.
    MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow:
      description: |-
        New maintenance window settings for the cluster.

        A maintenance window settings.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: Maintenance operation can be scheduled anytime.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: Maintenance operation can be scheduled on a weekly basis.
    FieldMask_in_UpdateUserRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the MongoDB User resource should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day:
      description: Day of the week (in `DDD` format).
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
tags:
- name: Backup
  description: A set of methods for managing MongoDB Backup resources.
- name: Cluster
  description: A set of methods for managing MongoDB Cluster resources.
- name: Database
  description: A set of methods for managing MongoDB Database resources.
- name: ResourcePreset
  description: A set of methods for managing ResourcePreset resources.
- name: User
  description: A set of methods for managing MongoDB User resources.
