openapi: 3.0.0
info:
  title: Managed Service for SQL Server API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /mdb/sqlserver/v1/backups/{backupId}:
    get:
      tags:
      - Backup
      summary: Returns the specified SQL Server backup.
      description: To get the list of available SQL Server backups, make a [list](/docs/managed-sqlserver/api-ref/Backup/list)
        request.
      operationId: BackupGet
      parameters:
      - name: backupId
        in: path
        description: |-
          Required.
          ID of the backup to return information about.

          To get the backup ID, use a [listBackups](/docs/managed-sqlserver/api-ref/Cluster/listBackups) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      x-y-navtitle: get
  /mdb/sqlserver/v1/backups:
    get:
      tags:
      - Backup
      summary: Retrieves the list of SQL Server backups available for the specified
        folder.
      operationId: BackupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list backups in.

          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Backup/list#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/Backup/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/Backup/list#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/Backup/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      x-y-navtitle: list
  /mdb/sqlserver/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified SQL Server cluster.
      description: To get the list of available SQL Server clusters, make a [list](/docs/managed-sqlserver/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to return.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified SQL Server cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to delete.

          To get the SQL Server cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Modifies the specified SQL Server cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to update.

          To get the SQL Server cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of SQL Server clusters that belong to the specified
        folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list SQL Server clusters in.

          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/list#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/Cluster/list#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:

          1. A field name to filter by. Currently you can only use filtering with the [Cluster.name](/docs/managed-sqlserver/api-ref/Cluster#representation) field.
          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. A value. Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.

          Example of a filter expression: `name NOT IN 'test,beta'`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates an SQL Server cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Starts the specified SQL Server cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to start.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stops the specified SQL Server cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to stop.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}:move:
    post:
      tags:
      - Cluster
      summary: Moves the specified SQL Server cluster to the specified folder.
      operationId: ClusterMove
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to move.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}:backup:
    post:
      tags:
      - Cluster
      summary: Creates a backup for the specified SQL Server cluster.
      operationId: ClusterBackup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to back up.

          To get the SQL Server cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: backup
      x-y-operation-metadata:
        $ref: '#/components/schemas/BackupClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters:restore:
    post:
      tags:
      - Cluster
      summary: Creates a new SQL Server cluster using the specified backup.
      operationId: ClusterRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restore
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestoreClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}:startFailover:
    post:
      tags:
      - Cluster
      summary: Starts a manual failover for a cluster.
      operationId: ClusterStartFailover
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of SQL Server cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartClusterFailoverRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: startFailover
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterFailoverMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-sqlserver/api-ref/Cluster#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: Retrieves logs for the specified SQL Server cluster.
      description: For more information about logs, see the [Logs](/docs/managed-sqlserver/operations/cluster-logs)
        section in the documentation.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to request logs for.

          To get the SQL Server cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from the logs table to request.

          If no columns are specified, entire log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        description: Type of the service to request logs about.
        schema:
          $ref: '#/components/schemas/ListClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Specifies a moment that the logs are requested from.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          Specifies a moment that the logs are requested till.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listLogs#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listLogs#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listLogs#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listLogs#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: alwaysNextPageToken
        in: query
        description: The service returns [next_page_token] even if the current page
          is empty.
        schema:
          type: boolean
          format: boolean
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:

          1. A field name to filter by. Currently filtering can be applied to the [LogRecord.logs.message.hostname] field only.
          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. A value. Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.

          Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /mdb/sqlserver/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of operations for the specified SQL Server cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to list operations for.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listOperations#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listOperations#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listOperations#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /mdb/sqlserver/v1/clusters/{clusterId}/backups:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of available backups for the specified SQL Server
        cluster.
      operationId: ClusterListBackups
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster.

          To get the SQL Server cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listBackups#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listBackups#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listBackups#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listBackups#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterBackupsResponse'
      x-y-navtitle: listBackups
  /mdb/sqlserver/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of hosts for the specified SQL Server cluster.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster.

          To get the SQL Server cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listHosts#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listHosts#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listHosts#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listHosts#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /mdb/sqlserver/v1/clusters/{clusterId}/hosts:batchUpdate:
    post:
      tags:
      - Cluster
      summary: Updates the specified hosts.
      operationId: ClusterUpdateHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to update hosts in.
          To get the SQL Server cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterHostsMetadata'
      x-y-operation-response: Empty
  /mdb/sqlserver/v1/clusters/{clusterId}/databases/{databaseName}:
    get:
      tags:
      - Database
      summary: Returns the specified SQL Server database.
      description: To get the list of available SQL Server databases, make a [list](/docs/managed-sqlserver/api-ref/Database/list)
        request.
      operationId: DatabaseGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster the database belongs to.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Required.
          Name of the SQL Server database to return.

          To get the name of the database use a [list](/docs/managed-sqlserver/api-ref/Database/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      x-y-navtitle: get
    delete:
      tags:
      - Database
      summary: Deletes the specified SQL Server database.
      operationId: DatabaseDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to delete a database in.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Required.
          Name of the database to delete.

          To get the name of the database, use a [list](/docs/managed-sqlserver/api-ref/Database/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDatabaseMetadata'
      x-y-operation-response: Empty
  /mdb/sqlserver/v1/clusters/{clusterId}/databases:
    get:
      tags:
      - Database
      summary: Retrieves the list of SQL Server databases in the specified cluster.
      operationId: DatabaseList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to list databases in.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Database/list#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/Database/list#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/Database/list#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/Database/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Database
      summary: Creates a new SQL Server database in the specified cluster.
      operationId: DatabaseCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to create a database in.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/managed-sqlserver/api-ref/Database#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}/databases:restore:
    post:
      tags:
      - Database
      summary: Creates a new SQL Server database in the specified cluster from a backup.
      operationId: DatabaseRestore
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to restore a database in.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restore
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestoreDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/managed-sqlserver/api-ref/Database#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}/databases:import:
    post:
      tags:
      - Database
      summary: Imports a new SQL Server database from an external backup.
      operationId: DatabaseImportBackup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to import a database in.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDatabaseBackupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: importBackup
      x-y-operation-metadata:
        $ref: '#/components/schemas/ImportDatabaseBackupMetadata'
      x-y-operation-response: '[Database](/docs/managed-sqlserver/api-ref/Database#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}/databases/{databaseName}:export:
    post:
      tags:
      - Database
      summary: Exports the last database backup to an external backup.
      operationId: DatabaseExportBackup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to export a database from.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Required.
          Name of the SQL Server database that is being exported.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDatabaseBackupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: exportBackup
      x-y-operation-metadata:
        $ref: '#/components/schemas/ExportDatabaseBackupMetadata'
      x-y-operation-response: '[Database](/docs/managed-sqlserver/api-ref/Database#representation)'
  /mdb/sqlserver/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified resource preset.
      description: To get the list of available resource presets, make a [list](/docs/managed-sqlserver/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          ID of the resource preset to return.

          To get the resource preset ID, use a [list](/docs/managed-sqlserver/api-ref/ResourcePreset/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /mdb/sqlserver/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available resource presets.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/ResourcePreset/list#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/ResourcePreset/list#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/ResourcePreset/list#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/ResourcePreset/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /mdb/sqlserver/v1/clusters/{clusterId}/users/{userName}:
    get:
      tags:
      - User
      summary: Returns the specified SQL Server user.
      description: To get the list of available SQL Server users, make a [list](/docs/managed-sqlserver/api-ref/User/list)
        request.
      operationId: UserGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster the user belongs to.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the SQL Server user to return.

          To get the name of the user use a [list](/docs/managed-sqlserver/api-ref/Database/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-y-navtitle: get
    delete:
      tags:
      - User
      summary: Deletes the specified SQL Server user.
      operationId: UserDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster the user belongs to.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to delete.

          To get the name of the user, use a [list](/docs/managed-sqlserver/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteUserMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - User
      summary: Modifies the specified SQL Server user.
      operationId: UserUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster the user belongs to.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to be updated.

          To get the name of the user use a [list](/docs/managed-sqlserver/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-sqlserver/api-ref/User#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}/users:
    get:
      tags:
      - User
      summary: Retrieves a list of SQL Server users in the specified cluster.
      operationId: UserList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to list SQL Server users in.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-sqlserver/api-ref/User/list#query_params), the service returns a [nextPageToken](/docs/managed-sqlserver/api-ref/User/list#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-sqlserver/api-ref/User/list#query_params) to the [nextPageToken](/docs/managed-sqlserver/api-ref/User/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      x-y-navtitle: list
    post:
      tags:
      - User
      summary: Creates an SQL Server user in the specified cluster.
      operationId: UserCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster to create a user for.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-sqlserver/api-ref/User#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}/users/{userName}:grantPermission:
    post:
      tags:
      - User
      summary: Grants a permission to the specified SQL Server user.
      operationId: UserGrantPermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster the user belongs to.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to grant the permission to.

          To get the name of the user, use a [list](/docs/managed-sqlserver/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: grantPermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/GrantUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-sqlserver/api-ref/User#representation)'
  /mdb/sqlserver/v1/clusters/{clusterId}/users/{userName}:revokePermission:
    post:
      tags:
      - User
      summary: Revokes a permission from the specified SQL Server user.
      operationId: UserRevokePermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the SQL Server cluster the user belongs to.

          To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to revoke a permission from.

          To get the name of the user, use a [list](/docs/managed-sqlserver/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: revokePermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/RevokeUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-sqlserver/api-ref/User#representation)'
components:
  schemas:
    Access:
      type: object
      properties:
        dataLens:
          description: Allows access for DataLens.
          type: boolean
          format: boolean
        webSql:
          description: Allows access for Web SQL.
          type: boolean
          format: boolean
    Backup:
      description: |-
        An SQL Server backup resource.

        For more information, see the [Backup](/docs/managed-sqlserver/concepts/backup) section in the documentation.
      type: object
      properties:
        id:
          description: ID of the backup.
          type: string
        folderId:
          description: ID of the folder that the backup belongs to.
          type: string
        createdAt:
          description: |-
            Time when the backup operation was completed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        sourceClusterId:
          description: ID of the SQL Server cluster that the backup was created for.
          type: string
        startedAt:
          description: |-
            Time when the backup operation was started.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        databases:
          description: List of databases included in the backup.
          type: array
          items:
            type: string
    BackupClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being backed up.
          type: string
    Cluster:
      description: |-
        An SQL Server cluster.

        For more information, see the [Concepts](/docs/managed-sqlserver/concepts) section of the documentation.
      type: object
      properties:
        id:
          description: |-
            ID of the SQL Server cluster.

            This ID is assigned by Managed Service for SQL Server at the moment of creation.
          type: string
        folderId:
          description: ID of the folder the SQL Server cluster belongs to.
          type: string
        createdAt:
          description: |-
            Time when SQL Server cluster was created.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the SQL Server cluster.

            The name must be unique within the folder, comply with [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt) and be 1-63 characters long.
          type: string
        description:
          description: |-
            Description of the SQL Server cluster.

            Must be 0-256 characters long.
          type: string
        labels:
          description: |-
            Custom labels for the SQL Server cluster as `key:value` pairs.

            Maximum 64 per resource.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the SQL Server
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        networkId:
          description: ID of the network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        sqlcollation:
          description: SQL Server Collation.
          type: string
        hostGroupIds:
          description: Host groups hosting VMs of the cluster.
          type: array
          items:
            type: string
        serviceAccountId:
          description: ID of the service account which is used for access to Object
            Storage.
          type: string
    ClusterConfig:
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: Version of the SQL Server.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to SQL Server hosts.
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Start time for the daily backup in UTC timezone.
          access:
            $ref: '#/components/schemas/Access'
            description: Database access policy.
          secondaryConnections:
            $ref: '#/components/schemas/ClusterConfigSecondaryConnections'
            description: Secondary replicas connection mode
      - title: sqlserver_config
        type: object
        maxProperties: 1
        properties:
          sqlserverConfig_2016Sp2Std:
            $ref: '#/components/schemas/SQLServerConfigSet2016sp2std'
            description: Configuration of the SQL Server 2016sp2 standard edition
              instance.
          sqlserverConfig_2016Sp2Ent:
            $ref: '#/components/schemas/SQLServerConfigSet2016sp2ent'
            description: Configuration of the SQL Server 2016sp2 enterprise edition
              instance.
          sqlserverConfig_2017Std:
            $ref: '#/components/schemas/SQLServerConfigSet2017std'
            description: Configuration of the SQL Server 2017 standard edition instance.
          sqlserverConfig_2017Ent:
            $ref: '#/components/schemas/SQLServerConfigSet2017ent'
            description: Configuration of the SQL Server 2017 enterprise edition instance.
          sqlserverConfig_2019Std:
            $ref: '#/components/schemas/SQLServerConfigSet2019std'
            description: Configuration of the SQL Server 2019 standard edition instance.
          sqlserverConfig_2019Ent:
            $ref: '#/components/schemas/SQLServerConfigSet2019ent'
            description: Configuration of the SQL Server 2019 enterprise edition instance.
    ClusterConfigSecondaryConnections:
      description: |2-
         - SECONDARY_CONNECTIONS_OFF: Connections to secondary replicas are prohibited
         - SECONDARY_CONNECTIONS_READ_ONLY: Secondary replicas are read-only
      type: string
      enum:
      - SECONDARY_CONNECTIONS_OFF
      - SECONDARY_CONNECTIONS_READ_ONLY
    ClusterEnvironment:
      description: |2-
         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: State of the cluster is unknown (`health` of all hosts in the cluster is `UNKNOWN`).
         - ALIVE: Cluster is alive and works well (`health` of all hosts in the cluster is `ALIVE`).
         - DEAD: Cluster is inoperable (`health` of all hosts in the cluster is `DEAD`).
         - DEGRADED: Cluster is in degraded state (`health` of at least one of the hosts in the cluster is not `ALIVE`).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConfigSpec:
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: |-
              Version of SQL Server used in the cluster.

              Possible values:
              * 2016sp2std,
              * 2016sp2ent,
              * 2017std,
              * 2017ent,
              * 2019std,
              * 2019ent.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to SQL Server hosts.
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Start time for the daily backup in UTC timezone.
          access:
            $ref: '#/components/schemas/Access'
            description: Database access policy.
          secondaryConnections:
            $ref: '#/components/schemas/ClusterConfigSecondaryConnections'
            description: Secondary replicas connection mode
      - title: sqlserver_config
        type: object
        maxProperties: 1
        properties:
          sqlserverConfig_2016Sp2Std:
            $ref: '#/components/schemas/SQLServerConfig2016sp2std'
            description: Configuration for an SQL Server 2016 SP2 Standard edition
              cluster.
          sqlserverConfig_2016Sp2Ent:
            $ref: '#/components/schemas/SQLServerConfig2016sp2ent'
            description: Configuration for an SQL Server 2016 SP2 Enterprise edition
              cluster.
          sqlserverConfig_2017Std:
            $ref: '#/components/schemas/SQLServerConfig2017std'
            description: Configuration for an SQL Server 2017 Standard edition cluster.
          sqlserverConfig_2017Ent:
            $ref: '#/components/schemas/SQLServerConfig2017ent'
            description: Configuration for an SQL Server 2017 Enterprise edition cluster.
          sqlserverConfig_2019Std:
            $ref: '#/components/schemas/SQLServerConfig2019std'
            description: Configuration for an SQL Server 2019 Standard edition cluster.
          sqlserverConfig_2019Ent:
            $ref: '#/components/schemas/SQLServerConfig2019ent'
            description: Configuration for an SQL Server 2019 Enterprise edition cluster.
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create the SQL Server cluster in.

            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the SQL Server cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the SQL Server cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the SQL Server cluster as `key:value` pairs.
            For example, "project":"mvp" or "source":"dictionary".

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
        databaseSpecs:
          description: One or more configurations of databases to be created in the
            SQL Server cluster.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseSpec'
        userSpecs:
          description: One or more configurations of database users to be created
            in the SQL Server cluster.
          type: array
          items:
            $ref: '#/components/schemas/UserSpec'
        hostSpecs:
          description: One or more configurations of hosts to be created in the SQL
            Server cluster.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            ID of the network to create the SQL Server cluster in.

            The maximum string length in characters is 50.
          type: string
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        sqlcollation:
          description: |-
            Name of SQL Collation that cluster will be created with.

            The maximum string length in characters is 100.
          type: string
        hostGroupIds:
          description: Host groups hosting VMs of the cluster.
          type: array
          items:
            type: string
        serviceAccountId:
          description: ID of the service account used for access to Object Storage.
          type: string
    CreateDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster where the database is being created.
          type: string
        databaseName:
          description: Name of the SQL Server database being created.
          type: string
    CreateDatabaseRequest:
      type: object
      properties:
        databaseSpec:
          $ref: '#/components/schemas/DatabaseSpec_in_CreateDatabaseRequest_databaseSpec'
    CreateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster the user is being created for.
          type: string
        userName:
          description: Name of the user being created.
          type: string
    CreateUserRequest:
      type: object
      properties:
        userSpec:
          $ref: '#/components/schemas/UserSpec_in_CreateUserRequest_userSpec'
    Database:
      description: |-
        An SQL Server database.

        For more information, see the [Concepts](/docs/managed-sqlserver/concepts) section of the documentation.
      type: object
      properties:
        name:
          description: Name of the database.
          type: string
        clusterId:
          description: ID of the SQL Server cluster that the database belongs to.
          type: string
    DatabaseSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the database.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being deleted.
          type: string
    DeleteDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster where the database is being deleted.
          type: string
        databaseName:
          description: Name of the SQL Server database being deleted.
          type: string
    DeleteUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster the user belongs to.
          type: string
        userName:
          description: Name of the user being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    ExportDatabaseBackupMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Required.
            ID of the SQL Server cluster where a database is being exported.
          type: string
        databaseName:
          description: |-
            Required.
            Name of the SQL Server database that is being exported.
          type: string
        s3Bucket:
          description: |-
            Required.
            Name of object storage bucket to export backups to.
          type: string
        s3Path:
          description: Path in object storage bucket to export backups to.
          type: string
    ExportDatabaseBackupRequest:
      type: object
      properties:
        s3Bucket:
          description: |-
            Required.
            Name of object storage bucket to export backups to.
          type: string
        s3Path:
          description: Path in object storage bucket to export backups to.
          type: string
        prefix:
          description: Prefix for .bak files to export.
          type: string
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GrantUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            ID of the SQL Server cluster the user belongs to.

            To get the cluster ID, use a [list](/docs/managed-sqlserver/api-ref/Cluster/list) request.
          type: string
        userName:
          description: Name of the user being granted a permission.
          type: string
    GrantUserPermissionRequest:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/Permission_in_GrantUserPermissionRequest_permission'
    Host:
      type: object
      properties:
        name:
          description: |-
            Name of the SQL Server host.

            The host name is assigned by Managed Service for SQL Server at the moment of creation and cannot be changed. 1-63 characters long.

            The name is unique across all database hosts that exist on the platform as it defines the FQDN of the host.
          type: string
        clusterId:
          description: |-
            ID of the SQL Server host.

            The ID is assigned by Managed Service for SQL Server at the moment of creation.
          type: string
        zoneId:
          description: ID of the availability zone where the SQL Server host resides.
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        role:
          $ref: '#/components/schemas/HostRole_in_Host_role'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        services:
          description: Services provided by the host.
          type: array
          items:
            $ref: '#/components/schemas/Service'
        subnetId:
          description: ID of the subnet that the host belongs to.
          type: string
        assignPublicIp:
          description: Flag showing public IP assignment status to this host.
          type: boolean
          format: boolean
    HostHealth:
      description: |2-
         - HEALTH_UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: The host is degraded and can perform only some of its essential functions.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    HostRole:
      description: |2-
         - ROLE_UNKNOWN: Role of the host in the cluster is unknown.
         - MASTER: Host is the master SQL Server instance in the cluster.
         - REPLICA: Host is a replica SQL Server instance in the cluster.
      type: string
      enum:
      - ROLE_UNKNOWN
      - MASTER
      - REPLICA
      default: ROLE_UNKNOWN
    HostSpec:
      type: object
      properties:
        zoneId:
          description: |-
            ID of the availability zone where the host resides.

            To get the list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet that the host should belong to. This subnet should be a part of the network that the cluster belongs to.

            The ID of the network is set in the field [Cluster.networkId](/docs/managed-sqlserver/api-ref/Cluster#representation).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Determines whether the host gets a public IP address on creation.

            After a host has been created, this setting cannot be changed. To remove an assigned public IP, or to assign a public IP to a host without one, recreate the host with `assignPublicIp` set as needed.

            Possible values:
            * `false` - do not assign a public IP to the host;
            * `true` - assign a public IP to the host.
          type: boolean
          format: boolean
    ImportDatabaseBackupMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Required.
            ID of the SQL Server cluster where a database is being imported.
          type: string
        databaseName:
          description: |-
            Required.
            Name of the SQL Server database that is being imported.
          type: string
        s3Bucket:
          description: |-
            Required.
            Name of object storage bucket to import backups from.
          type: string
        s3Path:
          description: Path in object storage bucket to import backups from.
          type: string
    ImportDatabaseBackupRequest:
      type: object
      properties:
        databaseName:
          description: |-
            Required.
            Name of the SQL Server database that is being imported.
          type: string
        s3Bucket:
          description: |-
            Required.
            Name of object storage bucket to import backups from.
          type: string
        s3Path:
          description: Path in object storage bucket to import backups from.
          type: string
        files:
          description: |-
            Required.
            List of .bak files in bucket containing database backup.
          type: array
          items:
            type: string
    ListBackupsResponse:
      type: object
      properties:
        backups:
          description: List of SQL Server backups.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListBackups requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Backup/list#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/Backup/list#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/Backup/list#query_params) parameter in the next ListBackups request.

            Each subsequent ListBackups request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/Backup/list#responses) to continue paging through the results.

            The maximum string length in characters is 100.
          type: string
    ListClusterBackupsResponse:
      type: object
      properties:
        backups:
          description: List of SQL Server backups.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listBackups#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listBackups#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listBackups#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listBackups#responses) to continue paging through the results.
          type: string
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: List of SQL Server hosts.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listHosts#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listHosts#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listHosts#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listHosts#responses) to continue paging through the results.
          type: string
    ListClusterLogsRequestServiceType:
      description: |2-
         - SQLSERVER_ERROR: SQL Server error log.
         - SQLSERVER_APPLICATION: SQL Server application log.
      type: string
      enum:
      - SQLSERVER_ERROR
      - SQLSERVER_APPLICATION
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listLogs#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listLogs#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listLogs#responses) to continue paging through the results.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified SQL Server cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/listOperations#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listOperations#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of SQL Server clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Cluster/list#query_params), use the `next_page_token` as the value for the [pageToken](/docs/managed-sqlserver/api-ref/Cluster/list#query_params) parameter in the next list request. Each subsequent list request has its own `next_page_token` to continue paging through the results.
          type: string
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          description: List of SQL Server databases.
          type: array
          items:
            $ref: '#/components/schemas/Database'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/Database/list#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/Database/list#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/Database/list#query_params) parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/Database/list#responses) to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of resource presets.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/ResourcePreset/list#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/ResourcePreset/list#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/ResourcePreset/list#query_params) parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/ResourcePreset/list#responses) to continue paging through the results.

            The maximum string length in characters is 100.
          type: string
    ListUsersResponse:
      type: object
      properties:
        users:
          description: Requested list of SQL Server users.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-sqlserver/api-ref/User/list#query_params), use the [nextPageToken](/docs/managed-sqlserver/api-ref/User/list#responses) as the value for the [pageToken](/docs/managed-sqlserver/api-ref/User/list#query_params) parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-sqlserver/api-ref/User/list#responses) to continue paging through the results.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    Monitoring:
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts for the SQL Server cluster.
          type: string
    MoveClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being moved.
          type: string
        sourceFolderId:
          description: ID of the source folder.
          type: string
        destinationFolderId:
          description: ID of the destination folder.
          type: string
    MoveClusterRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Permission:
      type: object
      properties:
        databaseName:
          description: Name of the database the permission grants access to.
          type: string
        roles:
          description: |-
            Required.
            Roles granted to the user within the database.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/PermissionRole'
    PermissionRole:
      description: |-
        Role granted to the user within the database.

         - DB_OWNER: Members of this fixed database role can perform all configuration and maintenance activities on a database and can also drop a database in SQL Server.
         - DB_SECURITYADMIN: Members of this fixed database role can modify role membership for custom roles only and manage permissions. They can potentially elevate their privileges and their actions should be monitored.
         - DB_ACCESSADMIN: Members of this fixed database role can add or remove access to a database for Windows logins, Windows groups, and SQL Server logins.
         - DB_BACKUPOPERATOR: Members of this fixed database role can back up the database.
         - DB_DDLADMIN: Members of this fixed database role can run any Data Definition Language (DDL) command in a database.
         - DB_DATAWRITER: Members of this fixed database role can add, delete, or change data in all user tables.
         - DB_DATAREADER: Members of this fixed database role can read all data from all user tables.
         - DB_DENYDATAWRITER: Members of this fixed database role cannot add, modify, or delete any data in the user tables within a database. A denial has a higher priority than a grant, so you can use this role to quickly restrict one's privileges without explicitly revoking permissions or roles.
         - DB_DENYDATAREADER: Members of this fixed database role cannot read any data in the user tables within a database. A denial has a higher priority than a grant, so you can use this role to quickly restrict one's privileges without explicitly revoking permissions or roles.
      type: string
      enum:
      - DB_OWNER
      - DB_SECURITYADMIN
      - DB_ACCESSADMIN
      - DB_BACKUPOPERATOR
      - DB_DDLADMIN
      - DB_DATAWRITER
      - DB_DATAREADER
      - DB_DENYDATAWRITER
      - DB_DENYDATAREADER
    ResourcePreset:
      description: A preset of resources for hardware configuration of SQL Server
        hosts.
      type: object
      properties:
        id:
          description: ID of the resource preset.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for an SQL Server host created with the
            preset.
          type: string
          format: int64
        memory:
          description: RAM volume for an SQL Server host created with the preset,
            in bytes.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory, etc.).

            All available presets are listed in the [documentation](/docs/managed-sqlserver/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.

            Possible values:
            * `network-hdd` - network HDD drive;
            * `network-ssd` - network SSD drive;
            * `local-ssd` - local SSD storage.
          type: string
    RestoreClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the new SQL Server cluster being created from a backup.
          type: string
        backupId:
          description: ID of the backup being used for creating a cluster.
          type: string
    RestoreClusterRequest:
      type: object
      properties:
        backupId:
          description: |-
            Required.
            ID of the backup to create a new cluster from.

            To get the backup ID, use a [listBackups](/docs/managed-sqlserver/api-ref/Cluster/listBackups) request.
          type: string
        time:
          description: |-
            Required.
            Timestamp of the moment to which the SQL Server cluster should be restored.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Required.
            Name of the new SQL Server cluster to be created from the backup. The name must be unique within the folder.

            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the new SQL Server cluster to be created from the backup.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the new SQL Server cluster to be created from the backup as `key:value` pairs.

            For example, `"project":"mvp"` or `"source":"dictionary"`.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_RestoreClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_RestoreClusterRequest_configSpec'
        hostSpecs:
          description: Configurations for SQL Server hosts that should be added to
            the cluster being created from the backup.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            ID of the network to create the SQL Server cluster in.

            The maximum string length in characters is 50.
          type: string
        folderId:
          description: |-
            ID of the folder to create the SQL Server cluster in.

            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        hostGroupIds:
          description: Host groups hosting VMs of the cluster.
          type: array
          items:
            type: string
        serviceAccountId:
          description: ID of the service account used for access to Object Storage.
          type: string
    RestoreDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Required.
            ID of the SQL Server cluster where a database is being created.
          type: string
        databaseName:
          description: |-
            Required.
            Name of an SQL Server database that is being created.
          type: string
        fromDatabase:
          description: |-
            Required.
            Name of the database which backup is used to restore the database.
          type: string
        backupId:
          description: |-
            Required.
            ID of a backup to be used.
          type: string
    RestoreDatabaseRequest:
      type: object
      properties:
        databaseName:
          description: |-
            Required.
            Name of the SQL Server database that is being restored.
          type: string
        fromDatabase:
          description: |-
            Required.
            Name of the database which backup is used to restore the database.
          type: string
        backupId:
          description: |-
            Required.
            ID of a backup to be used.
          type: string
        time:
          description: |-
            Required.
            Timestamp which is used for Point-in-Time recovery.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    RevokeUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster the user belongs to.
          type: string
        userName:
          description: Name of the user whose permission is being revoked.
          type: string
    RevokeUserPermissionRequest:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/Permission_in_RevokeUserPermissionRequest_permission'
    SQLServerConfig2016sp2ent:
      description: |-
        SQL Server 2016 SP2 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2016sp2std:
      description: |-
        SQL Server 2016 SP2 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2017ent:
      description: |-
        SQL Server 2017 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2017std:
      description: |-
        SQL Server 2017 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2019ent:
      description: |-
        SQL Server 2019 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    SQLServerConfig2019std:
      description: |-
        SQL Server 2019 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    SQLServerConfigSet2016sp2ent:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/SQLServerConfig2016sp2ent_in_SQLServerConfigSet2016sp2ent_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/SQLServerConfig2016sp2ent_in_SQLServerConfigSet2016sp2ent_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/SQLServerConfig2016sp2ent_in_SQLServerConfigSet2016sp2ent_defaultConfig'
    SQLServerConfigSet2016sp2std:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/SQLServerConfig2016sp2std_in_SQLServerConfigSet2016sp2std_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/SQLServerConfig2016sp2std_in_SQLServerConfigSet2016sp2std_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/SQLServerConfig2016sp2std_in_SQLServerConfigSet2016sp2std_defaultConfig'
    SQLServerConfigSet2017ent:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/SQLServerConfig2017ent_in_SQLServerConfigSet2017ent_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/SQLServerConfig2017ent_in_SQLServerConfigSet2017ent_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/SQLServerConfig2017ent_in_SQLServerConfigSet2017ent_defaultConfig'
    SQLServerConfigSet2017std:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/SQLServerConfig2017std_in_SQLServerConfigSet2017std_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/SQLServerConfig2017std_in_SQLServerConfigSet2017std_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/SQLServerConfig2017std_in_SQLServerConfigSet2017std_defaultConfig'
    SQLServerConfigSet2019ent:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/SQLServerConfig2019ent_in_SQLServerConfigSet2019ent_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/SQLServerConfig2019ent_in_SQLServerConfigSet2019ent_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/SQLServerConfig2019ent_in_SQLServerConfigSet2019ent_defaultConfig'
    SQLServerConfigSet2019std:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/SQLServerConfig2019std_in_SQLServerConfigSet2019std_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/SQLServerConfig2019std_in_SQLServerConfigSet2019std_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/SQLServerConfig2019std_in_SQLServerConfigSet2019std_defaultConfig'
    ServerRole:
      description: |-
        Set of server roles.

         - MDB_MONITOR: Effectively grants VIEW SERVER STATE to the login.

        That gives an ability to use various dynamic management views to monitor server state, including Activity Monitor tool that is built-in into SSMS.

        No intrusive actions are allowed, so this is pretty safe to grant.
      type: string
      enum:
      - MDB_MONITOR
    Service:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServiceType_in_Service_type'
        health:
          $ref: '#/components/schemas/ServiceHealth_in_Service_health'
    ServiceHealth:
      description: |2-
         - HEALTH_UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      default: HEALTH_UNKNOWN
    ServiceType:
      description: ' - SQLSERVER: SQL Server service.'
      type: string
      enum:
      - SQLSERVER
    StartClusterFailoverMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being failovered.
          type: string
    StartClusterFailoverRequest:
      type: object
      properties:
        hostName:
          description: |-
            Host name to switch master role to.

            To get this name, make a [listHosts](/docs/managed-sqlserver/api-ref/Cluster/listHosts) request.

            The maximum string length in characters is 253.
          type: string
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being started.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being stopped.
          type: string
    TimeOfDay:
      description: |-
        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    UpdateClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster to update hosts in.
          type: string
        hostNames:
          description: Names of the hosts being updated.
          type: array
          items:
            type: string
    UpdateClusterHostsRequest:
      type: object
      properties:
        updateHostSpecs:
          description: |-
            Required.
            New configurations to apply to hosts.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/UpdateHostSpec'
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the SQL Server cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the SQL Server cluster as `key:value` pairs.

            For example, `"project":"mvp"` or `"source":"dictionary"`.

            The new set of labels completely replaces the old one.

            To add a label, request the current set with the [get](/docs/managed-sqlserver/api-ref/Cluster/get) method, then send an [update](/docs/managed-sqlserver/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            New name for the SQL Server cluster.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        serviceAccountId:
          description: ID of the service account used for access to Object Storage.
          type: string
    UpdateHostSpec:
      type: object
      properties:
        hostName:
          description: |-
            Required.
            Name of the host to update.

            To get the SQL Server host name, use a [listHosts](/docs/managed-sqlserver/api-ref/Cluster/listHosts) request.
          type: string
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateHostSpec_updateMask'
        assignPublicIp:
          description: Determines whether the host gets a public IP address on creation.
          type: boolean
          format: boolean
    UpdateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the SQL Server cluster the user belongs to.
          type: string
        userName:
          description: Name of the user being updated.
          type: string
    UpdateUserRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateUserRequest_updateMask'
        password:
          description: |-
            New password for the user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: New set of permissions for the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        serverRoles:
          description: New set of server roles granted to the login.
          type: array
          items:
            $ref: '#/components/schemas/ServerRole'
    User:
      description: An SQL Server user.
      type: object
      properties:
        name:
          description: Name of the SQL Server user.
          type: string
        clusterId:
          description: ID of the SQL Server cluster the user belongs to.
          type: string
        permissions:
          description: Set of permissions granted to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        serverRoles:
          description: Set of server roles granted to the login.
          type: array
          items:
            $ref: '#/components/schemas/ServerRole'
    UserSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the SQL Server user.

            The maximum string length in characters is 32.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the SQL Server user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions to grant to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        serverRoles:
          description: Set of server roles.
          type: array
          items:
            $ref: '#/components/schemas/ServerRole'
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the SQL Server cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterConfig_in_Cluster_config:
      description: Configuration of the SQL Server cluster.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: Version of the SQL Server.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to SQL Server hosts.
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Start time for the daily backup in UTC timezone.
          access:
            $ref: '#/components/schemas/Access'
            description: Database access policy.
          secondaryConnections:
            $ref: '#/components/schemas/ClusterConfigSecondaryConnections'
            description: Secondary replicas connection mode
      - title: sqlserver_config
        type: object
        maxProperties: 1
        properties:
          sqlserverConfig_2016Sp2Std:
            $ref: '#/components/schemas/SQLServerConfigSet2016sp2std'
            description: Configuration of the SQL Server 2016sp2 standard edition
              instance.
          sqlserverConfig_2016Sp2Ent:
            $ref: '#/components/schemas/SQLServerConfigSet2016sp2ent'
            description: Configuration of the SQL Server 2016sp2 enterprise edition
              instance.
          sqlserverConfig_2017Std:
            $ref: '#/components/schemas/SQLServerConfigSet2017std'
            description: Configuration of the SQL Server 2017 standard edition instance.
          sqlserverConfig_2017Ent:
            $ref: '#/components/schemas/SQLServerConfigSet2017ent'
            description: Configuration of the SQL Server 2017 enterprise edition instance.
          sqlserverConfig_2019Std:
            $ref: '#/components/schemas/SQLServerConfigSet2019std'
            description: Configuration of the SQL Server 2019 standard edition instance.
          sqlserverConfig_2019Ent:
            $ref: '#/components/schemas/SQLServerConfigSet2019ent'
            description: Configuration of the SQL Server 2019 enterprise edition instance.
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: State of the cluster is unknown (`health` of all hosts in the cluster is `UNKNOWN`).
         - ALIVE: Cluster is alive and works well (`health` of all hosts in the cluster is `ALIVE`).
         - DEAD: Cluster is inoperable (`health` of all hosts in the cluster is `DEAD`).
         - DEGRADED: Cluster is in degraded state (`health` of at least one of the hosts in the cluster is not `ALIVE`).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Deployment environment of the SQL Server cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: Configurations of SQL Server and hosts of the cluster.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: |-
              Version of SQL Server used in the cluster.

              Possible values:
              * 2016sp2std,
              * 2016sp2ent,
              * 2017std,
              * 2017ent,
              * 2019std,
              * 2019ent.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to SQL Server hosts.
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Start time for the daily backup in UTC timezone.
          access:
            $ref: '#/components/schemas/Access'
            description: Database access policy.
          secondaryConnections:
            $ref: '#/components/schemas/ClusterConfigSecondaryConnections'
            description: Secondary replicas connection mode
      - title: sqlserver_config
        type: object
        maxProperties: 1
        properties:
          sqlserverConfig_2016Sp2Std:
            $ref: '#/components/schemas/SQLServerConfig2016sp2std'
            description: Configuration for an SQL Server 2016 SP2 Standard edition
              cluster.
          sqlserverConfig_2016Sp2Ent:
            $ref: '#/components/schemas/SQLServerConfig2016sp2ent'
            description: Configuration for an SQL Server 2016 SP2 Enterprise edition
              cluster.
          sqlserverConfig_2017Std:
            $ref: '#/components/schemas/SQLServerConfig2017std'
            description: Configuration for an SQL Server 2017 Standard edition cluster.
          sqlserverConfig_2017Ent:
            $ref: '#/components/schemas/SQLServerConfig2017ent'
            description: Configuration for an SQL Server 2017 Enterprise edition cluster.
          sqlserverConfig_2019Std:
            $ref: '#/components/schemas/SQLServerConfig2019std'
            description: Configuration for an SQL Server 2019 Standard edition cluster.
          sqlserverConfig_2019Ent:
            $ref: '#/components/schemas/SQLServerConfig2019ent'
            description: Configuration for an SQL Server 2019 Enterprise edition cluster.
    DatabaseSpec_in_CreateDatabaseRequest_databaseSpec:
      description: |-
        Required.
        Configuration of the database to create.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the database.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    UserSpec_in_CreateUserRequest_userSpec:
      description: |-
        Required.
        Properties of the user to be created.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the SQL Server user.

            The maximum string length in characters is 32.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the SQL Server user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions to grant to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        serverRoles:
          description: Set of server roles.
          type: array
          items:
            $ref: '#/components/schemas/ServerRole'
    Permission_in_GrantUserPermissionRequest_permission:
      description: |-
        Required.
        Permission that should be granted to the specified user.
      type: object
      properties:
        databaseName:
          description: Name of the database the permission grants access to.
          type: string
        roles:
          description: |-
            Required.
            Roles granted to the user within the database.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/PermissionRole'
    Resources_in_Host_resources:
      description: Resources allocated to the host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory, etc.).

            All available presets are listed in the [documentation](/docs/managed-sqlserver/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.

            Possible values:
            * `network-hdd` - network HDD drive;
            * `network-ssd` - network SSD drive;
            * `local-ssd` - local SSD storage.
          type: string
    HostRole_in_Host_role:
      description: |-
        Role of the host in the cluster.

         - ROLE_UNKNOWN: Role of the host in the cluster is unknown.
         - MASTER: Host is the master SQL Server instance in the cluster.
         - REPLICA: Host is a replica SQL Server instance in the cluster.
      type: string
      enum:
      - ROLE_UNKNOWN
      - MASTER
      - REPLICA
      default: ROLE_UNKNOWN
    HostHealth_in_Host_health:
      description: |-
        Status code of the aggregated health of the host.

         - HEALTH_UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: The host is degraded and can perform only some of its essential functions.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterEnvironment_in_RestoreClusterRequest_environment:
      description: |-
        Deployment environment of the new SQL Server cluster to be created from the backup.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_RestoreClusterRequest_configSpec:
      description: Configuration for the new SQL Server cluster to be created from
        the backup.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: |-
              Version of SQL Server used in the cluster.

              Possible values:
              * 2016sp2std,
              * 2016sp2ent,
              * 2017std,
              * 2017ent,
              * 2019std,
              * 2019ent.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to SQL Server hosts.
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Start time for the daily backup in UTC timezone.
          access:
            $ref: '#/components/schemas/Access'
            description: Database access policy.
          secondaryConnections:
            $ref: '#/components/schemas/ClusterConfigSecondaryConnections'
            description: Secondary replicas connection mode
      - title: sqlserver_config
        type: object
        maxProperties: 1
        properties:
          sqlserverConfig_2016Sp2Std:
            $ref: '#/components/schemas/SQLServerConfig2016sp2std'
            description: Configuration for an SQL Server 2016 SP2 Standard edition
              cluster.
          sqlserverConfig_2016Sp2Ent:
            $ref: '#/components/schemas/SQLServerConfig2016sp2ent'
            description: Configuration for an SQL Server 2016 SP2 Enterprise edition
              cluster.
          sqlserverConfig_2017Std:
            $ref: '#/components/schemas/SQLServerConfig2017std'
            description: Configuration for an SQL Server 2017 Standard edition cluster.
          sqlserverConfig_2017Ent:
            $ref: '#/components/schemas/SQLServerConfig2017ent'
            description: Configuration for an SQL Server 2017 Enterprise edition cluster.
          sqlserverConfig_2019Std:
            $ref: '#/components/schemas/SQLServerConfig2019std'
            description: Configuration for an SQL Server 2019 Standard edition cluster.
          sqlserverConfig_2019Ent:
            $ref: '#/components/schemas/SQLServerConfig2019ent'
            description: Configuration for an SQL Server 2019 Enterprise edition cluster.
    Permission_in_RevokeUserPermissionRequest_permission:
      description: |-
        Required.
        Permission that should be revoked from the specified user.
      type: object
      properties:
        databaseName:
          description: Name of the database the permission grants access to.
          type: string
        roles:
          description: |-
            Required.
            Roles granted to the user within the database.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/PermissionRole'
    SQLServerConfig2016sp2ent_in_SQLServerConfigSet2016sp2ent_effectiveConfig:
      description: |-
        Effective settings for an SQL Server 2016 SP2 cluster (a combination of settings defined in `userConfig` and `defaultConfig`).

        SQL Server 2016 SP2 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2016sp2ent_in_SQLServerConfigSet2016sp2ent_userConfig:
      description: |-
        User-defined settings for an SQL Server 2016 SP2 cluster.

        SQL Server 2016 SP2 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2016sp2ent_in_SQLServerConfigSet2016sp2ent_defaultConfig:
      description: |-
        Default configuration for an SQL Server 2016 SP2 cluster.

        SQL Server 2016 SP2 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2016sp2std_in_SQLServerConfigSet2016sp2std_effectiveConfig:
      description: |-
        Effective settings for an SQL Server 2016 SP2 cluster (a combination of settings defined in `userConfig` and `defaultConfig`).

        SQL Server 2016 SP2 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2016sp2std_in_SQLServerConfigSet2016sp2std_userConfig:
      description: |-
        User-defined settings for an SQL Server 2016 SP2 cluster.

        SQL Server 2016 SP2 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2016sp2std_in_SQLServerConfigSet2016sp2std_defaultConfig:
      description: |-
        Default configuration for an SQL Server 2016 SP2 cluster.

        SQL Server 2016 SP2 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2016).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2016).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2016).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2016).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2016).
          type: boolean
          format: boolean
    SQLServerConfig2017ent_in_SQLServerConfigSet2017ent_effectiveConfig:
      description: |-
        Effective settings for an SQL Server 2017 cluster (a combination of settings defined in `userConfig` and `defaultConfig`).

        SQL Server 2017 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2017ent_in_SQLServerConfigSet2017ent_userConfig:
      description: |-
        User-defined settings for an SQL Server 2017 cluster.

        SQL Server 2017 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2017ent_in_SQLServerConfigSet2017ent_defaultConfig:
      description: |-
        Default configuration for an SQL Server 2017 cluster.

        SQL Server 2017 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2017std_in_SQLServerConfigSet2017std_effectiveConfig:
      description: |-
        Effective settings for an SQL Server 2017 cluster (a combination of settings defined in `userConfig` and `defaultConfig`).

        SQL Server 2017 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2017std_in_SQLServerConfigSet2017std_userConfig:
      description: |-
        User-defined settings for an SQL Server 2017 cluster.

        SQL Server 2017 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2017std_in_SQLServerConfigSet2017std_defaultConfig:
      description: |-
        Default configuration for an SQL Server 2017 cluster.

        SQL Server 2017 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2017).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2017).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2017).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2017).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2017).
          type: boolean
          format: boolean
    SQLServerConfig2019ent_in_SQLServerConfigSet2019ent_effectiveConfig:
      description: |-
        Effective settings for an SQL Server 2019 cluster (a combination of settings defined in `userConfig` and `defaultConfig`).

        SQL Server 2019 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    SQLServerConfig2019ent_in_SQLServerConfigSet2019ent_userConfig:
      description: |-
        User-defined settings for an SQL Server 2019 cluster.

        SQL Server 2019 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    SQLServerConfig2019ent_in_SQLServerConfigSet2019ent_defaultConfig:
      description: |-
        Default configuration for an SQL Server 2019 cluster.

        SQL Server 2019 Enterprise edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.
            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    SQLServerConfig2019std_in_SQLServerConfigSet2019std_effectiveConfig:
      description: |-
        Effective settings for an SQL Server 2019 cluster (a combination of settings defined in `userConfig` and `defaultConfig`).

        SQL Server 2019 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    SQLServerConfig2019std_in_SQLServerConfigSet2019std_userConfig:
      description: |-
        User-defined settings for an SQL Server 2019 cluster.

        SQL Server 2019 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    SQLServerConfig2019std_in_SQLServerConfigSet2019std_defaultConfig:
      description: |-
        Default configuration for an SQL Server 2019 cluster.

        SQL Server 2019 Standard edition supported configuration options are listed here.

        Detailed description for each set of options is available in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/server-configuration-options-sql-server?view=sql-server-2019).

        Any options that are not listed here are not supported.
      type: object
      properties:
        maxDegreeOfParallelism:
          description: |-
            Limits the number of processors to use in parallel plan execution per task.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-max-degree-of-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 1 to 99, inclusive.
          type: integer
          format: int64
        costThresholdForParallelism:
          description: |-
            Specifies the threshold at which SQL Server creates and runs parallel plans for queries.

            SQL Server creates and runs a parallel plan for a query only when the estimated cost to run a serial plan for the same query is higher than the value of the option.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-cost-threshold-for-parallelism-server-configuration-option?view=sql-server-2019).

            Acceptable values are 5 to 32767, inclusive.
          type: integer
          format: int64
        auditLevel:
          description: |-
            Describes how to configure login auditing to monitor SQL Server Database Engine login activity.

            Possible values:
            * 0 - do not log login attempts;
            * 1 - log only failed login attempts;
            * 2 - log only successful login attempts (not recommended);
            * 3 - log all login attempts (not recommended).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/ssms/configure-login-auditing-sql-server-management-studio?view=sql-server-2019).

            Acceptable values are 0 to 3, inclusive.
          type: integer
          format: int64
        fillFactorPercent:
          description: |-
            Manages the fill factor server configuration option.

            When an index is created or rebuilt, the fill factor determines the percentage of space on each index leaf-level page to be filled with data, reserving the rest as free space for future growth.

            Values 0 and 100 mean full page usage (no space reserved).

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/configure-the-fill-factor-server-configuration-option?view=sql-server-2019).

            Acceptable values are 0 to 100, inclusive.
          type: integer
          format: int64
        optimizeForAdHocWorkloads:
          description: |-
            Determines whether plans should be cached only after second execution.

            Allows to avoid SQL cache bloat because of single-use plans.

            See in-depth description in [SQL Server documentation](https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/optimize-for-ad-hoc-workloads-server-configuration-option?view=sql-server-2019).
          type: boolean
          format: boolean
    ServiceType_in_Service_type:
      description: |-
        Type of the service provided by the host.

         - SQLSERVER: SQL Server service.
      type: string
      enum:
      - SQLSERVER
    ServiceHealth_in_Service_health:
      description: |-
        Status code of server availability.

         - HEALTH_UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      default: HEALTH_UNKNOWN
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the SQL Server cluster should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: New configuration and resources for hosts in the SQL Server cluster.
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: |-
              Version of SQL Server used in the cluster.

              Possible values:
              * 2016sp2std,
              * 2016sp2ent,
              * 2017std,
              * 2017ent,
              * 2019std,
              * 2019ent.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to SQL Server hosts.
          backupWindowStart:
            $ref: '#/components/schemas/TimeOfDay'
            description: Start time for the daily backup in UTC timezone.
          access:
            $ref: '#/components/schemas/Access'
            description: Database access policy.
          secondaryConnections:
            $ref: '#/components/schemas/ClusterConfigSecondaryConnections'
            description: Secondary replicas connection mode
      - title: sqlserver_config
        type: object
        maxProperties: 1
        properties:
          sqlserverConfig_2016Sp2Std:
            $ref: '#/components/schemas/SQLServerConfig2016sp2std'
            description: Configuration for an SQL Server 2016 SP2 Standard edition
              cluster.
          sqlserverConfig_2016Sp2Ent:
            $ref: '#/components/schemas/SQLServerConfig2016sp2ent'
            description: Configuration for an SQL Server 2016 SP2 Enterprise edition
              cluster.
          sqlserverConfig_2017Std:
            $ref: '#/components/schemas/SQLServerConfig2017std'
            description: Configuration for an SQL Server 2017 Standard edition cluster.
          sqlserverConfig_2017Ent:
            $ref: '#/components/schemas/SQLServerConfig2017ent'
            description: Configuration for an SQL Server 2017 Enterprise edition cluster.
          sqlserverConfig_2019Std:
            $ref: '#/components/schemas/SQLServerConfig2019std'
            description: Configuration for an SQL Server 2019 Standard edition cluster.
          sqlserverConfig_2019Ent:
            $ref: '#/components/schemas/SQLServerConfig2019ent'
            description: Configuration for an SQL Server 2019 Enterprise edition cluster.
    FieldMask_in_UpdateHostSpec_updateMask:
      description: |-
        Field mask that specifies which fields of the SQL Server host should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateUserRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the SQL Server user should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Backup
  description: A set of methods for managing SQL Server backups.
- name: Cluster
  description: A set of methods for managing SQL Server clusters.
- name: Database
  description: A set of methods for managing SQL Server databases.
- name: ResourcePreset
  description: A set of methods for managing resource presets.
- name: User
  description: A set of methods for managing SQL Server users.
