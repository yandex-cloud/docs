openapi: "3.0"
info:
  title: Yandex Managed Service for ClickHouse API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about Yandex.Cloud API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /managed-clickhouse/v1/backups/{backupId}:
    get:
      tags:
      - Backup
      summary: Returns the specified ClickHouse Backup resource.
      description: To get the list of available ClickHouse Backup resources, make
        a [list](/docs/managed-clickhouse/api-ref/Backup/list) request.
      operationId: BackupGet
      parameters:
      - name: backupId
        in: path
        description: |-
          Required.
          ID of the backup to return information about.
          To get the backup ID, use a [listBackups](/docs/managed-clickhouse/api-ref/Cluster/listBackups) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      x-y-navtitle: get
  /managed-clickhouse/v1/backups:
    get:
      tags:
      - Backup
      summary: Retrieves the list of Backup resources available for the specified
        folder.
      operationId: BackupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list backups in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Backup/list#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Backup/list#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      x-y-navtitle: list
  /managed-clickhouse/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified ClickHouse cluster.
      description: To get the list of available ClickHouse clusters, make a [list](/docs/managed-clickhouse/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse Cluster resource to return.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified ClickHouse cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to delete.
          To get the ClickHouse cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified ClickHouse cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse Cluster resource to update.
          To get the ClickHouse cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters:
    get:
      tags:
      - Cluster
      summary: |-
        Retrieves a list of ClickHouse clusters that belong
        to the specified folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list ClickHouse clusters in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Cluster/list#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can only use filtering with the [Cluster.name](/docs/managed-clickhouse/api-ref/Cluster#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Ðœust be 1-63 characters long and match the regular expression `^[a-zA-Z0-9_-]+$`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a ClickHouse cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Starts the specified ClickHouse cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to start.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stops the specified ClickHouse cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to stop.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:move:
    post:
      tags:
      - Cluster
      summary: Moves a ClickHouse cluster to the specified folder.
      operationId: ClusterMove
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to move.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:addZookeeper:
    post:
      tags:
      - Cluster
      summary: Adds a ZooKeeper subcluster to the specified ClickHouse cluster.
      operationId: ClusterAddZookeeper
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to modify.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterZookeeperRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addZookeeper
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterZookeeperMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:backup:
    post:
      tags:
      - Cluster
      summary: Creates a backup for the specified ClickHouse cluster.
      operationId: ClusterBackup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to back up.
          To get the ClickHouse cluster ID use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: backup
      x-y-operation-metadata:
        $ref: '#/components/schemas/BackupClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters:restore:
    post:
      tags:
      - Cluster
      summary: Creates a new ClickHouse cluster using the specified backup.
      operationId: ClusterRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restore
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestoreClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: |-
        Retrieves logs for the specified ClickHouse cluster.
        For more information about logs, see the [Logs](/docs/managed-clickhouse/concepts/logs) section of the documentation.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to request logs for.
          To get the ClickHouse cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from logs table to request.
          If no columns are specified, entire log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        description: Type of the service to request logs about.
        schema:
          $ref: '#/components/schemas/ListClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  To get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /managed-clickhouse/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Operation resources for the specified cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse Cluster resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  To get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-clickhouse/v1/clusters/{clusterId}/backups:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of available backups for the specified ClickHouse
        cluster.
      operationId: ClusterListBackups
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster.
          To get the ClickHouse cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params) to the
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterBackupsResponse'
      x-y-navtitle: listBackups
  /managed-clickhouse/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of hosts for the specified cluster.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster.
          To get the ClickHouse cluster ID use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  To get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /managed-clickhouse/v1/clusters/{clusterId}/hosts:batchCreate:
    post:
      tags:
      - Cluster
      summary: Creates new hosts for a cluster.
      operationId: ClusterAddHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to add hosts to.
          To get the ClickHouse cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-clickhouse/v1/clusters/{clusterId}/hosts:batchDelete:
    post:
      tags:
      - Cluster
      summary: Deletes the specified hosts for a cluster.
      operationId: ClusterDeleteHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to remove hosts from.
          To get the ClickHouse cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-clickhouse/v1/clusters/{clusterId}/shards/{shardName}:
    get:
      tags:
      - Cluster
      summary: Returns the specified shard.
      operationId: ClusterGetShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster that the shard belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.
          To get the name of the database, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Required.
          Name of the shard to request information about.
          To get the name of a shard, use a [listShards](/docs/managed-clickhouse/api-ref/Cluster/listShards) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shard'
      x-y-navtitle: getShard
    delete:
      tags:
      - Cluster
      summary: Deletes the specified shard.
      operationId: ClusterDeleteShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster the shard belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Required.
          Name of the shard to be deleted.
          To get the name of a shard, use a [listShards](/docs/managed-clickhouse/api-ref/Cluster/listShards) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterShardMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Modifies the specified shard.
      operationId: ClusterUpdateShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster the shard belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Required.
          Name of the shard to be updated.
          To get the name of a shard, use a [listShards](/docs/managed-clickhouse/api-ref/Cluster/listShards) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterShardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterShardMetadata'
      x-y-operation-response: Shard
  /managed-clickhouse/v1/clusters/{clusterId}/shards:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of shards that belong to the specified cluster.
      operationId: ClusterListShards
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to list shards in.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses)
          that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  to get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterShardsResponse'
      x-y-navtitle: listShards
    post:
      tags:
      - Cluster
      summary: Creates a new shard in the specified cluster.
      operationId: ClusterAddShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to add a shard to.
          To get the ClickHouse cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterShardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterShardMetadata'
      x-y-operation-response: Shard
  /managed-clickhouse/v1/clusters/{clusterId}:createExternalDictionary:
    post:
      tags:
      - Cluster
      summary: Creates an external dictionary for the specified ClickHouse cluster.
      operationId: ClusterCreateExternalDictionary
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to create the external dictionary for.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterExternalDictionaryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: createExternalDictionary
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterExternalDictionaryMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:deleteExternalDictionary:
    post:
      tags:
      - Cluster
      summary: Deletes the specified external dictionary.
      operationId: ClusterDeleteExternalDictionary
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to delete the external dictionary from.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterExternalDictionaryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteExternalDictionary
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterExternalDictionaryMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/databases/{databaseName}:
    get:
      tags:
      - Database
      summary: Returns the specified ClickHouse Database resource.
      description: To get the list of available ClickHouse Database resources, make
        a [list](/docs/managed-clickhouse/api-ref/Database/list) request.
      operationId: DatabaseGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster that the database belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Required.
          Name of the ClickHouse Database resource to return.
          To get the name of the database, use a [list](/docs/managed-clickhouse/api-ref/Database/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      x-y-navtitle: get
    delete:
      tags:
      - Database
      summary: Deletes the specified ClickHouse database.
      operationId: DatabaseDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to delete a database in.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Required.
          Name of the database to delete.
          To get the name of the database, use a [list](/docs/managed-clickhouse/api-ref/Database/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDatabaseMetadata'
      x-y-operation-response: Empty
  /managed-clickhouse/v1/clusters/{clusterId}/databases:
    get:
      tags:
      - Database
      summary: Retrieves the list of ClickHouse Database resources in the specified
        cluster.
      operationId: DatabaseList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to list databases in.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/Database/list#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  to get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/Database/list#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Database
      summary: Creates a new ClickHouse database in the specified cluster.
      operationId: DatabaseCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to create a database in.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/managed-clickhouse/api-ref/Database#representation)'
  /managed-clickhouse/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified ResourcePreset resource.
      description: To get the list of available ResourcePreset resources, make a [list](/docs/managed-clickhouse/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          ID of the resource preset to return.
          To get the resource preset ID, use a [list](/docs/managed-clickhouse/api-ref/ResourcePreset/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /managed-clickhouse/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available ResourcePreset resources.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, Set [pageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /managed-clickhouse/v1/clusters/{clusterId}/users/{userName}:
    get:
      tags:
      - User
      summary: Returns the specified ClickHouse User resource.
      description: To get the list of available ClickHouse User resources, make a
        [list](/docs/managed-clickhouse/api-ref/User/list) request.
      operationId: UserGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the ClickHouse User resource to return.
          To get the name of the user, use a [list](/docs/managed-clickhouse/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-y-navtitle: get
    delete:
      tags:
      - User
      summary: Deletes the specified ClickHouse user.
      operationId: UserDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to delete.
          To get the name of the user, use a [list](/docs/managed-clickhouse/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteUserMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - User
      summary: Updates the specified ClickHouse user.
      operationId: UserUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to be updated.
          To get the name of the user, use a [list](/docs/managed-clickhouse/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/users:
    get:
      tags:
      - User
      summary: Retrieves the list of ClickHouse User resources in the specified cluster.
      operationId: UserList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster to list ClickHouse users in.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-clickhouse/api-ref/User/list#query_params), the service returns a [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  To get the next page of results, set [pageToken](/docs/managed-clickhouse/api-ref/User/list#query_params) to the [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      x-y-navtitle: list
    post:
      tags:
      - User
      summary: Creates a ClickHouse user in the specified cluster.
      operationId: UserCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster to create a user in.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/users/{userName}:grantPermission:
    post:
      tags:
      - User
      summary: Grants a permission to the specified ClickHouse user.
      operationId: UserGrantPermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to grant the permission to.
          To get the name of the user, use a [list](/docs/managed-clickhouse/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: grantPermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/GrantUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/users/{userName}:revokePermission:
    post:
      tags:
      - User
      summary: Revokes a permission from the specified ClickHouse user.
      operationId: UserRevokePermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ClickHouse cluster the user belongs to.
          To get the cluster ID, use a [list](/docs/managed-clickhouse/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to revoke a permission from.
          To get the name of the user, use a [list](/docs/managed-clickhouse/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: revokePermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/RevokeUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
components:
  schemas:
    Access:
      type: object
      properties:
        dataLens:
          description: Allow access for DataLens
          type: boolean
          format: boolean
        webSql:
          description: Allow access for Web SQL
          type: boolean
          format: boolean
    AddClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster to which the hosts are being added.
          type: string
        hostNames:
          description: Names of hosts that are being added to the cluster.
          type: array
          items:
            type: string
    AddClusterHostsRequest:
      type: object
      properties:
        hostSpecs:
          description: |-
            Required.
            Configurations for ClickHouse hosts that should be added to the cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    AddClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the cluster that a shard is being added to.
          type: string
        shardName:
          description: Name of the shard being created.
          type: string
    AddClusterShardRequest:
      type: object
      properties:
        shardName:
          description: |-
            Required.
            Name for the new shard.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        configSpec:
          $ref: '#/components/schemas/ShardConfigSpec_in_AddClusterShardRequest_configSpec'
        hostSpecs:
          description: |-
            Required.
            Configurations for ClickHouse hosts that should be created with the shard.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    AddClusterZookeeperMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster.
          type: string
    AddClusterZookeeperRequest:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_AddClusterZookeeperRequest_resources'
        hostSpecs:
          description: Configuration of ZooKeeper hosts.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    Backup:
      description: |-
        A ClickHouse Backup resource. See the [Developer's Guide](/docs/managed-clickhouse/concepts)
        for more information.
      type: object
      properties:
        id:
          description: ID of the backup.
          type: string
        folderId:
          description: ID of the folder that the backup belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format
            (i.e. when the backup operation was completed).

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        sourceClusterId:
          description: ID of the ClickHouse cluster that the backup was created for.
          type: string
        sourceShardNames:
          description: Names of the shards included in the backup.
          type: array
          items:
            type: string
        startedAt:
          description: |-
            Time when the backup operation was started.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    BackupClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster that is being backed up.
          type: string
    ClickhouseConfig:
      description: |-
        ClickHouse configuration options. Detailed description for each set of options
        is available in [ClickHouse documentation](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Any options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: |-
            Compression settings for the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: |-
            Configuration of external dictionaries to be used by the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: |-
            Settings for thinning Graphite data.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Maximum number of inbound connections.

            The minimum value is 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Maximum number of simultaneously processed requests.

            The minimum value is 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Number of milliseconds that ClickHouse waits for incoming requests
            before closing the connection.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: |-
            Cache size (in bytes) for uncompressed data used by MergeTree tables.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
            See details in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#mark_cache_size).

            Value must be greater than 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: |-
            Maximum size of the table that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: |-
            Maximum size of the partition that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: |-
            Time interval for reloading built-in dictionaries.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#builtin_dictionaries_reload_interval).
          type: integer
          format: int64
        timezone:
          description: |-
            The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#timezone).
          type: string
    ClickhouseConfigCompression:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/ClickhouseConfigCompressionMethod_in_ClickhouseConfigCompression_method'
        minPartSize:
          description: |-
            Minimum size of a part of a table.

            The minimum value is 1.
          type: string
          format: int64
        minPartSizeRatio:
          description: Minimum ratio of a part relative to the size of all the data
            in the table.
          type: number
          format: double
    ClickhouseConfigCompressionMethod:
      description: |2-
         - LZ4: [LZ4 compression algorithm](https://lz4.github.io/lz4/).
         - ZSTD: [Zstandard compression algorithm](https://facebook.github.io/zstd/).
      type: string
      enum:
      - LZ4
      - ZSTD
    ClickhouseConfigExternalDictionary:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the external dictionary.
            type: string
          structure:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructure'
            description: |-
              Required.
              Set of attributes for the external dictionary.
              For in-depth description, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_structure/).
          layout:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryLayout'
            description: |-
              Required.
              Layout for storing the dictionary in memory.
              For in-depth description, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_layout/).
      - title: lifetime
        type: object
        maxProperties: 1
        properties:
          fixedLifetime:
            description: Fixed interval between dictionary updates.
            type: string
            format: int64
          lifetimeRange:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryRange'
            description: Range of intervals between dictionary updates for ClickHouse
              to choose from.
      - title: source
        type: object
        maxProperties: 1
        properties:
          httpSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryHttpSource'
            description: HTTP source for the dictionary.
          mysqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMysqlSource'
            description: MySQL source for the dictionary.
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryClickhouseSource'
            description: ClickHouse source for the dictionary.
          mongodbSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMongodbSource'
            description: MongoDB source for the dictionary.
          postgresqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryPostgresqlSource'
            description: PostgreSQL source for the dictionary.
    ClickhouseConfigExternalDictionaryClickhouseSource:
      type: object
      properties:
        db:
          description: |-
            Required.
            Name of the ClickHouse database.
          type: string
        table:
          description: |-
            Required.
            Name of the table in the specified database to be used as the dictionary source.
          type: string
        host:
          description: |-
            Required.
            ClickHouse host of the specified database.

            The maximum string length in characters is 253.
          type: string
        port:
          description: |-
            Port to use when connecting to the host.

            Acceptable values are 0 to 65535, inclusive.
          type: string
          format: int64
        user:
          description: |-
            Required.
            Name of the ClickHouse database user.
          type: string
        password:
          description: Password of the ClickHouse database user.
          type: string
        where:
          description: Selection criteria for the data in the specified ClickHouse
            table.
          type: string
    ClickhouseConfigExternalDictionaryHttpSource:
      type: object
      properties:
        url:
          description: |-
            Required.
            URL of the source dictionary available over HTTP.
          type: string
        format:
          description: |-
            Required.
            The data format. Valid values are all formats supported by ClickHouse SQL dialect.
          type: string
    ClickhouseConfigExternalDictionaryLayout:
      description: Layout determining how to store the dictionary in memory.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryLayoutType_in_ClickhouseConfigExternalDictionaryLayout_type'
        sizeInCells:
          description: |-
            Number of cells in the cache. Rounded up to a power of two.
            Applicable only for CACHE and COMPLEX_KEY_CACHE layout types.
          type: string
          format: int64
    ClickhouseConfigExternalDictionaryLayoutType:
      description: |2-
         - FLAT: The entire dictionary is stored in memory in the form of flat arrays.
        Available for all dictionary sources.
         - HASHED: The entire dictionary is stored in memory in the form of a hash table.
        Available for all dictionary sources.
         - COMPLEX_KEY_HASHED: Similar to HASHED, to be used with composite keys.
        Available for all dictionary sources.
         - RANGE_HASHED: The entire dictionary is stored in memory in the form of a hash table,
        with an ordered array of ranges and their corresponding values.
        Available for all dictionary sources.
         - CACHE: The dictionary is stored in a cache with a set number of cells.
        Available for MySQL, ClickHouse and HTTP dictionary sources.
         - COMPLEX_KEY_CACHE: Similar to CACHE, to be used with composite keys.
        Available for MySQL, ClickHouse and HTTP dictionary sources.
      type: string
      enum:
      - FLAT
      - HASHED
      - COMPLEX_KEY_HASHED
      - RANGE_HASHED
      - CACHE
      - COMPLEX_KEY_CACHE
    ClickhouseConfigExternalDictionaryMongodbSource:
      type: object
      properties:
        db:
          description: |-
            Required.
            Name of the MongoDB database.
          type: string
        collection:
          description: |-
            Required.
            Name of the collection in the specified database to be used as the dictionary source.
          type: string
        host:
          description: |-
            Required.
            MongoDB host of the specified database.

            The maximum string length in characters is 253.
          type: string
        port:
          description: |-
            Port to use when connecting to the host.

            Acceptable values are 0 to 65535, inclusive.
          type: string
          format: int64
        user:
          description: |-
            Required.
            Name of the MongoDB database user.
          type: string
        password:
          description: Password of the MongoDB database user.
          type: string
    ClickhouseConfigExternalDictionaryMysqlSource:
      type: object
      properties:
        db:
          description: |-
            Required.
            Name of the MySQL database to connect to.
          type: string
        table:
          description: |-
            Required.
            Name of the database table to use as a ClickHouse dictionary.
          type: string
        port:
          description: |-
            Default port to use when connecting to a replica of the dictionary source.

            Acceptable values are 0 to 65535, inclusive.
          type: string
          format: int64
        user:
          description: Name of the default user for replicas of the dictionary source.
          type: string
        password:
          description: Password of the default user for replicas of the dictionary
            source.
          type: string
        replicas:
          description: |-
            Required.
            List of MySQL replicas of the database used as dictionary source.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMysqlSourceReplica'
        where:
          description: Selection criteria for the data in the specified MySQL table.
          type: string
        invalidateQuery:
          description: |-
            Query for checking the dictionary status, to pull only updated data.
            For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
          type: string
    ClickhouseConfigExternalDictionaryMysqlSourceReplica:
      type: object
      properties:
        host:
          description: |-
            Required.
            MySQL host of the replica.

            The maximum string length in characters is 253.
          type: string
        priority:
          description: |-
            Required.
            The priority of the replica that ClickHouse takes into account when connecting.
            Replica with the highest priority should have this field set to the lowest number.

            Value must be greater than 0.
          type: string
          format: int64
        port:
          description: |-
            Port to use when connecting to the replica.
            If a port is not specified for a replica, ClickHouse uses the port specified for the source.

            Acceptable values are 0 to 65535, inclusive.
          type: string
          format: int64
        user:
          description: Name of the MySQL database user.
          type: string
        password:
          description: Password of the MySQL database user.
          type: string
    ClickhouseConfigExternalDictionaryPostgresqlSource:
      type: object
      properties:
        db:
          description: |-
            Required.
            Name of the PostrgreSQL database.
          type: string
        table:
          description: |-
            Required.
            Name of the table in the specified database to be used as the dictionary source.
          type: string
        hosts:
          description: |-
            Required.
            Name of the PostrgreSQL host

            Must contain at least one element.
          type: array
          items:
            type: string
        port:
          description: |-
            Port to use when connecting to the host.

            Acceptable values are 0 to 65535, inclusive.
          type: string
          format: int64
        user:
          description: |-
            Required.
            Name of the PostrgreSQL database user.
          type: string
        password:
          description: Password of the PostrgreSQL database user.
          type: string
        invalidateQuery:
          description: |-
            Query for checking the dictionary status, to pull only updated data.
            For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
          type: string
        sslMode:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryPostgresqlSourceSslMode_in_ClickhouseConfigExternalDictionaryPostgresqlSource_sslMode'
    ClickhouseConfigExternalDictionaryPostgresqlSourceSslMode:
      type: string
      enum:
      - DISABLE
      - ALLOW
      - PREFER
      - VERIFY_CA
      - VERIFY_FULL
    ClickhouseConfigExternalDictionaryRange:
      type: object
      properties:
        min:
          description: Minimum dictionary lifetime.
          type: string
          format: int64
        max:
          description: Maximum dictionary lifetime.
          type: string
          format: int64
    ClickhouseConfigExternalDictionaryStructure:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureId_in_ClickhouseConfigExternalDictionaryStructure_id'
        key:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureKey_in_ClickhouseConfigExternalDictionaryStructure_key'
        rangeMin:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMin'
        rangeMax:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMax'
        attributes:
          description: |-
            Required.
            Description of the fields available for database queries.
            For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute'
    ClickhouseConfigExternalDictionaryStructureAttribute:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the column.
          type: string
        type:
          description: |-
            Required.
            Type of the column.
          type: string
        nullValue:
          description: Default value for an element without data (for example, an
            empty string).
          type: string
        expression:
          description: Expression, describing the attribute, if applicable.
          type: string
        hierarchical:
          description: |-
            Indication of hierarchy support.
            Default value: `false`.
          type: boolean
          format: boolean
        injective:
          description: |-
            Indication of injective mapping "id -> attribute".
            Default value: `false`.
          type: boolean
          format: boolean
    ClickhouseConfigExternalDictionaryStructureId:
      description: Numeric key.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the numeric key.
          type: string
    ClickhouseConfigExternalDictionaryStructureKey:
      description: Complex key.
      type: object
      properties:
        attributes:
          description: |-
            Required.
            Attributes of a complex key.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute'
    ClickhouseConfigGraphiteRollup:
      description: Rollup settings for the GraphiteMergeTree table engine.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name for the specified combination of settings for Graphite rollup.
          type: string
        patterns:
          description: |-
            Required.
            Pattern to use for the rollup.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollupPattern'
    ClickhouseConfigGraphiteRollupPattern:
      type: object
      properties:
        regexp:
          description: Pattern for metric names.
          type: string
        function:
          description: |-
            Required.
            Name of the aggregating function to apply to data of the age specified in retention.
          type: string
        retention:
          description: |-
            Required.
            Age of data to use for thinning.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollupPatternRetention'
    ClickhouseConfigGraphiteRollupPatternRetention:
      type: object
      properties:
        age:
          description: |-
            Minimum age of the data in seconds.

            Value must be greater than 0.
          type: string
          format: int64
        precision:
          description: |-
            Precision of determining the age of the data, in seconds.

            Value must be greater than 0.
          type: string
          format: int64
    ClickhouseConfigLogLevel:
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    ClickhouseConfigMergeTree:
      description: Options specific to the MergeTree table engine.
      type: object
      properties:
        replicatedDeduplicationWindow:
          description: |-
            Number of blocks of hashes to keep in ZooKeeper.
            See detailed description in [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L59).
          type: integer
          format: int64
        replicatedDeduplicationWindowSeconds:
          description: |-
            Period of time to keep blocks of hashes for.
            See detailed description in [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L64).
          type: integer
          format: int64
        partsToDelayInsert:
          type: integer
          format: int64
        partsToThrowInsert:
          type: integer
          format: int64
        maxReplicatedMergesInQueue:
          type: integer
          format: int64
        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge:
          type: integer
          format: int64
        maxBytesToMergeAtMinSpaceInPool:
          type: integer
          format: int64
    ClickhouseConfigSet:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig'
    Cluster:
      description: |-
        A ClickHouse Cluster resource. For more information, see the
        [Cluster](/docs/managed-clickhouse/concepts) section in the Developer's Guide.
      type: object
      properties:
        id:
          description: |-
            ID of the ClickHouse cluster.
            This ID is assigned by MDB at creation time.
          type: string
        folderId:
          description: ID of the folder that the ClickHouse cluster belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the ClickHouse cluster.
            The name is unique within the folder. 1-63 characters long.
          type: string
        description:
          description: Description of the ClickHouse cluster. 0-256 characters long.
          type: string
        labels:
          description: Custom labels for the ClickHouse cluster as `key:value` pairs.
            Maximum 64 per resource.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the ClickHouse
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        networkId:
          description: ID of the network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
    ClusterConfig:
      type: object
      properties:
        version:
          description: Version of the ClickHouse server software.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ClusterConfigClickhouse_in_ClusterConfig_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ClusterConfigZookeeper_in_ClusterConfig_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ClusterConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ClusterConfig_access'
    ClusterConfigClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ClusterConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigClickhouse_resources'
    ClusterConfigZookeeper:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigZookeeper_resources'
    ClusterEnvironment:
      description: |-
        Deployment environment.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: State of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is alive and well ([Host.health] for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable ([Host.health] for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConfigSpec:
      type: object
      properties:
        version:
          description: Version of the ClickHouse server software.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    ConfigSpecClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecClickhouse_resources'
    ConfigSpecZookeeper:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecZookeeper_resources'
    CreateClusterExternalDictionaryMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the cluster for which an external dictionary is being
            created.
          type: string
    CreateClusterExternalDictionaryRequest:
      type: object
      properties:
        externalDictionary:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionary_in_CreateClusterExternalDictionaryRequest_externalDictionary'
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create the ClickHouse cluster in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the ClickHouse cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the ClickHouse cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the ClickHouse cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
        databaseSpecs:
          description: |-
            Required.
            Descriptions of databases to be created in the ClickHouse cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseSpec'
        userSpecs:
          description: |-
            Required.
            Descriptions of database users to be created in the ClickHouse cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/UserSpec'
        hostSpecs:
          description: |-
            Required.
            Individual configurations for hosts that should be created for the ClickHouse cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Required.
            ID of the network to create the cluster in.

            The maximum string length in characters is 50.
          type: string
        shardName:
          description: |-
            Name of the first shard in cluster. If not set, defaults to the value 'shard1'.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    CreateDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster where a database is being created.
          type: string
        databaseName:
          description: Name of the ClickHouse database that is being created.
          type: string
    CreateDatabaseRequest:
      type: object
      properties:
        databaseSpec:
          $ref: '#/components/schemas/DatabaseSpec_in_CreateDatabaseRequest_databaseSpec'
    CreateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster the user is being created in.
          type: string
        userName:
          description: Name of the user that is being created.
          type: string
    CreateUserRequest:
      type: object
      properties:
        userSpec:
          $ref: '#/components/schemas/UserSpec_in_CreateUserRequest_userSpec'
    Database:
      description: "A ClickHouse Database resource. For more information, see the
        \n[Developer's Guide](/docs/managed-clickhouse/concepts)."
      type: object
      properties:
        name:
          description: Name of the database.
          type: string
        clusterId:
          description: ID of the ClickHouse cluster that the database belongs to.
          type: string
    DatabaseSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the ClickHouse database. 1-63 characters long.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    DeleteClusterExternalDictionaryMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the cluster where an external dictionary is being deleted.
          type: string
    DeleteClusterExternalDictionaryRequest:
      type: object
      properties:
        externalDictionaryName:
          description: Name of the external dictionary to delete.
          type: string
    DeleteClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster to remove hosts from.
          type: string
        hostNames:
          description: Names of hosts that are being deleted.
          type: array
          items:
            type: string
    DeleteClusterHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Required.
            Names of hosts to delete.

            Must contain at least one element.
            The maximum string length in characters for each value is 253.
          type: array
          items:
            type: string
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster that is being deleted.
          type: string
    DeleteClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the cluster that contains the shard being deleted.
          type: string
        shardName:
          description: Name of the shard being deleted.
          type: string
    DeleteDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster where a database is being deleted.
          type: string
        databaseName:
          description: Name of the ClickHouse database that is being deleted.
          type: string
    DeleteUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster the user belongs to.
          type: string
        userName:
          description: Name of the user that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GrantUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster the user belongs to.
          type: string
        userName:
          description: Name of the user that is being granted a permission.
          type: string
    GrantUserPermissionRequest:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/Permission_in_GrantUserPermissionRequest_permission'
    Host:
      type: object
      properties:
        name:
          description: |-
            Name of the ClickHouse host. The host name is assigned by MDB at creation time, and cannot be changed.
            1-63 characters long.

            The name is unique across all existing MDB hosts in Yandex.Cloud, as it defines the FQDN of the host.
          type: string
        clusterId:
          description: ID of the ClickHouse host. The ID is assigned by MDB at creation
            time.
          type: string
        zoneId:
          description: ID of the availability zone where the ClickHouse host resides.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_Host_type'
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        services:
          description: Services provided by the host.
          type: array
          items:
            $ref: '#/components/schemas/Service'
        subnetId:
          description: ID of the subnet that the host belongs to.
          type: string
        assignPublicIp:
          description: Flag showing public IP assignment status to this host.
          type: boolean
          format: boolean
        shardName:
          type: string
    HostHealth:
      description: |2-
         - UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable, and cannot perform any of its essential functions.
         - DEGRADED: The host is degraded, and can perform only some of its essential functions.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostSpec:
      type: object
      properties:
        zoneId:
          description: |-
            ID of the availability zone where the host resides.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_HostSpec_type'
        subnetId:
          description: |-
            ID of the subnet that the host should belong to. This subnet should be a part
            of the network that the cluster belongs to.
            The ID of the network is set in the [Cluster.networkId](/docs/managed-clickhouse/api-ref/Cluster#representation) field.

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Whether the host should get a public IP address on creation.

            After a host has been created, this setting cannot be changed. To remove an assigned public IP, or to assign
            a public IP to a host without one, recreate the host with assignPublicIp set as needed.

            Possible values:
            * false â€” don't assign a public IP to the host.
            * true â€” the host should have a public IP address.
          type: boolean
          format: boolean
        shardName:
          description: |-
            Name of the shard that the host is assigned to.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    HostType:
      description: |2-
         - CLICKHOUSE: ClickHouse host.
         - ZOOKEEPER: ZooKeeper host.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    ListBackupsResponse:
      type: object
      properties:
        backups:
          description: List of Backup resources.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Backup/list#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Backup/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses) to continue paging through the results.
          type: string
    ListClusterBackupsResponse:
      type: object
      properties:
        backups:
          description: List of ClickHouse Backup resources.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses) to continue paging through the results.
          type: string
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: Requested list of hosts for the cluster.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses) to continue paging through the results.
          type: string
    ListClusterLogsRequestServiceType:
      description: ' - CLICKHOUSE: Logs of ClickHouse activity.'
      type: string
      enum:
      - CLICKHOUSE
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses) to continue paging through the results.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of Operation resources for the specified ClickHouse cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClusterShardsResponse:
      type: object
      properties:
        shards:
          description: List of ClickHouse shards.
          type: array
          items:
            $ref: '#/components/schemas/Shard'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of ClickHouse Cluster resources.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Cluster/list#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Cluster/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses) to continue paging through the results.
          type: string
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          description: List of ClickHouse databases.
          type: array
          items:
            $ref: '#/components/schemas/Database'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/Database/list#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/Database/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses) to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of ResourcePreset resources.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses) to continue paging through the results.
          type: string
    ListUsersResponse:
      type: object
      properties:
        users:
          description: List of ClickHouse User resources.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-clickhouse/api-ref/User/list#query_params), use the [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses) as the value
            for the [pageToken](/docs/managed-clickhouse/api-ref/User/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses) to continue paging through the results.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    Monitoring:
      description: Monitoring system metadata.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts for the ClickHouse cluster.
          type: string
    MoveClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster being moved.
          type: string
        sourceFolderId:
          description: ID of the source folder.
          type: string
        destinationFolderId:
          description: ID of the destination folder.
          type: string
    MoveClusterRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Permission:
      type: object
      properties:
        databaseName:
          description: Name of the database that the permission grants access to.
          type: string
    ResourcePreset:
      description: A ResourcePreset resource for describing hardware configuration
        presets.
      type: object
      properties:
        id:
          description: ID of the ResourcePreset resource.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for a ClickHouse host created with the
            preset.
          type: string
          format: int64
        memory:
          description: RAM volume for a ClickHouse host created with the preset, in
            bytes.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    RestoreClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the new ClickHouse cluster that is being created from
            a backup.
          type: string
        backupId:
          description: ID of the backup that is being used for creating a cluster.
          type: string
    RestoreClusterRequest:
      type: object
      properties:
        backupId:
          description: |-
            Required.
            ID of the backup to create a cluster from.
            To get the backup ID, use a [listBackups](/docs/managed-clickhouse/api-ref/Cluster/listBackups) request.
          type: string
        name:
          description: |-
            Required.
            Name of the new ClickHouse cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the new ClickHouse cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the ClickHouse cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_RestoreClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_RestoreClusterRequest_configSpec'
        hostSpecs:
          description: |-
            Required.
            Configurations for ClickHouse hosts that should be created for
            the cluster that is being created from the backup.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Required.
            ID of the network to create the ClickHouse cluster in.

            The maximum string length in characters is 50.
          type: string
        folderId:
          description: |-
            ID of the folder to create the ClickHouse cluster in.

            The maximum string length in characters is 50.
          type: string
    RevokeUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster the user belongs to.
          type: string
        userName:
          description: Name of the user whose permission is being revoked.
          type: string
    RevokeUserPermissionRequest:
      type: object
      properties:
        databaseName:
          description: |-
            Name of the database that the user should lose access to.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    Service:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServiceType_in_Service_type'
        health:
          $ref: '#/components/schemas/ServiceHealth_in_Service_health'
    ServiceHealth:
      description: |2-
         - UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    ServiceType:
      description: |2-
         - CLICKHOUSE: The host is a ClickHouse server.
         - ZOOKEEPER: The host is a ZooKeeper server.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    Shard:
      type: object
      properties:
        name:
          description: Name of the shard.
          type: string
        clusterId:
          description: ID of the cluster that the shard belongs to.
          type: string
        config:
          $ref: '#/components/schemas/ShardConfig_in_Shard_config'
    ShardConfig:
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigClickhouse_in_ShardConfig_clickhouse'
    ShardConfigClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ShardConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigClickhouse_resources'
        weight:
          description: |-
            Relative weight of a shard considered when writing data to the cluster.
            For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/table_engines/distributed/).
          type: integer
          format: int64
    ShardConfigSpec:
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse'
    ShardConfigSpecClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ShardConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigSpecClickhouse_resources'
        weight:
          description: |-
            Relative weight of the shard considered when writing data to the cluster.
            For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/table_engines/distributed/).
          type: integer
          format: int64
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster being started.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster being stopped.
          type: string
    TimeOfDay:
      description: |-
        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse Cluster resource that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the ClickHouse cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the ClickHouse cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            The new set of labels will completely replace the old ones. To add a label, request the current
            set with the [get](/docs/managed-clickhouse/api-ref/Cluster/get) method, then send an [update](/docs/managed-clickhouse/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
    UpdateClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the cluster that contains the shard being updated.
          type: string
        shardName:
          description: Name of the shard being updated.
          type: string
    UpdateClusterShardRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterShardRequest_updateMask'
        configSpec:
          $ref: '#/components/schemas/ShardConfigSpec_in_UpdateClusterShardRequest_configSpec'
    UpdateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ClickHouse cluster the user belongs to.
          type: string
        userName:
          description: Name of the user that is being updated.
          type: string
    UpdateUserRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateUserRequest_updateMask'
        password:
          description: |-
            New password for the user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: New set of permissions for the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_UpdateUserRequest_settings'
    User:
      description: "A ClickHouse User resource. For more information, see \nthe [Developer's
        guide](/docs/managed-clickhouse/concepts)."
      type: object
      properties:
        name:
          description: Name of the ClickHouse user.
          type: string
        clusterId:
          description: ID of the ClickHouse cluster the user belongs to.
          type: string
        permissions:
          description: Set of permissions granted to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_User_settings'
    UserSettings:
      description: |-
        ClickHouse user settings. Supported settings are a limited subset of all settings
        described in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Restricts permissions for non-DDL queries.
            Possible values:
            * 0 (default) â€”  no restrictions.
            * 1 â€” only read data queries are allowed.
            * 2 â€” read data and change settings queries are allowed.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Whether DDL queries are allowed. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).

            The minimum value is 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Connection timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Receive timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Send timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Quorum write timeout in milliseconds. Default value: 60000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).

            The minimum value is 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            The minimum value is 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: Whether the memory-saving mode of distributed aggregation is
            enabled.
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Timeout for DDL queries, in milliseconds.
          type: integer
          format: int64
        compile:
          description: |-
            Whether query compilation is enabled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            The number of structurally identical queries before they are compiled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).

            The minimum value is 0.
          type: integer
          format: int64
        compileExpressions:
          description: Whether expression compilation is enabled.
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            The number of identical expressions before they are compiled.

            The minimum value is 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).

            Value must be greater than 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).

            Value must be greater than 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).

            The minimum value is 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            The minimum number of rows to be read from a file to enable concurrent read.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            The minimum number of bytes to be read from a file to enable concurrent read.

            Value must be greater than 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          type: integer
          format: int64
        priority:
          description: |-
            Priority of the query.

            The minimum value is 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).

            Value must be greater than 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).

            The minimum value is 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).

            The minimum value is 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
          type: integer
          format: int64
        forceIndexByDate:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).

            The minimum value is 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).

            The minimum value is 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).

            The minimum value is 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Maximum query execution time in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).

            The minimum value is 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Maximum number of columns that can be read from a table in a single query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Maximum depth of query syntax tree. Default value: 1000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes. Default value: 50000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).

            Value must be greater than 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.

            Value must be greater than 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Whether quoting of 64-bit integers is enabled in JSON output format.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: Whether output of special floating-point values (`+nan`, `-nan`,
            `+inf` and `-inf`) is enabled in JSON output format.
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: HTTP connection timeout, in milliseconds.
          type: integer
          format: int64
        httpReceiveTimeout:
          description: HTTP receive timeout, in milliseconds.
          type: integer
          format: int64
        httpSendTimeout:
          description: HTTP send timeout, in milliseconds.
          type: integer
          format: int64
        enableHttpCompression:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: 'Minimum interval between progress notifications, in milliseconds.
            Default value: 100.'
          type: integer
          format: int64
        addHttpCorsHeader:
          description: 'Whether CORS header in HTTP responses is enabled. Default
            value: `false`.'
          type: boolean
          format: boolean
    UserSettingsDistributedProductMode:
      type: string
      enum:
      - DISTRIBUTED_PRODUCT_MODE_DENY
      - DISTRIBUTED_PRODUCT_MODE_LOCAL
      - DISTRIBUTED_PRODUCT_MODE_GLOBAL
      - DISTRIBUTED_PRODUCT_MODE_ALLOW
    UserSettingsGroupByOverflowMode:
      type: string
      enum:
      - GROUP_BY_OVERFLOW_MODE_THROW
      - GROUP_BY_OVERFLOW_MODE_BREAK
      - GROUP_BY_OVERFLOW_MODE_ANY
    UserSettingsOverflowMode:
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the ClickHouse user.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the ClickHouse user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions to grant to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_UserSpec_settings'
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ShardConfigSpec_in_AddClusterShardRequest_configSpec:
      description: Configuration of the new shard.
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse'
    Resources_in_AddClusterZookeeperRequest_resources:
      description: Resources allocated to Zookeeper hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel:
      description: Logging level for the ClickHouse cluster.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree:
      description: |-
        Settings for the MergeTree engine.
        See description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#merge_tree).

        Options specific to the MergeTree table engine.
      type: object
      properties:
        replicatedDeduplicationWindow:
          description: |-
            Number of blocks of hashes to keep in ZooKeeper.
            See detailed description in [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L59).
          type: integer
          format: int64
        replicatedDeduplicationWindowSeconds:
          description: |-
            Period of time to keep blocks of hashes for.
            See detailed description in [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L64).
          type: integer
          format: int64
        partsToDelayInsert:
          type: integer
          format: int64
        partsToThrowInsert:
          type: integer
          format: int64
        maxReplicatedMergesInQueue:
          type: integer
          format: int64
        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge:
          type: integer
          format: int64
        maxBytesToMergeAtMinSpaceInPool:
          type: integer
          format: int64
    ClickhouseConfigCompressionMethod_in_ClickhouseConfigCompression_method:
      description: |-
        Compression method to use for the specified combination of `min_part_size` and `min_part_size_ratio`.

         - LZ4: [LZ4 compression algorithm](https://lz4.github.io/lz4/).
         - ZSTD: [Zstandard compression algorithm](https://facebook.github.io/zstd/).
      type: string
      enum:
      - LZ4
      - ZSTD
    ClickhouseConfigExternalDictionaryLayoutType_in_ClickhouseConfigExternalDictionaryLayout_type:
      description: |-
        Required.
        Layout type for an external dictionary.

         - FLAT: The entire dictionary is stored in memory in the form of flat arrays.
        Available for all dictionary sources.
         - HASHED: The entire dictionary is stored in memory in the form of a hash table.
        Available for all dictionary sources.
         - COMPLEX_KEY_HASHED: Similar to HASHED, to be used with composite keys.
        Available for all dictionary sources.
         - RANGE_HASHED: The entire dictionary is stored in memory in the form of a hash table,
        with an ordered array of ranges and their corresponding values.
        Available for all dictionary sources.
         - CACHE: The dictionary is stored in a cache with a set number of cells.
        Available for MySQL, ClickHouse and HTTP dictionary sources.
         - COMPLEX_KEY_CACHE: Similar to CACHE, to be used with composite keys.
        Available for MySQL, ClickHouse and HTTP dictionary sources.
      type: string
      enum:
      - FLAT
      - HASHED
      - COMPLEX_KEY_HASHED
      - RANGE_HASHED
      - CACHE
      - COMPLEX_KEY_CACHE
    ClickhouseConfigExternalDictionaryPostgresqlSourceSslMode_in_ClickhouseConfigExternalDictionaryPostgresqlSource_sslMode:
      description: |-
        Mode of SSL TCP/IP connection to the PostgreSQL host. There are six modes: `disable`, `allow`, `prefer` (default), `require`, `verify-ca`, `verify-full`.
        For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PARAMKEYWORDS).
      type: string
      enum:
      - DISABLE
      - ALLOW
      - PREFER
      - VERIFY_CA
      - VERIFY_FULL
    ClickhouseConfigExternalDictionaryStructureId_in_ClickhouseConfigExternalDictionaryStructure_id:
      description: |-
        Single numeric key column for the dictionary.

        Numeric key.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the numeric key.
          type: string
    ClickhouseConfigExternalDictionaryStructureKey_in_ClickhouseConfigExternalDictionaryStructure_key:
      description: |-
        Composite key for the dictionary, containing of one or more key columns.
        For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).

        Complex key.
      type: object
      properties:
        attributes:
          description: |-
            Required.
            Attributes of a complex key.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute'
    ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMin:
      description: |-
        Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
        For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the column.
          type: string
        type:
          description: |-
            Required.
            Type of the column.
          type: string
        nullValue:
          description: Default value for an element without data (for example, an
            empty string).
          type: string
        expression:
          description: Expression, describing the attribute, if applicable.
          type: string
        hierarchical:
          description: |-
            Indication of hierarchy support.
            Default value: `false`.
          type: boolean
          format: boolean
        injective:
          description: |-
            Indication of injective mapping "id -> attribute".
            Default value: `false`.
          type: boolean
          format: boolean
    ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMax:
      description: |-
        Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
        For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the column.
          type: string
        type:
          description: |-
            Required.
            Type of the column.
          type: string
        nullValue:
          description: Default value for an element without data (for example, an
            empty string).
          type: string
        expression:
          description: Expression, describing the attribute, if applicable.
          type: string
        hierarchical:
          description: |-
            Indication of hierarchy support.
            Default value: `false`.
          type: boolean
          format: boolean
        injective:
          description: |-
            Indication of injective mapping "id -> attribute".
            Default value: `false`.
          type: boolean
          format: boolean
    ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig:
      description: |-
        Required.
        Effective settings for a ClickHouse cluster (a combination of settings defined
        in userConfig and [default_config]).

        ClickHouse configuration options. Detailed description for each set of options
        is available in [ClickHouse documentation](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Any options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: |-
            Compression settings for the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: |-
            Configuration of external dictionaries to be used by the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: |-
            Settings for thinning Graphite data.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Maximum number of inbound connections.

            The minimum value is 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Maximum number of simultaneously processed requests.

            The minimum value is 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Number of milliseconds that ClickHouse waits for incoming requests
            before closing the connection.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: |-
            Cache size (in bytes) for uncompressed data used by MergeTree tables.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
            See details in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#mark_cache_size).

            Value must be greater than 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: |-
            Maximum size of the table that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: |-
            Maximum size of the partition that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: |-
            Time interval for reloading built-in dictionaries.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#builtin_dictionaries_reload_interval).
          type: integer
          format: int64
        timezone:
          description: |-
            The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#timezone).
          type: string
    ClickhouseConfig_in_ClickhouseConfigSet_userConfig:
      description: |-
        User-defined settings for a ClickHouse cluster.

        ClickHouse configuration options. Detailed description for each set of options
        is available in [ClickHouse documentation](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Any options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: |-
            Compression settings for the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: |-
            Configuration of external dictionaries to be used by the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: |-
            Settings for thinning Graphite data.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Maximum number of inbound connections.

            The minimum value is 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Maximum number of simultaneously processed requests.

            The minimum value is 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Number of milliseconds that ClickHouse waits for incoming requests
            before closing the connection.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: |-
            Cache size (in bytes) for uncompressed data used by MergeTree tables.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
            See details in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#mark_cache_size).

            Value must be greater than 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: |-
            Maximum size of the table that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: |-
            Maximum size of the partition that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: |-
            Time interval for reloading built-in dictionaries.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#builtin_dictionaries_reload_interval).
          type: integer
          format: int64
        timezone:
          description: |-
            The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#timezone).
          type: string
    ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig:
      description: |-
        Default configuration for a ClickHouse cluster.

        ClickHouse configuration options. Detailed description for each set of options
        is available in [ClickHouse documentation](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Any options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: |-
            Compression settings for the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: |-
            Configuration of external dictionaries to be used by the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: |-
            Settings for thinning Graphite data.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Maximum number of inbound connections.

            The minimum value is 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Maximum number of simultaneously processed requests.

            The minimum value is 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Number of milliseconds that ClickHouse waits for incoming requests
            before closing the connection.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: |-
            Cache size (in bytes) for uncompressed data used by MergeTree tables.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
            See details in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#mark_cache_size).

            Value must be greater than 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: |-
            Maximum size of the table that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: |-
            Maximum size of the partition that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: |-
            Time interval for reloading built-in dictionaries.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#builtin_dictionaries_reload_interval).
          type: integer
          format: int64
        timezone:
          description: |-
            The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#timezone).
          type: string
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the ClickHouse cluster.

        Deployment environment.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterConfig_in_Cluster_config:
      description: Configuration of the ClickHouse cluster.
      type: object
      properties:
        version:
          description: Version of the ClickHouse server software.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ClusterConfigClickhouse_in_ClusterConfig_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ClusterConfigZookeeper_in_ClusterConfig_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ClusterConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ClusterConfig_access'
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: State of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is alive and well ([Host.health] for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable ([Host.health] for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ClusterConfigClickhouse_in_ClusterConfig_clickhouse:
      description: Configuration and resource allocation for ClickHouse hosts.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ClusterConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigClickhouse_resources'
    ClusterConfigZookeeper_in_ClusterConfig_zookeeper:
      description: Configuration and resource allocation for ZooKeeper hosts.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigZookeeper_resources'
    TimeOfDay_in_ClusterConfig_backupWindowStart:
      description: |-
        Time to start the daily backup, in the UTC timezone.

        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    Access_in_ClusterConfig_access:
      description: Access policy to DB
      type: object
      properties:
        dataLens:
          description: Allow access for DataLens
          type: boolean
          format: boolean
        webSql:
          description: Allow access for Web SQL
          type: boolean
          format: boolean
    ClickhouseConfigSet_in_ClusterConfigClickhouse_config:
      description: Configuration settings of a ClickHouse server.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig'
    Resources_in_ClusterConfigClickhouse_resources:
      description: Resources allocated to ClickHouse hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    Resources_in_ClusterConfigZookeeper_resources:
      description: Resources allocated to ZooKeeper hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    ConfigSpecClickhouse_in_ConfigSpec_clickhouse:
      description: Configuration and resources for a ClickHouse server.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecClickhouse_resources'
    ConfigSpecZookeeper_in_ConfigSpec_zookeeper:
      description: Configuration and resources for a ZooKeeper server.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecZookeeper_resources'
    TimeOfDay_in_ConfigSpec_backupWindowStart:
      description: |-
        Time to start the daily backup, in the UTC timezone.

        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    Access_in_ConfigSpec_access:
      description: Access policy to DB
      type: object
      properties:
        dataLens:
          description: Allow access for DataLens
          type: boolean
          format: boolean
        webSql:
          description: Allow access for Web SQL
          type: boolean
          format: boolean
    ClickhouseConfig_in_ConfigSpecClickhouse_config:
      description: |-
        Configuration for a ClickHouse server.

        ClickHouse configuration options. Detailed description for each set of options
        is available in [ClickHouse documentation](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Any options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: |-
            Compression settings for the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: |-
            Configuration of external dictionaries to be used by the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: |-
            Settings for thinning Graphite data.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Maximum number of inbound connections.

            The minimum value is 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Maximum number of simultaneously processed requests.

            The minimum value is 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Number of milliseconds that ClickHouse waits for incoming requests
            before closing the connection.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: |-
            Cache size (in bytes) for uncompressed data used by MergeTree tables.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
            See details in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#mark_cache_size).

            Value must be greater than 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: |-
            Maximum size of the table that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: |-
            Maximum size of the partition that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: |-
            Time interval for reloading built-in dictionaries.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#builtin_dictionaries_reload_interval).
          type: integer
          format: int64
        timezone:
          description: |-
            The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#timezone).
          type: string
    Resources_in_ConfigSpecClickhouse_resources:
      description: Resources allocated to ClickHouse hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    Resources_in_ConfigSpecZookeeper_resources:
      description: |-
        Resources allocated to ZooKeeper hosts. If not set, minimal available resources will be used.
        All available resource presets can be retrieved with a [list](/docs/managed-clickhouse/api-ref/ResourcePreset/list) request.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    ClickhouseConfigExternalDictionary_in_CreateClusterExternalDictionaryRequest_externalDictionary:
      description: Configuration of the external dictionary.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the external dictionary.
            type: string
          structure:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructure'
            description: |-
              Required.
              Set of attributes for the external dictionary.
              For in-depth description, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_structure/).
          layout:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryLayout'
            description: |-
              Required.
              Layout for storing the dictionary in memory.
              For in-depth description, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts_dict_layout/).
      - title: lifetime
        type: object
        maxProperties: 1
        properties:
          fixedLifetime:
            description: Fixed interval between dictionary updates.
            type: string
            format: int64
          lifetimeRange:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryRange'
            description: Range of intervals between dictionary updates for ClickHouse
              to choose from.
      - title: source
        type: object
        maxProperties: 1
        properties:
          httpSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryHttpSource'
            description: HTTP source for the dictionary.
          mysqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMysqlSource'
            description: MySQL source for the dictionary.
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryClickhouseSource'
            description: ClickHouse source for the dictionary.
          mongodbSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMongodbSource'
            description: MongoDB source for the dictionary.
          postgresqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryPostgresqlSource'
            description: PostgreSQL source for the dictionary.
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Required.
        Deployment environment of the ClickHouse cluster.

        Deployment environment.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: |-
        Required.
        Configuration and resources for hosts that should be created for the ClickHouse cluster.
      type: object
      properties:
        version:
          description: Version of the ClickHouse server software.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    DatabaseSpec_in_CreateDatabaseRequest_databaseSpec:
      description: |-
        Required.
        Configuration of the database to create.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the ClickHouse database. 1-63 characters long.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    UserSpec_in_CreateUserRequest_userSpec:
      description: |-
        Required.
        Properties of the user to be created.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the ClickHouse user.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the ClickHouse user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions to grant to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_UserSpec_settings'
    Permission_in_GrantUserPermissionRequest_permission:
      description: Permission that should be granted to the specified user.
      type: object
      properties:
        databaseName:
          description: Name of the database that the permission grants access to.
          type: string
    HostType_in_Host_type:
      description: |-
        Type of the host.

         - CLICKHOUSE: ClickHouse host.
         - ZOOKEEPER: ZooKeeper host.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    Resources_in_Host_resources:
      description: Resources allocated to the ClickHouse host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    HostHealth_in_Host_health:
      description: |-
        Status code of the aggregated health of the host.

         - UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable, and cannot perform any of its essential functions.
         - DEGRADED: The host is degraded, and can perform only some of its essential functions.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostType_in_HostSpec_type:
      description: |-
        Required.
        Type of the host to be deployed.

         - CLICKHOUSE: ClickHouse host.
         - ZOOKEEPER: ZooKeeper host.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    ClusterEnvironment_in_RestoreClusterRequest_environment:
      description: |-
        Required.
        Deployment environment of the new ClickHouse cluster.

        Deployment environment.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_RestoreClusterRequest_configSpec:
      description: |-
        Required.
        Configuration for the ClickHouse cluster to be created.
      type: object
      properties:
        version:
          description: Version of the ClickHouse server software.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    ServiceType_in_Service_type:
      description: |-
        Type of the service provided by the host.

         - CLICKHOUSE: The host is a ClickHouse server.
         - ZOOKEEPER: The host is a ZooKeeper server.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    ServiceHealth_in_Service_health:
      description: |-
        Status code of server availability.

         - UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    ShardConfig_in_Shard_config:
      description: Configuration of the shard.
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigClickhouse_in_ShardConfig_clickhouse'
    ShardConfigClickhouse_in_ShardConfig_clickhouse:
      description: ClickHouse configuration for a shard.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ShardConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigClickhouse_resources'
        weight:
          description: |-
            Relative weight of a shard considered when writing data to the cluster.
            For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/table_engines/distributed/).
          type: integer
          format: int64
    ClickhouseConfigSet_in_ShardConfigClickhouse_config:
      description: ClickHouse settings for a shard.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig'
    Resources_in_ShardConfigClickhouse_resources:
      description: Computational resources for a shard.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse:
      description: ClickHouse configuration for a shard.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ShardConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigSpecClickhouse_resources'
        weight:
          description: |-
            Relative weight of the shard considered when writing data to the cluster.
            For details, see [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/table_engines/distributed/).
          type: integer
          format: int64
    ClickhouseConfig_in_ShardConfigSpecClickhouse_config:
      description: |-
        ClickHouse settings for the shard.

        ClickHouse configuration options. Detailed description for each set of options
        is available in [ClickHouse documentation](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Any options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: |-
            Compression settings for the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: |-
            Configuration of external dictionaries to be used by the ClickHouse cluster.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: |-
            Settings for thinning Graphite data.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Maximum number of inbound connections.

            The minimum value is 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Maximum number of simultaneously processed requests.

            The minimum value is 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Number of milliseconds that ClickHouse waits for incoming requests
            before closing the connection.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: |-
            Cache size (in bytes) for uncompressed data used by MergeTree tables.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
            See details in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#mark_cache_size).

            Value must be greater than 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: |-
            Maximum size of the table that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: |-
            Maximum size of the partition that can be deleted using a DROP query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: |-
            Time interval for reloading built-in dictionaries.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#builtin_dictionaries_reload_interval).
          type: integer
          format: int64
        timezone:
          description: |-
            The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/server_settings/settings/#timezone).
          type: string
    Resources_in_ShardConfigSpecClickhouse_resources:
      description: Computational resources for the shard.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-clickhouse/concepts/instance-types)
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            Possible values:
            * network-hdd â€” network HDD drive,
            * network-ssd â€” network SSD drive,
            * local-ssd â€” local SSD storage.
          type: string
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the ClickHouse Cluster resource should be updated.

        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: New configuration and resources for hosts in the cluster.
      type: object
      properties:
        version:
          description: Version of the ClickHouse server software.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    FieldMask_in_UpdateClusterShardRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the ClickHouse shard should be updated.

        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ShardConfigSpec_in_UpdateClusterShardRequest_configSpec:
      description: New configuration for the specified shard.
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse'
    FieldMask_in_UpdateUserRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the ClickHouse user should be updated.

        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    UserSettings_in_UpdateUserRequest_settings:
      description: |-
        ClickHouse user settings. Supported settings are a limited subset of all settings
        described in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Restricts permissions for non-DDL queries.
            Possible values:
            * 0 (default) â€”  no restrictions.
            * 1 â€” only read data queries are allowed.
            * 2 â€” read data and change settings queries are allowed.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Whether DDL queries are allowed. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).

            The minimum value is 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Connection timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Receive timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Send timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Quorum write timeout in milliseconds. Default value: 60000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).

            The minimum value is 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            The minimum value is 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: Whether the memory-saving mode of distributed aggregation is
            enabled.
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Timeout for DDL queries, in milliseconds.
          type: integer
          format: int64
        compile:
          description: |-
            Whether query compilation is enabled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            The number of structurally identical queries before they are compiled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).

            The minimum value is 0.
          type: integer
          format: int64
        compileExpressions:
          description: Whether expression compilation is enabled.
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            The number of identical expressions before they are compiled.

            The minimum value is 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).

            Value must be greater than 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).

            Value must be greater than 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).

            The minimum value is 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            The minimum number of rows to be read from a file to enable concurrent read.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            The minimum number of bytes to be read from a file to enable concurrent read.

            Value must be greater than 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          type: integer
          format: int64
        priority:
          description: |-
            Priority of the query.

            The minimum value is 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).

            Value must be greater than 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).

            The minimum value is 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).

            The minimum value is 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
          type: integer
          format: int64
        forceIndexByDate:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).

            The minimum value is 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).

            The minimum value is 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).

            The minimum value is 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Maximum query execution time in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).

            The minimum value is 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Maximum number of columns that can be read from a table in a single query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Maximum depth of query syntax tree. Default value: 1000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes. Default value: 50000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).

            Value must be greater than 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.

            Value must be greater than 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Whether quoting of 64-bit integers is enabled in JSON output format.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: Whether output of special floating-point values (`+nan`, `-nan`,
            `+inf` and `-inf`) is enabled in JSON output format.
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: HTTP connection timeout, in milliseconds.
          type: integer
          format: int64
        httpReceiveTimeout:
          description: HTTP receive timeout, in milliseconds.
          type: integer
          format: int64
        httpSendTimeout:
          description: HTTP send timeout, in milliseconds.
          type: integer
          format: int64
        enableHttpCompression:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: 'Minimum interval between progress notifications, in milliseconds.
            Default value: 100.'
          type: integer
          format: int64
        addHttpCorsHeader:
          description: 'Whether CORS header in HTTP responses is enabled. Default
            value: `false`.'
          type: boolean
          format: boolean
    UserSettings_in_User_settings:
      description: |-
        ClickHouse user settings. Supported settings are a limited subset of all settings
        described in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Restricts permissions for non-DDL queries.
            Possible values:
            * 0 (default) â€”  no restrictions.
            * 1 â€” only read data queries are allowed.
            * 2 â€” read data and change settings queries are allowed.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Whether DDL queries are allowed. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).

            The minimum value is 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Connection timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Receive timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Send timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Quorum write timeout in milliseconds. Default value: 60000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).

            The minimum value is 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            The minimum value is 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: Whether the memory-saving mode of distributed aggregation is
            enabled.
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Timeout for DDL queries, in milliseconds.
          type: integer
          format: int64
        compile:
          description: |-
            Whether query compilation is enabled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            The number of structurally identical queries before they are compiled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).

            The minimum value is 0.
          type: integer
          format: int64
        compileExpressions:
          description: Whether expression compilation is enabled.
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            The number of identical expressions before they are compiled.

            The minimum value is 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).

            Value must be greater than 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).

            Value must be greater than 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).

            The minimum value is 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            The minimum number of rows to be read from a file to enable concurrent read.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            The minimum number of bytes to be read from a file to enable concurrent read.

            Value must be greater than 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          type: integer
          format: int64
        priority:
          description: |-
            Priority of the query.

            The minimum value is 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).

            Value must be greater than 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).

            The minimum value is 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).

            The minimum value is 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
          type: integer
          format: int64
        forceIndexByDate:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).

            The minimum value is 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).

            The minimum value is 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).

            The minimum value is 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Maximum query execution time in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).

            The minimum value is 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Maximum number of columns that can be read from a table in a single query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Maximum depth of query syntax tree. Default value: 1000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes. Default value: 50000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).

            Value must be greater than 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.

            Value must be greater than 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Whether quoting of 64-bit integers is enabled in JSON output format.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: Whether output of special floating-point values (`+nan`, `-nan`,
            `+inf` and `-inf`) is enabled in JSON output format.
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: HTTP connection timeout, in milliseconds.
          type: integer
          format: int64
        httpReceiveTimeout:
          description: HTTP receive timeout, in milliseconds.
          type: integer
          format: int64
        httpSendTimeout:
          description: HTTP send timeout, in milliseconds.
          type: integer
          format: int64
        enableHttpCompression:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: 'Minimum interval between progress notifications, in milliseconds.
            Default value: 100.'
          type: integer
          format: int64
        addHttpCorsHeader:
          description: 'Whether CORS header in HTTP responses is enabled. Default
            value: `false`.'
          type: boolean
          format: boolean
    UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#distributed-product-mode).
      type: string
      enum:
      - DISTRIBUTED_PRODUCT_MODE_DENY
      - DISTRIBUTED_PRODUCT_MODE_LOCAL
      - DISTRIBUTED_PRODUCT_MODE_GLOBAL
      - DISTRIBUTED_PRODUCT_MODE_ALLOW
    UserSettingsOverflowMode_in_UserSettings_readOverflowMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#read-overflow-mode).
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#group-by-overflow-mode).
      type: string
      enum:
      - GROUP_BY_OVERFLOW_MODE_THROW
      - GROUP_BY_OVERFLOW_MODE_BREAK
      - GROUP_BY_OVERFLOW_MODE_ANY
    UserSettingsOverflowMode_in_UserSettings_sortOverflowMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#sort-overflow-mode).
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_resultOverflowMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#result-overflow-mode).
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#distinct-overflow-mode).
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_transferOverflowMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#transfer-overflow-mode).
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode:
      description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#timeout-overflow-mode).
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettings_in_UserSpec_settings:
      description: |-
        ClickHouse user settings. Supported settings are a limited subset of all settings
        described in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Restricts permissions for non-DDL queries.
            Possible values:
            * 0 (default) â€”  no restrictions.
            * 1 â€” only read data queries are allowed.
            * 2 â€” read data and change settings queries are allowed.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_readonly).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Whether DDL queries are allowed. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/permissions_for_queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum).

            The minimum value is 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Connection timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Receive timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Send timeout in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#connect-timeout-receive-timeout-send-timeout).

            Value must be greater than 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Quorum write timeout in milliseconds. Default value: 60000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-insert_quorum_timeout).

            The minimum value is 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-select_sequential_consistency).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Max replica delay in milliseconds. If a replica lags more than the set value, this replica is not used. Default value: 300000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            The minimum value is 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/query_language/alter/#synchronicity-of-alter-queries).

            Acceptable values are 0 to 2, inclusive.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: Whether the memory-saving mode of distributed aggregation is
            enabled.
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Timeout for DDL queries, in milliseconds.
          type: integer
          format: int64
        compile:
          description: |-
            Whether query compilation is enabled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            The number of structurally identical queries before they are compiled.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#min-count-to-compile).

            The minimum value is 0.
          type: integer
          format: int64
        compileExpressions:
          description: Whether expression compilation is enabled.
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            The number of identical expressions before they are compiled.

            The minimum value is 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#max-block-size).

            Value must be greater than 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Squash blocks passed to INSERT query to specified size in rows, if blocks are not big enough. If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Squash blocks passed to INSERT query to specified size in bytes, if blocks are not big enough.  If set to `0`,
            blocks will never be squashed.

            The minimum value is 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_insert_block_size).

            Value must be greater than 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-min_bytes_to_use_direct_io).

            The minimum value is 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            The maximum request size in rows to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_max_rows_to_use_cache).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            The maximum request size in bytes to use the cache of uncompressed data. The cache is not used for requests larger
            than the specified value.

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            The minimum number of rows to be read from a file to enable concurrent read.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#setting-merge_tree_min_rows_for_concurrent_read).

            Value must be greater than 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            The minimum number of bytes to be read from a file to enable concurrent read.

            Value must be greater than 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          type: integer
          format: int64
        priority:
          description: |-
            Priority of the query.

            The minimum value is 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_threads).

            Value must be greater than 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#settings_max_memory_usage).

            The minimum value is 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-memory-usage-for-user).

            The minimum value is 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth).
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_network_bandwidth_for_user).
          type: integer
          format: int64
        forceIndexByDate:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#force-primary-key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-group-by).

            The minimum value is 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-sort).

            The minimum value is 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-rows).

            The minimum value is 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-result-bytes).

            The minimum value is 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-in-distinct).

            The minimum value is 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-rows-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-bytes-to-transfer).

            The minimum value is 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Maximum query execution time in milliseconds.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-execution-time).

            The minimum value is 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Maximum number of columns that can be read from a table in a single query.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-columns-to-read).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-temporary-non-const-columns).

            The minimum value is 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            The maximum part of a query that can be taken to RAM for parsing with the SQL parser, in bytes. Default value: 262144.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-max_query_size).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Maximum depth of query syntax tree. Default value: 1000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-depth).

            Value must be greater than 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes. Default value: 50000.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/query_complexity/#max-ast-elements).

            Value must be greater than 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Maximum size of query syntax tree in number of nodes after expansion of aliases and the asterisk. Default value: 500000.

            Value must be greater than 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-input_format_defaults_for_omitted_fields).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Whether quoting of 64-bit integers is enabled in JSON output format.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#session_settings-output_format_json_quote_64bit_integers).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: Whether output of special floating-point values (`+nan`, `-nan`,
            `+inf` and `-inf`) is enabled in JSON output format.
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: HTTP connection timeout, in milliseconds.
          type: integer
          format: int64
        httpReceiveTimeout:
          description: HTTP receive timeout, in milliseconds.
          type: integer
          format: int64
        httpSendTimeout:
          description: HTTP send timeout, in milliseconds.
          type: integer
          format: int64
        enableHttpCompression:
          description: See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-enable_http_compression).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Whether progress notifications using X-ClickHouse-Progress headers are enabled. Default value: `false`.
            See in-depth description in [ClickHouse documentation](https://clickhouse.yandex/docs/en/operations/settings/settings/#settings-send_progress_in_http_headers).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: 'Minimum interval between progress notifications, in milliseconds.
            Default value: 100.'
          type: integer
          format: int64
        addHttpCorsHeader:
          description: 'Whether CORS header in HTTP responses is enabled. Default
            value: `false`.'
          type: boolean
          format: boolean
tags:
- name: Backup
  description: A set of methods for managing ClickHouse Backup resources.
- name: Cluster
  description: A set of methods for managing ClickHouse clusters.
- name: Database
  description: A set of methods for managing ClickHouse Database resources.
- name: ResourcePreset
  description: A set of methods for managing ResourcePreset resources.
- name: User
  description: A set of methods for managing ClickHouse User resources.
