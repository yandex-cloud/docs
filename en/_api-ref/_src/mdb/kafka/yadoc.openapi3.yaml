openapi: 3.0.0
info:
  title: Managed Service for Apache Kafka® API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /managed-kafka/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified Apache Kafka® cluster.
      description: To get the list of available Apache Kafka® clusters, make a [list](/docs/managed-kafka/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® Cluster resource to return.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified Apache Kafka® cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to delete.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified Apache Kafka® cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to update.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kafka/api-ref/Cluster#representation)'
  /managed-kafka/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Apache Kafka® clusters that belong to the specified
        folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list Apache Kafka® clusters in.

          To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/managed-kafka/api-ref/Cluster/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/Cluster/list#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/Cluster/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Filter support is not currently implemented. Any filters are ignored.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a new Apache Kafka® cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kafka/api-ref/Cluster#representation)'
  /managed-kafka/v1/clusters/{clusterId}:move:
    post:
      tags:
      - Cluster
      summary: Moves the specified Apache Kafka® cluster to the specified folder.
      operationId: ClusterMove
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to move.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kafka/api-ref/Cluster#representation)'
  /managed-kafka/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Starts the specified Apache Kafka® cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to start.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kafka/api-ref/Cluster#representation)'
  /managed-kafka/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stops the specified Apache Kafka® cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to stop.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kafka/api-ref/Cluster#representation)'
  /managed-kafka/v1/clusters/{clusterId}:rescheduleMaintenance:
    post:
      tags:
      - Cluster
      summary: Reschedule planned maintenance operation.
      operationId: ClusterRescheduleMaintenance
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Kafka cluster to reschedule the maintenance operation for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RescheduleMaintenanceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: rescheduleMaintenance
      x-y-operation-metadata:
        $ref: '#/components/schemas/RescheduleMaintenanceMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kafka/api-ref/Cluster#representation)'
  /managed-kafka/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: Retrieves logs for the specified Apache Kafka® cluster.
      description: For more information about logs, see the [Logs](/docs/managed-kafka/operations/cluster-logs)
        section in the documentation.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to request logs for.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from the logs table to request.

          If no columns are specified, full log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/listLogs#query_params), the service returns a [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: alwaysNextPageToken
        in: query
        description: |-
          The flag that defines behavior of providing the next page token.

          If this flag is set to `true`, this API method will always return [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#responses), even if current page is empty.
        schema:
          type: boolean
          format: boolean
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.

          Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /managed-kafka/v1/clusters/{clusterId}:stream_logs:
    get:
      tags:
      - Cluster
      summary: Same as [listLogs](/docs/managed-kafka/api-ref/Cluster/listLogs) but
        using server-side streaming. Also allows for `tail -f` semantics.
      operationId: ClusterStreamLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from logs table to get in the response.

          If no columns are specified, full log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.

          If this field is not set, all existing logs will be sent and then the new ones as they appear.
          In essence it has `tail -f` semantics.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: recordToken
        in: query
        description: |-
          Record token.

          Set [recordToken](/docs/managed-kafka/api-ref/Cluster/streamLogs#query_params) to the `nextRecordToken` returned by a previous [streamLogs](/docs/managed-kafka/api-ref/Cluster/streamLogs) request to start streaming from next log record.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamLogRecord'
      x-y-navtitle: streamLogs
  /managed-kafka/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of operations for the specified Apache Kafka® cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listOperations#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/Cluster/listOperations#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listOperations#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-kafka/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of hosts for the specified Apache Kafka® cluster.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/listHosts#query_params), the service returns a [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listHosts#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/Cluster/listHosts#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listHosts#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /managed-kafka/v1/clusters/{clusterId}/connectors/{connectorName}:
    get:
      tags:
      - Connector
      summary: Returns information about an Apache Kafka® connector.
      operationId: ConnectorGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the cluster the connector belongs to.

          To get this ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: connectorName
        in: path
        description: |-
          Required.
          Name of the Apache Kafka® connector to return information about.

          To get this name, make a [list](/docs/managed-kafka/api-ref/Connector/list) request.

          The maximum string length in characters is 256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
      x-y-navtitle: get
    delete:
      tags:
      - Connector
      summary: Deletes an Apache Kafka® connector.
      operationId: ConnectorDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to delete the connector from.

          To get this ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: connectorName
        in: path
        description: |-
          Required.
          Name of the connector to delete.

          To get this name, make a [list](/docs/managed-kafka/api-ref/Connector/list) request.

          The maximum string length in characters is 256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteConnectorMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Connector
      summary: Updates an Apache Kafka® connector.
      operationId: ConnectorUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to update the connector in.

          To get this ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: connectorName
        in: path
        description: |-
          Required.
          Name of the connector to update.

          To get this name, make a [list](/docs/managed-kafka/api-ref/Connector/list) request.

          The maximum string length in characters is 256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateConnectorMetadata'
      x-y-operation-response: '[Connector](/docs/managed-kafka/api-ref/Connector#representation)'
  /managed-kafka/v1/clusters/{clusterId}/connectors:
    get:
      tags:
      - Connector
      summary: Retrieves the list of Apache Kafka® connectors in a cluster.
      operationId: ConnectorList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to list connectors in.

          To get this ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/Connector/list#query_params), the API returns a [nextPageToken](/docs/managed-kafka/api-ref/Connector/list#responses) that can be used to get the next page of results in the subsequent [list](/docs/managed-kafka/api-ref/Connector/list) requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token that can be used to iterate through multiple pages of results.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/Connector/list#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/Connector/list#responses) returned by the previous [list](/docs/managed-kafka/api-ref/Connector/list) request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Connector
      summary: Creates a new Apache Kafka® connector in a cluster.
      operationId: ConnectorCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to create the connector in.

          To get this ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectorRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateConnectorMetadata'
      x-y-operation-response: '[Connector](/docs/managed-kafka/api-ref/Connector#representation)'
  /managed-kafka/v1/clusters/{clusterId}/connectors/resume/{connectorName}:
    post:
      tags:
      - Connector
      summary: Resumes an Apache Kafka® connector.
      operationId: ConnectorResume
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to resume the connector in.

          To get this ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: connectorName
        in: path
        description: |-
          Required.
          Name of the Apache Kafka® connector to resume.

          To get this name, make a [list](/docs/managed-kafka/api-ref/Connector/list) request.

          The maximum string length in characters is 256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeConnectorRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: resume
      x-y-operation-metadata:
        $ref: '#/components/schemas/ResumeConnectorMetadata'
      x-y-operation-response: '[Connector](/docs/managed-kafka/api-ref/Connector#representation)'
  /managed-kafka/v1/clusters/{clusterId}/connectors/pause/{connectorName}:
    post:
      tags:
      - Connector
      summary: Pauses an Apache Kafka® connector.
      operationId: ConnectorPause
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to pause the connector in.

          To get this ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: connectorName
        in: path
        description: |-
          Required.
          Name of the Apache Kafka® connector to pause.

          To get this name, make a [list](/docs/managed-kafka/api-ref/Connector/list) request.

          The maximum string length in characters is 256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseConnectorRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: pause
      x-y-operation-metadata:
        $ref: '#/components/schemas/PauseConnectorMetadata'
      x-y-operation-response: '[Connector](/docs/managed-kafka/api-ref/Connector#representation)'
  /managed-kafka/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified resource preset.
      description: To get the list of available resource presets, make a [list](/docs/managed-kafka/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          ID of the resource preset to return.

          To get the resource preset ID, use a [list](/docs/managed-kafka/api-ref/ResourcePreset/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /managed-kafka/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available resource presets.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/ResourcePreset/list#query_params), the service returns a [nextPageToken](/docs/managed-kafka/api-ref/ResourcePreset/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/ResourcePreset/list#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/ResourcePreset/list#responses), returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /managed-kafka/v1/clusters/{clusterId}/topics/{topicName}:
    get:
      tags:
      - Topic
      summary: Returns the specified Kafka topic.
      description: To get the list of available Kafka topics, make a [list](/docs/managed-kafka/api-ref/Topic/list)
        request.
      operationId: TopicGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster that the topic belongs to.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: topicName
        in: path
        description: |-
          Required.
          Name of the Kafka topic resource to return.

          To get the name of the topic, make a [list](/docs/managed-kafka/api-ref/Topic/list) request.

          The string length in characters must be 1-256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
      x-y-navtitle: get
    delete:
      tags:
      - Topic
      summary: Deletes the specified Kafka topic.
      operationId: TopicDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to delete a topic in.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: topicName
        in: path
        description: |-
          Required.
          Name of the topic to delete.

          To get the name of the topic, make a [list](/docs/managed-kafka/api-ref/Topic/list) request.

          The string length in characters must be 1-256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteTopicMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Topic
      summary: Updates the specified Kafka topic.
      operationId: TopicUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to update a topic in.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: topicName
        in: path
        description: |-
          Required.
          Name of the topic to update.

          To get the name of the topic, make a [list](/docs/managed-kafka/api-ref/Topic/list) request.

          The string length in characters must be 1-256.
          Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTopicRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateTopicMetadata'
      x-y-operation-response: '[Topic](/docs/managed-kafka/api-ref/Topic#representation)'
  /managed-kafka/v1/clusters/{clusterId}/topics:
    get:
      tags:
      - Topic
      summary: Retrieves the list of Kafka topics in the specified cluster.
      operationId: TopicList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to list topics in.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/Topic/list#query_params), the service returns a [nextPageToken](/docs/managed-kafka/api-ref/Topic/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/Topic/list#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/Topic/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Topic
      summary: Creates a new Kafka topic in the specified cluster.
      operationId: TopicCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to create a topic in.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateTopicMetadata'
      x-y-operation-response: '[Topic](/docs/managed-kafka/api-ref/Topic#representation)'
  /managed-kafka/v1/clusters/{clusterId}/users/{userName}:
    get:
      tags:
      - User
      summary: Returns the specified Kafka user.
      description: To get the list of available Kafka users, make a [list](/docs/managed-kafka/api-ref/User/list)
        request.
      operationId: UserGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster the user belongs to.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the Kafka user to return.

          To get the name of the user, make a [list](/docs/managed-kafka/api-ref/User/list) request.

          The string length in characters must be 1-63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-y-navtitle: get
    delete:
      tags:
      - User
      summary: Deletes the specified Kafka user.
      operationId: UserDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster the user belongs to.
          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to delete.
          To get the name of the user, make a [list](/docs/managed-kafka/api-ref/User/list) request.

          The string length in characters must be 1-63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteUserMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - User
      summary: Updates the specified Kafka user.
      operationId: UserUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster the user belongs to.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to be updated.

          To get the name of the user, make a [list](/docs/managed-kafka/api-ref/User/list) request.

          The string length in characters must be 1-63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-kafka/api-ref/User#representation)'
  /managed-kafka/v1/clusters/{clusterId}/users:
    get:
      tags:
      - User
      summary: Retrieves the list of Kafka users in the specified cluster.
      operationId: UserList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to list Kafka users in.

          To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-kafka/api-ref/User/list#query_params), the service returns a [nextPageToken](/docs/managed-kafka/api-ref/User/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set [pageToken](/docs/managed-kafka/api-ref/User/list#query_params) to the [nextPageToken](/docs/managed-kafka/api-ref/User/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      x-y-navtitle: list
    post:
      tags:
      - User
      summary: Creates a Kafka user in the specified cluster.
      operationId: UserCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster to create a user in.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-kafka/api-ref/User#representation)'
  /managed-kafka/v1/clusters/{clusterId}/users/{userName}:grantPermission:
    post:
      tags:
      - User
      summary: Grants permission to the specified Kafka user.
      operationId: UserGrantPermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster the user belongs to.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to grant the permission to.

          To get the name of the user, make a [list](/docs/managed-kafka/api-ref/User/list) request.

          The string length in characters must be 1-63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: grantPermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/GrantUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-kafka/api-ref/User#representation)'
  /managed-kafka/v1/clusters/{clusterId}/users/{userName}:revokePermission:
    post:
      tags:
      - User
      summary: Revokes permission from the specified Kafka user.
      operationId: UserRevokePermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Apache Kafka® cluster the user belongs to.

          To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the user to revoke a permission from.

          To get the name of the user, make a [list](/docs/managed-kafka/api-ref/User/list) request.

          The string length in characters must be 1-63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: revokePermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/RevokeUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-kafka/api-ref/User#representation)'
components:
  schemas:
    Access:
      type: object
      properties:
        dataTransfer:
          description: Allow access for DataTransfer.
          type: boolean
          format: boolean
    AnytimeMaintenanceWindow:
      type: object
      properties: {}
    Cluster:
      description: |-
        An Apache Kafka® cluster resource.
        For more information, see the [Concepts](/docs/managed-kafka/concepts) section of the documentation.
      type: object
      properties:
        id:
          description: |-
            ID of the Apache Kafka® cluster.
            This ID is assigned at creation time.
          type: string
        folderId:
          description: ID of the folder that the Apache Kafka® cluster belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the Apache Kafka® cluster.
            The name must be unique within the folder. 1-63 characters long. Value must match the regular expression `[a-zA-Z0-9_-]*`.
          type: string
        description:
          description: Description of the Apache Kafka® cluster. 0-256 characters
            long.
          type: string
        labels:
          description: |-
            Custom labels for the Apache Kafka® cluster as `key:value` pairs.
            A maximum of 64 labels per resource is allowed.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the Apache Kafka®
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ConfigSpec_in_Cluster_config'
        networkId:
          description: ID of the network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        securityGroupIds:
          description: User security groups
          type: array
          items:
            type: string
        hostGroupIds:
          description: Host groups hosting VMs of the cluster.
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_Cluster_maintenanceWindow'
        plannedOperation:
          $ref: '#/components/schemas/MaintenanceOperation_in_Cluster_plannedOperation'
    ClusterConnection:
      type: object
      allOf:
      - type: object
        properties:
          alias:
            description: |-
              Alias of cluster connection configuration.
              Examples: `source`, `target`.
            type: string
      - title: cluster_connection
        type: object
        maxProperties: 1
        properties:
          thisCluster:
            $ref: '#/components/schemas/ThisCluster'
            description: Connection configuration of the cluster the connector belongs
              to. As all credentials are already known, leave this parameter empty.
          externalCluster:
            $ref: '#/components/schemas/ExternalClusterConnection'
            description: Configuration of connection to an external cluster with all
              the necessary credentials.
    ClusterConnectionSpec:
      type: object
      allOf:
      - type: object
        properties:
          alias:
            description: |-
              Alias of cluster connection configuration.
              Examples: `source`, `target`.
            type: string
      - title: cluster_connection
        type: object
        maxProperties: 1
        properties:
          thisCluster:
            $ref: '#/components/schemas/ThisClusterSpec'
            description: Connection configuration of the cluster the connector belongs
              to. As all credentials are already known, leave this parameter empty.
          externalCluster:
            $ref: '#/components/schemas/ExternalClusterConnectionSpec'
            description: Configuration of connection to an external cluster with all
              the necessary credentials.
    ClusterEnvironment:
      description: |2-
         - PRODUCTION: stable environment with a conservative update policy when only hotfixes are applied during regular maintenance.
         - PRESTABLE: environment with a more aggressive update policy when new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: state of the cluster is unknown (`health` of all hosts in the cluster is `UNKNOWN`).
         - ALIVE: cluster is alive and well (`health` of all hosts in the cluster is `ALIVE`).
         - DEAD: cluster is inoperable (`health` of all hosts in the cluster is `DEAD`).
         - DEGRADED: cluster is in degraded state (`health` of at least one of the hosts in the cluster is not `ALIVE`).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: cluster state is unknown.
         - CREATING: cluster is being created.
         - RUNNING: cluster is running normally.
         - ERROR: cluster encountered a problem and cannot operate.
         - UPDATING: cluster is being updated.
         - STOPPING: cluster is stopping.
         - STOPPED: cluster stopped.
         - STARTING: cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    CompressionType:
      description: |2-
         - COMPRESSION_TYPE_UNCOMPRESSED: no codec (uncompressed).
         - COMPRESSION_TYPE_ZSTD: Zstandard codec.
         - COMPRESSION_TYPE_LZ4: LZ4 codec.
         - COMPRESSION_TYPE_SNAPPY: Snappy codec.
         - COMPRESSION_TYPE_GZIP: GZip codec.
         - COMPRESSION_TYPE_PRODUCER: the codec to use is set by a producer (can be any of `ZSTD`, `LZ4`, `GZIP` or `SNAPPY` codecs).
      type: string
      enum:
      - COMPRESSION_TYPE_UNCOMPRESSED
      - COMPRESSION_TYPE_ZSTD
      - COMPRESSION_TYPE_LZ4
      - COMPRESSION_TYPE_SNAPPY
      - COMPRESSION_TYPE_GZIP
      - COMPRESSION_TYPE_PRODUCER
    ConfigSpec:
      type: object
      properties:
        version:
          description: 'Version of Apache Kafka® used in the cluster. Possible values:
            `2.1`, `2.6`.'
          type: string
        kafka:
          $ref: '#/components/schemas/ConfigSpecKafka_in_ConfigSpec_kafka'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        zoneId:
          description: IDs of availability zones where Kafka brokers reside.
          type: array
          items:
            type: string
        brokersCount:
          description: The number of Kafka brokers deployed in each availability zone.
          type: integer
          format: int64
        assignPublicIp:
          description: |-
            The flag that defines whether a public IP address is assigned to the cluster.
            If the value is `true`, then Apache Kafka® cluster is available on the Internet via it's public IP address.
          type: boolean
          format: boolean
        unmanagedTopics:
          description: Allows to manage topics via AdminAPI
          type: boolean
          format: boolean
        schemaRegistry:
          description: Enables managed schema registry on cluster
          type: boolean
          format: boolean
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    ConfigSpecKafka:
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to Kafka brokers.
      - title: kafka_config
        type: object
        maxProperties: 1
        properties:
          kafkaConfig_2_1:
            $ref: '#/components/schemas/KafkaConfig2_1'
          kafkaConfig_2_6:
            $ref: '#/components/schemas/KafkaConfig2_6'
          kafkaConfig_2_8:
            $ref: '#/components/schemas/KafkaConfig2_8'
    ConfigSpecZookeeper:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecZookeeper_resources'
    Connector:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the connector.
            type: string
          tasksMax:
            description: Maximum number of connector tasks. Default value is the number
              of brokers.
            type: integer
            format: int64
          properties:
            description: |-
              A set of properties passed to Managed Service for Apache Kafka® with the connector configuration.
              Example: `sync.topics.config.enabled: true`.
            type: object
            additionalProperties:
              type: string
          health:
            $ref: '#/components/schemas/ConnectorHealth'
            description: Connector health.
          status:
            $ref: '#/components/schemas/ConnectorStatus'
            description: Current status of the connector.
          clusterId:
            description: ID of the Apache Kafka® cluster that the connector belongs
              to.
            type: string
      - title: connector_config
        type: object
        maxProperties: 1
        properties:
          connectorConfigMirrormaker:
            $ref: '#/components/schemas/ConnectorConfigMirrorMaker'
            description: Configuration of the MirrorMaker connector.
          connectorConfigS3Sink:
            $ref: '#/components/schemas/ConnectorConfigS3Sink'
    ConnectorConfigMirrorMaker:
      type: object
      properties:
        sourceCluster:
          $ref: '#/components/schemas/ClusterConnection_in_ConnectorConfigMirrorMaker_sourceCluster'
        targetCluster:
          $ref: '#/components/schemas/ClusterConnection_in_ConnectorConfigMirrorMaker_targetCluster'
        topics:
          description: List of Kafka topics, separated by `,`.
          type: string
        replicationFactor:
          description: Replication factor for automatically created topics.
          type: integer
          format: int64
    ConnectorConfigMirrorMakerSpec:
      type: object
      properties:
        sourceCluster:
          $ref: '#/components/schemas/ClusterConnectionSpec_in_ConnectorConfigMirrorMakerSpec_sourceCluster'
        targetCluster:
          $ref: '#/components/schemas/ClusterConnectionSpec_in_ConnectorConfigMirrorMakerSpec_targetCluster'
        topics:
          description: List of Kafka topics, separated by `,`.
          type: string
        replicationFactor:
          description: Replication factor for automatically created topics.
          type: integer
          format: int64
    ConnectorConfigS3Sink:
      description: |-
        An Apache Kafka® S3-Sink
        connector resource.
      type: object
      properties:
        topics:
          description: List of Kafka topics, separated by ','
          type: string
        fileCompressionType:
          description: |-
            The compression type used for files put on GCS.
            The supported values are: `gzip`, `snappy`, `zstd`, `none`.
            Optional, the default is `none`.
          type: string
        fileMaxRecords:
          description: Max records per file.
          type: integer
          format: int64
        s3Connection:
          $ref: '#/components/schemas/S3Connection_in_ConnectorConfigS3Sink_s3Connection'
    ConnectorConfigS3SinkSpec:
      description: Specification for Kafka S3-Sink Connector
      type: object
      properties:
        topics:
          description: List of Kafka topics, separated by ','.
          type: string
        fileCompressionType:
          description: |-
            The compression type used for files put on GCS.
            The supported values are: `gzip`, `snappy`, `zstd`, `none`.
            Optional, the default is `none`.
          type: string
        fileMaxRecords:
          description: Max records per file.
          type: integer
          format: int64
        s3Connection:
          $ref: '#/components/schemas/S3ConnectionSpec_in_ConnectorConfigS3SinkSpec_s3Connection'
    ConnectorHealth:
      description: |2-
         - HEALTH_UNKNOWN: Health of the connector is unknown.
         - ALIVE: Connector is running.
         - DEAD: Connector has failed to start.
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      default: HEALTH_UNKNOWN
    ConnectorSpec:
      description: |-
        An object that represents an Apache Kafka® connector.

        See [the documentation](/docs/managed-kafka/concepts/connectors) for details.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the connector.
            type: string
          tasksMax:
            description: Maximum number of connector tasks. Default value is the number
              of brokers.
            type: integer
            format: int64
          properties:
            description: |-
              A set of properties passed to Managed Service for Apache Kafka® with the connector configuration.
              Example: `sync.topics.config.enabled: true`.
            type: object
            additionalProperties:
              type: string
      - title: connector_config
        type: object
        maxProperties: 1
        properties:
          connectorConfigMirrormaker:
            $ref: '#/components/schemas/ConnectorConfigMirrorMakerSpec'
            description: Configuration of the MirrorMaker connector.
          connectorConfigS3Sink:
            $ref: '#/components/schemas/ConnectorConfigS3SinkSpec'
            description: Configuration of S3-Sink connector
    ConnectorStatus:
      description: |2-
         - STATUS_UNKNOWN: Connector state is unknown.
         - RUNNING: Connector is running normally.
         - ERROR: Connector has encountered a problem and cannot operate.
         - PAUSED: Connector is paused.
      type: string
      enum:
      - STATUS_UNKNOWN
      - RUNNING
      - ERROR
      - PAUSED
      default: STATUS_UNKNOWN
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create the Apache Kafka® cluster in.

            To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the Apache Kafka® cluster. The name must be unique within the folder.

            The string length in characters must be 1-63.
            Value must match the regular expression `` [a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the Apache Kafka® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Apache Kafka® cluster as `key:value` pairs.

            For example, "project": "mvp" or "source": "dictionary".

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
        topicSpecs:
          description: One or more configurations of topics to be created in the Apache
            Kafka® cluster.
          type: array
          items:
            $ref: '#/components/schemas/TopicSpec'
        userSpecs:
          description: Configurations of accounts to be created in the Apache Kafka®
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/UserSpec'
        networkId:
          description: |-
            ID of the network to create the Apache Kafka® cluster in.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: IDs of subnets to create brokers in.
          type: array
          items:
            type: string
        securityGroupIds:
          description: User security groups
          type: array
          items:
            type: string
        hostGroupIds:
          description: Host groups to place VMs of cluster on.
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_CreateClusterRequest_maintenanceWindow'
    CreateConnectorMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the connector is being created
            in.
          type: string
        connectorName:
          description: |-
            Required.
            Name of the Apache Kafka® connector that is being created.

            The maximum string length in characters is 256.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    CreateConnectorRequest:
      type: object
      properties:
        connectorSpec:
          $ref: '#/components/schemas/ConnectorSpec_in_CreateConnectorRequest_connectorSpec'
    CreateTopicMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster where a topic is being created.
          type: string
        topicName:
          description: |-
            Required.
            Name of the Kafka topic that is being created.

            The maximum string length in characters is 256.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    CreateTopicRequest:
      type: object
      properties:
        topicSpec:
          $ref: '#/components/schemas/TopicSpec_in_CreateTopicRequest_topicSpec'
    CreateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the user is being created in.
          type: string
        userName:
          description: Name of the user that is being created.
          type: string
    CreateUserRequest:
      type: object
      properties:
        userSpec:
          $ref: '#/components/schemas/UserSpec_in_CreateUserRequest_userSpec'
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster that is being deleted.
          type: string
    DeleteConnectorMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the connector is being deleted
            from.
          type: string
        connectorName:
          description: Name of the Apache Kafka® connector that is being deleted.
          type: string
    DeleteTopicMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster where a topic is being deleted.
          type: string
        topicName:
          description: Name of the Kafka topic that is being deleted.
          type: string
    DeleteUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the user belongs to.
          type: string
        userName:
          description: Name of the user that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    ExternalClusterConnection:
      type: object
      properties:
        bootstrapServers:
          description: List of bootstrap servers of the cluster, separated by `,`.
          type: string
        saslUsername:
          description: SASL username to use for connection to the cluster.
          type: string
        saslMechanism:
          description: SASL mechanism to use for connection to the cluster.
          type: string
        securityProtocol:
          description: Security protocol to use for connection to the cluster.
          type: string
    ExternalClusterConnectionSpec:
      type: object
      properties:
        bootstrapServers:
          description: List of bootstrap servers of the cluster, separated by `,`.
          type: string
        saslUsername:
          description: SASL username to use for connection to the cluster.
          type: string
        saslPassword:
          description: SASL password to use for connection to the cluster.
          type: string
        saslMechanism:
          description: SASL mechanism to use for connection to the cluster.
          type: string
        securityProtocol:
          description: Security protocol to use for connection to the cluster.
          type: string
        sslTruststoreCertificates:
          description: |-
            CA in PEM format to connect to external cluster.
            Lines of certificate separated by '\n' symbol.
          type: string
    ExternalS3Storage:
      type: object
      properties:
        accessKeyId:
          type: string
        endpoint:
          type: string
        region:
          description: Default is 'us-east-1'
          type: string
    ExternalS3StorageSpec:
      type: object
      properties:
        accessKeyId:
          type: string
        secretAccessKey:
          type: string
        endpoint:
          type: string
        region:
          description: Default is 'us-east-1'
          type: string
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GrantUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            ID of the Apache Kafka® cluster the user belongs to.

            To get the cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.
          type: string
        userName:
          description: Name of the user that is being granted a permission.
          type: string
    GrantUserPermissionRequest:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/Permission_in_GrantUserPermissionRequest_permission'
    Host:
      description: Cluster host metadata.
      type: object
      properties:
        name:
          description: Name of the host.
          type: string
        clusterId:
          description: ID of the Apache Kafka® cluster.
          type: string
        zoneId:
          description: ID of the availability zone where the host resides.
          type: string
        role:
          $ref: '#/components/schemas/HostRole_in_Host_role'
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        subnetId:
          description: ID of the subnet the host resides in.
          type: string
        assignPublicIp:
          description: |-
            The flag that defines whether a public IP address is assigned to the node.

            If the value is `true`, then this node is available on the Internet via it's public IP address.
          type: boolean
          format: boolean
    HostHealth:
      description: |2-
         - UNKNOWN: health of the host is unknown.
         - ALIVE: the host is performing all its functions normally.
         - DEAD: the host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: the host is degraded and can perform only some of its essential functions.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostRole:
      description: |2-
         - KAFKA: the host is a Kafka broker.
         - ZOOKEEPER: the host is a ZooKeeper server.
      type: string
      enum:
      - KAFKA
      - ZOOKEEPER
    KafkaConfig2_1:
      description: Kafka version 2.1 broker configuration.
      type: object
      properties:
        compressionType:
          $ref: '#/components/schemas/CompressionType_in_KafkaConfig2_1_compressionType'
        logFlushIntervalMessages:
          description: |-
            The number of messages accumulated on a log partition before messages are flushed to disk.

            This is the global cluster-level setting that can be overridden on a topic level by using the `flushMessages` setting.
          type: integer
          format: int64
        logFlushIntervalMs:
          description: |-
            The maximum time (in milliseconds) that a message in any topic is kept in memory before flushed to disk.
            If not set, the value of `logFlushSchedulerIntervalMs` is used.

            This is the global cluster-level setting that can be overridden on a topic level by using the `flushMs` setting.
          type: integer
          format: int64
        logFlushSchedulerIntervalMs:
          description: |-
            The frequency of checks (in milliseconds) for any logs that need to be flushed to disk.
            This check is done by the log flusher.
          type: integer
          format: int64
        logRetentionBytes:
          description: |-
            Partition size limit; Kafka will discard old log segments to free up space if `delete` `cleanupPolicy` is in effect.
            This setting is helpful if you need to control the size of a log due to limited disk space.

            This is the global cluster-level setting that can be overridden on a topic level by using the `retentionBytes` setting.
          type: integer
          format: int64
        logRetentionHours:
          description: The number of hours to keep a log segment file before deleting
            it.
          type: integer
          format: int64
        logRetentionMinutes:
          description: |-
            The number of minutes to keep a log segment file before deleting it.

            If not set, the value of `logRetentionHours` is used.
          type: integer
          format: int64
        logRetentionMs:
          description: |-
            The number of milliseconds to keep a log segment file before deleting it.

            If not set, the value of `logRetentionMinutes` is used.

            This is the global cluster-level setting that can be overridden on a topic level by using the `retentionMs` setting.
          type: integer
          format: int64
        logSegmentBytes:
          description: |-
            The maximum size of a single log file.

            This is the global cluster-level setting that can be overridden on a topic level by using the `segmentBytes` setting.
          type: integer
          format: int64
        logPreallocate:
          description: |-
            Should pre allocate file when create new segment?

            This is the global cluster-level setting that can be overridden on a topic level by using the `preallocate` setting.
          type: boolean
          format: boolean
        socketSendBufferBytes:
          description: The SO_SNDBUF buffer of the socket server sockets. If the value
            is -1, the OS default will be used.
          type: integer
          format: int64
        socketReceiveBufferBytes:
          description: The SO_RCVBUF buffer of the socket server sockets. If the value
            is -1, the OS default will be used.
          type: integer
          format: int64
        autoCreateTopicsEnable:
          description: Enable auto creation of topic on the server
          type: boolean
          format: boolean
        numPartitions:
          description: Default number of partitions per topic on the whole cluster
          type: integer
          format: int64
        defaultReplicationFactor:
          description: Default replication factor of the topic on the whole cluster
          type: integer
          format: int64
        messageMaxBytes:
          description: 'The largest record batch size allowed by Kafka. Default value:
            1048588.'
          type: integer
          format: int64
        replicaFetchMaxBytes:
          description: 'The number of bytes of messages to attempt to fetch for each
            partition. Default value: 1048576.'
          type: integer
          format: int64
        sslCipherSuites:
          description: A list of cipher suites.
          type: array
          items:
            type: string
        offsetsRetentionMinutes:
          description: 'Offset storage time after a consumer group loses all its consumers.
            Default: 10080.'
          type: integer
          format: int64
    KafkaConfig2_6:
      description: Kafka version 2.6 broker configuration.
      type: object
      properties:
        compressionType:
          $ref: '#/components/schemas/CompressionType_in_KafkaConfig2_6_compressionType'
        logFlushIntervalMessages:
          description: |-
            The number of messages accumulated on a log partition before messages are flushed to disk.

            This is the global cluster-level setting that can be overridden on a topic level by using the `flushMessages` setting.
          type: integer
          format: int64
        logFlushIntervalMs:
          description: |-
            The maximum time (in milliseconds) that a message in any topic is kept in memory before flushed to disk.
            If not set, the value of `logFlushSchedulerIntervalMs` is used.

            This is the global cluster-level setting that can be overridden on a topic level by using the `flushMs` setting.
          type: integer
          format: int64
        logFlushSchedulerIntervalMs:
          description: |-
            The frequency of checks (in milliseconds) for any logs that need to be flushed to disk.
            This check is done by the log flusher.
          type: integer
          format: int64
        logRetentionBytes:
          description: |-
            Partition size limit; Kafka will discard old log segments to free up space if `delete` `cleanupPolicy` is in effect.
            This setting is helpful if you need to control the size of a log due to limited disk space.

            This is the global cluster-level setting that can be overridden on a topic level by using the `retentionBytes` setting.
          type: integer
          format: int64
        logRetentionHours:
          description: The number of hours to keep a log segment file before deleting
            it.
          type: integer
          format: int64
        logRetentionMinutes:
          description: |-
            The number of minutes to keep a log segment file before deleting it.

            If not set, the value of `logRetentionHours` is used.
          type: integer
          format: int64
        logRetentionMs:
          description: |-
            The number of milliseconds to keep a log segment file before deleting it.

            If not set, the value of `logRetentionMinutes` is used.

            This is the global cluster-level setting that can be overridden on a topic level by using the `retentionMs` setting.
          type: integer
          format: int64
        logSegmentBytes:
          description: |-
            The maximum size of a single log file.

            This is the global cluster-level setting that can be overridden on a topic level by using the `segmentBytes` setting.
          type: integer
          format: int64
        logPreallocate:
          description: |-
            Should pre allocate file when create new segment?

            This is the global cluster-level setting that can be overridden on a topic level by using the `preallocate` setting.
          type: boolean
          format: boolean
        socketSendBufferBytes:
          description: The SO_SNDBUF buffer of the socket server sockets. If the value
            is -1, the OS default will be used.
          type: integer
          format: int64
        socketReceiveBufferBytes:
          description: The SO_RCVBUF buffer of the socket server sockets. If the value
            is -1, the OS default will be used.
          type: integer
          format: int64
        autoCreateTopicsEnable:
          description: Enable auto creation of topic on the server
          type: boolean
          format: boolean
        numPartitions:
          description: Default number of partitions per topic on the whole cluster
          type: integer
          format: int64
        defaultReplicationFactor:
          description: Default replication factor of the topic on the whole cluster
          type: integer
          format: int64
        messageMaxBytes:
          description: 'The largest record batch size allowed by Kafka. Default value:
            1048588.'
          type: integer
          format: int64
        replicaFetchMaxBytes:
          description: 'The number of bytes of messages to attempt to fetch for each
            partition. Default value: 1048576.'
          type: integer
          format: int64
        sslCipherSuites:
          description: A list of cipher suites.
          type: array
          items:
            type: string
        offsetsRetentionMinutes:
          description: 'Offset storage time after a consumer group loses all its consumers.
            Default: 10080.'
          type: integer
          format: int64
    KafkaConfig2_8:
      description: Kafka version 2.8 broker configuration.
      type: object
      properties:
        compressionType:
          $ref: '#/components/schemas/CompressionType_in_KafkaConfig2_8_compressionType'
        logFlushIntervalMessages:
          description: |-
            The number of messages accumulated on a log partition before messages are flushed to disk.

            This is the global cluster-level setting that can be overridden on a topic level by using the `flushMessages` setting.
          type: integer
          format: int64
        logFlushIntervalMs:
          description: |-
            The maximum time (in milliseconds) that a message in any topic is kept in memory before flushed to disk.
            If not set, the value of `logFlushSchedulerIntervalMs` is used.

            This is the global cluster-level setting that can be overridden on a topic level by using the `flushMs` setting.
          type: integer
          format: int64
        logFlushSchedulerIntervalMs:
          description: |-
            The frequency of checks (in milliseconds) for any logs that need to be flushed to disk.
            This check is done by the log flusher.
          type: integer
          format: int64
        logRetentionBytes:
          description: |-
            Partition size limit; Kafka will discard old log segments to free up space if `delete` `cleanupPolicy` is in effect.
            This setting is helpful if you need to control the size of a log due to limited disk space.

            This is the global cluster-level setting that can be overridden on a topic level by using the `retentionBytes` setting.
          type: integer
          format: int64
        logRetentionHours:
          description: The number of hours to keep a log segment file before deleting
            it.
          type: integer
          format: int64
        logRetentionMinutes:
          description: |-
            The number of minutes to keep a log segment file before deleting it.

            If not set, the value of `logRetentionHours` is used.
          type: integer
          format: int64
        logRetentionMs:
          description: |-
            The number of milliseconds to keep a log segment file before deleting it.

            If not set, the value of `logRetentionMinutes` is used.

            This is the global cluster-level setting that can be overridden on a topic level by using the `retentionMs` setting.
          type: integer
          format: int64
        logSegmentBytes:
          description: |-
            The maximum size of a single log file.

            This is the global cluster-level setting that can be overridden on a topic level by using the `segmentBytes` setting.
          type: integer
          format: int64
        logPreallocate:
          description: |-
            Should pre allocate file when create new segment?

            This is the global cluster-level setting that can be overridden on a topic level by using the `preallocate` setting.
          type: boolean
          format: boolean
        socketSendBufferBytes:
          description: The SO_SNDBUF buffer of the socket server sockets. If the value
            is -1, the OS default will be used.
          type: integer
          format: int64
        socketReceiveBufferBytes:
          description: The SO_RCVBUF buffer of the socket server sockets. If the value
            is -1, the OS default will be used.
          type: integer
          format: int64
        autoCreateTopicsEnable:
          description: Enable auto creation of topic on the server
          type: boolean
          format: boolean
        numPartitions:
          description: Default number of partitions per topic on the whole cluster
          type: integer
          format: int64
        defaultReplicationFactor:
          description: Default replication factor of the topic on the whole cluster
          type: integer
          format: int64
        messageMaxBytes:
          description: 'The largest record batch size allowed by Kafka. Default value:
            1048588.'
          type: integer
          format: int64
        replicaFetchMaxBytes:
          description: 'The number of bytes of messages to attempt to fetch for each
            partition. Default value: 1048576.'
          type: integer
          format: int64
        sslCipherSuites:
          description: A list of cipher suites.
          type: array
          items:
            type: string
        offsetsRetentionMinutes:
          description: 'Offset storage time after a consumer group loses all its consumers.
            Default: 10080.'
          type: integer
          format: int64
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: List of hosts.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/listHosts#query_params), use the [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listHosts#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/Cluster/listHosts#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listHosts#responses) to continue paging through the results.
          type: string
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/listLogs#query_params), use [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#responses) to continue paging through the results.
            This value is interchangeable with `nextRecordToken` from StreamLogs method.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified Apache Kafka® cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/listOperations#query_params), use [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listOperations#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of Apache Kafka® clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/Cluster/list#query_params), use [nextPageToken](/docs/managed-kafka/api-ref/Cluster/list#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/Cluster/list#query_params) parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kafka/api-ref/Cluster/list#responses) to continue paging through the results.
          type: string
    ListConnectorsResponse:
      type: object
      properties:
        connectors:
          description: List of Apache Kafka® Connectors.
          type: array
          items:
            $ref: '#/components/schemas/Connector'
        nextPageToken:
          description: |-
            The token that can be used to get the next page of results.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/Connector/list#query_params), use the [nextPageToken](/docs/managed-kafka/api-ref/Connector/list#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/Connector/list#query_params) in the subsequent [list](/docs/managed-kafka/api-ref/Connector/list) request to iterate through multiple pages of results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of resource presets.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/ResourcePreset/list#query_params), use [nextPageToken](/docs/managed-kafka/api-ref/ResourcePreset/list#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/ResourcePreset/list#query_params) parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kafka/api-ref/ResourcePreset/list#responses) to continue paging through the results.

            The maximum string length in characters is 100.
          type: string
    ListTopicsResponse:
      type: object
      properties:
        topics:
          description: List of Kafka topics.
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/Topic/list#query_params), use the [nextPageToken](/docs/managed-kafka/api-ref/Topic/list#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/Topic/list#query_params) parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kafka/api-ref/Topic/list#responses) to continue paging through the results.
          type: string
    ListUsersResponse:
      type: object
      properties:
        users:
          description: List of Kafka users.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-kafka/api-ref/User/list#query_params), use the [nextPageToken](/docs/managed-kafka/api-ref/User/list#responses) as the value for the [pageToken](/docs/managed-kafka/api-ref/User/list#query_params) parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kafka/api-ref/User/list#responses) to continue paging through the results.
          type: string
    LogRecord:
      description: A single log record.
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    MaintenanceOperation:
      type: object
      properties:
        info:
          description: The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
    MaintenanceWindow:
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
    Monitoring:
      description: Metadata of monitoring system.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts for the Apache Kafka®
            cluster.
          type: string
    MoveClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster being moved.
          type: string
        sourceFolderId:
          description: ID of the source folder.
          type: string
        destinationFolderId:
          description: ID of the destnation folder.
          type: string
    MoveClusterRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PauseConnectorMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the connector is being paused
            in.
          type: string
        connectorName:
          description: |-
            Required.
            Name of the Apache Kafka® connector that is being paused.

            The maximum string length in characters is 256.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    PauseConnectorRequest:
      type: object
      properties: {}
    Permission:
      type: object
      properties:
        topicName:
          description: |-
            Name or prefix-pattern with wildcard for the topic that the permission grants access to.

            To get the topic name, make a [list](/docs/managed-kafka/api-ref/Topic/list) request.
          type: string
        role:
          $ref: '#/components/schemas/PermissionAccessRole_in_Permission_role'
    PermissionAccessRole:
      description: |2-
         - ACCESS_ROLE_PRODUCER: producer role for the user.
         - ACCESS_ROLE_CONSUMER: consumer role for the user.
         - ACCESS_ROLE_ADMIN: admin role for the user.
      type: string
      enum:
      - ACCESS_ROLE_PRODUCER
      - ACCESS_ROLE_CONSUMER
      - ACCESS_ROLE_ADMIN
    RescheduleMaintenanceMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Kafka cluster.
          type: string
        delayedUntil:
          description: |-
            The time until which this maintenance operation is to be delayed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    RescheduleMaintenanceRequest:
      type: object
      properties:
        rescheduleType:
          $ref: '#/components/schemas/RescheduleMaintenanceRequestRescheduleType_in_RescheduleMaintenanceRequest_rescheduleType'
        delayedUntil:
          description: |-
            The time until which this maintenance operation should be delayed. The value should be ahead of the first time when the maintenance operation has been scheduled for no more than two weeks. The value can also point to the past moment of time if [reschedule_type.IMMEDIATE] reschedule type is chosen.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    RescheduleMaintenanceRequestRescheduleType:
      description: |2-
         - IMMEDIATE: Start the maintenance operation immediately.
         - NEXT_AVAILABLE_WINDOW: Start the maintenance operation within the next available maintenance window.
         - SPECIFIC_TIME: Start the maintenance operation at the specific time.
      type: string
      enum:
      - IMMEDIATE
      - NEXT_AVAILABLE_WINDOW
      - SPECIFIC_TIME
    ResourcePreset:
      description: A ResourcePreset resource for describing hardware configuration
        presets.
      type: object
      properties:
        id:
          description: ID of the resource preset.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for a Kafka broker created with the preset.
          type: string
          format: int64
        memory:
          description: RAM volume for a Kafka broker created with the preset, in bytes.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory, etc.).
            All available presets are listed in the [documentation](/docs/managed-kafka/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes. Must be
            greater than 2 * partition segment size in bytes * partitions count, so
            each partition can have one active segment file and one closed segment
            file that can be deleted.
          type: string
          format: int64
        diskTypeId:
          description: Type of the storage environment for the host.
          type: string
    ResumeConnectorMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the connector is being resumed
            in.
          type: string
        connectorName:
          description: |-
            Required.
            Name of the Apache Kafka® connector that is beign resumed.

            The maximum string length in characters is 256.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    ResumeConnectorRequest:
      type: object
      properties: {}
    RevokeUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the user belongs to.
          type: string
        userName:
          description: Name of the user whose permission is being revoked.
          type: string
    RevokeUserPermissionRequest:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/Permission_in_RevokeUserPermissionRequest_permission'
    S3Connection:
      description: |-
        Resource for S3Connection -
        settings of connection to AWS-compatible S3 storage, that
        are source or target of Kafka S3-connectors.
        YC Object Storage is AWS-compatible.
      type: object
      allOf:
      - type: object
        properties:
          bucketName:
            type: string
      - title: storage
        type: object
        maxProperties: 1
        properties:
          externalS3:
            $ref: '#/components/schemas/ExternalS3Storage'
    S3ConnectionSpec:
      description: |-
        Specification for S3Connection -
        settings of connection to AWS-compatible S3 storage, that
        are source or target of Kafka S3-connectors.
        YC Object Storage is AWS-compatible.
      type: object
      allOf:
      - type: object
        properties:
          bucketName:
            type: string
      - title: storage
        type: object
        maxProperties: 1
        properties:
          externalS3:
            $ref: '#/components/schemas/ExternalS3StorageSpec'
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster.
          type: string
    StreamLogRecord:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/LogRecord_in_StreamLogRecord_record'
        nextRecordToken:
          description: |-
            This token allows you to continue streaming logs starting from the exact same record.

            To continue streaming, specify value of `nextRecordToken` as value for [recordToken](/docs/managed-kafka/api-ref/Cluster/streamLogs#query_params) parameter in the next StreamLogs request.

            This value is interchangeable with [nextPageToken](/docs/managed-kafka/api-ref/Cluster/listLogs#responses) from ListLogs method.
          type: string
    ThisCluster:
      type: object
      properties: {}
    ThisClusterSpec:
      type: object
      properties: {}
    Topic:
      description: |-
        An Kafka topic.
        For more information, see the [Concepts -> Topics and partitions](/docs/managed-kafka/concepts/topics) section of the documentation.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the topic.
            type: string
          clusterId:
            description: |-
              ID of an Apache Kafka® cluster that the topic belongs to.

              To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.
            type: string
          partitions:
            description: The number of the topic's partitions.
            type: integer
            format: int64
          replicationFactor:
            description: Amount of data copies (replicas) for the topic in the cluster.
            type: integer
            format: int64
      - title: topic_config
        type: object
        maxProperties: 1
        properties:
          topicConfig_2_1:
            $ref: '#/components/schemas/TopicConfig2_1'
          topicConfig_2_6:
            $ref: '#/components/schemas/TopicConfig2_6'
          topicConfig_2_8:
            $ref: '#/components/schemas/TopicConfig2_8'
    TopicConfig2_1:
      description: A topic settings for 2.1.
      type: object
      properties:
        cleanupPolicy:
          $ref: '#/components/schemas/TopicConfig2_1CleanupPolicy_in_TopicConfig2_1_cleanupPolicy'
        compressionType:
          $ref: '#/components/schemas/CompressionType_in_TopicConfig2_1_compressionType'
        deleteRetentionMs:
          description: The amount of time in milliseconds to retain delete tombstone
            markers for log compacted topics.
          type: integer
          format: int64
        fileDeleteDelayMs:
          description: The time to wait before deleting a file from the filesystem.
          type: integer
          format: int64
        flushMessages:
          description: |-
            The number of messages accumulated on a log partition before messages are flushed to disk.

            This setting overrides the cluster-level `logFlushIntervalMessages` setting on the topic level.
          type: integer
          format: int64
        flushMs:
          description: |-
            The maximum time in milliseconds that a message in the topic is kept in memory before flushed to disk.

            This setting overrides the cluster-level `logFlushIntervalMs` setting on the topic level.
          type: integer
          format: int64
        minCompactionLagMs:
          description: The minimum time in milliseconds a message will remain uncompacted
            in the log.
          type: integer
          format: int64
        retentionBytes:
          description: |-
            The maximum size a partition can grow to before Kafka will discard old log segments to free up space if the `delete` `cleanupPolicy` is in effect.
            It is helpful if you need to control the size of log due to limited disk space.

            This setting overrides the cluster-level `logRetentionBytes` setting on the topic level.
          type: integer
          format: int64
        retentionMs:
          description: |-
            The number of milliseconds to keep a log segment's file before deleting it.

            This setting overrides the cluster-level `logRetentionMs` setting on the topic level.
          type: integer
          format: int64
        maxMessageBytes:
          description: The largest record batch size allowed in topic.
          type: integer
          format: int64
        minInsyncReplicas:
          description: |-
            This configuration specifies the minimum number of replicas that must acknowledge a write to topic for the write
            to be considered successful (when a producer sets acks to "all").
          type: integer
          format: int64
        segmentBytes:
          description: |-
            This configuration controls the segment file size for the log. Retention and cleaning is always done a file
            at a time so a larger segment size means fewer files but less granular control over retention.

            This setting overrides the cluster-level `logSegmentBytes` setting on the topic level.
          type: integer
          format: int64
        preallocate:
          description: |-
            True if we should preallocate the file on disk when creating a new log segment.

            This setting overrides the cluster-level `logPreallocate` setting on the topic level.
          type: boolean
          format: boolean
    TopicConfig2_1CleanupPolicy:
      description: |2-
         - CLEANUP_POLICY_DELETE: this policy discards log segments when either their retention time or log size limit is reached. See also: `logRetentionMs` and other similar parameters.
         - CLEANUP_POLICY_COMPACT: this policy compacts messages in log.
         - CLEANUP_POLICY_COMPACT_AND_DELETE: this policy use both compaction and deletion for messages and log segments.
      type: string
      enum:
      - CLEANUP_POLICY_DELETE
      - CLEANUP_POLICY_COMPACT
      - CLEANUP_POLICY_COMPACT_AND_DELETE
    TopicConfig2_6:
      description: A topic settings for 2.6
      type: object
      properties:
        cleanupPolicy:
          $ref: '#/components/schemas/TopicConfig2_6CleanupPolicy_in_TopicConfig2_6_cleanupPolicy'
        compressionType:
          $ref: '#/components/schemas/CompressionType_in_TopicConfig2_6_compressionType'
        deleteRetentionMs:
          description: The amount of time in milliseconds to retain delete tombstone
            markers for log compacted topics.
          type: integer
          format: int64
        fileDeleteDelayMs:
          description: The time to wait before deleting a file from the filesystem.
          type: integer
          format: int64
        flushMessages:
          description: |-
            The number of messages accumulated on a log partition before messages are flushed to disk.

            This setting overrides the cluster-level `logFlushIntervalMessages` setting on the topic level.
          type: integer
          format: int64
        flushMs:
          description: |-
            The maximum time in milliseconds that a message in the topic is kept in memory before flushed to disk.

            This setting overrides the cluster-level `logFlushIntervalMs` setting on the topic level.
          type: integer
          format: int64
        minCompactionLagMs:
          description: The minimum time in milliseconds a message will remain uncompacted
            in the log.
          type: integer
          format: int64
        retentionBytes:
          description: |-
            The maximum size a partition can grow to before Kafka will discard old log segments to free up space if the `delete` `cleanupPolicy` is in effect.
            It is helpful if you need to control the size of log due to limited disk space.

            This setting overrides the cluster-level `logRetentionBytes` setting on the topic level.
          type: integer
          format: int64
        retentionMs:
          description: |-
            The number of milliseconds to keep a log segment's file before deleting it.

            This setting overrides the cluster-level `logRetentionMs` setting on the topic level.
          type: integer
          format: int64
        maxMessageBytes:
          description: The largest record batch size allowed in topic.
          type: integer
          format: int64
        minInsyncReplicas:
          description: |-
            This configuration specifies the minimum number of replicas that must acknowledge a write to topic for the write
            to be considered successful (when a producer sets acks to "all").
          type: integer
          format: int64
        segmentBytes:
          description: |-
            This configuration controls the segment file size for the log. Retention and cleaning is always done a file
            at a time so a larger segment size means fewer files but less granular control over retention.

            This setting overrides the cluster-level `logSegmentBytes` setting on the topic level.
          type: integer
          format: int64
        preallocate:
          description: |-
            True if we should preallocate the file on disk when creating a new log segment.

            This setting overrides the cluster-level `logPreallocate` setting on the topic level.
          type: boolean
          format: boolean
    TopicConfig2_6CleanupPolicy:
      description: |2-
         - CLEANUP_POLICY_DELETE: this policy discards log segments when either their retention time or log size limit is reached. See also: `logRetentionMs` and other similar parameters.
         - CLEANUP_POLICY_COMPACT: this policy compacts messages in log.
         - CLEANUP_POLICY_COMPACT_AND_DELETE: this policy use both compaction and deletion for messages and log segments.
      type: string
      enum:
      - CLEANUP_POLICY_DELETE
      - CLEANUP_POLICY_COMPACT
      - CLEANUP_POLICY_COMPACT_AND_DELETE
    TopicConfig2_8:
      description: A topic settings for 2.8
      type: object
      properties:
        cleanupPolicy:
          $ref: '#/components/schemas/TopicConfig2_8CleanupPolicy_in_TopicConfig2_8_cleanupPolicy'
        compressionType:
          $ref: '#/components/schemas/CompressionType_in_TopicConfig2_8_compressionType'
        deleteRetentionMs:
          description: The amount of time in milliseconds to retain delete tombstone
            markers for log compacted topics.
          type: integer
          format: int64
        fileDeleteDelayMs:
          description: The time to wait before deleting a file from the filesystem.
          type: integer
          format: int64
        flushMessages:
          description: |-
            The number of messages accumulated on a log partition before messages are flushed to disk.

            This setting overrides the cluster-level `logFlushIntervalMessages` setting on the topic level.
          type: integer
          format: int64
        flushMs:
          description: |-
            The maximum time in milliseconds that a message in the topic is kept in memory before flushed to disk.

            This setting overrides the cluster-level `logFlushIntervalMs` setting on the topic level.
          type: integer
          format: int64
        minCompactionLagMs:
          description: The minimum time in milliseconds a message will remain uncompacted
            in the log.
          type: integer
          format: int64
        retentionBytes:
          description: |-
            The maximum size a partition can grow to before Kafka will discard old log segments to free up space if the `delete` `cleanupPolicy` is in effect.
            It is helpful if you need to control the size of log due to limited disk space.

            This setting overrides the cluster-level `logRetentionBytes` setting on the topic level.
          type: integer
          format: int64
        retentionMs:
          description: |-
            The number of milliseconds to keep a log segment's file before deleting it.

            This setting overrides the cluster-level `logRetentionMs` setting on the topic level.
          type: integer
          format: int64
        maxMessageBytes:
          description: The largest record batch size allowed in topic.
          type: integer
          format: int64
        minInsyncReplicas:
          description: |-
            This configuration specifies the minimum number of replicas that must acknowledge a write to topic for the write
            to be considered successful (when a producer sets acks to "all").
          type: integer
          format: int64
        segmentBytes:
          description: |-
            This configuration controls the segment file size for the log. Retention and cleaning is always done a file
            at a time so a larger segment size means fewer files but less granular control over retention.

            This setting overrides the cluster-level `logSegmentBytes` setting on the topic level.
          type: integer
          format: int64
        preallocate:
          description: |-
            True if we should preallocate the file on disk when creating a new log segment.

            This setting overrides the cluster-level `logPreallocate` setting on the topic level.
          type: boolean
          format: boolean
    TopicConfig2_8CleanupPolicy:
      description: |2-
         - CLEANUP_POLICY_DELETE: this policy discards log segments when either their retention time or log size limit is reached. See also: `logRetentionMs` and other similar parameters.
         - CLEANUP_POLICY_COMPACT: this policy compacts messages in log.
         - CLEANUP_POLICY_COMPACT_AND_DELETE: this policy use both compaction and deletion for messages and log segments.
      type: string
      enum:
      - CLEANUP_POLICY_DELETE
      - CLEANUP_POLICY_COMPACT
      - CLEANUP_POLICY_COMPACT_AND_DELETE
    TopicSpec:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the topic.
            type: string
          partitions:
            description: The number of the topic's partitions.
            type: integer
            format: int64
          replicationFactor:
            description: Amount of copies of a topic data kept in the cluster.
            type: integer
            format: int64
      - title: topic_config
        type: object
        maxProperties: 1
        properties:
          topicConfig_2_1:
            $ref: '#/components/schemas/TopicConfig2_1'
          topicConfig_2_6:
            $ref: '#/components/schemas/TopicConfig2_6'
          topicConfig_2_8:
            $ref: '#/components/schemas/TopicConfig2_8'
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the Apache Kafka® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Apache Kafka® cluster as `key:value` pairs.

            For example, "project": "mvp" or "source": "dictionary".

            The new set of labels will completely replace the old ones.
            To add a label, request the current set with the [get](/docs/managed-kafka/api-ref/Cluster/get) method, then send an [update](/docs/managed-kafka/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            New name for the Apache Kafka® cluster.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        securityGroupIds:
          description: User security groups
          type: array
          items:
            type: string
        deletionProtection:
          description: Deletion Protection inhibits deletion of the cluster
          type: boolean
          format: boolean
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow'
    UpdateConnectorConfigS3SinkSpec:
      description: Specification for update Kafka S3-Sink Connector
      type: object
      properties:
        topics:
          description: List of Kafka topics, separated by ','.
          type: string
        fileMaxRecords:
          description: Max records per file.
          type: integer
          format: int64
        s3Connection:
          $ref: '#/components/schemas/S3ConnectionSpec_in_UpdateConnectorConfigS3SinkSpec_s3Connection'
    UpdateConnectorMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Required.
            ID of the Apache Kafka® cluster the connector is being updated in.

            The maximum string length in characters is 50.
          type: string
        connectorName:
          description: |-
            Required.
            Name of the Apache Kafka connector that is being updated.

            The maximum string length in characters is 256.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    UpdateConnectorRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateConnectorRequest_updateMask'
        connectorSpec:
          $ref: '#/components/schemas/UpdateConnectorSpec_in_UpdateConnectorRequest_connectorSpec'
    UpdateConnectorSpec:
      type: object
      allOf:
      - type: object
        properties:
          tasksMax:
            description: Maximum number of connector tasks to update.
            type: integer
            format: int64
          properties:
            description: |-
              A set of new or changed properties to update for the connector. They are passed with the connector configuration to Managed Service for Apache Kafka®.
              Example: `sync.topics.config.enabled: false`.
            type: object
            additionalProperties:
              type: string
      - title: connector_config
        type: object
        maxProperties: 1
        properties:
          connectorConfigMirrormaker:
            $ref: '#/components/schemas/ConnectorConfigMirrorMakerSpec'
            description: Configuration of the MirrorMaker connector.
          connectorConfigS3Sink:
            $ref: '#/components/schemas/UpdateConnectorConfigS3SinkSpec'
            description: Update specification for S3-Sink Connector.
    UpdateTopicMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster where a topic is being updated.
          type: string
        topicName:
          description: Name of the Kafka topic that is being updated.
          type: string
    UpdateTopicRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateTopicRequest_updateMask'
        topicSpec:
          $ref: '#/components/schemas/TopicSpec_in_UpdateTopicRequest_topicSpec'
    UpdateUserMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Apache Kafka® cluster the user belongs to.
          type: string
        userName:
          description: Name of the user that is being updated.
          type: string
    UpdateUserRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateUserRequest_updateMask'
        password:
          description: |-
            New password for the user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: New set of permissions for the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    User:
      description: |-
        A Kafka user.
        For more information, see the [Operations -> Accounts](/docs/managed-kafka/operations/cluster-accounts) section of the documentation.
      type: object
      properties:
        name:
          description: Name of the Kafka user.
          type: string
        clusterId:
          description: |-
            ID of the Apache Kafka® cluster the user belongs to.

            To get the Apache Kafka® cluster ID, make a [list](/docs/managed-kafka/api-ref/Cluster/list) request.
          type: string
        permissions:
          description: Set of permissions granted to this user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    UserSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the Kafka user.

            The string length in characters must be 1-256.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the Kafka user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions granted to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    WeeklyMaintenanceWindow:
      type: object
      properties:
        day:
          $ref: '#/components/schemas/WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day'
        hour:
          description: |-
            Hour of the day in UTC.

            Acceptable values are 1 to 24, inclusive.
          type: string
          format: int64
    WeeklyMaintenanceWindowWeekDay:
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the Apache Kafka® cluster.

         - PRODUCTION: stable environment with a conservative update policy when only hotfixes are applied during regular maintenance.
         - PRESTABLE: environment with a more aggressive update policy when new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_Cluster_config:
      description: Configuration of the Apache Kafka® cluster.
      type: object
      properties:
        version:
          description: 'Version of Apache Kafka® used in the cluster. Possible values:
            `2.1`, `2.6`.'
          type: string
        kafka:
          $ref: '#/components/schemas/ConfigSpecKafka_in_ConfigSpec_kafka'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        zoneId:
          description: IDs of availability zones where Kafka brokers reside.
          type: array
          items:
            type: string
        brokersCount:
          description: The number of Kafka brokers deployed in each availability zone.
          type: integer
          format: int64
        assignPublicIp:
          description: |-
            The flag that defines whether a public IP address is assigned to the cluster.
            If the value is `true`, then Apache Kafka® cluster is available on the Internet via it's public IP address.
          type: boolean
          format: boolean
        unmanagedTopics:
          description: Allows to manage topics via AdminAPI
          type: boolean
          format: boolean
        schemaRegistry:
          description: Enables managed schema registry on cluster
          type: boolean
          format: boolean
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: state of the cluster is unknown (`health` of all hosts in the cluster is `UNKNOWN`).
         - ALIVE: cluster is alive and well (`health` of all hosts in the cluster is `ALIVE`).
         - DEAD: cluster is inoperable (`health` of all hosts in the cluster is `DEAD`).
         - DEGRADED: cluster is in degraded state (`health` of at least one of the hosts in the cluster is not `ALIVE`).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: cluster state is unknown.
         - CREATING: cluster is being created.
         - RUNNING: cluster is running normally.
         - ERROR: cluster encountered a problem and cannot operate.
         - UPDATING: cluster is being updated.
         - STOPPING: cluster is stopping.
         - STOPPED: cluster stopped.
         - STARTING: cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    MaintenanceWindow_in_Cluster_maintenanceWindow:
      description: Window of maintenance operations.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
    MaintenanceOperation_in_Cluster_plannedOperation:
      description: Scheduled maintenance operation.
      type: object
      properties:
        info:
          description: The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
    ConfigSpecKafka_in_ConfigSpec_kafka:
      description: Configuration and resource allocation for Kafka brokers.
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to Kafka brokers.
      - title: kafka_config
        type: object
        maxProperties: 1
        properties:
          kafkaConfig_2_1:
            $ref: '#/components/schemas/KafkaConfig2_1'
          kafkaConfig_2_6:
            $ref: '#/components/schemas/KafkaConfig2_6'
          kafkaConfig_2_8:
            $ref: '#/components/schemas/KafkaConfig2_8'
    ConfigSpecZookeeper_in_ConfigSpec_zookeeper:
      description: Configuration and resource allocation for ZooKeeper hosts.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecZookeeper_resources'
    Access_in_ConfigSpec_access:
      description: Access policy for external services.
      type: object
      properties:
        dataTransfer:
          description: Allow access for DataTransfer.
          type: boolean
          format: boolean
    Resources_in_ConfigSpecZookeeper_resources:
      description: Resources allocated to ZooKeeper hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory, etc.).
            All available presets are listed in the [documentation](/docs/managed-kafka/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes. Must be
            greater than 2 * partition segment size in bytes * partitions count, so
            each partition can have one active segment file and one closed segment
            file that can be deleted.
          type: string
          format: int64
        diskTypeId:
          description: Type of the storage environment for the host.
          type: string
    ClusterConnection_in_ConnectorConfigMirrorMaker_sourceCluster:
      description: Source cluster connection configuration.
      type: object
      allOf:
      - type: object
        properties:
          alias:
            description: |-
              Alias of cluster connection configuration.
              Examples: `source`, `target`.
            type: string
      - title: cluster_connection
        type: object
        maxProperties: 1
        properties:
          thisCluster:
            $ref: '#/components/schemas/ThisCluster'
            description: Connection configuration of the cluster the connector belongs
              to. As all credentials are already known, leave this parameter empty.
          externalCluster:
            $ref: '#/components/schemas/ExternalClusterConnection'
            description: Configuration of connection to an external cluster with all
              the necessary credentials.
    ClusterConnection_in_ConnectorConfigMirrorMaker_targetCluster:
      description: Target cluster connection configuration.
      type: object
      allOf:
      - type: object
        properties:
          alias:
            description: |-
              Alias of cluster connection configuration.
              Examples: `source`, `target`.
            type: string
      - title: cluster_connection
        type: object
        maxProperties: 1
        properties:
          thisCluster:
            $ref: '#/components/schemas/ThisCluster'
            description: Connection configuration of the cluster the connector belongs
              to. As all credentials are already known, leave this parameter empty.
          externalCluster:
            $ref: '#/components/schemas/ExternalClusterConnection'
            description: Configuration of connection to an external cluster with all
              the necessary credentials.
    ClusterConnectionSpec_in_ConnectorConfigMirrorMakerSpec_sourceCluster:
      description: Source cluster configuration for the MirrorMaker connector.
      type: object
      allOf:
      - type: object
        properties:
          alias:
            description: |-
              Alias of cluster connection configuration.
              Examples: `source`, `target`.
            type: string
      - title: cluster_connection
        type: object
        maxProperties: 1
        properties:
          thisCluster:
            $ref: '#/components/schemas/ThisClusterSpec'
            description: Connection configuration of the cluster the connector belongs
              to. As all credentials are already known, leave this parameter empty.
          externalCluster:
            $ref: '#/components/schemas/ExternalClusterConnectionSpec'
            description: Configuration of connection to an external cluster with all
              the necessary credentials.
    ClusterConnectionSpec_in_ConnectorConfigMirrorMakerSpec_targetCluster:
      description: Target cluster configuration for the MirrorMaker connector.
      type: object
      allOf:
      - type: object
        properties:
          alias:
            description: |-
              Alias of cluster connection configuration.
              Examples: `source`, `target`.
            type: string
      - title: cluster_connection
        type: object
        maxProperties: 1
        properties:
          thisCluster:
            $ref: '#/components/schemas/ThisClusterSpec'
            description: Connection configuration of the cluster the connector belongs
              to. As all credentials are already known, leave this parameter empty.
          externalCluster:
            $ref: '#/components/schemas/ExternalClusterConnectionSpec'
            description: Configuration of connection to an external cluster with all
              the necessary credentials.
    S3Connection_in_ConnectorConfigS3Sink_s3Connection:
      description: |-
        Credentials for connecting to S3 storage

        Resource for S3Connection -
        settings of connection to AWS-compatible S3 storage, that
        are source or target of Kafka S3-connectors.
        YC Object Storage is AWS-compatible.
      type: object
      allOf:
      - type: object
        properties:
          bucketName:
            type: string
      - title: storage
        type: object
        maxProperties: 1
        properties:
          externalS3:
            $ref: '#/components/schemas/ExternalS3Storage'
    S3ConnectionSpec_in_ConnectorConfigS3SinkSpec_s3Connection:
      description: |-
        Credentials for connecting to S3 storage

        Specification for S3Connection -
        settings of connection to AWS-compatible S3 storage, that
        are source or target of Kafka S3-connectors.
        YC Object Storage is AWS-compatible.
      type: object
      allOf:
      - type: object
        properties:
          bucketName:
            type: string
      - title: storage
        type: object
        maxProperties: 1
        properties:
          externalS3:
            $ref: '#/components/schemas/ExternalS3StorageSpec'
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Deployment environment of the Apache Kafka® cluster.

         - PRODUCTION: stable environment with a conservative update policy when only hotfixes are applied during regular maintenance.
         - PRESTABLE: environment with a more aggressive update policy when new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: Kafka and hosts configuration the Apache Kafka® cluster.
      type: object
      properties:
        version:
          description: 'Version of Apache Kafka® used in the cluster. Possible values:
            `2.1`, `2.6`.'
          type: string
        kafka:
          $ref: '#/components/schemas/ConfigSpecKafka_in_ConfigSpec_kafka'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        zoneId:
          description: IDs of availability zones where Kafka brokers reside.
          type: array
          items:
            type: string
        brokersCount:
          description: The number of Kafka brokers deployed in each availability zone.
          type: integer
          format: int64
        assignPublicIp:
          description: |-
            The flag that defines whether a public IP address is assigned to the cluster.
            If the value is `true`, then Apache Kafka® cluster is available on the Internet via it's public IP address.
          type: boolean
          format: boolean
        unmanagedTopics:
          description: Allows to manage topics via AdminAPI
          type: boolean
          format: boolean
        schemaRegistry:
          description: Enables managed schema registry on cluster
          type: boolean
          format: boolean
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    MaintenanceWindow_in_CreateClusterRequest_maintenanceWindow:
      description: Window of maintenance operations.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
    ConnectorSpec_in_CreateConnectorRequest_connectorSpec:
      description: |-
        Required.
        Configuration of the connector to create.

        An object that represents an Apache Kafka® connector.

        See [the documentation](/docs/managed-kafka/concepts/connectors) for details.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the connector.
            type: string
          tasksMax:
            description: Maximum number of connector tasks. Default value is the number
              of brokers.
            type: integer
            format: int64
          properties:
            description: |-
              A set of properties passed to Managed Service for Apache Kafka® with the connector configuration.
              Example: `sync.topics.config.enabled: true`.
            type: object
            additionalProperties:
              type: string
      - title: connector_config
        type: object
        maxProperties: 1
        properties:
          connectorConfigMirrormaker:
            $ref: '#/components/schemas/ConnectorConfigMirrorMakerSpec'
            description: Configuration of the MirrorMaker connector.
          connectorConfigS3Sink:
            $ref: '#/components/schemas/ConnectorConfigS3SinkSpec'
            description: Configuration of S3-Sink connector
    TopicSpec_in_CreateTopicRequest_topicSpec:
      description: |-
        Required.
        Configuration of the topic to create.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the topic.
            type: string
          partitions:
            description: The number of the topic's partitions.
            type: integer
            format: int64
          replicationFactor:
            description: Amount of copies of a topic data kept in the cluster.
            type: integer
            format: int64
      - title: topic_config
        type: object
        maxProperties: 1
        properties:
          topicConfig_2_1:
            $ref: '#/components/schemas/TopicConfig2_1'
          topicConfig_2_6:
            $ref: '#/components/schemas/TopicConfig2_6'
          topicConfig_2_8:
            $ref: '#/components/schemas/TopicConfig2_8'
    UserSpec_in_CreateUserRequest_userSpec:
      description: |-
        Required.
        Configuration of the user to create.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the Kafka user.

            The string length in characters must be 1-256.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the Kafka user.

            The string length in characters must be 8-128.
          type: string
        permissions:
          description: Set of permissions granted to the user.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    Permission_in_GrantUserPermissionRequest_permission:
      description: |-
        Required.
        Permission that should be granted to the specified user.
      type: object
      properties:
        topicName:
          description: |-
            Name or prefix-pattern with wildcard for the topic that the permission grants access to.

            To get the topic name, make a [list](/docs/managed-kafka/api-ref/Topic/list) request.
          type: string
        role:
          $ref: '#/components/schemas/PermissionAccessRole_in_Permission_role'
    HostRole_in_Host_role:
      description: |-
        Host role.

         - KAFKA: the host is a Kafka broker.
         - ZOOKEEPER: the host is a ZooKeeper server.
      type: string
      enum:
      - KAFKA
      - ZOOKEEPER
    Resources_in_Host_resources:
      description: Computational resources allocated to the host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory, etc.).
            All available presets are listed in the [documentation](/docs/managed-kafka/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes. Must be
            greater than 2 * partition segment size in bytes * partitions count, so
            each partition can have one active segment file and one closed segment
            file that can be deleted.
          type: string
          format: int64
        diskTypeId:
          description: Type of the storage environment for the host.
          type: string
    HostHealth_in_Host_health:
      description: |-
        Aggregated host health data.

         - UNKNOWN: health of the host is unknown.
         - ALIVE: the host is performing all its functions normally.
         - DEAD: the host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: the host is degraded and can perform only some of its essential functions.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    CompressionType_in_KafkaConfig2_1_compressionType:
      description: |-
        Cluster topics compression type.

         - COMPRESSION_TYPE_UNCOMPRESSED: no codec (uncompressed).
         - COMPRESSION_TYPE_ZSTD: Zstandard codec.
         - COMPRESSION_TYPE_LZ4: LZ4 codec.
         - COMPRESSION_TYPE_SNAPPY: Snappy codec.
         - COMPRESSION_TYPE_GZIP: GZip codec.
         - COMPRESSION_TYPE_PRODUCER: the codec to use is set by a producer (can be any of `ZSTD`, `LZ4`, `GZIP` or `SNAPPY` codecs).
      type: string
      enum:
      - COMPRESSION_TYPE_UNCOMPRESSED
      - COMPRESSION_TYPE_ZSTD
      - COMPRESSION_TYPE_LZ4
      - COMPRESSION_TYPE_SNAPPY
      - COMPRESSION_TYPE_GZIP
      - COMPRESSION_TYPE_PRODUCER
    CompressionType_in_KafkaConfig2_6_compressionType:
      description: |-
        Cluster topics compression type.

         - COMPRESSION_TYPE_UNCOMPRESSED: no codec (uncompressed).
         - COMPRESSION_TYPE_ZSTD: Zstandard codec.
         - COMPRESSION_TYPE_LZ4: LZ4 codec.
         - COMPRESSION_TYPE_SNAPPY: Snappy codec.
         - COMPRESSION_TYPE_GZIP: GZip codec.
         - COMPRESSION_TYPE_PRODUCER: the codec to use is set by a producer (can be any of `ZSTD`, `LZ4`, `GZIP` or `SNAPPY` codecs).
      type: string
      enum:
      - COMPRESSION_TYPE_UNCOMPRESSED
      - COMPRESSION_TYPE_ZSTD
      - COMPRESSION_TYPE_LZ4
      - COMPRESSION_TYPE_SNAPPY
      - COMPRESSION_TYPE_GZIP
      - COMPRESSION_TYPE_PRODUCER
    CompressionType_in_KafkaConfig2_8_compressionType:
      description: |-
        Cluster topics compression type.

         - COMPRESSION_TYPE_UNCOMPRESSED: no codec (uncompressed).
         - COMPRESSION_TYPE_ZSTD: Zstandard codec.
         - COMPRESSION_TYPE_LZ4: LZ4 codec.
         - COMPRESSION_TYPE_SNAPPY: Snappy codec.
         - COMPRESSION_TYPE_GZIP: GZip codec.
         - COMPRESSION_TYPE_PRODUCER: the codec to use is set by a producer (can be any of `ZSTD`, `LZ4`, `GZIP` or `SNAPPY` codecs).
      type: string
      enum:
      - COMPRESSION_TYPE_UNCOMPRESSED
      - COMPRESSION_TYPE_ZSTD
      - COMPRESSION_TYPE_LZ4
      - COMPRESSION_TYPE_SNAPPY
      - COMPRESSION_TYPE_GZIP
      - COMPRESSION_TYPE_PRODUCER
    PermissionAccessRole_in_Permission_role:
      description: |-
        Access role type to grant to the user.

         - ACCESS_ROLE_PRODUCER: producer role for the user.
         - ACCESS_ROLE_CONSUMER: consumer role for the user.
         - ACCESS_ROLE_ADMIN: admin role for the user.
      type: string
      enum:
      - ACCESS_ROLE_PRODUCER
      - ACCESS_ROLE_CONSUMER
      - ACCESS_ROLE_ADMIN
    RescheduleMaintenanceRequestRescheduleType_in_RescheduleMaintenanceRequest_rescheduleType:
      description: |-
        Required.
        The type of reschedule request.

         - IMMEDIATE: Start the maintenance operation immediately.
         - NEXT_AVAILABLE_WINDOW: Start the maintenance operation within the next available maintenance window.
         - SPECIFIC_TIME: Start the maintenance operation at the specific time.
      type: string
      enum:
      - IMMEDIATE
      - NEXT_AVAILABLE_WINDOW
      - SPECIFIC_TIME
    Permission_in_RevokeUserPermissionRequest_permission:
      description: |-
        Required.
        Permission that should be revoked from the specified user.
      type: object
      properties:
        topicName:
          description: |-
            Name or prefix-pattern with wildcard for the topic that the permission grants access to.

            To get the topic name, make a [list](/docs/managed-kafka/api-ref/Topic/list) request.
          type: string
        role:
          $ref: '#/components/schemas/PermissionAccessRole_in_Permission_role'
    LogRecord_in_StreamLogRecord_record:
      description: |-
        One of the requested log records.

        A single log record.
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    TopicConfig2_1CleanupPolicy_in_TopicConfig2_1_cleanupPolicy:
      description: |-
        Retention policy to use on old log messages.

         - CLEANUP_POLICY_DELETE: this policy discards log segments when either their retention time or log size limit is reached. See also: `logRetentionMs` and other similar parameters.
         - CLEANUP_POLICY_COMPACT: this policy compacts messages in log.
         - CLEANUP_POLICY_COMPACT_AND_DELETE: this policy use both compaction and deletion for messages and log segments.
      type: string
      enum:
      - CLEANUP_POLICY_DELETE
      - CLEANUP_POLICY_COMPACT
      - CLEANUP_POLICY_COMPACT_AND_DELETE
    CompressionType_in_TopicConfig2_1_compressionType:
      description: |-
        The compression type for a given topic.

         - COMPRESSION_TYPE_UNCOMPRESSED: no codec (uncompressed).
         - COMPRESSION_TYPE_ZSTD: Zstandard codec.
         - COMPRESSION_TYPE_LZ4: LZ4 codec.
         - COMPRESSION_TYPE_SNAPPY: Snappy codec.
         - COMPRESSION_TYPE_GZIP: GZip codec.
         - COMPRESSION_TYPE_PRODUCER: the codec to use is set by a producer (can be any of `ZSTD`, `LZ4`, `GZIP` or `SNAPPY` codecs).
      type: string
      enum:
      - COMPRESSION_TYPE_UNCOMPRESSED
      - COMPRESSION_TYPE_ZSTD
      - COMPRESSION_TYPE_LZ4
      - COMPRESSION_TYPE_SNAPPY
      - COMPRESSION_TYPE_GZIP
      - COMPRESSION_TYPE_PRODUCER
    TopicConfig2_6CleanupPolicy_in_TopicConfig2_6_cleanupPolicy:
      description: |-
        Retention policy to use on old log messages.

         - CLEANUP_POLICY_DELETE: this policy discards log segments when either their retention time or log size limit is reached. See also: `logRetentionMs` and other similar parameters.
         - CLEANUP_POLICY_COMPACT: this policy compacts messages in log.
         - CLEANUP_POLICY_COMPACT_AND_DELETE: this policy use both compaction and deletion for messages and log segments.
      type: string
      enum:
      - CLEANUP_POLICY_DELETE
      - CLEANUP_POLICY_COMPACT
      - CLEANUP_POLICY_COMPACT_AND_DELETE
    CompressionType_in_TopicConfig2_6_compressionType:
      description: |-
        The compression type for a given topic.

         - COMPRESSION_TYPE_UNCOMPRESSED: no codec (uncompressed).
         - COMPRESSION_TYPE_ZSTD: Zstandard codec.
         - COMPRESSION_TYPE_LZ4: LZ4 codec.
         - COMPRESSION_TYPE_SNAPPY: Snappy codec.
         - COMPRESSION_TYPE_GZIP: GZip codec.
         - COMPRESSION_TYPE_PRODUCER: the codec to use is set by a producer (can be any of `ZSTD`, `LZ4`, `GZIP` or `SNAPPY` codecs).
      type: string
      enum:
      - COMPRESSION_TYPE_UNCOMPRESSED
      - COMPRESSION_TYPE_ZSTD
      - COMPRESSION_TYPE_LZ4
      - COMPRESSION_TYPE_SNAPPY
      - COMPRESSION_TYPE_GZIP
      - COMPRESSION_TYPE_PRODUCER
    TopicConfig2_8CleanupPolicy_in_TopicConfig2_8_cleanupPolicy:
      description: |-
        Retention policy to use on old log messages.

         - CLEANUP_POLICY_DELETE: this policy discards log segments when either their retention time or log size limit is reached. See also: `logRetentionMs` and other similar parameters.
         - CLEANUP_POLICY_COMPACT: this policy compacts messages in log.
         - CLEANUP_POLICY_COMPACT_AND_DELETE: this policy use both compaction and deletion for messages and log segments.
      type: string
      enum:
      - CLEANUP_POLICY_DELETE
      - CLEANUP_POLICY_COMPACT
      - CLEANUP_POLICY_COMPACT_AND_DELETE
    CompressionType_in_TopicConfig2_8_compressionType:
      description: |-
        The compression type for a given topic.

         - COMPRESSION_TYPE_UNCOMPRESSED: no codec (uncompressed).
         - COMPRESSION_TYPE_ZSTD: Zstandard codec.
         - COMPRESSION_TYPE_LZ4: LZ4 codec.
         - COMPRESSION_TYPE_SNAPPY: Snappy codec.
         - COMPRESSION_TYPE_GZIP: GZip codec.
         - COMPRESSION_TYPE_PRODUCER: the codec to use is set by a producer (can be any of `ZSTD`, `LZ4`, `GZIP` or `SNAPPY` codecs).
      type: string
      enum:
      - COMPRESSION_TYPE_UNCOMPRESSED
      - COMPRESSION_TYPE_ZSTD
      - COMPRESSION_TYPE_LZ4
      - COMPRESSION_TYPE_SNAPPY
      - COMPRESSION_TYPE_GZIP
      - COMPRESSION_TYPE_PRODUCER
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: |-
        New configuration and resources for hosts in the Apache Kafka® cluster.

        Use [updateMask](/docs/managed-kafka/api-ref/Cluster/update#body_params) to prevent reverting all cluster settings that are not listed in [configSpec](/docs/managed-kafka/api-ref/Cluster/update#body_params) to their default values.
      type: object
      properties:
        version:
          description: 'Version of Apache Kafka® used in the cluster. Possible values:
            `2.1`, `2.6`.'
          type: string
        kafka:
          $ref: '#/components/schemas/ConfigSpecKafka_in_ConfigSpec_kafka'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        zoneId:
          description: IDs of availability zones where Kafka brokers reside.
          type: array
          items:
            type: string
        brokersCount:
          description: The number of Kafka brokers deployed in each availability zone.
          type: integer
          format: int64
        assignPublicIp:
          description: |-
            The flag that defines whether a public IP address is assigned to the cluster.
            If the value is `true`, then Apache Kafka® cluster is available on the Internet via it's public IP address.
          type: boolean
          format: boolean
        unmanagedTopics:
          description: Allows to manage topics via AdminAPI
          type: boolean
          format: boolean
        schemaRegistry:
          description: Enables managed schema registry on cluster
          type: boolean
          format: boolean
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow:
      description: New maintenance window settings for the cluster.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
    S3ConnectionSpec_in_UpdateConnectorConfigS3SinkSpec_s3Connection:
      description: |-
        Credentials for connecting to S3 storage

        Specification for S3Connection -
        settings of connection to AWS-compatible S3 storage, that
        are source or target of Kafka S3-connectors.
        YC Object Storage is AWS-compatible.
      type: object
      allOf:
      - type: object
        properties:
          bucketName:
            type: string
      - title: storage
        type: object
        maxProperties: 1
        properties:
          externalS3:
            $ref: '#/components/schemas/ExternalS3StorageSpec'
    FieldMask_in_UpdateConnectorRequest_updateMask:
      description: |-
        Field mask that specifies which settings of the connector should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    UpdateConnectorSpec_in_UpdateConnectorRequest_connectorSpec:
      description: |-
        Required.
        Configuration of the connector to update.
      type: object
      allOf:
      - type: object
        properties:
          tasksMax:
            description: Maximum number of connector tasks to update.
            type: integer
            format: int64
          properties:
            description: |-
              A set of new or changed properties to update for the connector. They are passed with the connector configuration to Managed Service for Apache Kafka®.
              Example: `sync.topics.config.enabled: false`.
            type: object
            additionalProperties:
              type: string
      - title: connector_config
        type: object
        maxProperties: 1
        properties:
          connectorConfigMirrormaker:
            $ref: '#/components/schemas/ConnectorConfigMirrorMakerSpec'
            description: Configuration of the MirrorMaker connector.
          connectorConfigS3Sink:
            $ref: '#/components/schemas/UpdateConnectorConfigS3SinkSpec'
            description: Update specification for S3-Sink Connector.
    FieldMask_in_UpdateTopicRequest_updateMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    TopicSpec_in_UpdateTopicRequest_topicSpec:
      description: |-
        New configuration of the topic.

        Use [updateMask](/docs/managed-kafka/api-ref/Topic/update#body_params) to prevent reverting all topic settings that are not listed in [topicSpec](/docs/managed-kafka/api-ref/Topic/update#body_params) to their default values.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the topic.
            type: string
          partitions:
            description: The number of the topic's partitions.
            type: integer
            format: int64
          replicationFactor:
            description: Amount of copies of a topic data kept in the cluster.
            type: integer
            format: int64
      - title: topic_config
        type: object
        maxProperties: 1
        properties:
          topicConfig_2_1:
            $ref: '#/components/schemas/TopicConfig2_1'
          topicConfig_2_6:
            $ref: '#/components/schemas/TopicConfig2_6'
          topicConfig_2_8:
            $ref: '#/components/schemas/TopicConfig2_8'
    FieldMask_in_UpdateUserRequest_updateMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day:
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
tags:
- name: Cluster
  description: A set of methods for managing Apache Kafka® clusters.
- name: Connector
  description: A set of methods for managing Apache Kafka® connectors.
- name: ResourcePreset
  description: A set of methods for managing Kafka resource presets.
- name: Topic
  description: A set of methods for managing Kafka topics.
- name: User
  description: A set of methods for managing Kafka users.
