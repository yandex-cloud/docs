openapi: 3.0.0
info:
  title: Managed Service for Greenplum® API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /managed-greenplum/v1/backups/{backupId}:
    get:
      tags:
      - Backup
      summary: Returns the specified backup of Greenplum® cluster.
      operationId: BackupGet
      parameters:
      - name: backupId
        in: path
        description: |-
          Required.
          ID of the backup to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      x-y-navtitle: get
  /managed-greenplum/v1/backups:
    get:
      tags:
      - Backup
      summary: Returns the list of available backups for the specified Greenplum®
        cluster.
      operationId: BackupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list backups in.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/Backup/list#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Backup/list#responses) that can be used to get the next page of results in subsequent list requests.

          Default value is 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          The page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Backup/list#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Backup/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      x-y-navtitle: list
  /managed-greenplum/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified Greenplum® cluster.
      description: To get the list of all available Greenplum® clusters, make a [list](/docs/managed-greenplum/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster resource to return.

          To get the cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified Greenplum® cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to delete.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified Greenplum® cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster resource to update.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /managed-greenplum/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of Greenplum® clusters that belong to the specified
        folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list Greenplum® clusters in.

          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/list#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:

          1. The field name. Currently you can only use filtering with the [Cluster.name](/docs/managed-greenplum/api-ref/Cluster#representation) field.

          2. An `=` operator.

          3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a Greenplum® cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /managed-greenplum/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Starts the specified Greenplum® cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to start.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /managed-greenplum/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stops the specified Greenplum® cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to stop.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /managed-greenplum/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Operation resources for the specified cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-greenplum/v1/clusters/{clusterId}/master-hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of master hosts for the specified cluster.
      operationId: ClusterListMasterHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster.

          To get the Greenplum® cluster ID use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listMasterHosts
  /managed-greenplum/v1/clusters/{clusterId}/segment-hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of segment hosts for the specified cluster.
      operationId: ClusterListSegmentHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster.

          To get the Greenplum® cluster ID use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listSegmentHosts
  /managed-greenplum/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: Retrieves logs for the specified Greenplum® cluster.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to request logs for.

          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from log table to request.
          If no columns are specified, entire log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        description: Type of the service to request logs about.
        schema:
          $ref: '#/components/schemas/ListClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: alwaysNextPageToken
        in: query
        description: The service always returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses),
          even if the current page is empty.
        schema:
          type: boolean
          format: boolean
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:

          1. A field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname], [LogRecord.logs.message.error_severity] (for `GREENPLUM` service) and [LogRecord.logs.message.level] (for `GREENPLUM_POOLER` service) fields.

          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.

          3. A value. Must be 1-63 characters long and match the regular expression `^[a-z0-9.-]{1,61}$`.

          Examples of a filter:
          * `message.hostname='node1.db.cloud.yandex.net'`;
          * `message.error_severity IN ("ERROR", "FATAL", "PANIC") AND message.hostname = "node1.db.cloud.yandex.net"`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /managed-greenplum/v1/clusters/{clusterId}:stream_logs:
    get:
      tags:
      - Cluster
      summary: Same as [listLogs](/docs/managed-greenplum/api-ref/Cluster/listLogs)
        but using server-side streaming. Also allows for `tail -f` semantics.
      operationId: ClusterStreamLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from log table to get in the response.
          If no columns are specified, entire log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        description: Type of the service to request logs about.
        schema:
          $ref: '#/components/schemas/StreamClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.

          If this field is not set, all existing logs are sent as well as the new ones as they appear.

          In essence it has `tail -f` semantics.


          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: recordToken
        in: query
        description: |-
          Record token. Set [recordToken](/docs/managed-greenplum/api-ref/Cluster/streamLogs#query_params) to the [StreamLogs.next_record_token] returned by the previous [StreamLogs] request to start streaming from the next log record.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:

          1. A field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname], [LogRecord.logs.message.error_severity] (for GREENPLUM service), [LogRecord.logs.message.level] (for POOLER service) fields.

          2. An `=` operator.

          3. A value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-z0-9.-]{1,61}`.

          Examples of a filter:

          * `message.hostname='node1.db.cloud.yandex.net'`;
          * `message.error_severity IN ("ERROR", "FATAL", "PANIC") AND message.hostname = "node1.db.cloud.yandex.net"`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamLogRecord'
      x-y-navtitle: streamLogs
  /managed-greenplum/v1/clusters/{clusterId}/backups:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of available backups for the specified Greenplum®
        cluster.
      operationId: ClusterListBackups
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster.

          To get the Greenplum® cluster ID use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listBackups#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listBackups#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listBackups#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listBackups#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterBackupsResponse'
      x-y-navtitle: listBackups
  /managed-greenplum/v1/clusters:restore:
    post:
      tags:
      - Cluster
      summary: Creates a new Greenplum® cluster using the specified backup.
      operationId: ClusterRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restore
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestoreClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /managed-greenplum/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified resource preset.
      description: To get the list of available resource presets, make a [list](/docs/managed-greenplum/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          ID of the resource preset to return.

          To get the resource preset ID, use a [list](/docs/managed-greenplum/api-ref/ResourcePreset/list) request.
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: |-
          Required.
          Required. ResourcePreset type - master or segment.
        schema:
          $ref: '#/components/schemas/ResourcePresetType'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /managed-greenplum/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available resource presets.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than [pageSize](/docs/managed-greenplum/api-ref/ResourcePreset/list#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/ResourcePreset/list#responses) that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/ResourcePreset/list#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/ResourcePreset/list#responses) returned by the previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: type
        in: query
        description: |-
          Required.
          Required. ResourcePreset type - master or segment.
        schema:
          $ref: '#/components/schemas/ResourcePresetType'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
components:
  schemas:
    Access:
      type: object
      properties:
        dataLens:
          description: Allows data export from the cluster to DataLens.
          type: boolean
          format: boolean
        webSql:
          description: Allows SQL queries to the cluster databases from the management
            console.
          type: boolean
          format: boolean
        dataTransfer:
          description: Allows access for DataTransfer.
          type: boolean
          format: boolean
    AnytimeMaintenanceWindow:
      description: An any-time maintenance window.
      type: object
      properties: {}
    Backup:
      type: object
      properties:
        id:
          description: Required. ID of the backup.
          type: string
        folderId:
          description: ID of the folder that the backup belongs to.
          type: string
        createdAt:
          description: |-
            Time when the backup operation was completed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        sourceClusterId:
          description: ID of the Greenplum® cluster that the backup was created for.
          type: string
        startedAt:
          description: |-
            Time when the backup operation was started.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        size:
          description: Size of the backup in bytes.
          type: string
          format: int64
    Cluster:
      description: A Greenplum® cluster resource.
      type: object
      properties:
        id:
          description: |-
            ID of the Greenplum® cluster.
            This ID is assigned by the platform at the moment of cluster creation.
          type: string
        folderId:
          description: ID of the folder that the Greenplum® cluster belongs to.
          type: string
        createdAt:
          description: |-
            Time when the cluster was created.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Required.
            Name of the Greenplum® cluster.
            The name is unique within the folder.

            The maximum string length in characters is 63.
          type: string
        config:
          $ref: '#/components/schemas/GreenplumConfig_in_Cluster_config'
        description:
          description: |-
            Description of the Greenplum® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: Custom labels for the Greenplum® cluster as `key:value` pairs.
            Maximum 64 labels per resource.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the Greenplum®
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        masterConfig:
          $ref: '#/components/schemas/MasterSubclusterConfig_in_Cluster_masterConfig'
        segmentConfig:
          $ref: '#/components/schemas/SegmentSubclusterConfig_in_Cluster_segmentConfig'
        masterHostCount:
          description: Number of hosts in the master subcluster.
          type: string
          format: int64
        segmentHostCount:
          description: Number of hosts in the segment subcluster.
          type: string
          format: int64
        segmentInHost:
          description: Number of segments per host.
          type: string
          format: int64
        networkId:
          description: ID of the cloud network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_Cluster_maintenanceWindow'
        plannedOperation:
          $ref: '#/components/schemas/MaintenanceOperation_in_Cluster_plannedOperation'
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        userName:
          description: Owner user name.
          type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        hostGroupIds:
          description: Host groups hosting VMs of the cluster.
          type: array
          items:
            type: string
        clusterConfig:
          $ref: '#/components/schemas/ClusterConfigSet_in_Cluster_clusterConfig'
    ClusterConfigSet:
      type: object
      allOf:
      - type: object
        properties:
          pool:
            $ref: '#/components/schemas/ConnectionPoolerConfigSet'
            description: Odyssey® pool settings.
      - title: greenplum_config
        type: object
        maxProperties: 1
        properties:
          greenplumConfigSet_6_17:
            $ref: '#/components/schemas/GreenplumConfigSet6_17'
          greenplumConfigSet_6_19:
            $ref: '#/components/schemas/GreenplumConfigSet6_19'
    ClusterEnvironment:
      description: |2-
         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: Health of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is working normally (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
         - UNBALANCED: Cluster is working below capacity (`health` for at least one host in the cluster is UNBALANCED).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster has encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster has stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConfigSpec:
      type: object
      allOf:
      - type: object
        properties:
          pool:
            $ref: '#/components/schemas/ConnectionPoolerConfig'
            description: Odyssey® pool settings.
      - title: greenplum_config
        type: object
        maxProperties: 1
        properties:
          greenplumConfig_6_17:
            $ref: '#/components/schemas/GreenplumConfig6_17'
          greenplumConfig_6_19:
            $ref: '#/components/schemas/GreenplumConfig6_19'
    ConnectionPoolerConfig:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode'
        size:
          description: |-
            The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.

            Set to zero to disable the limit.
          type: integer
          format: int64
        clientIdleTimeout:
          description: |-
            Server pool idle timeout, in seconds.

            A server connection closes after being idle for the specified time.

            Set to zero to disable the limit.
          type: integer
          format: int64
    ConnectionPoolerConfigPoolMode:
      description: |2-
         - SESSION: Assign server connection to a client until it disconnects. Default value.
         - TRANSACTION: Assign server connection to a client for a transaction processing.
      type: string
      enum:
      - SESSION
      - TRANSACTION
    ConnectionPoolerConfigSet:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_ConnectionPoolerConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_ConnectionPoolerConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_ConnectionPoolerConfigSet_defaultConfig'
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create the Greenplum® cluster in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the Greenplum® cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the Greenplum® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Greenplum® cluster as `key:value` pairs.
            For example, `"project":"mvp"` or `"source":"dictionary"`.

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        config:
          $ref: '#/components/schemas/GreenplumConfig_in_CreateClusterRequest_config'
        masterConfig:
          $ref: '#/components/schemas/MasterSubclusterConfigSpec_in_CreateClusterRequest_masterConfig'
        segmentConfig:
          $ref: '#/components/schemas/SegmentSubclusterConfigSpec_in_CreateClusterRequest_segmentConfig'
        masterHostCount:
          description: Number of hosts in the master subcluster.
          type: string
          format: int64
        segmentInHost:
          description: Number of segments per host.
          type: string
          format: int64
        segmentHostCount:
          description: Number of hosts in the segment subcluster.
          type: string
          format: int64
        userName:
          description: |-
            Required.
            Owner user name.
          type: string
        userPassword:
          description: |-
            Required.
            Owner user password.

            The string length in characters must be 8-128.
          type: string
        networkId:
          description: |-
            Required.
            ID of the network to create the cluster in.

            The maximum string length in characters is 50.
          type: string
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        hostGroupIds:
          description: Host groups to place VMs of the cluster in.
          type: array
          items:
            type: string
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_CreateClusterRequest_maintenanceWindow'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GreenplumConfig:
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Determines whether the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    GreenplumConfig6_17:
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
    GreenplumConfig6_19:
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        maxStatementMem:
          description: |-
            The maximum memory limit for a query, in bytes.

            Helps to avoid out-of-memory errors on a segment host during query processing as a result of setting `statement_mem` too high.

            Taking into account the configuration of a single segment host, calculate `maxStatementMem` as follows: `seghost_physical_memory` / `average_number_concurrent_queries`.

            When changing both `maxStatementMem` and `statement_mem`, `maxStatementMem` must be changed first, or listed first in the `postgresql.conf` file.

            Default value is 2097152000 (2000 MB).

            More info in [Greenplum® documentation](https://greenplum.docs.pivotal.io/6-19/ref_guide/config_params/guc-list.html#max_statement_mem).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/LogStatement_in_GreenplumConfig6_19_logStatement'
    GreenplumConfigSet6_17:
      description: Configuration settings version 6.17
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/GreenplumConfig6_17_in_GreenplumConfigSet6_17_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/GreenplumConfig6_17_in_GreenplumConfigSet6_17_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/GreenplumConfig6_17_in_GreenplumConfigSet6_17_defaultConfig'
    GreenplumConfigSet6_19:
      description: Configuration settings version 6.19
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/GreenplumConfig6_19_in_GreenplumConfigSet6_19_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/GreenplumConfig6_19_in_GreenplumConfigSet6_19_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/GreenplumConfig6_19_in_GreenplumConfigSet6_19_defaultConfig'
    GreenplumRestoreConfig:
      type: object
      properties:
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumRestoreConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumRestoreConfig_access'
        zoneId:
          description: |-
            ID of the availability zone where the host resides.

            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet that the host should belong to. This subnet should be a part of the network that the cluster belongs to.
            The ID of the network is set in the field [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Determines whether the host should get a public IP address on creation.

            After a host has been created, this setting cannot be changed.

            To remove an assigned public IP, or to assign a public IP to a host without one, recreate the host with `assignPublicIp` set as needed.

            Possible values:
            * `false` - do not assign a public IP to the master host.
            * `true` - assign a public IP to the master host.
          type: boolean
          format: boolean
    Host:
      description: A Greenplum® cluster host resource.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the Greenplum® host.

            The host name is assigned by the platform at creation time and cannot be changed.

            The name is unique across all MDB hosts that exist on the platform, as it defines the FQDN of the host.

            The maximum string length in characters is 63.
          type: string
        clusterId:
          description: ID of the Greenplum® cluster. The ID is assigned by the platform
            at creation time.
          type: string
        zoneId:
          description: ID of the availability zone the Greenplum® host belongs to.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_Host_type'
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        subnetId:
          description: ID of the subnet that the host belongs to.
          type: string
        assignPublicIp:
          description: Determines whether a public IP is assigned to the host.
          type: boolean
          format: boolean
    HostHealth:
      description: |2-
         - UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: The host is working below capacity or not fully functional.
         - UNBALANCED: One or more segments are not in the preferred role.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: UNKNOWN
    HostType:
      description: |2-
         - TYPE_UNSPECIFIED: The type is not specified.
         - MASTER: A Greenplum® master host.
         - REPLICA: A Greenplum® master replica host.
         - SEGMENT: A Greenplum® segment host.
      type: string
      enum:
      - MASTER
      - REPLICA
      - SEGMENT
    ListBackupsResponse:
      type: object
      properties:
        backups:
          description: Requested list of backups.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for a list request.

            If the number of results is larger than [pageSize](/docs/managed-greenplum/api-ref/Backup/list#query_params) specified in the request, use the [nextPageToken](/docs/managed-greenplum/api-ref/Backup/list#responses) as the value for the [pageToken](/docs/managed-greenplum/api-ref/Backup/list#query_params) parameter in the next list request.

            Each subsequent ListBackups request has its own [nextPageToken](/docs/managed-greenplum/api-ref/Backup/list#responses) to continue paging through the results.
          type: string
    ListClusterBackupsResponse:
      type: object
      properties:
        backups:
          description: List of Greenplum® backups.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listBackups#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listBackups#responses) as the value for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/listBackups#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listBackups#responses) to continue paging through the results.
          type: string
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: Requested list of hosts for the cluster.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) as the value for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) to continue paging through the results.
          type: string
    ListClusterLogsRequestServiceType:
      description: |2-
         - SERVICE_TYPE_UNSPECIFIED: Type is not specified.
         - GREENPLUM: Greenplum® activity logs.
         - GREENPLUM_POOLER: Greenplum® pooler logs.
      type: string
      enum:
      - GREENPLUM
      - GREENPLUM_POOLER
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses) as the value for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses) to continue paging through the results.

            This value is interchangeable with the `nextRecordToken` from [StreamLogs] method.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of Operation resources for the specified Greenplum® cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses) as the value for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of Greenplum® cluster resources.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/list#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses) as the value for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/list#query_params) parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses) to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of resource presets.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-greenplum/api-ref/ResourcePreset/list#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/ResourcePreset/list#responses) as the value for the [pageToken](/docs/managed-greenplum/api-ref/ResourcePreset/list#query_params) parameter in the next list request.

            Each subsequent list request has its own [nextPageToken](/docs/managed-greenplum/api-ref/ResourcePreset/list#responses) to continue paging through the results.

            The maximum string length in characters is 100.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Time when the log was recorded.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    LogStatement:
      description: |2-
         - NONE: None statements are logged.
         - DDL: Logs all data definition commands like `CREATE`, `ALTER`, and `DROP`. Default value.
         - MOD: Logs all `DDL` statements, plus `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY FROM`.
         - ALL: Logs all statements.
      type: string
      enum:
      - NONE
      - DDL
      - MOD
      - ALL
    MaintenanceOperation:
      type: object
      properties:
        info:
          description: |-
            The description of the operation.

            The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: |-
            Delay time for the maintenance operation.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    MaintenanceWindow:
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    MasterSubclusterConfig:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfig_resources'
    MasterSubclusterConfigSpec:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfigSpec_resources'
    Monitoring:
      description: Monitoring system metadata.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts for the Greenplum® cluster.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    ResourcePreset:
      description: A preset of resources for hardware configuration of Greenplum®
        hosts.
      type: object
      properties:
        id:
          description: ID of the resource preset.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        diskTypeIds:
          description: IDs of availability disk types available in the resource preset.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for a Greenplum® host created with the
            preset.
          type: string
          format: int64
        memory:
          description: RAM volume for a Greenplum® host created with the preset, in
            bytes.
          type: string
          format: int64
        type:
          $ref: '#/components/schemas/ResourcePresetType_in_ResourcePreset_type'
        hostCountDivider:
          description: The number of hosts must be divisible by [hostCountDivider](/docs/managed-greenplum/api-ref/ResourcePreset#representation).
          type: string
          format: int64
        maxSegmentInHostCount:
          description: Maximum number of segments in segment host.
          type: string
          format: int64
    ResourcePresetType:
      description: |2-
         - MASTER: Greenplum® master host.
         - SEGMENT: Greenplum® segment host.
      type: string
      enum:
      - MASTER
      - SEGMENT
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    RestoreClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the new Greenplum® cluster that is being created from
            a backup.
          type: string
        backupId:
          description: ID of the backup that is being used for creating a cluster.
          type: string
    RestoreClusterRequest:
      type: object
      properties:
        backupId:
          description: |-
            Required.
            ID of the backup to create a cluster from.

            To get the backup ID, use a [listBackups](/docs/managed-greenplum/api-ref/Cluster/listBackups) request.
          type: string
        folderId:
          description: |-
            Required.
            ID of the folder to create the Greenplum® cluster in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the Greenplum® cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the Greenplum® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Greenplum® cluster as `key:value` pairs.
            For example, "project":"mvp" or "source":"dictionary".

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_RestoreClusterRequest_environment'
        config:
          $ref: '#/components/schemas/GreenplumRestoreConfig_in_RestoreClusterRequest_config'
        masterResources:
          $ref: '#/components/schemas/Resources_in_RestoreClusterRequest_masterResources'
        segmentResources:
          $ref: '#/components/schemas/Resources_in_RestoreClusterRequest_segmentResources'
        networkId:
          description: |-
            Required.
            ID of the network to create the cluster in.

            The maximum string length in characters is 50.
          type: string
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        hostGroupIds:
          description: Host groups to place VMs of cluster on.
          type: array
          items:
            type: string
        placementGroupId:
          description: ID of the placement group.
          type: string
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_RestoreClusterRequest_maintenanceWindow'
    SegmentSubclusterConfig:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfig_resources'
    SegmentSubclusterConfigSpec:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfigSpec_resources'
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster being started.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster being stopped.
          type: string
    StreamClusterLogsRequestServiceType:
      description: |2-
         - SERVICE_TYPE_UNSPECIFIED: Type is not specified.
         - GREENPLUM: Greenplum® activity logs.
         - GREENPLUM_POOLER: Greenplum® pooler logs.
      type: string
      enum:
      - GREENPLUM
      - GREENPLUM_POOLER
    StreamLogRecord:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/LogRecord_in_StreamLogRecord_record'
        nextRecordToken:
          description: |-
            This token allows you to continue streaming logs starting from the exact same record.

            To do that, specify value of `nextRecordToken` as the value for [StreamLogs.record_token] parameter in the next [StreamLogs] request.

            This value is interchangeable with [ListLogs.next_page_token] from [ListLogs] method.
          type: string
    TimeOfDay:
      description: |-
        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster resource that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the Greenplum® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Greenplum® cluster as `key:value` pairs.
            For example, `"project":"mvp"` or `"source":"dictionary"`.

            The new set of labels completely replaces the old one.
            To add a label, request the current set with the [get](/docs/managed-greenplum/api-ref/Cluster/get) method, then send an [update](/docs/managed-greenplum/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        name:
          description: |-
            New name for the cluster.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        config:
          $ref: '#/components/schemas/GreenplumConfig_in_UpdateClusterRequest_config'
        masterConfig:
          $ref: '#/components/schemas/MasterSubclusterConfigSpec_in_UpdateClusterRequest_masterConfig'
        segmentConfig:
          $ref: '#/components/schemas/SegmentSubclusterConfigSpec_in_UpdateClusterRequest_segmentConfig'
        userPassword:
          description: |-
            Required.
            Owner user password.

            The string length in characters must be 8-128.
          type: string
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow'
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Determines whether the cluster is protected from being deleted.
          type: boolean
          format: boolean
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
    WeeklyMaintenanceWindow:
      description: A weekly maintenance window.
      type: object
      properties:
        day:
          $ref: '#/components/schemas/WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day'
        hour:
          description: |-
            Hour of the day in the UTC timezone.

            Acceptable values are 1 to 24, inclusive.
          type: string
          format: int64
    WeeklyMaintenanceWindowWeekDay:
      description: |2-
         - MON: Monday
         - TUE: Tuesday
         - WED: Wednesday
         - THU: Thursday
         - FRI: Friday
         - SAT: Saturday
         - SUN: Sunday
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    GreenplumConfig_in_Cluster_config:
      description: Greenplum® cluster configuration.
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Determines whether the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the Greenplum® cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    MasterSubclusterConfig_in_Cluster_masterConfig:
      description: Configuration of the Greenplum® master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfig_resources'
    SegmentSubclusterConfig_in_Cluster_segmentConfig:
      description: Configuration of the Greenplum® segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfig_resources'
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: Health of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is working normally (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
         - UNBALANCED: Cluster is working below capacity (`health` for at least one host in the cluster is UNBALANCED).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster has encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster has stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    MaintenanceWindow_in_Cluster_maintenanceWindow:
      description: A Greenplum® cluster maintenance window. Should be defined by either
        one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    MaintenanceOperation_in_Cluster_plannedOperation:
      description: Maintenance operation planned at nearest [maintenanceWindow](/docs/managed-greenplum/api-ref/Cluster#representation).
      type: object
      properties:
        info:
          description: |-
            The description of the operation.

            The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: |-
            Delay time for the maintenance operation.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    ClusterConfigSet_in_Cluster_clusterConfig:
      description: Greenplum® and Odyssey® configuration.
      type: object
      allOf:
      - type: object
        properties:
          pool:
            $ref: '#/components/schemas/ConnectionPoolerConfigSet'
            description: Odyssey® pool settings.
      - title: greenplum_config
        type: object
        maxProperties: 1
        properties:
          greenplumConfigSet_6_17:
            $ref: '#/components/schemas/GreenplumConfigSet6_17'
          greenplumConfigSet_6_19:
            $ref: '#/components/schemas/GreenplumConfigSet6_19'
    ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode:
      description: |-
        Route server pool mode.

         - SESSION: Assign server connection to a client until it disconnects. Default value.
         - TRANSACTION: Assign server connection to a client for a transaction processing.
      type: string
      enum:
      - SESSION
      - TRANSACTION
    ConnectionPoolerConfig_in_ConnectionPoolerConfigSet_effectiveConfig:
      description: |-
        Required.
        Effective settings for an Odyssey® pooler (a combination of settings defined in `userConfig` and `defaultConfig`).
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode'
        size:
          description: |-
            The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.

            Set to zero to disable the limit.
          type: integer
          format: int64
        clientIdleTimeout:
          description: |-
            Server pool idle timeout, in seconds.

            A server connection closes after being idle for the specified time.

            Set to zero to disable the limit.
          type: integer
          format: int64
    ConnectionPoolerConfig_in_ConnectionPoolerConfigSet_userConfig:
      description: User-defined settings for an Odyssey® pooler.
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode'
        size:
          description: |-
            The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.

            Set to zero to disable the limit.
          type: integer
          format: int64
        clientIdleTimeout:
          description: |-
            Server pool idle timeout, in seconds.

            A server connection closes after being idle for the specified time.

            Set to zero to disable the limit.
          type: integer
          format: int64
    ConnectionPoolerConfig_in_ConnectionPoolerConfigSet_defaultConfig:
      description: Default configuration for an Odyssey® pooler.
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode'
        size:
          description: |-
            The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.

            Set to zero to disable the limit.
          type: integer
          format: int64
        clientIdleTimeout:
          description: |-
            Server pool idle timeout, in seconds.

            A server connection closes after being idle for the specified time.

            Set to zero to disable the limit.
          type: integer
          format: int64
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Required.
        Deployment environment of the Greenplum® cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    GreenplumConfig_in_CreateClusterRequest_config:
      description: Greenplum® cluster configuration.
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Determines whether the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    MasterSubclusterConfigSpec_in_CreateClusterRequest_masterConfig:
      description: Configuration of the Greenplum® master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfigSpec_resources'
    SegmentSubclusterConfigSpec_in_CreateClusterRequest_segmentConfig:
      description: Configuration of the Greenplum® segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfigSpec_resources'
    MaintenanceWindow_in_CreateClusterRequest_maintenanceWindow:
      description: A Greenplum® cluster maintenance window. Should be defined by either
        one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: Configuration of Greenplum® and Odyssey®.
      type: object
      allOf:
      - type: object
        properties:
          pool:
            $ref: '#/components/schemas/ConnectionPoolerConfig'
            description: Odyssey® pool settings.
      - title: greenplum_config
        type: object
        maxProperties: 1
        properties:
          greenplumConfig_6_17:
            $ref: '#/components/schemas/GreenplumConfig6_17'
          greenplumConfig_6_19:
            $ref: '#/components/schemas/GreenplumConfig6_19'
    TimeOfDay_in_GreenplumConfig_backupWindowStart:
      description: |-
        Time to start the daily backup, in the UTC timezone.

        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    Access_in_GreenplumConfig_access:
      description: Access policy for external services.
      type: object
      properties:
        dataLens:
          description: Allows data export from the cluster to DataLens.
          type: boolean
          format: boolean
        webSql:
          description: Allows SQL queries to the cluster databases from the management
            console.
          type: boolean
          format: boolean
        dataTransfer:
          description: Allows access for DataTransfer.
          type: boolean
          format: boolean
    LogStatement_in_GreenplumConfig6_19_logStatement:
      description: |-
        Logged SQL statements.

        `PREPARE` and `EXPLAIN ANALYZE` statements are also logged if their contained command belongs to an appropriate type.

        More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement).

         - NONE: None statements are logged.
         - DDL: Logs all data definition commands like `CREATE`, `ALTER`, and `DROP`. Default value.
         - MOD: Logs all `DDL` statements, plus `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY FROM`.
         - ALL: Logs all statements.
      type: string
      enum:
      - NONE
      - DDL
      - MOD
      - ALL
    GreenplumConfig6_17_in_GreenplumConfigSet6_17_effectiveConfig:
      description: |-
        Required.
        Effective settings for a Greenplum® cluster (a combination of settings defined in `userConfig` and `defaultConfig`).
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
    GreenplumConfig6_17_in_GreenplumConfigSet6_17_userConfig:
      description: User-defined settings for a Greenplum® cluster.
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
    GreenplumConfig6_17_in_GreenplumConfigSet6_17_defaultConfig:
      description: Default configuration for a Greenplum® cluster.
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
    GreenplumConfig6_19_in_GreenplumConfigSet6_19_effectiveConfig:
      description: |-
        Required.
        Effective settings for a Greenplum® cluster (a combination of settings defined in `userConfig` and `defaultConfig`).
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        maxStatementMem:
          description: |-
            The maximum memory limit for a query, in bytes.

            Helps to avoid out-of-memory errors on a segment host during query processing as a result of setting `statement_mem` too high.

            Taking into account the configuration of a single segment host, calculate `maxStatementMem` as follows: `seghost_physical_memory` / `average_number_concurrent_queries`.

            When changing both `maxStatementMem` and `statement_mem`, `maxStatementMem` must be changed first, or listed first in the `postgresql.conf` file.

            Default value is 2097152000 (2000 MB).

            More info in [Greenplum® documentation](https://greenplum.docs.pivotal.io/6-19/ref_guide/config_params/guc-list.html#max_statement_mem).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/LogStatement_in_GreenplumConfig6_19_logStatement'
    GreenplumConfig6_19_in_GreenplumConfigSet6_19_userConfig:
      description: User-defined settings for a Greenplum® cluster.
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        maxStatementMem:
          description: |-
            The maximum memory limit for a query, in bytes.

            Helps to avoid out-of-memory errors on a segment host during query processing as a result of setting `statement_mem` too high.

            Taking into account the configuration of a single segment host, calculate `maxStatementMem` as follows: `seghost_physical_memory` / `average_number_concurrent_queries`.

            When changing both `maxStatementMem` and `statement_mem`, `maxStatementMem` must be changed first, or listed first in the `postgresql.conf` file.

            Default value is 2097152000 (2000 MB).

            More info in [Greenplum® documentation](https://greenplum.docs.pivotal.io/6-19/ref_guide/config_params/guc-list.html#max_statement_mem).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/LogStatement_in_GreenplumConfig6_19_logStatement'
    GreenplumConfig6_19_in_GreenplumConfigSet6_19_defaultConfig:
      description: Default configuration for a Greenplum® cluster.
      type: object
      properties:
        maxConnections:
          description: Maximum number of inbound connections on master segment.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            The maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            The maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            The maximum disk size that an individual query is allowed to use for creating temporary spill files at each segment.

            The default value is 0 (no limit).

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            The maximum number of temporary spill files allowed per query at each segment.

            Spill files, also known as workfiles, are created when a query requires more memory than there is allocated.

            The current query is terminated if the limit is exceeded.

            Set to zero to disable the limit.

            Master session reloads if the parameter changes.

            Default value is 10000.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        maxPreparedTransactions:
          description: |-
            The maximum number of transactions that can be in the `prepared` state simultaneously.

            More info in [PostgreSQL® documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Whether the spill files are compressed or not.

            More info in [Greenplum® documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        maxStatementMem:
          description: |-
            The maximum memory limit for a query, in bytes.

            Helps to avoid out-of-memory errors on a segment host during query processing as a result of setting `statement_mem` too high.

            Taking into account the configuration of a single segment host, calculate `maxStatementMem` as follows: `seghost_physical_memory` / `average_number_concurrent_queries`.

            When changing both `maxStatementMem` and `statement_mem`, `maxStatementMem` must be changed first, or listed first in the `postgresql.conf` file.

            Default value is 2097152000 (2000 MB).

            More info in [Greenplum® documentation](https://greenplum.docs.pivotal.io/6-19/ref_guide/config_params/guc-list.html#max_statement_mem).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/LogStatement_in_GreenplumConfig6_19_logStatement'
    TimeOfDay_in_GreenplumRestoreConfig_backupWindowStart:
      description: |-
        Time to start the daily backup, in the UTC timezone.

        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    Access_in_GreenplumRestoreConfig_access:
      description: Access policy for external services.
      type: object
      properties:
        dataLens:
          description: Allows data export from the cluster to DataLens.
          type: boolean
          format: boolean
        webSql:
          description: Allows SQL queries to the cluster databases from the management
            console.
          type: boolean
          format: boolean
        dataTransfer:
          description: Allows access for DataTransfer.
          type: boolean
          format: boolean
    HostType_in_Host_type:
      description: |-
        Type of the host.

         - TYPE_UNSPECIFIED: The type is not specified.
         - MASTER: A Greenplum® master host.
         - REPLICA: A Greenplum® master replica host.
         - SEGMENT: A Greenplum® segment host.
      type: string
      enum:
      - MASTER
      - REPLICA
      - SEGMENT
    Resources_in_Host_resources:
      description: Resources allocated to the Greenplum® host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    HostHealth_in_Host_health:
      description: |-
        Status code of the aggregated health of the host.

         - UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: The host is working below capacity or not fully functional.
         - UNBALANCED: One or more segments are not in the preferred role.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: UNKNOWN
    Resources_in_MasterSubclusterConfig_resources:
      description: Computational resources allocated to Greenplum® master subcluster
        hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    Resources_in_MasterSubclusterConfigSpec_resources:
      description: Resources allocated to Greenplum® master subcluster hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    ResourcePresetType_in_ResourcePreset_type:
      description: |-
        Host type.

         - MASTER: Greenplum® master host.
         - SEGMENT: Greenplum® segment host.
      type: string
      enum:
      - MASTER
      - SEGMENT
    ClusterEnvironment_in_RestoreClusterRequest_environment:
      description: |-
        Required.
        Deployment environment of the Greenplum® cluster.

         - PRODUCTION: Stable environment with a conservative update policy: only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    GreenplumRestoreConfig_in_RestoreClusterRequest_config:
      description: Greenplum® cluster config.
      type: object
      properties:
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumRestoreConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumRestoreConfig_access'
        zoneId:
          description: |-
            ID of the availability zone where the host resides.

            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet that the host should belong to. This subnet should be a part of the network that the cluster belongs to.
            The ID of the network is set in the field [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Determines whether the host should get a public IP address on creation.

            After a host has been created, this setting cannot be changed.

            To remove an assigned public IP, or to assign a public IP to a host without one, recreate the host with `assignPublicIp` set as needed.

            Possible values:
            * `false` - do not assign a public IP to the master host.
            * `true` - assign a public IP to the master host.
          type: boolean
          format: boolean
    Resources_in_RestoreClusterRequest_masterResources:
      description: Resources of the Greenplum® master subcluster.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    Resources_in_RestoreClusterRequest_segmentResources:
      description: Resources of the Greenplum® segment subcluster.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    MaintenanceWindow_in_RestoreClusterRequest_maintenanceWindow:
      description: A Greenplum® cluster maintenance window. Should be defined by either
        one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    Resources_in_SegmentSubclusterConfig_resources:
      description: Computational resources allocated to Greenplum® segment subcluster
        hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    Resources_in_SegmentSubclusterConfigSpec_resources:
      description: Resources allocated to Greenplum® segment subcluster hosts.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.

            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    LogRecord_in_StreamLogRecord_record:
      description: One of the requested log records.
      type: object
      properties:
        timestamp:
          description: |-
            Time when the log was recorded.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Greenplum® cluster resource should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GreenplumConfig_in_UpdateClusterRequest_config:
      description: The Greenplum® cluster configuration.
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Determines whether the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    MasterSubclusterConfigSpec_in_UpdateClusterRequest_masterConfig:
      description: Configuration of the Greenplum® master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfigSpec_resources'
    SegmentSubclusterConfigSpec_in_UpdateClusterRequest_segmentConfig:
      description: Configuration of the Greenplum® segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfigSpec_resources'
    MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow:
      description: The Greenplum® cluster maintenance window. Should be defined by
        either one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: Settings of the Greenplum® cluster.
      type: object
      allOf:
      - type: object
        properties:
          pool:
            $ref: '#/components/schemas/ConnectionPoolerConfig'
            description: Odyssey® pool settings.
      - title: greenplum_config
        type: object
        maxProperties: 1
        properties:
          greenplumConfig_6_17:
            $ref: '#/components/schemas/GreenplumConfig6_17'
          greenplumConfig_6_19:
            $ref: '#/components/schemas/GreenplumConfig6_19'
    WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day:
      description: |-
        Day of the week.

         - MON: Monday
         - TUE: Tuesday
         - WED: Wednesday
         - THU: Thursday
         - FRI: Friday
         - SAT: Saturday
         - SUN: Sunday
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
tags:
- name: Backup
  description: A set of methods for managing backups.
- name: Cluster
  description: A set of methods for managing Greenplum® clusters.
- name: ResourcePreset
  description: A set of methods for managing resource presets.
