openapi: 3.0.0
info:
  title: Yandex Managed Service for Greenplum API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about Yandex.Cloud API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /mdb/managed-greenplum/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified Greenplum® cluster.
      description: To get the list of available Greenplum® clusters, make a [list](/docs/managed-greenplum/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® Cluster resource to return.
          To get the cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified Greenplum® cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to delete.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified Greenplum® cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® Cluster resource to update.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /mdb/managed-greenplum/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of Greenplum® clusters that belong to the specified
        folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list Greenplum® clusters in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/list#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can only use filtering with the [Cluster.name](/docs/managed-greenplum/api-ref/Cluster#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a Greenplum® cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /mdb/managed-greenplum/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Starts the specified Greenplum® cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to start.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /mdb/managed-greenplum/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stops the specified Greenplum® cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to stop.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-greenplum/api-ref/Cluster#representation)'
  /mdb/managed-greenplum/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Operation resources for the specified cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® Cluster resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /mdb/managed-greenplum/v1/clusters/{clusterId}/master-hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of master hosts for the specified cluster.
      operationId: ClusterListMasterHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster.
          To get the Greenplum® cluster ID use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listMasterHosts
  /mdb/managed-greenplum/v1/clusters/{clusterId}/segment-hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of segment hosts for the specified cluster.
      operationId: ClusterListSegmentHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster.
          To get the Greenplum® cluster ID use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listSegmentHosts
  /mdb/managed-greenplum/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: Retrieves logs for the specified Greenplum® cluster.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Greenplum® cluster to request logs for.
          To get the Greenplum® cluster ID, use a [list](/docs/managed-greenplum/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from logs table to request.
          If no columns are specified, entire log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        description: Type of the service to request logs about.
        schema:
          $ref: '#/components/schemas/ListClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params), the service returns a [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params) to the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: alwaysNextPageToken
        in: query
        description: Always return `next_page_token`, even if the current page is
          empty.
        schema:
          type: boolean
          format: boolean
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname],
          [LogRecord.logs.message.error_severity] (for `GREENPLUM` service) and [LogRecord.logs.message.level] (for `GREENPLUM_POOLER` service) fields.
          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 1-63 characters long and match the regular expression `^[a-z0-9.-]{1,61}$`.
          Examples of a filter:
          * `message.hostname='node1.db.cloud.yandex.net'`
          * `message.error_severity IN ("ERROR", "FATAL", "PANIC") AND message.hostname = "node1.db.cloud.yandex.net"`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
components:
  schemas:
    Access:
      description: Greenplum® cluster access options.
      type: object
      properties:
        dataLens:
          description: Allows data export from the cluster to Yandex DataLens.
          type: boolean
          format: boolean
        webSql:
          description: Allows SQL queries to the cluster databases from the Yandex.Cloud
            management console.
          type: boolean
          format: boolean
    AnytimeMaintenanceWindow:
      description: An any-time maintenance window.
      type: object
      properties: {}
    Cluster:
      description: A Greenplum® cluster resource.
      type: object
      properties:
        id:
          description: |-
            ID of the Greenplum® cluster.
            This ID is assigned by Yandex.Cloud at the time of cluster creation.
          type: string
        folderId:
          description: ID of the folder that the Greenplum® cluster belongs to.
          type: string
        createdAt:
          description: |-
            Cluster creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Required.
            Name of the Greenplum® cluster.
            The name is unique within the folder and is 1-63 characters long.

            The maximum string length in characters is 63.
          type: string
        config:
          $ref: '#/components/schemas/GreenplumConfig_in_Cluster_config'
        description:
          description: Description of the Greenplum® cluster. 0-256 characters long.
          type: string
        labels:
          description: Custom labels for the Greenplum® cluster as `key:value` pairs.
            Maximum 64 labels per resource.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the Greenplum®
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        masterConfig:
          $ref: '#/components/schemas/MasterSubclusterConfig_in_Cluster_masterConfig'
        segmentConfig:
          $ref: '#/components/schemas/SegmentSubclusterConfig_in_Cluster_segmentConfig'
        masterHostCount:
          description: Number of hosts in the master subcluster.
          type: string
          format: int64
        segmentHostCount:
          description: Number of hosts in the segment subcluster.
          type: string
          format: int64
        segmentInHost:
          description: Number of segments per host.
          type: string
          format: int64
        networkId:
          description: ID of the cloud network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_Cluster_maintenanceWindow'
        plannedOperation:
          $ref: '#/components/schemas/MaintenanceOperation_in_Cluster_plannedOperation'
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        userName:
          description: Owner user name.
          type: string
        deletionProtection:
          description: Whether or not cluster is protected from being deleted.
          type: boolean
          format: boolean
        hostGroupIds:
          description: Host groups hosting VMs of the cluster.
          type: array
          items:
            type: string
    ClusterEnvironment:
      description: |-
        Deployment environment.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |-
        Aggregated health of the cluster.

         - HEALTH_UNKNOWN: Health of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is working normally (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
         - UNBALANCED: Cluster is working below capacity (`health` for at least one host in the cluster is UNBALANCED).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster has encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster has stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConnectionPoolerConfig:
      description: Route server configuration.
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode'
        size:
          description: |-
            The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
            Set to zero to disable the limit.
          type: integer
          format: int64
        clientIdleTimeout:
          description: |-
            Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
            Set to zero to disable the limit.
          type: integer
          format: int64
    ConnectionPoolerConfigPoolMode:
      description: |-
        Route server pool mode.

         - SESSION: Assign server connection to a client until it disconnects. Default value.
         - TRANSACTION: Assign server connection to a client for a transaction processing.
      type: string
      enum:
      - SESSION
      - TRANSACTION
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create the Greenplum® cluster in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the Greenplum® cluster. The name must be unique within the folder. Maximum 63 characters.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the Greenplum® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Greenplum® cluster as `key:value` pairs. Maximum 64 per resource.
            For example, "project":"mvp" or "source":"dictionary".

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        config:
          $ref: '#/components/schemas/GreenplumConfig_in_CreateClusterRequest_config'
        masterConfig:
          $ref: '#/components/schemas/MasterSubclusterConfigSpec_in_CreateClusterRequest_masterConfig'
        segmentConfig:
          $ref: '#/components/schemas/SegmentSubclusterConfigSpec_in_CreateClusterRequest_segmentConfig'
        masterHostCount:
          description: Number of hosts in the master subcluster.
          type: string
          format: int64
        segmentInHost:
          description: Number of segments per host.
          type: string
          format: int64
        segmentHostCount:
          description: Number of hosts in the segment subcluster.
          type: string
          format: int64
        userName:
          description: Owner user name.
          type: string
        userPassword:
          description: |-
            Required.
            Owner user password. Must be 8-128 characters long

            The string length in characters must be 8-128.
          type: string
        networkId:
          description: |-
            Required.
            ID of the network to create the cluster in.

            The maximum string length in characters is 50.
          type: string
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Whether or not cluster is protected from being deleted.
          type: boolean
          format: boolean
        hostGroupIds:
          description: Host groups to place VMs of the cluster in.
          type: array
          items:
            type: string
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_CreateClusterRequest_maintenanceWindow'
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GreenplumConfig:
      description: Greenplum® cluster configuration.
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part
            of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Whether or not the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    GreenplumMasterConfig:
      description: |-
        Greenplum® master subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumMasterConfigLogLevel_in_GreenplumMasterConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        timezone:
          description: The server time zone to be used in DateTime field conversions,
            specified as an IANA identifier.
          type: string
        pool:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_GreenplumMasterConfig_pool'
        maxPreparedTransactions:
          description: |-
            Sets the maximum number of transactions that can be in the "prepared" state simultaneously.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        runawayDetectorActivationPercent:
          description: |-
            For queries that are managed by resource queues or resource groups, this parameter determines
            when Greenplum® Database terminates running queries based on the amount of memory the queries are using.
            A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent).
          type: integer
          format: int64
        tcpKeepalivesCount:
          description: |-
            How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count).
          type: integer
          format: int64
        tcpKeepalivesInterval:
          description: |-
            How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval).
          type: integer
          format: int64
        readableExternalTableTimeout:
          description: |-
            When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
            Greenplum® Database waits before cancelling the query when data stops being returned from the external table.
            The default value of 0, specifies no time out. Greenplum® Database does not cancel the query.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout).
          type: integer
          format: int64
        gpInterconnectSndQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
            Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
            Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount
            of memory used by the system.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth).
          type: integer
          format: int64
        gpInterconnectQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the Greenplum® Database interconnect on receivers
            (when data is received but no space is available to receive it the data will be dropped,
            and the transmitter will need to resend it) for the default UDPIFC interconnect.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/GreenplumMasterConfigLogStatement_in_GreenplumMasterConfig_logStatement'
        logDuration:
          description: |-
            Causes the duration of every completed statement which satisfies `logStatement` to be logged.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration).
          type: boolean
          format: boolean
        optimizerAnalyzeRootPartition:
          description: |-
            For a partitioned table, controls whether the `ROOTPARTITION` keyword is required to collect root partition statistics
            when the `ANALYZE` command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition).
          type: boolean
          format: boolean
        gpExternalMaxSegs:
          description: |-
            Sets the number of segments that will scan external table data during an external table operation,
            the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
            This only applies to external tables that use the `gpfdist` protocol to access external table data.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs).
          type: integer
          format: int64
        gpFtsProbeTimeout:
          description: |-
            Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        gpAutostatsModeInFunctions:
          $ref: '#/components/schemas/GreenplumMasterConfigAutostatsModeInFunctions_in_GreenplumMasterConfig_gpAutostatsModeInFunctions'
    GreenplumMasterConfigAutostatsModeInFunctions:
      description: |-
        Specifies the mode for triggering automatic statistics collection with `ANALYZE` for statements in procedural language functions.

         - AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED: The mode is not specified.
         - MODE_NONE: Disables statistics collection. Default value.
         - ON_CHANGE: Triggers statistics collection only when the number of rows affected exceeds the threshold defined by
        `gp_autostats_on_change_threshold` (default is 2147483647). Operations in functions that can trigger automatic
        statistics collection with on_change are: `CREATE TABLE AS SELECT`, `UPDATE`, `DELETE`, `INSERT` and `COPY`.
         - ON_NO_STATS: Triggers statistics collection for `CREATE TABLE AS SELECT`, `INSERT`, or `COPY` operations
        that are executed in functions on any table that has no existing statistics.
      type: string
      enum:
      - MODE_NONE
      - ON_CHANGE
      - ON_NO_STATS
    GreenplumMasterConfigLogLevel:
      description: |-
        Controls which message levels are sent to the client. Each level includes all the levels that follow it.
        The later the level, the fewer messages are sent.

         - LOG_LEVEL_UNSPECIFIED: Level of detail is not specified.
         - TRACE: Include tracing information.
         - DEBUG: Include debugging information.
         - INFORMATION: Include informative messages.
         - WARNING: Include warning messages. Default value.
         - ERROR: Only include error messages.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    GreenplumMasterConfigLogStatement:
      description: |-
        Controls which SQL statements are logged.

         - LOG_STATEMENT_UNSPECIFIED: The statement log option is not specified.
         - NONE: Don't log SQL statements.
         - DDL: Log all data definition commands like `CREATE`, `ALTER`, and `DROP` commands. Default value.
         - MOD: Log `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY FROM` commands.
        `PREPARE` and `EXPLAIN ANALYZE` statements are also logged if their contained command is of an appropriate type.
         - ALL: Log all SQL statements.
      type: string
      enum:
      - NONE
      - DDL
      - MOD
      - ALL
    GreenplumMasterConfigSet:
      description: Set of Greenplum® master subcluster configurations.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_GreenplumMasterConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_GreenplumMasterConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_GreenplumMasterConfigSet_defaultConfig'
    GreenplumSegmentConfig:
      description: |-
        Greenplum® segment subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumSegmentConfigLogLevel_in_GreenplumSegmentConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            Specifies the maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
            Spill files are created when executing a query that requires more memory than it is allocated.
            The current query is terminated when the limit is exceeded.
            Set the value to 0 (zero) to allow an unlimited number of spill files. Default value is `10000`.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        gpResourceManager:
          $ref: '#/components/schemas/GreenplumSegmentConfigGPResourceManager_in_GreenplumSegmentConfig_gpResourceManager'
        gpResourceGroupCpuLimit:
          description: |-
            Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit).
          type: number
          format: float
        gpResourceGroupMemoryLimit:
          description: |-
            Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit).
          type: number
          format: float
    GreenplumSegmentConfigGPResourceManager:
      description: |-
        Resource management scheme currently enabled in the Greenplum® Database cluster.

         - GP_RESOURCE_MANAGER_UNSPECIFIED: The management scheme is not specified.
         - QUEUE: Resource queue-based management.
         - GROUP: Resource group-based management. Default value.
      type: string
      enum:
      - QUEUE
      - GROUP
    GreenplumSegmentConfigLogLevel:
      description: |-
        Controls which message levels are sent to the client. Each level includes all the levels that follow it.
        The later the level, the fewer messages are sent.

         - LOG_LEVEL_UNSPECIFIED: Level of detail is not specified.
         - TRACE: Include tracing information.
         - DEBUG: Include debugging information.
         - INFORMATION: Include informative messages.
         - WARNING: Include warning messages. Default value.
         - ERROR: Only include error messages.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    GreenplumSegmentConfigSet:
      description: Set of Greenplum® segment subcluster configurations.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_defaultConfig'
    Host:
      description: A Greenplum® cluster host resource.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the Greenplum® host. The host name is assigned by Yandex.Cloud at creation time and cannot be changed.
            1-63 characters long.

            The name is unique across all existing MDB hosts in Yandex.Cloud, as it defines the FQDN of the host.

            The maximum string length in characters is 63.
          type: string
        clusterId:
          description: ID of the Greenplum® cluster. The ID is assigned by Yandex.Cloud
            at creation time.
          type: string
        zoneId:
          description: ID of the availability zone the Greenplum® host belongs to.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_Host_type'
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        subnetId:
          description: ID of the subnet that the host belongs to.
          type: string
        assignPublicIp:
          description: Whether or not a public IP is assigned to the host.
          type: boolean
          format: boolean
    HostHealth:
      description: |-
        Status code of the aggregated health of the host.

         - UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: The host is working below capacity or not fully functional.
         - UNBALANCED: One or more segments are not in preferred role.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: UNKNOWN
    HostType:
      description: |-
        Type of the host.

         - TYPE_UNSPECIFIED: The type is not specified.
         - MASTER: A Greenplum® master host.
         - REPLICA: A Greenplum® master replica host.
         - SEGMENT: A Greenplum® segment host.
      type: string
      enum:
      - MASTER
      - REPLICA
      - SEGMENT
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: Requested list of hosts for the cluster.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) as the value
            for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listSegmentHosts#responses) to continue paging through the results.
          type: string
    ListClusterLogsRequestServiceType:
      description: |-
        Type of the service to request logs about.

         - SERVICE_TYPE_UNSPECIFIED: Type is not specified.
         - GREENPLUM: Greenplum® activity logs.
         - GREENPLUM_POOLER: Greenplum® pooler logs.
      type: string
      enum:
      - GREENPLUM
      - GREENPLUM_POOLER
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses) as the value
            for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listLogs#responses) to continue paging through the results.
            This value is interchangeable with the [StreamLogRecord.next_record_token] from StreamLogs method.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of Operation resources for the specified Greenplum® cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses) as the value
            for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of Greenplum Cluster resources.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-greenplum/api-ref/Cluster/list#query_params), use the [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses) as the value
            for the [pageToken](/docs/managed-greenplum/api-ref/Cluster/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-greenplum/api-ref/Cluster/list#responses) to continue paging through the results.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    MaintenanceOperation:
      description: The operation to perform during maintenance.
      type: object
      properties:
        info:
          description: |-
            The description of the operation, 1-256 characters long.

            The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: |-
            Delay time for the maintenance operation.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    MaintenanceWindow:
      description: A Greenplum® cluster maintenance window. Should be defined by either
        one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    MasterSubclusterConfig:
      description: Configuration of the master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfig_resources'
        config:
          $ref: '#/components/schemas/GreenplumMasterConfigSet_in_MasterSubclusterConfig_config'
    MasterSubclusterConfigSpec:
      description: Configuration of the master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfigSpec_resources'
        config:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_MasterSubclusterConfigSpec_config'
    Monitoring:
      description: Monitoring system metadata.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts for the Greenplum® cluster.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Resources:
      description: A list of computational resources allocated to a host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.
            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    SegmentSubclusterConfig:
      description: Configuration of the segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfig_resources'
        config:
          $ref: '#/components/schemas/GreenplumSegmentConfigSet_in_SegmentSubclusterConfig_config'
    SegmentSubclusterConfigSpec:
      description: Configuration of the segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfigSpec_resources'
        config:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_SegmentSubclusterConfigSpec_config'
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster being started.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® cluster being stopped.
          type: string
    TimeOfDay:
      description: |-
        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Greenplum® Cluster resource that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the Greenplum® cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Greenplum® cluster as `key:value` pairs. Maximum 64 per resource.
            For example, "project":"mvp" or "source":"dictionary".

            The new set of labels will completely replace the old ones. To add a label, request the current
            set with the [get](/docs/managed-greenplum/api-ref/Cluster/get) method, then send an [update](/docs/managed-greenplum/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The maximum string length in characters for each key is 63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        name:
          description: |-
            New name for the cluster.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        config:
          $ref: '#/components/schemas/GreenplumConfig_in_UpdateClusterRequest_config'
        masterConfig:
          $ref: '#/components/schemas/MasterSubclusterConfigSpec_in_UpdateClusterRequest_masterConfig'
        segmentConfig:
          $ref: '#/components/schemas/SegmentSubclusterConfigSpec_in_UpdateClusterRequest_segmentConfig'
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow'
        securityGroupIds:
          description: User security groups.
          type: array
          items:
            type: string
        deletionProtection:
          description: Whether or not cluster is protected from being deleted.
          type: boolean
          format: boolean
    WeeklyMaintenanceWindow:
      description: A weekly maintenance window.
      type: object
      properties:
        day:
          $ref: '#/components/schemas/WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day'
        hour:
          description: |-
            Hour of the day in the UTC timezone.

            Acceptable values are 1 to 24, inclusive.
          type: string
          format: int64
    WeeklyMaintenanceWindowWeekDay:
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    GreenplumConfig_in_Cluster_config:
      description: |-
        Greenplum® cluster configuration.

        Greenplum® cluster configuration.
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part
            of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Whether or not the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the Greenplum® cluster.

        Deployment environment.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    MasterSubclusterConfig_in_Cluster_masterConfig:
      description: |-
        Configuration of the Greenplum® master subcluster.

        Configuration of the master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfig_resources'
        config:
          $ref: '#/components/schemas/GreenplumMasterConfigSet_in_MasterSubclusterConfig_config'
    SegmentSubclusterConfig_in_Cluster_segmentConfig:
      description: |-
        Configuration of the Greenplum® segment subcluster.

        Configuration of the segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfig_resources'
        config:
          $ref: '#/components/schemas/GreenplumSegmentConfigSet_in_SegmentSubclusterConfig_config'
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

        Aggregated health of the cluster.

         - HEALTH_UNKNOWN: Health of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is working normally (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
         - UNBALANCED: Cluster is working below capacity (`health` for at least one host in the cluster is UNBALANCED).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

        Current state of the cluster.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster has encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster has stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    MaintenanceWindow_in_Cluster_maintenanceWindow:
      description: |-
        Window of maintenance operations.

        A Greenplum® cluster maintenance window. Should be defined by either one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    MaintenanceOperation_in_Cluster_plannedOperation:
      description: |-
        Maintenance operation planned at nearest [maintenanceWindow](/docs/managed-greenplum/api-ref/Cluster#representation).

        The operation to perform during maintenance.
      type: object
      properties:
        info:
          description: |-
            The description of the operation, 1-256 characters long.

            The maximum string length in characters is 256.
          type: string
        delayedUntil:
          description: |-
            Delay time for the maintenance operation.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode:
      description: |-
        Route server pool mode.

        Route server pool mode.

         - SESSION: Assign server connection to a client until it disconnects. Default value.
         - TRANSACTION: Assign server connection to a client for a transaction processing.
      type: string
      enum:
      - SESSION
      - TRANSACTION
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Required.
        Deployment environment of the Greenplum® cluster.

        Deployment environment.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    GreenplumConfig_in_CreateClusterRequest_config:
      description: |-
        Greenplum® cluster configuration.

        Greenplum® cluster configuration.
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part
            of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Whether or not the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    MasterSubclusterConfigSpec_in_CreateClusterRequest_masterConfig:
      description: |-
        Configuration of the Greenplum® master subcluster.

        Configuration of the master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfigSpec_resources'
        config:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_MasterSubclusterConfigSpec_config'
    SegmentSubclusterConfigSpec_in_CreateClusterRequest_segmentConfig:
      description: |-
        Configuration of the Greenplum® segment subcluster.

        Configuration of the segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfigSpec_resources'
        config:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_SegmentSubclusterConfigSpec_config'
    MaintenanceWindow_in_CreateClusterRequest_maintenanceWindow:
      description: |-
        Window of maintenance operations.

        A Greenplum® cluster maintenance window. Should be defined by either one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    TimeOfDay_in_GreenplumConfig_backupWindowStart:
      description: |-
        Time to start the daily backup, in the UTC timezone.

        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    Access_in_GreenplumConfig_access:
      description: |-
        Access policy for external services.

        Greenplum® cluster access options.
      type: object
      properties:
        dataLens:
          description: Allows data export from the cluster to Yandex DataLens.
          type: boolean
          format: boolean
        webSql:
          description: Allows SQL queries to the cluster databases from the Yandex.Cloud
            management console.
          type: boolean
          format: boolean
    GreenplumMasterConfigLogLevel_in_GreenplumMasterConfig_logLevel:
      description: |-
        Controls which message levels in the master subcluster are sent to the client.

        Controls which message levels are sent to the client. Each level includes all the levels that follow it.
        The later the level, the fewer messages are sent.

         - LOG_LEVEL_UNSPECIFIED: Level of detail is not specified.
         - TRACE: Include tracing information.
         - DEBUG: Include debugging information.
         - INFORMATION: Include informative messages.
         - WARNING: Include warning messages. Default value.
         - ERROR: Only include error messages.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    ConnectionPoolerConfig_in_GreenplumMasterConfig_pool:
      description: |-
        Route server configuration.

        Route server configuration.
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ConnectionPoolerConfigPoolMode_in_ConnectionPoolerConfig_mode'
        size:
          description: |-
            The number of servers in the server pool. Clients are placed in a wait queue when all servers are busy.
            Set to zero to disable the limit.
          type: integer
          format: int64
        clientIdleTimeout:
          description: |-
            Server pool idle timeout, in seconds. A server connection closes after it has been idle for the specified duration.
            Set to zero to disable the limit.
          type: integer
          format: int64
    GreenplumMasterConfigLogStatement_in_GreenplumMasterConfig_logStatement:
      description: |-
        Controls which SQL statements are logged.
        For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_statement).

        Controls which SQL statements are logged.

         - LOG_STATEMENT_UNSPECIFIED: The statement log option is not specified.
         - NONE: Don't log SQL statements.
         - DDL: Log all data definition commands like `CREATE`, `ALTER`, and `DROP` commands. Default value.
         - MOD: Log `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY FROM` commands.
        `PREPARE` and `EXPLAIN ANALYZE` statements are also logged if their contained command is of an appropriate type.
         - ALL: Log all SQL statements.
      type: string
      enum:
      - NONE
      - DDL
      - MOD
      - ALL
    GreenplumMasterConfigAutostatsModeInFunctions_in_GreenplumMasterConfig_gpAutostatsModeInFunctions:
      description: |-
        Specifies the mode for triggering automatic statistics collection with `ANALYZE` for statements in procedural language functions.
        For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_autostats_mode_in_functions).

        Specifies the mode for triggering automatic statistics collection with `ANALYZE` for statements in procedural language functions.

         - AUTOSTATS_MODE_IN_FUNCTIONS_UNSPECIFIED: The mode is not specified.
         - MODE_NONE: Disables statistics collection. Default value.
         - ON_CHANGE: Triggers statistics collection only when the number of rows affected exceeds the threshold defined by
        `gp_autostats_on_change_threshold` (default is 2147483647). Operations in functions that can trigger automatic
        statistics collection with on_change are: `CREATE TABLE AS SELECT`, `UPDATE`, `DELETE`, `INSERT` and `COPY`.
         - ON_NO_STATS: Triggers statistics collection for `CREATE TABLE AS SELECT`, `INSERT`, or `COPY` operations
        that are executed in functions on any table that has no existing statistics.
      type: string
      enum:
      - MODE_NONE
      - ON_CHANGE
      - ON_NO_STATS
    GreenplumMasterConfig_in_GreenplumMasterConfigSet_effectiveConfig:
      description: |-
        Required.
        Effective settings for a Greenplum® master subcluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Greenplum® master subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumMasterConfigLogLevel_in_GreenplumMasterConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        timezone:
          description: The server time zone to be used in DateTime field conversions,
            specified as an IANA identifier.
          type: string
        pool:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_GreenplumMasterConfig_pool'
        maxPreparedTransactions:
          description: |-
            Sets the maximum number of transactions that can be in the "prepared" state simultaneously.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        runawayDetectorActivationPercent:
          description: |-
            For queries that are managed by resource queues or resource groups, this parameter determines
            when Greenplum® Database terminates running queries based on the amount of memory the queries are using.
            A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent).
          type: integer
          format: int64
        tcpKeepalivesCount:
          description: |-
            How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count).
          type: integer
          format: int64
        tcpKeepalivesInterval:
          description: |-
            How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval).
          type: integer
          format: int64
        readableExternalTableTimeout:
          description: |-
            When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
            Greenplum® Database waits before cancelling the query when data stops being returned from the external table.
            The default value of 0, specifies no time out. Greenplum® Database does not cancel the query.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout).
          type: integer
          format: int64
        gpInterconnectSndQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
            Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
            Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount
            of memory used by the system.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth).
          type: integer
          format: int64
        gpInterconnectQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the Greenplum® Database interconnect on receivers
            (when data is received but no space is available to receive it the data will be dropped,
            and the transmitter will need to resend it) for the default UDPIFC interconnect.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/GreenplumMasterConfigLogStatement_in_GreenplumMasterConfig_logStatement'
        logDuration:
          description: |-
            Causes the duration of every completed statement which satisfies `logStatement` to be logged.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration).
          type: boolean
          format: boolean
        optimizerAnalyzeRootPartition:
          description: |-
            For a partitioned table, controls whether the `ROOTPARTITION` keyword is required to collect root partition statistics
            when the `ANALYZE` command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition).
          type: boolean
          format: boolean
        gpExternalMaxSegs:
          description: |-
            Sets the number of segments that will scan external table data during an external table operation,
            the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
            This only applies to external tables that use the `gpfdist` protocol to access external table data.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs).
          type: integer
          format: int64
        gpFtsProbeTimeout:
          description: |-
            Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        gpAutostatsModeInFunctions:
          $ref: '#/components/schemas/GreenplumMasterConfigAutostatsModeInFunctions_in_GreenplumMasterConfig_gpAutostatsModeInFunctions'
    GreenplumMasterConfig_in_GreenplumMasterConfigSet_userConfig:
      description: |-
        User-defined settings for a Greenplum® master subcluster.

        Greenplum® master subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumMasterConfigLogLevel_in_GreenplumMasterConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        timezone:
          description: The server time zone to be used in DateTime field conversions,
            specified as an IANA identifier.
          type: string
        pool:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_GreenplumMasterConfig_pool'
        maxPreparedTransactions:
          description: |-
            Sets the maximum number of transactions that can be in the "prepared" state simultaneously.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        runawayDetectorActivationPercent:
          description: |-
            For queries that are managed by resource queues or resource groups, this parameter determines
            when Greenplum® Database terminates running queries based on the amount of memory the queries are using.
            A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent).
          type: integer
          format: int64
        tcpKeepalivesCount:
          description: |-
            How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count).
          type: integer
          format: int64
        tcpKeepalivesInterval:
          description: |-
            How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval).
          type: integer
          format: int64
        readableExternalTableTimeout:
          description: |-
            When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
            Greenplum® Database waits before cancelling the query when data stops being returned from the external table.
            The default value of 0, specifies no time out. Greenplum® Database does not cancel the query.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout).
          type: integer
          format: int64
        gpInterconnectSndQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
            Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
            Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount
            of memory used by the system.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth).
          type: integer
          format: int64
        gpInterconnectQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the Greenplum® Database interconnect on receivers
            (when data is received but no space is available to receive it the data will be dropped,
            and the transmitter will need to resend it) for the default UDPIFC interconnect.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/GreenplumMasterConfigLogStatement_in_GreenplumMasterConfig_logStatement'
        logDuration:
          description: |-
            Causes the duration of every completed statement which satisfies `logStatement` to be logged.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration).
          type: boolean
          format: boolean
        optimizerAnalyzeRootPartition:
          description: |-
            For a partitioned table, controls whether the `ROOTPARTITION` keyword is required to collect root partition statistics
            when the `ANALYZE` command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition).
          type: boolean
          format: boolean
        gpExternalMaxSegs:
          description: |-
            Sets the number of segments that will scan external table data during an external table operation,
            the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
            This only applies to external tables that use the `gpfdist` protocol to access external table data.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs).
          type: integer
          format: int64
        gpFtsProbeTimeout:
          description: |-
            Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        gpAutostatsModeInFunctions:
          $ref: '#/components/schemas/GreenplumMasterConfigAutostatsModeInFunctions_in_GreenplumMasterConfig_gpAutostatsModeInFunctions'
    GreenplumMasterConfig_in_GreenplumMasterConfigSet_defaultConfig:
      description: |-
        Default configuration for a Greenplum® master subcluster.

        Greenplum® master subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumMasterConfigLogLevel_in_GreenplumMasterConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        timezone:
          description: The server time zone to be used in DateTime field conversions,
            specified as an IANA identifier.
          type: string
        pool:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_GreenplumMasterConfig_pool'
        maxPreparedTransactions:
          description: |-
            Sets the maximum number of transactions that can be in the "prepared" state simultaneously.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        runawayDetectorActivationPercent:
          description: |-
            For queries that are managed by resource queues or resource groups, this parameter determines
            when Greenplum® Database terminates running queries based on the amount of memory the queries are using.
            A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent).
          type: integer
          format: int64
        tcpKeepalivesCount:
          description: |-
            How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count).
          type: integer
          format: int64
        tcpKeepalivesInterval:
          description: |-
            How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval).
          type: integer
          format: int64
        readableExternalTableTimeout:
          description: |-
            When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
            Greenplum® Database waits before cancelling the query when data stops being returned from the external table.
            The default value of 0, specifies no time out. Greenplum® Database does not cancel the query.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout).
          type: integer
          format: int64
        gpInterconnectSndQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
            Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
            Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount
            of memory used by the system.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth).
          type: integer
          format: int64
        gpInterconnectQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the Greenplum® Database interconnect on receivers
            (when data is received but no space is available to receive it the data will be dropped,
            and the transmitter will need to resend it) for the default UDPIFC interconnect.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/GreenplumMasterConfigLogStatement_in_GreenplumMasterConfig_logStatement'
        logDuration:
          description: |-
            Causes the duration of every completed statement which satisfies `logStatement` to be logged.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration).
          type: boolean
          format: boolean
        optimizerAnalyzeRootPartition:
          description: |-
            For a partitioned table, controls whether the `ROOTPARTITION` keyword is required to collect root partition statistics
            when the `ANALYZE` command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition).
          type: boolean
          format: boolean
        gpExternalMaxSegs:
          description: |-
            Sets the number of segments that will scan external table data during an external table operation,
            the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
            This only applies to external tables that use the `gpfdist` protocol to access external table data.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs).
          type: integer
          format: int64
        gpFtsProbeTimeout:
          description: |-
            Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        gpAutostatsModeInFunctions:
          $ref: '#/components/schemas/GreenplumMasterConfigAutostatsModeInFunctions_in_GreenplumMasterConfig_gpAutostatsModeInFunctions'
    GreenplumSegmentConfigLogLevel_in_GreenplumSegmentConfig_logLevel:
      description: |-
        Controls which message levels in the segment subcluster are sent to the client.

        Controls which message levels are sent to the client. Each level includes all the levels that follow it.
        The later the level, the fewer messages are sent.

         - LOG_LEVEL_UNSPECIFIED: Level of detail is not specified.
         - TRACE: Include tracing information.
         - DEBUG: Include debugging information.
         - INFORMATION: Include informative messages.
         - WARNING: Include warning messages. Default value.
         - ERROR: Only include error messages.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    GreenplumSegmentConfigGPResourceManager_in_GreenplumSegmentConfig_gpResourceManager:
      description: |-
        Identifies the resource management scheme currently enabled in the Greenplum® Database cluster.
        For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_manager).

        Resource management scheme currently enabled in the Greenplum® Database cluster.

         - GP_RESOURCE_MANAGER_UNSPECIFIED: The management scheme is not specified.
         - QUEUE: Resource queue-based management.
         - GROUP: Resource group-based management. Default value.
      type: string
      enum:
      - QUEUE
      - GROUP
    GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_effectiveConfig:
      description: |-
        Required.
        Effective settings for a Greenplum® segment subcluster (a combination of settings defined
        in `userConfig` and `defaultConfig`).

        Greenplum® segment subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumSegmentConfigLogLevel_in_GreenplumSegmentConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            Specifies the maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
            Spill files are created when executing a query that requires more memory than it is allocated.
            The current query is terminated when the limit is exceeded.
            Set the value to 0 (zero) to allow an unlimited number of spill files. Default value is `10000`.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        gpResourceManager:
          $ref: '#/components/schemas/GreenplumSegmentConfigGPResourceManager_in_GreenplumSegmentConfig_gpResourceManager'
        gpResourceGroupCpuLimit:
          description: |-
            Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit).
          type: number
          format: float
        gpResourceGroupMemoryLimit:
          description: |-
            Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit).
          type: number
          format: float
    GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_userConfig:
      description: |-
        User-defined settings for a Greenplum® segment subcluster.

        Greenplum® segment subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumSegmentConfigLogLevel_in_GreenplumSegmentConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            Specifies the maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
            Spill files are created when executing a query that requires more memory than it is allocated.
            The current query is terminated when the limit is exceeded.
            Set the value to 0 (zero) to allow an unlimited number of spill files. Default value is `10000`.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        gpResourceManager:
          $ref: '#/components/schemas/GreenplumSegmentConfigGPResourceManager_in_GreenplumSegmentConfig_gpResourceManager'
        gpResourceGroupCpuLimit:
          description: |-
            Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit).
          type: number
          format: float
        gpResourceGroupMemoryLimit:
          description: |-
            Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit).
          type: number
          format: float
    GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_defaultConfig:
      description: |-
        Default configuration for a Greenplum® segment subcluster.

        Greenplum® segment subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumSegmentConfigLogLevel_in_GreenplumSegmentConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            Specifies the maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
            Spill files are created when executing a query that requires more memory than it is allocated.
            The current query is terminated when the limit is exceeded.
            Set the value to 0 (zero) to allow an unlimited number of spill files. Default value is `10000`.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        gpResourceManager:
          $ref: '#/components/schemas/GreenplumSegmentConfigGPResourceManager_in_GreenplumSegmentConfig_gpResourceManager'
        gpResourceGroupCpuLimit:
          description: |-
            Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit).
          type: number
          format: float
        gpResourceGroupMemoryLimit:
          description: |-
            Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit).
          type: number
          format: float
    HostType_in_Host_type:
      description: |-
        Type of the host.

        Type of the host.

         - TYPE_UNSPECIFIED: The type is not specified.
         - MASTER: A Greenplum® master host.
         - REPLICA: A Greenplum® master replica host.
         - SEGMENT: A Greenplum® segment host.
      type: string
      enum:
      - MASTER
      - REPLICA
      - SEGMENT
    Resources_in_Host_resources:
      description: |-
        Resources allocated to the Greenplum® host.

        A list of computational resources allocated to a host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.
            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    HostHealth_in_Host_health:
      description: |-
        Status code of the aggregated health of the host.

        Status code of the aggregated health of the host.

         - UNKNOWN: Health of the host is unknown.
         - ALIVE: The host is performing all its functions normally.
         - DEAD: The host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: The host is working below capacity or not fully functional.
         - UNBALANCED: One or more segments are not in preferred role.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      - UNBALANCED
      default: UNKNOWN
    Resources_in_MasterSubclusterConfig_resources:
      description: |-
        Computational resources allocated to Greenplum® master subcluster hosts.

        A list of computational resources allocated to a host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.
            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    GreenplumMasterConfigSet_in_MasterSubclusterConfig_config:
      description: |-
        Configuration settings of a Greenplum® master server.

        Set of Greenplum® master subcluster configurations.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_GreenplumMasterConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_GreenplumMasterConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_GreenplumMasterConfigSet_defaultConfig'
    Resources_in_MasterSubclusterConfigSpec_resources:
      description: |-
        Resources allocated to Greenplum® master subcluster hosts.

        A list of computational resources allocated to a host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.
            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    GreenplumMasterConfig_in_MasterSubclusterConfigSpec_config:
      description: |-
        Configuration settings of a Greenplum® master server.

        Greenplum® master subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumMasterConfigLogLevel_in_GreenplumMasterConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        timezone:
          description: The server time zone to be used in DateTime field conversions,
            specified as an IANA identifier.
          type: string
        pool:
          $ref: '#/components/schemas/ConnectionPoolerConfig_in_GreenplumMasterConfig_pool'
        maxPreparedTransactions:
          description: |-
            Sets the maximum number of transactions that can be in the "prepared" state simultaneously.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/9.6/runtime-config-resource.html).
          type: integer
          format: int64
        runawayDetectorActivationPercent:
          description: |-
            For queries that are managed by resource queues or resource groups, this parameter determines
            when Greenplum® Database terminates running queries based on the amount of memory the queries are using.
            A value of 100 disables the automatic termination of queries based on the percentage of memory that is utilized.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#runaway_detector_activation_percent).
          type: integer
          format: int64
        tcpKeepalivesCount:
          description: |-
            How many keepalives may be lost before the connection is considered dead. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_count).
          type: integer
          format: int64
        tcpKeepalivesInterval:
          description: |-
            How many seconds to wait for a response to a keepalive before retransmitting. A value of 0 uses the system default.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#tcp_keepalives_interval).
          type: integer
          format: int64
        readableExternalTableTimeout:
          description: |-
            When an SQL query reads from an external table, the parameter value specifies the amount of time in seconds that
            Greenplum® Database waits before cancelling the query when data stops being returned from the external table.
            The default value of 0, specifies no time out. Greenplum® Database does not cancel the query.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#readable_external_table_timeout).
          type: integer
          format: int64
        gpInterconnectSndQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the default UDPIFC interconnect on senders.
            Increasing the depth from its default value will cause the system to use more memory, but may increase performance.
            Reasonable values for this parameter are between 1 and 4. Increasing the value might radically increase the amount
            of memory used by the system.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_snd_queue_depth).
          type: integer
          format: int64
        gpInterconnectQueueDepth:
          description: |-
            Sets the amount of data per-peer to be queued by the Greenplum® Database interconnect on receivers
            (when data is received but no space is available to receive it the data will be dropped,
            and the transmitter will need to resend it) for the default UDPIFC interconnect.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_interconnect_queue_depth).
          type: integer
          format: int64
        logStatement:
          $ref: '#/components/schemas/GreenplumMasterConfigLogStatement_in_GreenplumMasterConfig_logStatement'
        logDuration:
          description: |-
            Causes the duration of every completed statement which satisfies `logStatement` to be logged.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#log_duration).
          type: boolean
          format: boolean
        optimizerAnalyzeRootPartition:
          description: |-
            For a partitioned table, controls whether the `ROOTPARTITION` keyword is required to collect root partition statistics
            when the `ANALYZE` command is run on the table. GPORCA uses the root partition statistics when generating a query plan.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#optimizer_analyze_root_partition).
          type: boolean
          format: boolean
        gpExternalMaxSegs:
          description: |-
            Sets the number of segments that will scan external table data during an external table operation,
            the purpose being not to overload the system with scanning data and take away resources from other concurrent operations.
            This only applies to external tables that use the `gpfdist` protocol to access external table data.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_external_max_segs).
          type: integer
          format: int64
        gpFtsProbeTimeout:
          description: |-
            Specifies the allowed timeout for the fault detection process (ftsprobe) to establish a connection to a segment before declaring it down.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_fts_probe_timeout).
          type: integer
          format: int64
        gpWorkfileCompression:
          description: |-
            Specifies whether the temporary files created, when a hash aggregation or hash join operation spills to disk, are compressed.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_compression).
          type: boolean
          format: boolean
        gpAutostatsModeInFunctions:
          $ref: '#/components/schemas/GreenplumMasterConfigAutostatsModeInFunctions_in_GreenplumMasterConfig_gpAutostatsModeInFunctions'
    Resources_in_SegmentSubclusterConfig_resources:
      description: |-
        Computational resources allocated to Greenplum® segment subcluster hosts.

        A list of computational resources allocated to a host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.
            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    GreenplumSegmentConfigSet_in_SegmentSubclusterConfig_config:
      description: |-
        Configuration settings of a Greenplum® segment server.

        Set of Greenplum® segment subcluster configurations.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_GreenplumSegmentConfigSet_defaultConfig'
    Resources_in_SegmentSubclusterConfigSpec_resources:
      description: |-
        Resources allocated to Greenplum® segment subcluster hosts.

        A list of computational resources allocated to a host.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources allocated to a host.
            Available presets are listed in the [documentation](/docs/managed-greenplum/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage used by the host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: 'Type of the storage used by the host: `network-hdd`, `network-ssd`
            or `local-ssd`.'
          type: string
    GreenplumSegmentConfig_in_SegmentSubclusterConfigSpec_config:
      description: |-
        Configuration settings of a Greenplum® segment server.

        Greenplum® segment subcluster configuration options.

        Options not listed here are not supported.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/GreenplumSegmentConfigLogLevel_in_GreenplumSegmentConfig_logLevel'
        maxConnections:
          description: Maximum number of inbound connections.
          type: integer
          format: int64
        maxSlotWalKeepSize:
          description: |-
            Specifies the maximum size of WAL files that replication slots are allowed to retain in the `pg_wal` directory at checkpoint time.
            For details, see PostgreSQL [documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
          type: integer
          format: int64
        gpWorkfileLimitPerSegment:
          description: |-
            Sets the maximum total disk size that all running queries are allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_segment).
          type: integer
          format: int64
        gpWorkfileLimitPerQuery:
          description: |-
            Sets the maximum disk size an individual query is allowed to use for creating temporary spill files at each segment.
            The default value is `0`, which means a limit is not enforced.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_per_query).
          type: integer
          format: int64
        gpWorkfileLimitFilesPerQuery:
          description: |-
            Sets the maximum number of temporary spill files (also known as workfiles) allowed per query per segment.
            Spill files are created when executing a query that requires more memory than it is allocated.
            The current query is terminated when the limit is exceeded.
            Set the value to 0 (zero) to allow an unlimited number of spill files. Default value is `10000`.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_workfile_limit_files_per_query).
          type: integer
          format: int64
        gpResourceManager:
          $ref: '#/components/schemas/GreenplumSegmentConfigGPResourceManager_in_GreenplumSegmentConfig_gpResourceManager'
        gpResourceGroupCpuLimit:
          description: |-
            Identifies the maximum percentage of system CPU resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_cpu_limit).
          type: number
          format: float
        gpResourceGroupMemoryLimit:
          description: |-
            Identifies the maximum percentage of system memory resources to allocate to resource groups on each Greenplum® Database segment node.
            Note: This server configuration parameter is enforced only when resource group-based management is active.
            For details, see Greenplum® [documentation](https://docs.greenplum.org/6-5/ref_guide/config_params/guc-list.html#gp_resource_group_memory_limit).
          type: number
          format: float
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Greenplum® Cluster resource should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GreenplumConfig_in_UpdateClusterRequest_config:
      description: |-
        Greenplum® cluster configuration.

        Greenplum® cluster configuration.
      type: object
      properties:
        version:
          description: Version of the Greenplum® server software.
          type: string
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_GreenplumConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_GreenplumConfig_access'
        zoneId:
          description: |-
            ID of the availability zone the cluster belongs to.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the cluster belongs to. This subnet should be a part
            of the cloud network the cluster belongs to (see [Cluster.networkId](/docs/managed-greenplum/api-ref/Cluster#representation)).

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            Whether or not the cluster has a public IP address.

            After the cluster has been created, this setting cannot be changed.
          type: boolean
          format: boolean
    MasterSubclusterConfigSpec_in_UpdateClusterRequest_masterConfig:
      description: |-
        Configuration of the Greenplum® master subcluster.

        Configuration of the master subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_MasterSubclusterConfigSpec_resources'
        config:
          $ref: '#/components/schemas/GreenplumMasterConfig_in_MasterSubclusterConfigSpec_config'
    SegmentSubclusterConfigSpec_in_UpdateClusterRequest_segmentConfig:
      description: |-
        Configuration of the Greenplum® segment subcluster.

        Configuration of the segment subcluster.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_SegmentSubclusterConfigSpec_resources'
        config:
          $ref: '#/components/schemas/GreenplumSegmentConfig_in_SegmentSubclusterConfigSpec_config'
    MaintenanceWindow_in_UpdateClusterRequest_maintenanceWindow:
      description: |-
        Window of maintenance operations.

        A Greenplum® cluster maintenance window. Should be defined by either one of the two options.
      type: object
      allOf:
      - title: policy
        type: object
        maxProperties: 1
        properties:
          anytime:
            $ref: '#/components/schemas/AnytimeMaintenanceWindow'
            description: An any-time maintenance window.
          weeklyMaintenanceWindow:
            $ref: '#/components/schemas/WeeklyMaintenanceWindow'
            description: A weekly maintenance window.
    WeeklyMaintenanceWindowWeekDay_in_WeeklyMaintenanceWindow_day:
      description: Day of the week.
      type: string
      enum:
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
      - SUN
tags:
- name: Cluster
  description: A set of methods for managing Greenplum® clusters.
