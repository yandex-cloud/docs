openapi: "3.0"
info:
  title: Yandex Managed Service for Elasticsearch API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about Yandex.Cloud API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /managed-elasticsearch/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified Elasticsearch cluster.
      description: To get the list of available Elasticsearch clusters, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to return.

          To get the cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified Elasticsearch cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to delete.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified Elasticsearch cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to update.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Elasticsearch clusters that belong to the specified
        folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list Elasticsearch clusters in.

          To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.
          If the number of available results is larger than `page_size`, the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.
          To get the next page of results, set `page_token` to the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name to filter by. Currently you can only use filtering with the [Cluster.name](/docs/managed-elasticsearch/api-ref/Cluster#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Ðœust be 1-63 characters long and match the regular expression `^[a-zA-Z0-9_-]+$`.

          Example of a filter: `name NOT IN 'test,beta'`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a new Elasticsearch cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:move:
    post:
      tags:
      - Cluster
      summary: Moves the specified Elasticsearch cluster to the specified folder.
      operationId: ClusterMove
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to move.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Starts the specified Elasticsearch cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to start.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stops the specified Elasticsearch cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to stop.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: Retrieves logs for the specified Elasticsearch cluster.
      description: For more information about logs, see the [Logs](/docs/managed-elasticsearch/operations/cluster-logs)
        section in the documentation.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to request logs for.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from the logs table to request.

          If no columns are specified, full log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than `page_size`, the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set `page_token` to the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: alwaysNextPageToken
        in: query
        description: |-
          The flag that defines behavior of providing the next page token.

          If this flag is set to `true`, this API method will always return [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses), even if current page is empty.
        schema:
          type: boolean
          format: boolean
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 1-63 characters long and match the regular expression `^[a-z0-9.-]{1,61}$`.

          Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /managed-elasticsearch/v1/clusters/{clusterId}:stream_logs:
    get:
      tags:
      - Cluster
      summary: Same as [listLogs](/docs/managed-elasticsearch/api-ref/Cluster/listLogs)
        but using server-side streaming. Also supports `tail -f` semantics.
      operationId: ClusterStreamLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from logs table to get in the response.

          If no columns are specified, full log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.

          If this field is not set, all existing logs will be sent and then the new ones asthey appear.
          In essence it has `tail -f` semantics.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: recordToken
        in: query
        description: |-
          Record token.

          Set `record_token` to the `nextRecordToken` returned by a previous [streamLogs](/docs/managed-elasticsearch/api-ref/Cluster/streamLogs) request to start streaming from next log record.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name to filter by. Currently filtering can be applied to the `hostname` field.
          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.

          Example of a filter: `message.hostname='node1.db.cloud.yandex.net'`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamLogRecord'
      x-y-navtitle: streamLogs
  /managed-elasticsearch/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of operations for the specified Elasticsearch cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to list operations for.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than `page_size`, the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set `page_token` to the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-elasticsearch/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of hosts for the specified Elasticsearch cluster.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than `page_size`, the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set `page_token` to the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /managed-elasticsearch/v1/clusters/{clusterId}/hosts:batchCreate:
    post:
      tags:
      - Cluster
      summary: Adds new hosts to the specified Elasticsearch cluster.
      operationId: ClusterAddHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-elasticsearch/v1/clusters/{clusterId}/hosts:batchDelete:
    post:
      tags:
      - Cluster
      summary: Deletes specified hosts from the specified Elasticsearch cluster.
      operationId: ClusterDeleteHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster.

          To get the Elasticsearch cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-elasticsearch/v1/operations/{operationId}:
    get:
      tags:
      - Operation
      summary: Returns the specified operation.
      operationId: OperationGet
      parameters:
      - name: operationId
        in: path
        description: |-
          Required.
          ID of the operation to return.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: get
  /managed-elasticsearch/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified resource preset.
      description: To get the list of available resource presets, make a [list](/docs/managed-elasticsearch/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          ID of the resource preset to return.

          To get the resource preset ID, use a [list](/docs/managed-elasticsearch/api-ref/ResourcePreset/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /managed-elasticsearch/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available resource presets.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than `page_size`, the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set `page_token` to the [nextPageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /managed-elasticsearch/v1/clusters/{clusterId}/users/{userName}:
    get:
      tags:
      - User
      summary: Returns the specified Elasticsearch user.
      description: To get the list of available Elasticsearch users, make a [list](/docs/managed-elasticsearch/api-ref/User/list)
        request.
      operationId: UserGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster the user belongs to.

          To get the cluster ID, make a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Required.
          Name of the Elasticsearch user to return.

          To get the name of the user, make a [list](/docs/managed-elasticsearch/api-ref/User/list) request.

          The maximum string length in characters is 63.
          Value must match the regular expression `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-y-navtitle: get
  /managed-elasticsearch/v1/clusters/{clusterId}/users:
    get:
      tags:
      - User
      summary: Retrieves the list of Elasticsearch users in the specified cluster.
      operationId: UserList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Elasticsearch cluster to list Elasticsearch users in.

          To get the cluster ID, use a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return.

          If the number of available results is larger than `page_size`, the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/User/list#responses) that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.

          To get the next page of results, set `page_token` to the [nextPageToken](/docs/managed-elasticsearch/api-ref/User/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      x-y-navtitle: list
components:
  schemas:
    AddClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster.
          type: string
        hostNames:
          description: Names of the host that are being added.
          type: array
          items:
            type: string
    AddClusterHostsRequest:
      type: object
      properties:
        hostSpecs:
          description: |-
            Required.
            One or more configurations of hosts to be added to the Elasticsearch cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    Cluster:
      description: |-
        An Elasticsearch cluster resource.
        For more information, see the [Concepts](/docs/managed-elasticsearch/concepts) section of the documentation.
      type: object
      properties:
        id:
          description: |-
            ID of the Elasticsearch cluster.
            This ID is assigned at creation time.
          type: string
        folderId:
          description: ID of the folder that the Elasticsearch cluster belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the Elasticsearch cluster.
            The name must be unique within the folder. 1-63 characters long.
          type: string
        description:
          description: Description of the Elasticsearch cluster. 0-256 characters
            long.
          type: string
        labels:
          description: |-
            Custom labels for the Elasticsearch cluster as `key:value` pairs.
            A maximum of 64 labels per resource is allowed.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the Elasticsearch
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        networkId:
          description: ID of the network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
    ClusterConfig:
      type: object
      properties:
        version:
          description: Elasticsearch version.
          type: string
        elasticsearch:
          $ref: '#/components/schemas/Elasticsearch_in_ClusterConfig_elasticsearch'
    ClusterEnvironment:
      description: |2-
         - PRODUCTION: stable environment with a conservative update policy when only hotfixes are applied during regular maintenance.
         - PRESTABLE: environment with a more aggressive update policy when new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: state of the cluster is unknown (`health` of all hosts in the cluster is `UNKNOWN`).
         - ALIVE: cluster is alive and well (`health` of all hosts in the cluster is `ALIVE`).
         - DEAD: cluster is inoperable (`health` of all hosts in the cluster is `DEAD`).
         - DEGRADED: cluster is in degraded state (`health` of at least one of the hosts in the cluster is not `ALIVE`).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: cluster state is unknown.
         - CREATING: cluster is being created.
         - RUNNING: cluster is running normally.
         - ERROR: cluster encountered a problem and cannot operate.
         - UPDATING: cluster is being updated.
         - STOPPING: cluster is stopping.
         - STOPPED: cluster stopped.
         - STARTING: cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConfigSpec:
      type: object
      properties:
        version:
          description: Elasticsearch version.
          type: string
        elasticsearchSpec:
          $ref: '#/components/schemas/ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec'
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create the Elasticsearch cluster in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the Elasticsearch cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the Elasticsearch cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Elasticsearch cluster as `key:value` pairs.

            For example, "project": "mvp" or "source": "dictionary".

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
        userSpecs:
          description: |-
            Required.
            One or more descriptions of users to be created in Elasticsearch cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/UserSpec'
        hostSpecs:
          description: |-
            Required.
            One or more configurations of hosts to be created in the Elasticsearch cluster.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Required.
            ID of the network to create the Elasticsearch cluster in.

            The maximum string length in characters is 50.
          type: string
    DeleteClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster.
          type: string
        hostNames:
          description: Names of the hosts that are being deleted.
          type: array
          items:
            type: string
    DeleteClusterHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Required.
            Names of the hosts to delete.

            Must contain at least one element.
            The maximum string length in characters for each value is 253.
          type: array
          items:
            type: string
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster that is being deleted.
          type: string
    Elasticsearch:
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchDataNode_in_Elasticsearch_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchMasterNode_in_Elasticsearch_masterNode'
    ElasticsearchConfig7:
      description: |-
        Elasticsearch 7.x supported configuration options are listed here.

        Detailed description for each set of options is available in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html).

        Any options that are not listed here are not supported.
      type: object
      properties:
        fielddataCacheSize:
          description: |-
            The maximum percentage of heap space that is allocated to field data cache.

            All the field values that are placed in this cache, get loaded to memory in order to provide fast document based access to those values.
            Building the field data cache for a field can be an expensive operations, so its recommended to have enough memory for this cache, and to keep it loaded.

            Default value: unbounded.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-fielddata.html).
          type: integer
          format: int64
        maxClauseCount:
          description: |-
            The maximum number of clauses a boolean query can contain.

            The limit is in place to prevent searches from becoming too large and taking up too much CPU and memory.
            It affects not only Elasticsearch's `bool` query, but many other quieries that are implicitly converted to `bool` query by Elastcsearch.

            Default value: `1024`.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-settings.html).
          type: integer
          format: int64
    ElasticsearchConfigSet7:
      description: Elasticsearch 7.x data node configuration.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ElasticsearchConfig7_in_ElasticsearchConfigSet7_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ElasticsearchConfig7_in_ElasticsearchConfigSet7_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ElasticsearchConfig7_in_ElasticsearchConfigSet7_defaultConfig'
    ElasticsearchDataNode:
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to Elasticsearch data nodes.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfigSet_7:
            $ref: '#/components/schemas/ElasticsearchConfigSet7'
            description: Elasticsearch 7.x data node configuration.
    ElasticsearchMasterNode:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchMasterNode_resources'
    ElasticsearchSpec:
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchSpecDataNode_in_ElasticsearchSpec_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchSpecMasterNode_in_ElasticsearchSpec_masterNode'
    ElasticsearchSpecDataNode:
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to Elasticsearch data nodes.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfig_7:
            $ref: '#/components/schemas/ElasticsearchConfig7'
    ElasticsearchSpecMasterNode:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchSpecMasterNode_resources'
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Host:
      description: Cluster host metadata.
      type: object
      properties:
        name:
          description: Name of the host.
          type: string
        clusterId:
          description: ID of the Elasticsearch cluster.
          type: string
        zoneId:
          description: ID of the availability zone where the host resides.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_Host_type'
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        services:
          description: Services provided by the host.
          type: array
          items:
            $ref: '#/components/schemas/Service'
        subnetId:
          description: ID of the subnet the host resides in.
          type: string
        assignPublicIp:
          description: |-
            The flag that defines whether a public IP address is assigned to the host.

            If the value is `true`, then this host is available on the Internet via it's public IP address.
          type: boolean
          format: boolean
    HostHealth:
      description: |2-
         - UNKNOWN: health of the host is unknown.
         - ALIVE: the host is performing all its functions normally.
         - DEAD: the host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: the host is degraded and can perform only some of its essential functions.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostSpec:
      type: object
      properties:
        zoneId:
          description: |-
            ID of the availability zone where the host resides.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: |-
            ID of the subnet the host resides in.

            The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          description: |-
            The flag that defines whether a public IP address is assigned to the host.

            If the value is `true`, then this host is available on the Internet via it's public IP address.
          type: boolean
          format: boolean
        type:
          $ref: '#/components/schemas/HostType_in_HostSpec_type'
        shardName:
          description: |-
            The shard name to create on the host.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    HostType:
      description: |2-
         - DATA_NODE: the host is an Elasticsearch data node.
         - MASTER_NODE: the host is an Elasticsearch master node.
      type: string
      enum:
      - DATA_NODE
      - MASTER_NODE
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: List of hosts.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#query_params), use the `next_page_token` as the value for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#query_params) query parameter in the next list request.
            Each subsequent list request will have its own `next_page_token` to continue paging through the results.
          type: string
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#query_params), use `next_page_token` as the value for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.
            Each subsequent list request will have its own `next_page_token` to continue paging through the results.

            This value is interchangeable with `nextRecordToken` from StreamLogs method.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified Elasticsearch cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#query_params), use the `next_page_token` as the value for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own `next_page_token` to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of Elasticsearch clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            Token that allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#query_params) parameter in the next list request.
            Each subsequent list request will have its own `next_page_token` to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of resource presets.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#query_params), use the `next_page_token` as the value for the [pageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#query_params) parameter in the next list request.
            Each subsequent list request will have its own `next_page_token` to continue paging through the results.

            The maximum string length in characters is 100.
          type: string
    ListUsersResponse:
      type: object
      properties:
        users:
          description: List of Elasticsearch users.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.

            If the number of results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/User/list#query_params), use the `next_page_token` as the value for the [pageToken](/docs/managed-elasticsearch/api-ref/User/list#query_params) parameter in the next list request.
            Each subsequent list request will have its own `next_page_token` to continue paging through the results.
          type: string
    LogRecord:
      description: A single log record.
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    Monitoring:
      description: Metadata of monitoring system.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts for the Elasticsearch
            cluster.
          type: string
    MoveClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster being moved.
          type: string
        sourceFolderId:
          description: ID of the source folder.
          type: string
        destinationFolderId:
          description: ID of the destination folder.
          type: string
    MoveClusterRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    ResourcePreset:
      description: A ResourcePreset resource for describing hardware configuration
        presets.
      type: object
      properties:
        id:
          description: ID of the resource preset.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for an Elasticsearch node created with
            the preset.
          type: string
          format: int64
        memory:
          description: RAM volume for an Elasticsearch node created with the preset,
            in bytes.
          type: string
          format: int64
    Resources:
      description: Computational resources.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-elasticsearch/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            All available types are listed in the [documentation](/docs/managed-elasticsearch/concepts/storage).
          type: string
    Service:
      description: Cluster service metadata.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServiceType_in_Service_type'
        health:
          $ref: '#/components/schemas/ServiceHealth_in_Service_health'
    ServiceHealth:
      description: |2-
         - UNKNOWN: health of the service is unknown.
         - ALIVE: the service is working normally.
         - DEAD: the service is dead or unresponsive.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    ServiceType:
      description: ' - ELASTICSEARCH: the Elasticsearch service.'
      type: string
      enum:
      - ELASTICSEARCH
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster.
          type: string
    StreamLogRecord:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/LogRecord_in_StreamLogRecord_record'
        nextRecordToken:
          description: |-
            This token allows you to continue streaming logs starting from the exact same record.

            To continue streaming, specify value of `next_record_token` as value for [recordToken](/docs/managed-elasticsearch/api-ref/Cluster/streamLogs#query_params) parameter in the next StreamLogs request.

            This value is interchangeable with [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses) from ListLogs method.
          type: string
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Elasticsearch cluster that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the Elasticsearch cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the Elasticsearch cluster as `key:value` pairs.

            For example, "project": "mvp" or "source": "dictionary".

            The new set of labels will completely replace the old ones.
            To add a label, request the current set with the [get](/docs/managed-elasticsearch/api-ref/Cluster/get) method, then send an [update](/docs/managed-elasticsearch/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            New name for the Elasticsearch cluster.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    User:
      description: An Elasticsearch user.
      type: object
      properties:
        name:
          description: Name of the Elasticsearch user.
          type: string
        clusterId:
          description: ID of the Elasticsearch cluster the user belongs to.
          type: string
    UserSpec:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the Elasticsearch user.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Required.
            Password of the Elasticsearch user.

            The string length in characters must be 8-128.
          type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the Elasticsearch cluster.

         - PRODUCTION: stable environment with a conservative update policy when only hotfixes are applied during regular maintenance.
         - PRESTABLE: environment with a more aggressive update policy when new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterConfig_in_Cluster_config:
      description: Configuration of the Elasticsearch cluster.
      type: object
      properties:
        version:
          description: Elasticsearch version.
          type: string
        elasticsearch:
          $ref: '#/components/schemas/Elasticsearch_in_ClusterConfig_elasticsearch'
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: state of the cluster is unknown (`health` of all hosts in the cluster is `UNKNOWN`).
         - ALIVE: cluster is alive and well (`health` of all hosts in the cluster is `ALIVE`).
         - DEAD: cluster is inoperable (`health` of all hosts in the cluster is `DEAD`).
         - DEGRADED: cluster is in degraded state (`health` of at least one of the hosts in the cluster is not `ALIVE`).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: cluster state is unknown.
         - CREATING: cluster is being created.
         - RUNNING: cluster is running normally.
         - ERROR: cluster encountered a problem and cannot operate.
         - UPDATING: cluster is being updated.
         - STOPPING: cluster is stopping.
         - STOPPED: cluster stopped.
         - STARTING: cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    Elasticsearch_in_ClusterConfig_elasticsearch:
      description: Configuration and resource allocation for Elasticsearch nodes.
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchDataNode_in_Elasticsearch_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchMasterNode_in_Elasticsearch_masterNode'
    ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec:
      description: Configuration and resource allocation for Elasticsearch nodes.
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchSpecDataNode_in_ElasticsearchSpec_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchSpecMasterNode_in_ElasticsearchSpec_masterNode'
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Deployment environment of the Elasticsearch cluster.

         - PRODUCTION: stable environment with a conservative update policy when only hotfixes are applied during regular maintenance.
         - PRESTABLE: environment with a more aggressive update policy when new versions are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: |-
        Required.
        Elasticsearch and hosts configuration for the cluster.
      type: object
      properties:
        version:
          description: Elasticsearch version.
          type: string
        elasticsearchSpec:
          $ref: '#/components/schemas/ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec'
    ElasticsearchDataNode_in_Elasticsearch_dataNode:
      description: Configuration and resource allocation for Elasticsearch data nodes.
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to Elasticsearch data nodes.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfigSet_7:
            $ref: '#/components/schemas/ElasticsearchConfigSet7'
            description: Elasticsearch 7.x data node configuration.
    ElasticsearchMasterNode_in_Elasticsearch_masterNode:
      description: Configuration and resource allocation for Elasticsearch master
        nodes.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchMasterNode_resources'
    ElasticsearchConfig7_in_ElasticsearchConfigSet7_effectiveConfig:
      description: |-
        Required.
        Effective settings for an Elasticsearch cluster (a combination of settings defined in `userConfig` and `defaultConfig`).

        Elasticsearch 7.x supported configuration options are listed here.

        Detailed description for each set of options is available in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html).

        Any options that are not listed here are not supported.
      type: object
      properties:
        fielddataCacheSize:
          description: |-
            The maximum percentage of heap space that is allocated to field data cache.

            All the field values that are placed in this cache, get loaded to memory in order to provide fast document based access to those values.
            Building the field data cache for a field can be an expensive operations, so its recommended to have enough memory for this cache, and to keep it loaded.

            Default value: unbounded.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-fielddata.html).
          type: integer
          format: int64
        maxClauseCount:
          description: |-
            The maximum number of clauses a boolean query can contain.

            The limit is in place to prevent searches from becoming too large and taking up too much CPU and memory.
            It affects not only Elasticsearch's `bool` query, but many other quieries that are implicitly converted to `bool` query by Elastcsearch.

            Default value: `1024`.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-settings.html).
          type: integer
          format: int64
    ElasticsearchConfig7_in_ElasticsearchConfigSet7_userConfig:
      description: |-
        User-defined settings for an Elasticsearch cluster.

        Elasticsearch 7.x supported configuration options are listed here.

        Detailed description for each set of options is available in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html).

        Any options that are not listed here are not supported.
      type: object
      properties:
        fielddataCacheSize:
          description: |-
            The maximum percentage of heap space that is allocated to field data cache.

            All the field values that are placed in this cache, get loaded to memory in order to provide fast document based access to those values.
            Building the field data cache for a field can be an expensive operations, so its recommended to have enough memory for this cache, and to keep it loaded.

            Default value: unbounded.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-fielddata.html).
          type: integer
          format: int64
        maxClauseCount:
          description: |-
            The maximum number of clauses a boolean query can contain.

            The limit is in place to prevent searches from becoming too large and taking up too much CPU and memory.
            It affects not only Elasticsearch's `bool` query, but many other quieries that are implicitly converted to `bool` query by Elastcsearch.

            Default value: `1024`.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-settings.html).
          type: integer
          format: int64
    ElasticsearchConfig7_in_ElasticsearchConfigSet7_defaultConfig:
      description: |-
        Default settings for an Elasticsearch cluster.

        Elasticsearch 7.x supported configuration options are listed here.

        Detailed description for each set of options is available in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html).

        Any options that are not listed here are not supported.
      type: object
      properties:
        fielddataCacheSize:
          description: |-
            The maximum percentage of heap space that is allocated to field data cache.

            All the field values that are placed in this cache, get loaded to memory in order to provide fast document based access to those values.
            Building the field data cache for a field can be an expensive operations, so its recommended to have enough memory for this cache, and to keep it loaded.

            Default value: unbounded.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-fielddata.html).
          type: integer
          format: int64
        maxClauseCount:
          description: |-
            The maximum number of clauses a boolean query can contain.

            The limit is in place to prevent searches from becoming too large and taking up too much CPU and memory.
            It affects not only Elasticsearch's `bool` query, but many other quieries that are implicitly converted to `bool` query by Elastcsearch.

            Default value: `1024`.

            See in-depth description in [Elasticsearch documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-settings.html).
          type: integer
          format: int64
    Resources_in_ElasticsearchMasterNode_resources:
      description: |-
        Resources allocated to Elasticsearch master nodes.

        Computational resources.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-elasticsearch/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            All available types are listed in the [documentation](/docs/managed-elasticsearch/concepts/storage).
          type: string
    ElasticsearchSpecDataNode_in_ElasticsearchSpec_dataNode:
      description: Configuration and resource allocation for Elasticsearch data nodes.
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to Elasticsearch data nodes.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfig_7:
            $ref: '#/components/schemas/ElasticsearchConfig7'
    ElasticsearchSpecMasterNode_in_ElasticsearchSpec_masterNode:
      description: Configuration and resource allocation for Elasticsearch master
        nodes.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchSpecMasterNode_resources'
    Resources_in_ElasticsearchSpecMasterNode_resources:
      description: |-
        Resources allocated to Elasticsearch master nodes.

        Computational resources.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-elasticsearch/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            All available types are listed in the [documentation](/docs/managed-elasticsearch/concepts/storage).
          type: string
    HostType_in_Host_type:
      description: |-
        Host type.

         - DATA_NODE: the host is an Elasticsearch data node.
         - MASTER_NODE: the host is an Elasticsearch master node.
      type: string
      enum:
      - DATA_NODE
      - MASTER_NODE
    Resources_in_Host_resources:
      description: Computational resources.
      type: object
      properties:
        resourcePresetId:
          description: |-
            ID of the preset for computational resources available to a host (CPU, memory etc.).
            All available presets are listed in the [documentation](/docs/managed-elasticsearch/concepts/instance-types).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Type of the storage environment for the host.
            All available types are listed in the [documentation](/docs/managed-elasticsearch/concepts/storage).
          type: string
    HostHealth_in_Host_health:
      description: |-
        Aggregated host health data.

         - UNKNOWN: health of the host is unknown.
         - ALIVE: the host is performing all its functions normally.
         - DEAD: the host is inoperable and cannot perform any of its essential functions.
         - DEGRADED: the host is degraded and can perform only some of its essential functions.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostType_in_HostSpec_type:
      description: |-
        Required.
        Host type.

         - DATA_NODE: the host is an Elasticsearch data node.
         - MASTER_NODE: the host is an Elasticsearch master node.
      type: string
      enum:
      - DATA_NODE
      - MASTER_NODE
    ServiceType_in_Service_type:
      description: |-
        Type of the service provided by the host.

         - ELASTICSEARCH: the Elasticsearch service.
      type: string
      enum:
      - ELASTICSEARCH
    ServiceHealth_in_Service_health:
      description: |-
        Service health data.

         - UNKNOWN: health of the service is unknown.
         - ALIVE: the service is working normally.
         - DEAD: the service is dead or unresponsive.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    LogRecord_in_StreamLogRecord_record:
      description: |-
        One of the requested log records.

        A single log record.
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: |-
        New configuration and resources for hosts in the Elasticsearch cluster.

        Use [updateMask](/docs/managed-elasticsearch/api-ref/Cluster/update#body_params) to prevent reverting all cluster settings that are not listed in `config_spec` to their default values.
      type: object
      properties:
        version:
          description: Elasticsearch version.
          type: string
        elasticsearchSpec:
          $ref: '#/components/schemas/ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec'
tags:
- name: Cluster
  description: A set of methods for managing Elasticsearch clusters.
- name: Operation
  description: A set of methods for managing operations that are asynchronous API
    requests.
- name: ResourcePreset
  description: A set of methods for managing Elasticsearch resource presets.
- name: User
  description: A set of methods for managing Elasticsearch users.
