openapi: "3.0"
info:
  title: Yandex Managed Service for ElasticSearch API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about Yandex.Cloud API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /managed-elasticsearch/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified ElasticSearch Cluster resource.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ElasticSearch cluster to return.
          To get the cluster ID use a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified ElasticSearch cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ElasticSearch cluster to delete.
          To get the ElasticSearch cluster ID, use a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified ElasticSearch cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ElasticSearch Cluster resource to update.
          To get the ElasticSearch cluster ID, use a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of ElasticSearch clusters.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list ElasticSearch clusters in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/list#query_params), the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#query_params) to the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can only use filtering with the [Cluster.name](/docs/managed-elasticsearch/api-ref/Cluster#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Ðœust be 1-63 characters long and match the regular expression `^[a-zA-Z0-9_-]+$`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates an ElasticSearch cluster.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:move:
    post:
      tags:
      - Cluster
      summary: Moves the specified ElasticSearch cluster to the specified folder.
      operationId: ClusterMove
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ElasticSearch cluster to move.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Start the specified ElasticSearch cluster.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the ElasticSearch cluster to start.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Stop the specified ElasticSearch cluster.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the ElasticSearch cluster to stop.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-elasticsearch/api-ref/Cluster#representation)'
  /managed-elasticsearch/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: |-
        Retrieves logs for the specified ElasticSearch cluster.
        See the [Logs](/yandex-mdb-guide/concepts/logs.html) section in the developers guide for detailed logs description.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ElasticSearch cluster to request logs for.
          To get the ElasticSearch cluster ID use a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: |-
          Columns from the logs table to request.
          If no columns are specified, entire log records are returned.
        schema:
          type: array
          items:
            type: string
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#query_params), the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#query_params) to the
          [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: alwaysNextPageToken
        in: query
        description: Always return `next_page_token`, even if current page is empty.
        schema:
          type: boolean
          format: boolean
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname] field.
          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 1-63 characters long and match the regular expression `^[a-z0-9.-]{1,61}$`.
          Examples of a filter: `message.hostname='node1.db.cloud.yandex.net'`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /managed-elasticsearch/v1/clusters/{clusterId}:stream_logs:
    get:
      tags:
      - Cluster
      summary: Same as ListLogs but using server-side streaming. Also allows for 'tail
        -f' semantics.
      operationId: ClusterStreamLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the ElasticSearch cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: Columns from logs table to get in the response.
        schema:
          type: array
          items:
            type: string
      - name: fromTime
        in: query
        description: |-
          Start timestamp for the logs request.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          End timestamp for the logs request.
          If this field is not set, all existing logs will be sent and then the new ones as
          they appear. In essence it has 'tail -f' semantics.

          String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        schema:
          type: string
          format: date-time
      - name: recordToken
        in: query
        description: |-
          Record token. Set `record_token` to the `next_record_token` returned by a previous StreamLogs
          request to start streaming from next log record.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently filtering can be applied to the [LogRecord.logs.hostname] field.
          2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.
          Examples of a filter: `hostname='node1.db.cloud.yandex.net'`

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamLogRecord'
      x-y-navtitle: streamLogs
  /managed-elasticsearch/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Operation resources for the specified cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ElasticSearch cluster resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token.  To get the next page of results, set [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#query_params) to the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-elasticsearch/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Retrieves a list of hosts for the specified cluster.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the ElasticSearch cluster.
          To get the ElasticSearch cluster ID use a [list](/docs/managed-elasticsearch/api-ref/Cluster/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#query_params), the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#query_params) to the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /managed-elasticsearch/v1/clusters/{clusterId}/hosts:batchCreate:
    post:
      tags:
      - Cluster
      summary: Creates new hosts.
      operationId: ClusterAddHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the ElasticSearch cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-elasticsearch/v1/clusters/{clusterId}/hosts:batchDelete:
    post:
      tags:
      - Cluster
      summary: Deletes specified hosts.
      operationId: ClusterDeleteHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          Required. ID of the ElasticSearch cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-elasticsearch/v1/operations/{operationId}:
    get:
      tags:
      - Operation
      summary: Returns the specified operation.
      operationId: OperationGet
      parameters:
      - name: operationId
        in: path
        description: |-
          Required.
          Required. ID of the operation to return.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: get
  /managed-elasticsearch/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified ResourcePreset resource.
      description: To get the list of available ResourcePreset resources, make a [list](/docs/managed-elasticsearch/api-ref/ResourcePreset/list)
        request.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          Required. ID of the resource preset to return.
          To get the resource preset ID, use a [list](/docs/managed-elasticsearch/api-ref/ResourcePreset/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /managed-elasticsearch/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Retrieves the list of available ResourcePreset resources.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#query_params), the service returns a [nextPageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#query_params) to the [nextPageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
components:
  schemas:
    AddClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: Required. ID of the ElasticSearch cluster.
          type: string
        hostNames:
          description: Required. The name of adding host.
          type: array
          items:
            type: string
    AddClusterHostsRequest:
      type: object
      properties:
        hostSpecs:
          description: |-
            Required.
            Required.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    Cluster:
      description: Elasticsearch cluster resource
      type: object
      properties:
        id:
          description: |-
            ID of the ElasticSearch cluster.
            This ID is assigned by MDB at creation time.
          type: string
        folderId:
          description: ID of the folder that the ElasticSearch cluster belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the ElasticSearch cluster.
            The name is unique within the folder. 1-63 characters long.
          type: string
        description:
          description: Description of the ElasticSearch cluster. 0-256 characters
            long.
          type: string
        labels:
          description: |-
            Custom labels for the ElasticSearch cluster as `` key:value `` pairs.
            Maximum 64 per resource.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Description of monitoring systems relevant to the ElasticSearch
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        networkId:
          description: ID of the network that the cluster belongs to.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
    ClusterConfig:
      type: object
      properties:
        version:
          description: ElasticSearch version.
          type: string
        elasticsearch:
          $ref: '#/components/schemas/Elasticsearch_in_ClusterConfig_elasticsearch'
    ClusterEnvironment:
      description: |2-
         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: State of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is alive and well (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConfigSpec:
      type: object
      properties:
        version:
          description: ElasticSearch version.
          type: string
        elasticsearchSpec:
          $ref: '#/components/schemas/ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec'
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ElasticSearch cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create the ElasticSearch cluster in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Required.
            Name of the ElasticSearch cluster. The name must be unique within the folder.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Description of the ElasticSearch cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the ElasticSearch cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
        hostSpecs:
          description: |-
            Required.
            Required. Configuration of ElasticSearch hosts.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Required.
            ID of the network to create the cluster in.

            The maximum string length in characters is 50.
          type: string
    DeleteClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: Required. ID of the ElasticSearch cluster.
          type: string
        hostNames:
          description: Required. The name of deleting host.
          type: array
          items:
            type: string
    DeleteClusterHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Required.
            Required. Name of the host to delete.

            Must contain at least one element.
            The maximum string length in characters for each value is 253.
          type: array
          items:
            type: string
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ElasticSearch cluster that is being deleted.
          type: string
    Elasticsearch:
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchDataNode_in_Elasticsearch_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchMasterNode_in_Elasticsearch_masterNode'
    ElasticsearchConfig7_6:
      type: object
      properties:
        fielddataCacheSize:
          description: the percentage of heap space that is allocated to fielddata
          type: integer
          format: int64
        maxClauseCount:
          description: the maximum number of allowed boolean clauses in a query
          type: integer
          format: int64
    ElasticsearchConfigSet7_6:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ElasticsearchConfig7_6_in_ElasticsearchConfigSet7_6_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ElasticsearchConfig7_6_in_ElasticsearchConfigSet7_6_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ElasticsearchConfig7_6_in_ElasticsearchConfigSet7_6_defaultConfig'
    ElasticsearchDataNode:
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to data node hosts.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfigSet_7_6:
            $ref: '#/components/schemas/ElasticsearchConfigSet7_6'
    ElasticsearchMasterNode:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchMasterNode_resources'
    ElasticsearchSpec:
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchSpecDataNode_in_ElasticsearchSpec_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchSpecMasterNode_in_ElasticsearchSpec_masterNode'
    ElasticsearchSpecDataNode:
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to data node hosts.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfig_7_6:
            $ref: '#/components/schemas/ElasticsearchConfig7_6'
    ElasticsearchSpecMasterNode:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchSpecMasterNode_resources'
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Host:
      type: object
      properties:
        name:
          description: Required. Name of the host.
          type: string
        clusterId:
          description: Required. ID of the ElasticSearch cluster.
          type: string
        zoneId:
          description: ID of the availability zone.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_Host_type'
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        services:
          description: Services provided by the host.
          type: array
          items:
            $ref: '#/components/schemas/Service'
        subnetId:
          type: string
        assignPublicIp:
          type: boolean
          format: boolean
    HostHealth:
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostSpec:
      type: object
      properties:
        zoneId:
          description: |-
            ID of the availability zone.

            The maximum string length in characters is 50.
          type: string
        subnetId:
          description: The maximum string length in characters is 50.
          type: string
        assignPublicIp:
          type: boolean
          format: boolean
        type:
          $ref: '#/components/schemas/HostType_in_HostSpec_type'
        shardName:
          description: |-
            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    HostType:
      type: string
      enum:
      - DATA_NODE
      - MASTER_NODE
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: List of Host resources.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#query_params), use the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#responses) as the value
            for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listHosts#responses) to continue paging through the results.
          type: string
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Requested log records.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#query_params), use the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses) as the value
            for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listLogs#responses) to continue paging through the results.
            This value is interchangeable with `next_record_token` from StreamLogs method.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of Operation resources for the specified ElasticSearch
            cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#query_params), use the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#responses) as the value
            for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of ElasticSearch clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-elasticsearch/api-ref/Cluster/list#query_params), use the [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#responses) as the value
            for the [pageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-elasticsearch/api-ref/Cluster/list#responses) to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: List of ResourcePreset resources.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#query_params), use the [nextPageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#responses) as the value
            for the [pageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#query_params) parameter in the next list request. Each subsequent
            list request will have its own [nextPageToken](/docs/managed-elasticsearch/api-ref/ResourcePreset/list#responses) to continue paging through the results.

            The maximum string length in characters is 100.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    Monitoring:
      description: Monitoring system.
      type: object
      properties:
        name:
          description: Name of the monitoring system.
          type: string
        description:
          description: Description of the monitoring system.
          type: string
        link:
          description: Link to the monitoring system charts.
          type: string
    MoveClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ElasticSearch cluster being moved.
          type: string
        sourceFolderId:
          description: ID of the source folder.
          type: string
        destinationFolderId:
          description: ID of the destnation folder.
          type: string
    MoveClusterRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the destination folder.

            The maximum string length in characters is 50.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    ResourcePreset:
      description: A ResourcePreset resource for describing hardware configuration
        presets.
      type: object
      properties:
        id:
          description: ID of the ResourcePreset resource.
          type: string
        zoneIds:
          description: IDs of availability zones where the resource preset is available.
          type: array
          items:
            type: string
        cores:
          description: Number of CPU cores for a host created with the preset.
          type: string
          format: int64
        memory:
          description: RAM volume for a host created with the preset, in bytes.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: ID of the preset for computational resources available to a
            host (CPU, memory etc.).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: Type of the storage environment for the host.
          type: string
    Service:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServiceType_in_Service_type'
        health:
          $ref: '#/components/schemas/ServiceHealth_in_Service_health'
    ServiceHealth:
      description: |2-
         - UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    ServiceType:
      type: string
      enum:
      - ELASTICSEARCH
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Required. ID of the ElasticSearch cluster.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Required. ID of the ElasticSearch cluster.
          type: string
    StreamLogRecord:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/LogRecord_in_StreamLogRecord_record'
        nextRecordToken:
          description: |-
            This token allows you to continue streaming logs starting from the exact
            same record. To continue streaming, specify value of `next_record_token`
            as value for `record_token` parameter in the next StreamLogs request.
            This value is interchangeable with `next_page_token` from ListLogs method.
          type: string
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the ElasticSearch cluster resource that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            New description of the ElasticSearch cluster.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Custom labels for the ElasticSearch cluster as `` key:value `` pairs. Maximum 64 per resource.
            For example, "project": "mvp" or "source": "dictionary".

            The new set of labels will completely replace the old ones. To add a label, request the current
            set with the [get](/docs/managed-elasticsearch/api-ref/Cluster/get) method, then send an [update](/docs/managed-elasticsearch/api-ref/Cluster/update) request with the new label added to the set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9_-]* ``.
          type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Deployment environment of the ElasticSearch cluster.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterConfig_in_Cluster_config:
      description: Configuration of the ElasticSearch cluster.
      type: object
      properties:
        version:
          description: ElasticSearch version.
          type: string
        elasticsearch:
          $ref: '#/components/schemas/Elasticsearch_in_ClusterConfig_elasticsearch'
    ClusterHealth_in_Cluster_health:
      description: |-
        Aggregated cluster health.

         - HEALTH_UNKNOWN: State of the cluster is unknown (`health` for every host in the cluster is UNKNOWN).
         - ALIVE: Cluster is alive and well (`health` for every host in the cluster is ALIVE).
         - DEAD: Cluster is inoperable (`health` for every host in the cluster is DEAD).
         - DEGRADED: Cluster is working below capacity (`health` for at least one host in the cluster is not ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Current state of the cluster.

         - STATUS_UNKNOWN: Cluster state is unknown.
         - CREATING: Cluster is being created.
         - RUNNING: Cluster is running normally.
         - ERROR: Cluster encountered a problem and cannot operate.
         - UPDATING: Cluster is being updated.
         - STOPPING: Cluster is stopping.
         - STOPPED: Cluster stopped.
         - STARTING: Cluster is starting.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    Elasticsearch_in_ClusterConfig_elasticsearch:
      description: ElasticSearch configuration.
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchDataNode_in_Elasticsearch_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchMasterNode_in_Elasticsearch_masterNode'
    ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec:
      type: object
      properties:
        dataNode:
          $ref: '#/components/schemas/ElasticsearchSpecDataNode_in_ElasticsearchSpec_dataNode'
        masterNode:
          $ref: '#/components/schemas/ElasticsearchSpecMasterNode_in_ElasticsearchSpec_masterNode'
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Deployment environment of the ElasticSearch cluster.

         - PRODUCTION: Stable environment with a conservative update policy:
        only hotfixes are applied during regular maintenance.
         - PRESTABLE: Environment with more aggressive update policy: new versions
        are rolled out irrespective of backward compatibility.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: |-
        Required.
        Configuration and resources for hosts that should be created for the ElasticSearch cluster.
      type: object
      properties:
        version:
          description: ElasticSearch version.
          type: string
        elasticsearchSpec:
          $ref: '#/components/schemas/ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec'
    ElasticsearchDataNode_in_Elasticsearch_dataNode:
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to data node hosts.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfigSet_7_6:
            $ref: '#/components/schemas/ElasticsearchConfigSet7_6'
    ElasticsearchMasterNode_in_Elasticsearch_masterNode:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchMasterNode_resources'
    ElasticsearchConfig7_6_in_ElasticsearchConfigSet7_6_effectiveConfig:
      description: Required.
      type: object
      properties:
        fielddataCacheSize:
          description: the percentage of heap space that is allocated to fielddata
          type: integer
          format: int64
        maxClauseCount:
          description: the maximum number of allowed boolean clauses in a query
          type: integer
          format: int64
    ElasticsearchConfig7_6_in_ElasticsearchConfigSet7_6_userConfig:
      type: object
      properties:
        fielddataCacheSize:
          description: the percentage of heap space that is allocated to fielddata
          type: integer
          format: int64
        maxClauseCount:
          description: the maximum number of allowed boolean clauses in a query
          type: integer
          format: int64
    ElasticsearchConfig7_6_in_ElasticsearchConfigSet7_6_defaultConfig:
      type: object
      properties:
        fielddataCacheSize:
          description: the percentage of heap space that is allocated to fielddata
          type: integer
          format: int64
        maxClauseCount:
          description: the maximum number of allowed boolean clauses in a query
          type: integer
          format: int64
    Resources_in_ElasticsearchMasterNode_resources:
      description: Resources allocated to master node hosts.
      type: object
      properties:
        resourcePresetId:
          description: ID of the preset for computational resources available to a
            host (CPU, memory etc.).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: Type of the storage environment for the host.
          type: string
    ElasticsearchSpecDataNode_in_ElasticsearchSpec_dataNode:
      type: object
      allOf:
      - type: object
        properties:
          resources:
            $ref: '#/components/schemas/Resources'
            description: Resources allocated to data node hosts.
      - title: config
        type: object
        maxProperties: 1
        properties:
          elasticsearchConfig_7_6:
            $ref: '#/components/schemas/ElasticsearchConfig7_6'
    ElasticsearchSpecMasterNode_in_ElasticsearchSpec_masterNode:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ElasticsearchSpecMasterNode_resources'
    Resources_in_ElasticsearchSpecMasterNode_resources:
      description: Resources allocated to master node hosts.
      type: object
      properties:
        resourcePresetId:
          description: ID of the preset for computational resources available to a
            host (CPU, memory etc.).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: Type of the storage environment for the host.
          type: string
    HostType_in_Host_type:
      description: Host type.
      type: string
      enum:
      - DATA_NODE
      - MASTER_NODE
    Resources_in_Host_resources:
      description: Resources allocated to the host.
      type: object
      properties:
        resourcePresetId:
          description: ID of the preset for computational resources available to a
            host (CPU, memory etc.).
          type: string
        diskSize:
          description: Volume of the storage available to a host, in bytes.
          type: string
          format: int64
        diskTypeId:
          description: Type of the storage environment for the host.
          type: string
    HostHealth_in_Host_health:
      description: Aggregated host health
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostType_in_HostSpec_type:
      description: Required.
      type: string
      enum:
      - DATA_NODE
      - MASTER_NODE
    ServiceType_in_Service_type:
      description: Type of the service provided by the host.
      type: string
      enum:
      - ELASTICSEARCH
    ServiceHealth_in_Service_health:
      description: |-
        Status code of server availability.

         - UNKNOWN: Health of the server is unknown.
         - ALIVE: The server is working normally.
         - DEAD: The server is dead or unresponsive.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    LogRecord_in_StreamLogRecord_record:
      description: One of the requested log records.
      type: object
      properties:
        timestamp:
          description: |-
            Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: Contents of the log record.
          type: object
          additionalProperties:
            type: string
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the ElasticSearch cluster should be updated.

        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: New configuration and resources for hosts in the cluster.
      type: object
      properties:
        version:
          description: ElasticSearch version.
          type: string
        elasticsearchSpec:
          $ref: '#/components/schemas/ElasticsearchSpec_in_ConfigSpec_elasticsearchSpec'
tags:
- name: Cluster
  description: A set of methods for managing ElasticSearch clusters.
- name: Operation
  description: A set of methods for managing operations that are asynchronous API
    requests.
- name: ResourcePreset
  description: A set of methods for managing ResourcePreset resources.
