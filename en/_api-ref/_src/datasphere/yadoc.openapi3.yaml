openapi: 3.0.0
info:
  title: DataSphere API v2
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v2
  x-y-docUri: api-ref
  x-y-baseUrl: https://datasphere.api.cloud.yandex.net
paths:
  /datasphere/v2/communities:
    get:
      tags:
      - Community
      summary: List communities in specified organization.
      operationId: CommunityList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/datasphere/api-ref/v2/Community/list#query_params),
          the service returns a [nextPageToken](/docs/datasphere/api-ref/v2/Community/list#responses)
          that can be used to get the next page of results in subsequent list requests.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/datasphere/api-ref/v2/Community/list#query_params) to the
          [nextPageToken](/docs/datasphere/api-ref/v2/Community/list#responses) returned by a previous list request.
        schema:
          type: string
      - name: nameOrDescriptionPattern
        in: query
        description: |-
          Community name or description pattern.
          Only communities with names or descriptions matching specified pattern will be returned.
        schema:
          type: string
      - name: ownedById
        in: query
        description: ID of the user. Only communities owned by specified user will
          be returned.
        schema:
          type: string
      - name: listPublic
        in: query
        description: If set to true, only public communities will be returned.
        schema:
          type: boolean
          format: boolean
      - name: organizationId
        in: query
        description: |-
          Required.
          ID of the organization to list communities in.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommunitiesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Community
      summary: Creates community in specified organization.
      operationId: CommunityCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommunityRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateCommunityMetadata'
      x-y-operation-response: '[Community](/docs/datasphere/api-ref/v2/Community#representation)'
  /datasphere/v2/communities/{communityId}:
    get:
      tags:
      - Community
      summary: Returns community.
      operationId: CommunityGet
      parameters:
      - name: communityId
        in: path
        description: |-
          Required.
          ID of the community.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
      x-y-navtitle: get
    delete:
      tags:
      - Community
      summary: Deletes specified community.
      operationId: CommunityDelete
      parameters:
      - name: communityId
        in: path
        description: |-
          Required.
          ID of the community.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteCommunityMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Community
      summary: Updates specified community.
      operationId: CommunityUpdate
      parameters:
      - name: communityId
        in: path
        description: |-
          Required.
          ID of the community.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommunityRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateCommunityMetadata'
      x-y-operation-response: '[Community](/docs/datasphere/api-ref/v2/Community#representation)'
  /datasphere/v2/communities/{resourceId}:accessBindings:
    get:
      tags:
      - Community
      summary: Lists access bindings for specified community.
      operationId: CommunityListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /datasphere/v2/communities/{resourceId}:setAccessBindings:
    post:
      tags:
      - Community
      summary: Sets access bindings for specified community.
      operationId: CommunitySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetCommunityAccessBindingsMetadata'
      x-y-operation-response: Empty
  /datasphere/v2/communities/{resourceId}:updateAccessBindings:
    patch:
      tags:
      - Community
      summary: Updates access bindings for specified community.
      operationId: CommunityUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateCommunityAccessBindingsMetadata'
      x-y-operation-response: Empty
  /datasphere/v2/projects:
    get:
      tags:
      - Project
      summary: Lists projects for the specified community.
      operationId: ProjectList
      parameters:
      - name: communityId
        in: query
        description: |-
          Required.
          ID of the community to list projects in.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/datasphere/api-ref/v2/Project/list#query_params),
          the service returns a [nextPageToken](/docs/datasphere/api-ref/v2/Project/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/datasphere/api-ref/v2/Project/list#query_params) to the
          [nextPageToken](/docs/datasphere/api-ref/v2/Project/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: projectNamePattern
        in: query
        description: |-
          Name pattern to filter projects that are returned.
          Only projects with names matching the pattern will be returned.
        schema:
          type: string
      - name: ownedById
        in: query
        description: |-
          User ID to filter projects that are returned.
          Only projects that are owned by specified user will be returned.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProjectsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Project
      summary: Creates a project in the specified folder.
      operationId: ProjectCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateProjectMetadata'
      x-y-operation-response: '[Project](/docs/datasphere/api-ref/v2/Project#representation)'
  /datasphere/v2/projects/{projectId}:
    get:
      tags:
      - Project
      summary: Returns the specified project.
      operationId: ProjectGet
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the Project resource to return.
          To get the project ID use a [list](/docs/datasphere/api-ref/v2/Project/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      x-y-navtitle: get
    delete:
      tags:
      - Project
      summary: Deletes the specified project.
      operationId: ProjectDelete
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the Project resource to delete.
          To get the project ID use a [list](/docs/datasphere/api-ref/v2/Project/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteProjectMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Project
      summary: Updates the specified project.
      operationId: ProjectUpdate
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the Project resource to update.
          To get the project ID use a [list](/docs/datasphere/api-ref/v2/Project/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateProjectMetadata'
      x-y-operation-response: '[Project](/docs/datasphere/api-ref/v2/Project#representation)'
  /datasphere/v2/projects/{projectId}:open:
    post:
      tags:
      - Project
      summary: Opens the specified project.
      operationId: ProjectOpen
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the Project resource to open.
          To get the project ID use a [list](/docs/datasphere/api-ref/v2/Project/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenProjectRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: open
      x-y-operation-metadata:
        $ref: '#/components/schemas/OpenProjectMetadata'
      x-y-operation-response: '`OpenProjectResponse`'
  /datasphere/v2/projects/{projectId}:unitBalance:
    get:
      tags:
      - Project
      summary: Returns the unit balance of the specified project.
      operationId: ProjectGetUnitBalance
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the project to return the unit balance for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnitBalanceResponse'
      x-y-navtitle: getUnitBalance
    post:
      tags:
      - Project
      summary: Sets the unit balance of the specified project.
      operationId: ProjectSetUnitBalance
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the project to set the unit balance for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUnitBalanceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setUnitBalance
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetUnitBalanceMetadata'
      x-y-operation-response: Empty
  /datasphere/v2/projects/{projectId}:execute:
    post:
      tags:
      - Project
      summary: Executes code in the specified cell or notebook.
      operationId: ProjectExecute
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the project to execute notebook/cell in.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectExecutionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: execute
      x-y-operation-metadata:
        $ref: '#/components/schemas/ProjectExecutionMetadata'
      x-y-operation-response: '`ProjectExecutionResponse`'
  /datasphere/v2/projects/{projectId}:cellOutputs:
    get:
      tags:
      - Project
      summary: Returns outputs of the specified cell.
      operationId: ProjectGetCellOutputs
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the project to return cell outputs for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: cellId
        in: query
        description: |-
          Required.
          ID of the cell to return outputs for.

          The maximum string length in characters is 200.
        schema:
          type: string
      - name: checkpointId
        in: query
        description: ID of the checkpoint to return cell outputs for.
        schema:
          type: string
      - name: startAt
        in: query
        description: "Timestamp from which to return outputs.\n\nString in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
          text format. The range of possible values is from \n`0001-01-01T00:00:00Z`
          to `9999-12-31T23:59:59.999999999Z`, i.e. from 0 to 9 digits for fractions
          of a second.\n\nTo work with values in this field, use the APIs described
          in the \n[Protocol Buffers reference](https://developers.google.com/protocol-buffers/docs/reference/overview).
          \nIn some languages, built-in datetime utilities do not support nanosecond
          precision (9 digits)."
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellOutputsResponse'
      x-y-navtitle: getCellOutputs
  /datasphere/v2/projects/{projectId}:stateVariables:
    get:
      tags:
      - Project
      summary: Returns state variables of the specified notebook.
      operationId: ProjectGetStateVariables
      parameters:
      - name: projectId
        in: path
        description: |-
          Required.
          ID of the project, for which to return state variables.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: notebookId
        in: query
        description: |-
          Required.
          ID of the notebook, for which to return state variables.

          The maximum string length in characters is 200.
        schema:
          type: string
      - name: variableNames
        in: query
        description: Names of variables to return.
        schema:
          type: array
          items:
            type: string
      - name: checkpointId
        in: query
        description: ID of the checkpoint, for which to return state variables.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStateVariablesResponse'
      x-y-navtitle: getStateVariables
  /datasphere/v2/projects/{resourceId}:accessBindings:
    get:
      tags:
      - Project
      summary: Lists access bindings for the project.
      operationId: ProjectListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /datasphere/v2/projects/{resourceId}:setAccessBindings:
    post:
      tags:
      - Project
      summary: Sets access bindings for the project.
      operationId: ProjectSetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetProjectAccessBindingsMetadata'
      x-y-operation-response: Empty
  /datasphere/v2/projects/{resourceId}:updateAccessBindings:
    patch:
      tags:
      - Project
      summary: Updates access bindings for the project.
      operationId: ProjectUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateProjectAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    CellOutputsResponse:
      type: object
      properties:
        outputs:
          description: List of outputs.
          type: array
          items:
            type: string
    Community:
      type: object
      properties:
        id:
          description: ID of the community.
          type: string
        createdAt:
          description: "Time when community was created.\n\nString in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            text format. The range of possible values is from \n`0001-01-01T00:00:00Z`
            to `9999-12-31T23:59:59.999999999Z`, i.e. from 0 to 9 digits for fractions
            of a second.\n\nTo work with values in this field, use the APIs described
            in the \n[Protocol Buffers reference](https://developers.google.com/protocol-buffers/docs/reference/overview).
            \nIn some languages, built-in datetime utilities do not support nanosecond
            precision (9 digits)."
          type: string
          format: date-time
        name:
          description: Name of the community.
          type: string
        description:
          description: Description of the comminuty.
          type: string
        labels:
          description: Labels of the community.
          type: object
          additionalProperties:
            type: string
        createdById:
          description: ID of the user who created the community.
          type: string
        organizationId:
          description: ID of the organization to which community belongs.
          type: string
    CreateCommunityMetadata:
      type: object
      properties:
        communityId:
          description: ID of the community that is being created.
          type: string
    CreateCommunityRequest:
      type: object
      properties:
        name:
          description: |-
            Name of the community.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-zA-Z0-9ЁёА-я]\S{1,61}[a-zA-Z0-9ЁёА-я] ``.
          type: string
        description:
          description: Description of the community.
          type: string
        organizationId:
          description: |-
            Required.
            ID of the organization where community should be created.
          type: string
        billingAccountId:
          description: ID of the billing account for the created community. Optional,
            billing account could be bound to community later.
          type: string
        labels:
          description: Labels of the community.
          type: object
          additionalProperties:
            type: string
    CreateProjectMetadata:
      type: object
      properties:
        projectId:
          description: ID of the project that is being created.
          type: string
    CreateProjectRequest:
      type: object
      properties:
        communityId:
          description: |-
            Required.
            ID of the community to create a project in.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the project. 0-63 characters long.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the project. 0-256 characters long.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Labels of the project.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/ProjectSettings_in_CreateProjectRequest_settings'
        limits:
          $ref: '#/components/schemas/ProjectLimits_in_CreateProjectRequest_limits'
    DeleteCommunityMetadata:
      type: object
      properties:
        communityId:
          description: ID of the community that is being deleted.
          type: string
    DeleteProjectMetadata:
      type: object
      properties:
        projectId:
          description: ID of the project that is being deleted.
          type: string
    DownloadFileResponse:
      type: object
      allOf:
      - title: message
        type: object
        maxProperties: 1
        properties:
          metadata:
            $ref: '#/components/schemas/FileMetadata'
            description: Metadata of the downloaded file.
          chunk:
            description: Byte chunk of the downloaded file.
            type: string
            format: byte
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    ExecutionStatus:
      description: |2-
         - OK: Execution finished successfully.
         - ERROR: Execution ended with error.
         - ABORTED: Execution was aborted.
      type: string
      enum:
      - OK
      - ERROR
      - ABORTED
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FileMetadata:
      type: object
      properties:
        projectId:
          description: |-
            Required.
            ID of the Project resource associated with the file.

            The maximum string length in characters is 200.
          type: string
        path:
          description: File path.
          type: string
        sizeBytes:
          description: File size in bytes.
          type: string
          format: int64
    GetStateVariablesResponse:
      type: object
      properties:
        variables:
          description: Values of the specified variables.
          type: object
    GetUnitBalanceResponse:
      type: object
      properties:
        unitBalance:
          description: The number of units available to the project.
          type: integer
          format: int64
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListCommunitiesResponse:
      type: object
      properties:
        communities:
          description: List of communities matching filters in list communities request.
          type: array
          items:
            $ref: '#/components/schemas/Community'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/datasphere/api-ref/v2/Community/list#query_params), use
            the [nextPageToken](/docs/datasphere/api-ref/v2/Community/list#responses) as the value
            for the [pageToken](/docs/datasphere/api-ref/v2/Community/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/datasphere/api-ref/v2/Community/list#responses) to continue paging through the results.
          type: string
    ListProjectsResponse:
      type: object
      properties:
        projects:
          description: List of Project resources.
          type: array
          items:
            $ref: '#/components/schemas/Project'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/datasphere/api-ref/v2/Project/list#query_params), use
            the [nextPageToken](/docs/datasphere/api-ref/v2/Project/list#responses) as the value
            for the [pageToken](/docs/datasphere/api-ref/v2/Project/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/datasphere/api-ref/v2/Project/list#responses) to continue paging through the results.
          type: string
    OpenProjectMetadata:
      type: object
      properties:
        projectId:
          description: ID of the project that is being opened.
          type: string
        status:
          $ref: '#/components/schemas/OpenProjectMetadataOpenProjectStatus_in_OpenProjectMetadata_status'
    OpenProjectMetadataOpenProjectStatus:
      description: |2-
         - OPEN_PROJECT_STATUS_CLOSING_IDE: Closing previous IDE instance.
         - OPEN_PROJECT_STATUS_UNZIPPING_PROJECT: Unzipping project.
         - OPEN_PROJECT_STATUS_ALLOCATING_VM: Allocating VM for the project.
         - OPEN_PROJECT_STATUS_ALLOCATING_RESOURCES: Allocating resources for the project.
         - OPEN_PROJECT_STATUS_STARTING_IDE: Starting IDE.
         - OPEN_PROJECT_STATUS_APPLYING_CHECKPOINT: Applying checkpoint to project.
         - OPEN_PROJECT_STATUS_UNKNOWN: Unknown open project status.
      type: string
      enum:
      - OPEN_PROJECT_STATUS_CLOSING_IDE
      - OPEN_PROJECT_STATUS_UNZIPPING_PROJECT
      - OPEN_PROJECT_STATUS_ALLOCATING_VM
      - OPEN_PROJECT_STATUS_ALLOCATING_RESOURCES
      - OPEN_PROJECT_STATUS_STARTING_IDE
      - OPEN_PROJECT_STATUS_APPLYING_CHECKPOINT
      - OPEN_PROJECT_STATUS_UNKNOWN
    OpenProjectRequest:
      type: object
      properties: {}
    OpenProjectResponse:
      type: object
      properties:
        projectUrl:
          description: |-
            URL of the project that is being opened.
            Make GET request to `projectUrl` with sessionToken query parameter equals to `sessionToken`
            or POST request to `projectUrl` with sessionToken body parameter equals to `sessionToken`
            to fetch Datasphere web interface.
          type: string
        sessionToken:
          description: Session token of the project that is being opened.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: "Creation timestamp.\n\nString in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format. The range of possible values is from \n`0001-01-01T00:00:00Z`
              to `9999-12-31T23:59:59.999999999Z`, i.e. from 0 to 9 digits for fractions
              of a second.\n\nTo work with values in this field, use the APIs described
              in the \n[Protocol Buffers reference](https://developers.google.com/protocol-buffers/docs/reference/overview).
              \nIn some languages, built-in datetime utilities do not support nanosecond
              precision (9 digits)."
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: "The time when the Operation resource was last modified.\n\nString
              in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format. The
              range of possible values is from \n`0001-01-01T00:00:00Z` to `9999-12-31T23:59:59.999999999Z`,
              i.e. from 0 to 9 digits for fractions of a second.\n\nTo work with values
              in this field, use the APIs described in the \n[Protocol Buffers reference](https://developers.google.com/protocol-buffers/docs/reference/overview).
              \nIn some languages, built-in datetime utilities do not support nanosecond
              precision (9 digits)."
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/Status'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Project:
      description: A Project resource.
      type: object
      properties:
        id:
          description: ID of the project.
          type: string
        createdAt:
          description: "String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
            text format. The range of possible values is from \n`0001-01-01T00:00:00Z`
            to `9999-12-31T23:59:59.999999999Z`, i.e. from 0 to 9 digits for fractions
            of a second.\n\nTo work with values in this field, use the APIs described
            in the \n[Protocol Buffers reference](https://developers.google.com/protocol-buffers/docs/reference/overview).
            \nIn some languages, built-in datetime utilities do not support nanosecond
            precision (9 digits)."
          type: string
          format: date-time
        name:
          description: Name of the project. 1-63 characters long.
          type: string
        description:
          description: Description of the project. 0-256 characters long.
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        createdById:
          type: string
        settings:
          $ref: '#/components/schemas/ProjectSettings_in_Project_settings'
        limits:
          $ref: '#/components/schemas/ProjectLimits_in_Project_limits'
        communityId:
          description: ID of the community that the project belongs to.
          type: string
    ProjectExecutionMetadata:
      type: object
      allOf:
      - type: object
        properties:
          projectId:
            description: ID of the project in which notebook is being executed.
            type: string
      - title: target
        type: object
        maxProperties: 1
        properties:
          notebookId:
            description: |-
              ID of the notebook that is being executed

              The maximum string length in characters is 200.
            type: string
          cellId:
            description: |-
              ID of the cell that is being executed

              The maximum string length in characters is 200.
            type: string
    ProjectExecutionRequest:
      type: object
      allOf:
      - type: object
        properties:
          inputVariables:
            description: Values of input variables.
            type: object
          outputVariableNames:
            description: Names of output variables.
            type: array
            items:
              type: string
      - title: target
        type: object
        maxProperties: 1
        properties:
          notebookId:
            description: |-
              ID of the notebook to execute.

              The maximum string length in characters is 200.
            type: string
          cellId:
            description: |-
              ID of the cell to execute.

              The maximum string length in characters is 200.
            type: string
    ProjectExecutionResponse:
      type: object
      properties:
        checkpointId:
          description: ID of the checkpoint resulting from the execution.
          type: string
        outputVariables:
          description: Values of output variables resulting from the execution.
          type: object
        executionStatus:
          $ref: '#/components/schemas/ExecutionStatus_in_ProjectExecutionResponse_executionStatus'
    ProjectLimits:
      type: object
      properties:
        maxUnitsPerHour:
          description: The number of units that can be spent per hour.
          type: integer
          format: int64
        maxUnitsPerExecution:
          description: The number of units that can be spent on the one execution.
          type: integer
          format: int64
    ProjectSettings:
      type: object
      properties:
        serviceAccountId:
          description: ID of the service account, on whose behalf all operations with
            clusters will be performed.
          type: string
        subnetId:
          description: |-
            ID of the subnet where the DataProc cluster resides.
            Currently only subnets created in the availability zone ru-central1-a are supported.
          type: string
        dataProcClusterId:
          description: ID of the DataProc cluster.
          type: string
        commitMode:
          $ref: '#/components/schemas/ProjectSettingsCommitMode_in_ProjectSettings_commitMode'
        securityGroupIds:
          description: Network interfaces security groups.
          type: array
          items:
            type: string
        earlyAccess:
          description: Is early access preview enabled for the project.
          type: boolean
          format: boolean
        ide:
          $ref: '#/components/schemas/ProjectSettingsIde_in_ProjectSettings_ide'
        defaultFolderId:
          description: Default project folder ID.
          type: string
        staleExecTimeoutMode:
          $ref: '#/components/schemas/ProjectSettingsStaleExecutionTimeoutMode_in_ProjectSettings_staleExecTimeoutMode'
    ProjectSettingsCommitMode:
      description: |2-
         - STANDARD: Commit happens after the execution of a cell or group of cells or after completion with an error.
         - AUTO: Commit happens periodically.
        Also, automatic saving of state occurs when switching to another type of computing resource.
      type: string
      enum:
      - STANDARD
      - AUTO
    ProjectSettingsIde:
      description: ' - JUPYTER_LAB: Project running on JupyterLab IDE.'
      type: string
      enum:
      - JUPYTER_LAB
    ProjectSettingsStaleExecutionTimeoutMode:
      description: |2-
         - ONE_HOUR: Setting to automatically stop stale execution after one hour with low consumption.
         - THREE_HOURS: Setting to automatically stop stale execution after three hours with low consumption.
         - NO_TIMEOUT: Setting to never automatically stop stale executions.
      type: string
      enum:
      - ONE_HOUR
      - THREE_HOURS
      - NO_TIMEOUT
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).

            The maximum number of elements is 1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    SetCommunityAccessBindingsMetadata:
      type: object
      properties:
        communityId:
          description: ID of the community which access bindings are set.
          type: string
    SetProjectAccessBindingsMetadata:
      type: object
      properties:
        projectId:
          description: ID of the project which access bindings are set.
          type: string
    SetUnitBalanceMetadata:
      type: object
      properties:
        projectId:
          description: ID of the project which unit balance is set.
          type: string
    SetUnitBalanceRequest:
      type: object
      properties:
        unitBalance:
          description: The number of units available to the project.
          type: integer
          format: int64
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateCommunityAccessBindingsMetadata:
      type: object
      properties:
        communityId:
          description: ID of the community which access bindings are updated.
          type: string
    UpdateCommunityMetadata:
      type: object
      properties:
        communityId:
          description: ID of the community that is being updated.
          type: string
    UpdateCommunityRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateCommunityRequest_updateMask'
        name:
          description: Name of the community.
          type: string
        description:
          description: Description of the community.
          type: string
        labels:
          description: Labels of the community.
          type: object
          additionalProperties:
            type: string
    UpdateProjectAccessBindingsMetadata:
      type: object
      properties:
        projectId:
          description: ID of the project which access bindings are updated.
          type: string
    UpdateProjectMetadata:
      type: object
      properties:
        projectId:
          description: ID of the project that is being updated.
          type: string
    UpdateProjectRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateProjectRequest_updateMask'
        name:
          description: |-
            Name of the project. 0-63 characters long.

            The maximum string length in characters is 63.
            Value must match the regular expression `` [a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the project. 0-256 characters long.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Labels of the project.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        settings:
          $ref: '#/components/schemas/ProjectSettings_in_UpdateProjectRequest_settings'
        limits:
          $ref: '#/components/schemas/ProjectLimits_in_UpdateProjectRequest_limits'
    UploadFileResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/FileMetadata_in_UploadFileResponse_metadata'
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    ProjectSettings_in_CreateProjectRequest_settings:
      description: Settings of the project.
      type: object
      properties:
        serviceAccountId:
          description: ID of the service account, on whose behalf all operations with
            clusters will be performed.
          type: string
        subnetId:
          description: |-
            ID of the subnet where the DataProc cluster resides.
            Currently only subnets created in the availability zone ru-central1-a are supported.
          type: string
        dataProcClusterId:
          description: ID of the DataProc cluster.
          type: string
        commitMode:
          $ref: '#/components/schemas/ProjectSettingsCommitMode_in_ProjectSettings_commitMode'
        securityGroupIds:
          description: Network interfaces security groups.
          type: array
          items:
            type: string
        earlyAccess:
          description: Is early access preview enabled for the project.
          type: boolean
          format: boolean
        ide:
          $ref: '#/components/schemas/ProjectSettingsIde_in_ProjectSettings_ide'
        defaultFolderId:
          description: Default project folder ID.
          type: string
        staleExecTimeoutMode:
          $ref: '#/components/schemas/ProjectSettingsStaleExecutionTimeoutMode_in_ProjectSettings_staleExecTimeoutMode'
    ProjectLimits_in_CreateProjectRequest_limits:
      description: Limits of the project.
      type: object
      properties:
        maxUnitsPerHour:
          description: The number of units that can be spent per hour.
          type: integer
          format: int64
        maxUnitsPerExecution:
          description: The number of units that can be spent on the one execution.
          type: integer
          format: int64
    OpenProjectMetadataOpenProjectStatus_in_OpenProjectMetadata_status:
      description: |-
        Project opening status.

         - OPEN_PROJECT_STATUS_CLOSING_IDE: Closing previous IDE instance.
         - OPEN_PROJECT_STATUS_UNZIPPING_PROJECT: Unzipping project.
         - OPEN_PROJECT_STATUS_ALLOCATING_VM: Allocating VM for the project.
         - OPEN_PROJECT_STATUS_ALLOCATING_RESOURCES: Allocating resources for the project.
         - OPEN_PROJECT_STATUS_STARTING_IDE: Starting IDE.
         - OPEN_PROJECT_STATUS_APPLYING_CHECKPOINT: Applying checkpoint to project.
         - OPEN_PROJECT_STATUS_UNKNOWN: Unknown open project status.
      type: string
      enum:
      - OPEN_PROJECT_STATUS_CLOSING_IDE
      - OPEN_PROJECT_STATUS_UNZIPPING_PROJECT
      - OPEN_PROJECT_STATUS_ALLOCATING_VM
      - OPEN_PROJECT_STATUS_ALLOCATING_RESOURCES
      - OPEN_PROJECT_STATUS_STARTING_IDE
      - OPEN_PROJECT_STATUS_APPLYING_CHECKPOINT
      - OPEN_PROJECT_STATUS_UNKNOWN
    ProjectSettings_in_Project_settings:
      description: Settings of the project.
      type: object
      properties:
        serviceAccountId:
          description: ID of the service account, on whose behalf all operations with
            clusters will be performed.
          type: string
        subnetId:
          description: |-
            ID of the subnet where the DataProc cluster resides.
            Currently only subnets created in the availability zone ru-central1-a are supported.
          type: string
        dataProcClusterId:
          description: ID of the DataProc cluster.
          type: string
        commitMode:
          $ref: '#/components/schemas/ProjectSettingsCommitMode_in_ProjectSettings_commitMode'
        securityGroupIds:
          description: Network interfaces security groups.
          type: array
          items:
            type: string
        earlyAccess:
          description: Is early access preview enabled for the project.
          type: boolean
          format: boolean
        ide:
          $ref: '#/components/schemas/ProjectSettingsIde_in_ProjectSettings_ide'
        defaultFolderId:
          description: Default project folder ID.
          type: string
        staleExecTimeoutMode:
          $ref: '#/components/schemas/ProjectSettingsStaleExecutionTimeoutMode_in_ProjectSettings_staleExecTimeoutMode'
    ProjectLimits_in_Project_limits:
      description: Limits of the project.
      type: object
      properties:
        maxUnitsPerHour:
          description: The number of units that can be spent per hour.
          type: integer
          format: int64
        maxUnitsPerExecution:
          description: The number of units that can be spent on the one execution.
          type: integer
          format: int64
    ExecutionStatus_in_ProjectExecutionResponse_executionStatus:
      description: |-
        Execution final status.

         - OK: Execution finished successfully.
         - ERROR: Execution ended with error.
         - ABORTED: Execution was aborted.
      type: string
      enum:
      - OK
      - ERROR
      - ABORTED
    ProjectSettingsCommitMode_in_ProjectSettings_commitMode:
      description: |-
        Commit mode that is assigned to the project.

         - STANDARD: Commit happens after the execution of a cell or group of cells or after completion with an error.
         - AUTO: Commit happens periodically.
        Also, automatic saving of state occurs when switching to another type of computing resource.
      type: string
      enum:
      - STANDARD
      - AUTO
    ProjectSettingsIde_in_ProjectSettings_ide:
      description: |-
        Project IDE.

         - JUPYTER_LAB: Project running on JupyterLab IDE.
      type: string
      enum:
      - JUPYTER_LAB
    ProjectSettingsStaleExecutionTimeoutMode_in_ProjectSettings_staleExecTimeoutMode:
      description: |-
        Timeout to automatically stop stale executions.

         - ONE_HOUR: Setting to automatically stop stale execution after one hour with low consumption.
         - THREE_HOURS: Setting to automatically stop stale execution after three hours with low consumption.
         - NO_TIMEOUT: Setting to never automatically stop stale executions.
      type: string
      enum:
      - ONE_HOUR
      - THREE_HOURS
      - NO_TIMEOUT
    FieldMask_in_UpdateCommunityRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Community resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateProjectRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Project resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ProjectSettings_in_UpdateProjectRequest_settings:
      description: Settings of the project.
      type: object
      properties:
        serviceAccountId:
          description: ID of the service account, on whose behalf all operations with
            clusters will be performed.
          type: string
        subnetId:
          description: |-
            ID of the subnet where the DataProc cluster resides.
            Currently only subnets created in the availability zone ru-central1-a are supported.
          type: string
        dataProcClusterId:
          description: ID of the DataProc cluster.
          type: string
        commitMode:
          $ref: '#/components/schemas/ProjectSettingsCommitMode_in_ProjectSettings_commitMode'
        securityGroupIds:
          description: Network interfaces security groups.
          type: array
          items:
            type: string
        earlyAccess:
          description: Is early access preview enabled for the project.
          type: boolean
          format: boolean
        ide:
          $ref: '#/components/schemas/ProjectSettingsIde_in_ProjectSettings_ide'
        defaultFolderId:
          description: Default project folder ID.
          type: string
        staleExecTimeoutMode:
          $ref: '#/components/schemas/ProjectSettingsStaleExecutionTimeoutMode_in_ProjectSettings_staleExecTimeoutMode'
    ProjectLimits_in_UpdateProjectRequest_limits:
      description: Limits of the project.
      type: object
      properties:
        maxUnitsPerHour:
          description: The number of units that can be spent per hour.
          type: integer
          format: int64
        maxUnitsPerExecution:
          description: The number of units that can be spent on the one execution.
          type: integer
          format: int64
    FileMetadata_in_UploadFileResponse_metadata:
      description: Metadata of the uploaded file.
      type: object
      properties:
        projectId:
          description: |-
            Required.
            ID of the Project resource associated with the file.

            The maximum string length in characters is 200.
          type: string
        path:
          description: File path.
          type: string
        sizeBytes:
          description: File size in bytes.
          type: string
          format: int64
tags:
- name: Community
- name: ProjectData
  description: A set of methods for managing data of the Project resource.
- name: Project
  description: A set of methods for managing Project resources.
