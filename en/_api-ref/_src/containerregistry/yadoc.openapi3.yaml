openapi: 3.0.0
info:
  title: Container Registry API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://container-registry.api.cloud.yandex.net
paths:
  /container-registry/v1/images:
    get:
      tags:
      - Image
      summary: Retrieves the list of Image resources in the specified registry or
        repository.
      operationId: ImageList
      parameters:
      - name: registryId
        in: query
        description: |-
          ID of the registry to list Docker images in.

          [registryId](/docs/container-registry/api-ref/Image/list#query_params) is ignored if a [repositoryName](/docs/container-registry/api-ref/Image/list#query_params) is specified in the request.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: repositoryName
        in: query
        description: |-
          Name of the repository to list Docker images in.

          To get the repository name use a [list](/docs/container-registry/api-ref/Repository/list) request.

          Value must match the regular expression `` |[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))* ``.
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          ID of the folder to list Docker images in.

          [folderId](/docs/container-registry/api-ref/Image/list#query_params) is ignored if a [repositoryName](/docs/container-registry/api-ref/Image/list#query_params) or a [registryId](/docs/container-registry/api-ref/Image/list#query_params) are specified in the request.

          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Image/list#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Image/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Image/list#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Image.name](/docs/container-registry/api-ref/Image#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be a maximum of 256 characters long and match the regular expression `[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImagesResponse'
      x-y-navtitle: list
  /container-registry/v1/images/{imageId}:
    get:
      tags:
      - Image
      summary: Returns the specified Image resource.
      description: To get the list of available Image resources, make a [list](/docs/container-registry/api-ref/Image/list)
        request.
      operationId: ImageGet
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the Docker image resource to return.

          To get the Docker image ID use a [list](/docs/container-registry/api-ref/Image/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
      x-y-navtitle: get
    delete:
      tags:
      - Image
      summary: Deletes the specified Docker image.
      operationId: ImageDelete
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the Docker image to delete.

          To get Docker image ID use a [list](/docs/container-registry/api-ref/Image/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteImageMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/lifecyclePolicies/{lifecyclePolicyId}:
    get:
      tags:
      - LifecyclePolicy
      summary: Returns the specified lifecycle policy.
      description: To get the list of all available lifecycle policies, make a [list](/docs/container-registry/api-ref/LifecyclePolicy/list)
        request.
      operationId: LifecyclePolicyGet
      parameters:
      - name: lifecyclePolicyId
        in: path
        description: |-
          Required.
          ID of the lifecycle policy.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecyclePolicy'
      x-y-navtitle: get
    delete:
      tags:
      - LifecyclePolicy
      summary: Deletes the specified lifecycle policy.
      operationId: LifecyclePolicyDelete
      parameters:
      - name: lifecyclePolicyId
        in: path
        description: |-
          Required.
          ID of the lifecycle policy.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteLifecyclePolicyMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - LifecyclePolicy
      summary: Updates the specified lifecycle policy.
      operationId: LifecyclePolicyUpdate
      parameters:
      - name: lifecyclePolicyId
        in: path
        description: |-
          Required.
          ID of the lifecycle policy.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLifecyclePolicyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateLifecyclePolicyMetadata'
      x-y-operation-response: '[LifecyclePolicy](/docs/container-registry/api-ref/LifecyclePolicy#representation)'
  /container-registry/v1/lifecyclePolicies:
    get:
      tags:
      - LifecyclePolicy
      summary: Retrieves the list of lifecycle policies in the specified repository.
      operationId: LifecyclePolicyList
      parameters:
      - name: registryId
        in: query
        description: |-
          ID of the lifecycle policy.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: repositoryId
        in: query
        description: |-
          Repository of the lifecycle policy.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: "The maximum number of results per page to return. If the number
          of available\nresults is larger than `page_size`, the service returns \na
          [nextPageToken](/docs/container-registry/api-ref/LifecyclePolicy/list#responses)
          that can be used to get the next page of results in subsequent list requests.\nDefault
          value: 100.\n\nAcceptable values are 0 to 1000, inclusive."
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/container-registry/api-ref/LifecyclePolicy/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters lifecycle policy resources listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [LifecyclePolicy.name](/docs/container-registry/api-ref/LifecyclePolicy#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          Sorting the list by [LifecyclePolicy.name](/docs/container-registry/api-ref/LifecyclePolicy#representation), [LifecyclePolicy.createdAt](/docs/container-registry/api-ref/LifecyclePolicy#representation) and [LifecyclePolicy.status](/docs/container-registry/api-ref/LifecyclePolicy#representation) fields.
          The default sorting order is ascending.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLifecyclePoliciesResponse'
      x-y-navtitle: list
    post:
      tags:
      - LifecyclePolicy
      summary: Creates a lifecycle policy in the specified repository.
      operationId: LifecyclePolicyCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLifecyclePolicyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateLifecyclePolicyMetadata'
      x-y-operation-response: '[LifecyclePolicy](/docs/container-registry/api-ref/LifecyclePolicy#representation)'
  /container-registry/v1/dryRunLifecyclePolicy/{lifecyclePolicyId}:
    post:
      tags:
      - LifecyclePolicy
      summary: Creates a request of a dry run of the lifecycle policy.
      operationId: LifecyclePolicyDryRun
      parameters:
      - name: lifecyclePolicyId
        in: path
        description: |-
          Required.
          ID of the lifecycle policy.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DryRunLifecyclePolicyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: dryRun
      x-y-operation-metadata:
        $ref: '#/components/schemas/DryRunLifecyclePolicyMetadata'
      x-y-operation-response: '`DryRunLifecyclePolicyResult`'
  /container-registry/v1/dryRunLifecyclePolicyResults/{dryRunLifecyclePolicyResultId}:
    get:
      tags:
      - LifecyclePolicy
      summary: Returns the dry run result of the specified lifecycle policy.
      operationId: LifecyclePolicyGetDryRunResult
      parameters:
      - name: dryRunLifecyclePolicyResultId
        in: path
        description: |-
          Required.
          ID of the dry run result of the lifecycle policy.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DryRunLifecyclePolicyResult'
      x-y-navtitle: getDryRunResult
  /container-registry/v1/dryRunLifecyclePolicyResults:
    get:
      tags:
      - LifecyclePolicy
      summary: Retrieves the list of the dry run results.
      operationId: LifecyclePolicyListDryRunResults
      parameters:
      - name: lifecyclePolicyId
        in: query
        description: |-
          Required.
          ID of the lifecycle policy.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: "The maximum number of results per page to return. If the number
          of available\nresults is larger than `page_size`, the service returns \na
          [nextPageToken](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResults#responses)
          that can be used to get \nthe next page of results in subsequent list requests.\n\nAcceptable
          values are 0 to 1000, inclusive."
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResults#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters dry run results listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [LifecyclePolicy.name](/docs/container-registry/api-ref/LifecyclePolicy#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          Sorting the list by `runAt` and `affectedImagesCount` fields.
          The default sorting order is ascending.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDryRunLifecyclePolicyResultsResponse'
      x-y-navtitle: listDryRunResults
  /container-registry/v1/dryRunLifecyclePolicyResults/{dryRunLifecyclePolicyResultId}:affectedImages:
    get:
      tags:
      - LifecyclePolicy
      summary: Retrieves the list of the affected images.
      operationId: LifecyclePolicyListDryRunResultAffectedImages
      parameters:
      - name: dryRunLifecyclePolicyResultId
        in: path
        description: |-
          Required.
          ID of the dry run result of the lifecycle policy

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResultAffectedImages#responses)
          that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResultAffectedImages#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters affected images listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [LifecyclePolicy.name](/docs/container-registry/api-ref/LifecyclePolicy#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          Sorting the list by [LifecyclePolicy.name](/docs/container-registry/api-ref/LifecyclePolicy#representation) and [LifecyclePolicy.createdAt](/docs/container-registry/api-ref/LifecyclePolicy#representation) fields.
          The default sorting order is ascending.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDryRunLifecyclePolicyResultAffectedImagesResponse'
      x-y-navtitle: listDryRunResultAffectedImages
  /container-registry/v1/registries/{registryId}:
    get:
      tags:
      - Registry
      summary: Returns the specified Registry resource.
      description: To get the list of available Registry resources, make a [list](/docs/container-registry/api-ref/Registry/list)
        request.
      operationId: RegistryGet
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the Registry resource to return.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
      x-y-navtitle: get
    delete:
      tags:
      - Registry
      summary: Deletes the specified registry.
      operationId: RegistryDelete
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to delete.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRegistryMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Registry
      summary: Updates the specified registry.
      operationId: RegistryUpdate
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the Registry resource to update.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/container-registry/api-ref/Registry#representation)'
  /container-registry/v1/registries:
    get:
      tags:
      - Registry
      summary: Retrieves the list of Registry resources in the specified folder.
      operationId: RegistryList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list registries in.

          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Registry/list#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Registry/list#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Registry.name](/docs/container-registry/api-ref/Registry#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistriesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Registry
      summary: Creates a registry in the specified folder.
      operationId: RegistryCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/container-registry/api-ref/Registry#representation)'
  /container-registry/v1/registries/{resourceId}:listAccessBindings:
    get:
      tags:
      - Registry
      summary: Lists access bindings for the specified registry.
      operationId: RegistryListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /container-registry/v1/registries/{resourceId}:setAccessBindings:
    post:
      tags:
      - Registry
      summary: Sets access bindings for the specified registry.
      operationId: RegistrySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/registries/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Registry
      summary: Updates access bindings for the specified registry.
      operationId: RegistryUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/registries/{registryId}:listIpPermission:
    get:
      tags:
      - Registry
      summary: List ip permissions for the specified registry.
      operationId: RegistryListIpPermission
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the Registry to return ip permission list.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIpPermissionsResponse'
      x-y-navtitle: listIpPermission
  /container-registry/v1/registries/{registryId}:setIpPermission:
    post:
      tags:
      - Registry
      summary: Set ip permissions for the specified registry.
      operationId: RegistrySetIpPermission
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry for which ip permissions are being set.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIpPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setIpPermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetIpPermissionMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/registries/{registryId}:updateIpPermission:
    post:
      tags:
      - Registry
      summary: Update ip permissions for the specified registry.
      operationId: RegistryUpdateIpPermission
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry for which ip permissions are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIpPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateIpPermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateIpPermissionMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/repositories/{repositoryId}:
    get:
      tags:
      - Repository
      summary: Returns the specified Repository resource.
      description: To get the list of available Repository resources, make a [list](/docs/container-registry/api-ref/Repository/list)
        request.
      operationId: RepositoryGet
      parameters:
      - name: repositoryId
        in: path
        description: |-
          Required.
          ID of the Repository resource to return.

          To get the repository ID use a [list](/docs/container-registry/api-ref/Repository/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      x-y-navtitle: get
    delete:
      tags:
      - Repository
      summary: Deletes the specified repository.
      operationId: RepositoryDelete
      parameters:
      - name: repositoryId
        in: path
        description: |-
          Required.
          ID of the repository to delete.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRepositoryMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/repositories/{repositoryName}:byName:
    get:
      tags:
      - Repository
      summary: Returns the specified Repository resource.
      description: To get the list of available Repository resources, make a [list](/docs/container-registry/api-ref/Repository/list)
        request.
      operationId: RepositoryGetByName
      parameters:
      - name: repositoryName
        in: path
        description: |-
          Required.
          Name of the Repository resource to return.

          To get the repository name use a [list](/docs/container-registry/api-ref/Repository/list) request.

          Value must match the regular expression `` [a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      x-y-navtitle: getByName
  /container-registry/v1/repositories:
    get:
      tags:
      - Repository
      summary: Retrieves the list of Repository resources in the specified registry.
      operationId: RepositoryList
      parameters:
      - name: registryId
        in: query
        description: |-
          ID of the registry to list repositories in.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          ID of the folder to list registries in.

          [folderId](/docs/container-registry/api-ref/Repository/list#query_params) is ignored if a [registryId](/docs/container-registry/api-ref/Image/list#query_params) is specified in the request.

          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Repository/list#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Repository/list#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Repository.name](/docs/container-registry/api-ref/Repository#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Repository
      summary: Upserts a repository in the specified registry.
      operationId: RepositoryUpsert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertRepositoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: upsert
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpsertRepositoryMetadata'
      x-y-operation-response: '[Repository](/docs/container-registry/api-ref/Repository#representation)'
  /container-registry/v1/repositories/{resourceId}:listAccessBindings:
    get:
      tags:
      - Repository
      summary: Lists access bindings for the specified repository.
      operationId: RepositoryListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /container-registry/v1/repositories/{resourceId}:setAccessBindings:
    post:
      tags:
      - Repository
      summary: Sets access bindings for the specified repository.
      operationId: RepositorySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/repositories/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Repository
      summary: Updates access bindings for the specified repository.
      operationId: RepositoryUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/scans:
    get:
      tags:
      - Scanner
      summary: Retrieves the list of ScanResults for specified Image.
      operationId: ScannerList
      parameters:
      - name: imageId
        in: query
        description: The maximum string length in characters is 50.
        schema:
          type: string
      - name: repositoryId
        in: query
        description: The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Scanner/list#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Scanner/list#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on `status` field.
          2. An `=` operator.
          3. The value in double quotes (`"`).

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          An order expression that orders resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on `status` field.
          2. Order selector. Currently you can use ordering only on `ScanResult.status` field (critical first).

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScanResultsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Scanner
      summary: Executes scanning of specified image.
      operationId: ScannerScan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: scan
      x-y-operation-metadata:
        $ref: '#/components/schemas/ScanMetadata'
      x-y-operation-response: '`ScanResult`'
  /container-registry/v1/scans/{scanResultId}:
    get:
      tags:
      - Scanner
      summary: Returns the specified ScanResult resource.
      description: To get the list of ScanResults for specified Image, make a [list](/docs/container-registry/api-ref/Scanner/list)
        request.
      operationId: ScannerGet
      parameters:
      - name: scanResultId
        in: path
        description: |-
          Required.
          ID of the ScanResult to return.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
      x-y-navtitle: get
  /container-registry/v1/images/{imageId}:lastScanResult:
    get:
      tags:
      - Scanner
      summary: Returns the last finished ScanResult for the specified Image.
      operationId: ScannerGetLast
      parameters:
      - name: imageId
        in: path
        description: |-
          ID of the Image to get last finished ScanResult.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
      x-y-navtitle: getLast
  /container-registry/v1/scans/{scanResultId}:listVulnerabilities:
    get:
      tags:
      - Scanner
      summary: Retrieves the list of vulnerabilities found in particular scan.
      operationId: ScannerListVulnerabilities
      parameters:
      - name: scanResultId
        in: path
        description: |-
          Required.
          ID of the ScanResult to get list of vulnerabilities for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Scanner/listVulnerabilities#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Scanner/listVulnerabilities#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on `severity` and `name` fields.
          2. An `=` operator.
          3. The value in double quotes (`"`).

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          An order expression that orders resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on `severity` and `name` fields.
          2. Order selector. Currently you can use ordering only on `Vulnerability.severity` field (recent first).

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVulnerabilitiesResponse'
      x-y-navtitle: listVulnerabilities
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    Blob:
      description: A Blob resource.
      type: object
      properties:
        id:
          description: Output only. ID of the blob.
          type: string
        digest:
          description: Content-addressable identifier of the blob.
          type: string
        size:
          description: Size of the blob, specified in bytes.
          type: string
          format: int64
        urls:
          description: List of blob urls.
          type: array
          items:
            type: string
    CreateLifecyclePolicyMetadata:
      type: object
      properties:
        lifecyclePolicyId:
          description: ID of the lifecycle policy resource that is being created.
          type: string
    CreateLifecyclePolicyRequest:
      type: object
      properties:
        repositoryId:
          description: |-
            Required.
            ID of the lifecycle policy repository.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of lifecycle policy.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of lifecycle policy.

            The maximum string length in characters is 256.
          type: string
        status:
          $ref: '#/components/schemas/LifecyclePolicyStatus_in_CreateLifecyclePolicyRequest_status'
        rules:
          description: The rules of the lifecycle policy.
          type: array
          items:
            $ref: '#/components/schemas/LifecycleRule'
    CreateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that is being created.
          type: string
    CreateRegistryRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a registry in.

            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the registry.

            There may be only one registry per folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    DeleteImageMetadata:
      type: object
      properties:
        imageId:
          description: ID of the Docker image that is being deleted.
          type: string
    DeleteLifecyclePolicyMetadata:
      type: object
      properties:
        lifecyclePolicyId:
          description: ID of the lifecycle policy resource that is being deleted.
          type: string
    DeleteRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that is being deleted.
          type: string
    DeleteRepositoryMetadata:
      type: object
      properties:
        repositoryId:
          description: ID of the repository that is being deleted.
          type: string
    DryRunLifecyclePolicyMetadata:
      type: object
      properties:
        dryRunLifecyclePolicyResultId:
          description: ID of the dry run result of the lifecycle policy.
          type: string
        lifecyclePolicyId:
          description: ID of the lifecycle policy.
          type: string
    DryRunLifecyclePolicyRequest:
      type: object
      properties: {}
    DryRunLifecyclePolicyResult:
      type: object
      properties:
        dryRunLifecyclePolicyResultId:
          description: ID of the dry run result of the lifecycle policy.
          type: string
        lifecyclePolicyId:
          description: ID of the lifecycle policy.
          type: string
        runAt:
          description: |-
            Time of the getting result.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        affectedImagesCount:
          description: Count of affected images.
          type: string
          format: int64
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Image:
      description: An Image resource. For more information, see [Docker image](/docs/cloud/container-registry/docker-image).
      type: object
      properties:
        id:
          description: Output only. ID of the Docker image.
          type: string
        name:
          description: |-
            Name of the Docker image.
            The name is unique within the registry.
          type: string
        digest:
          description: Content-addressable identifier of the Docker image.
          type: string
        compressedSize:
          description: Compressed size of the Docker image, specified in bytes.
          type: string
          format: int64
        config:
          $ref: '#/components/schemas/Blob_in_Image_config'
        layers:
          description: Layers of the Docker image.
          type: array
          items:
            $ref: '#/components/schemas/Blob'
        tags:
          description: |-
            Tags of the Docker image.

            Each tag is unique within the repository.
          type: array
          items:
            type: string
        createdAt:
          description: |-
            Output only. Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    IpPermission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/IpPermissionAction_in_IpPermission_action'
        ip:
          type: string
    IpPermissionAction:
      type: string
      enum:
      - PULL
      - PUSH
    IpPermissionDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/IpPermissionDeltaAction_in_IpPermissionDelta_action'
        ipPermission:
          $ref: '#/components/schemas/IpPermission_in_IpPermissionDelta_ipPermission'
    IpPermissionDeltaAction:
      description: |2-
         - ADD: Addition of an ip permission.
         - REMOVE: Removal of an ip permission.
      type: string
      enum:
      - ADD
      - REMOVE
    LifecyclePolicy:
      type: object
      properties:
        id:
          description: ID of the lifecycle policy.
          type: string
        name:
          description: Name of the lifecycle policy.
          type: string
        repositoryId:
          description: |-
            ID of the repository that the lifecycle policy belongs to.
            Required. The maximum string length in characters is 50.
          type: string
        description:
          description: |-
            Description of the lifecycle policy.
            The maximum string length in characters is 256.
          type: string
        status:
          $ref: '#/components/schemas/LifecyclePolicyStatus_in_LifecyclePolicy_status'
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        rules:
          description: The rules of lifecycle policy.
          type: array
          items:
            $ref: '#/components/schemas/LifecycleRule'
    LifecyclePolicyStatus:
      description: |2-
         - ACTIVE: Policy is active and regularly deletes Docker images according to the established rules.
         - DISABLED: Policy is disabled and does not delete Docker images in the repository.
        Policies in this status can be used for preparing and testing rules.
      type: string
      enum:
      - ACTIVE
      - DISABLED
    LifecycleRule:
      type: object
      properties:
        description:
          description: |-
            Description of the lifecycle policy rule.

            The maximum string length in characters is 256.
          type: string
        expirePeriod:
          description: |-
            Period of time for automatic deletion.
            Period must be a multiple of 24 hours.

            The minimum value is 86400 seconds.
          type: string
        tagRegexp:
          description: |-
            Tag for specifying a filter in the form of a regular expression.

            The maximum string length in characters is 256.
          type: string
        untagged:
          description: Tag for applying the rule to Docker images without tags.
          type: boolean
          format: boolean
        retainedTop:
          description: |-
            Number of Docker images (falling under the specified filter by tags) that must be left, even if the expire_period has already expired.

            The minimum value is 0.
          type: string
          format: int64
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListDryRunLifecyclePolicyResultAffectedImagesResponse:
      type: object
      properties:
        affectedImages:
          description: List of affected images.
          type: array
          items:
            $ref: '#/components/schemas/Image'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResultAffectedImages#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResultAffectedImages#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListDryRunLifecyclePolicyResultsResponse:
      type: object
      properties:
        dryRunLifecyclePolicyResults:
          description: List of results of dry runs of a lifecycle policy.
          type: array
          items:
            $ref: '#/components/schemas/DryRunLifecyclePolicyResult'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResults#query_params) use `next_page_token` as the value
            for the [pageToken](/docs/container-registry/api-ref/LifecyclePolicy/listDryRunResults#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListImagesResponse:
      type: object
      properties:
        images:
          description: List of Image resources.
          type: array
          items:
            $ref: '#/components/schemas/Image'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Image/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Image/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) to continue paging through the results.
          type: string
    ListIpPermissionsResponse:
      type: object
      properties:
        permissions:
          description: List of ip permissions for registry
          type: array
          items:
            $ref: '#/components/schemas/IpPermission'
    ListLifecyclePoliciesResponse:
      type: object
      properties:
        lifecyclePolicies:
          description: List of lifecycle policies.
          type: array
          items:
            $ref: '#/components/schemas/LifecyclePolicy'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/container-registry/api-ref/LifecyclePolicy/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/container-registry/api-ref/LifecyclePolicy/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListRegistriesResponse:
      type: object
      properties:
        registries:
          description: List of Registry resources.
          type: array
          items:
            $ref: '#/components/schemas/Registry'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Registry/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Registry/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) to continue paging through the results.
          type: string
    ListRepositoriesResponse:
      type: object
      properties:
        repositories:
          description: List of Repository resources.
          type: array
          items:
            $ref: '#/components/schemas/Repository'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Repository/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Repository/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) to continue paging through the results.
          type: string
    ListScanResultsResponse:
      type: object
      properties:
        scanResults:
          description: List of ScanResult resources.
          type: array
          items:
            $ref: '#/components/schemas/ScanResult'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Image/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Scanner/list#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Image/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Scanner/list#responses) to continue paging through the results.
          type: string
    ListVulnerabilitiesResponse:
      type: object
      properties:
        vulnerabilities:
          description: List of Vulnerability resources.
          type: array
          items:
            $ref: '#/components/schemas/Vulnerability'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Image/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Scanner/listVulnerabilities#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Image/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Scanner/listVulnerabilities#responses) to continue paging through the results.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PackageVulnerability:
      description: A PackageVulnerability resource.
      type: object
      properties:
        name:
          description: Name of vulnerability in CVE database.
          type: string
        link:
          description: URL to the page with description of vulnerability.
          type: string
        package:
          description: The package name where vulnerability has been found.
          type: string
        source:
          description: 'The package manager name. Ex.: yum, rpm, dpkg.'
          type: string
        version:
          description: The version of the package where vulnerability has been found.
          type: string
        fixedBy:
          description: The version of the package where vulnerability has been fixed.
          type: string
    Registry:
      description: A Registry resource. For more information, see the [Registry](/docs/container-registry/concepts/registry)
        section of the documentation.
      type: object
      properties:
        id:
          description: Output only. ID of the registry.
          type: string
        folderId:
          description: ID of the folder that the registry belongs to.
          type: string
        name:
          description: Name of the registry.
          type: string
        status:
          $ref: '#/components/schemas/RegistryStatus_in_Registry_status'
        createdAt:
          description: |-
            Output only. Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        labels:
          description: Resource labels as `key:value` pairs. Maximum of 64 per resource.
          type: object
          additionalProperties:
            type: string
    RegistryStatus:
      description: |2-
         - CREATING: Registry is being created.
         - ACTIVE: Registry is ready to use.
         - DELETING: Registry is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    Repository:
      description: A Repository resource. For more information, see [Repository](/docs/cloud/container-registry/repository).
      type: object
      properties:
        name:
          description: |-
            Name of the repository.
            The name is unique within the registry.
          type: string
        id:
          description: Output only. ID of the repository.
          type: string
    ScanMetadata:
      type: object
      properties:
        scanResultId:
          description: ID of the ScanResult that is being created.
          type: string
    ScanRequest:
      type: object
      properties:
        imageId:
          description: |-
            Required.
            ID of the Image to be scanned for vulnerabilities.

            The maximum string length in characters is 50.
          type: string
    ScanResult:
      description: A ScanResult resource.
      type: object
      properties:
        id:
          description: Output only. ID of the ScanResult.
          type: string
        imageId:
          description: Output only. ID of the Image that the ScanResult belongs to.
          type: string
        scannedAt:
          description: |-
            Output only. The timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format when the scan been finished.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ScanResultStatus_in_ScanResult_status'
        vulnerabilities:
          $ref: '#/components/schemas/VulnerabilityStats_in_ScanResult_vulnerabilities'
    ScanResultStatus:
      description: |2-
         - RUNNING: Image scan is in progress.
         - READY: Image has been scanned and result is ready.
         - ERROR: Image scan is failed.
      type: string
      enum:
      - RUNNING
      - READY
      - ERROR
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).

            The maximum number of elements is 1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    SetIpPermissionMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that ip permission is being set.
          type: string
    SetIpPermissionRequest:
      type: object
      properties:
        ipPermission:
          description: IP permission to be set.
          type: array
          items:
            $ref: '#/components/schemas/IpPermission'
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateIpPermissionMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that ip permission is being updated.
          type: string
    UpdateIpPermissionRequest:
      type: object
      properties:
        ipPermissionDeltas:
          description: Updates to IP permissions.
          type: array
          items:
            $ref: '#/components/schemas/IpPermissionDelta'
    UpdateLifecyclePolicyMetadata:
      type: object
      properties:
        lifecyclePolicyId:
          description: ID of the lifecycle policy resource that is being updated.
          type: string
    UpdateLifecyclePolicyRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateLifecyclePolicyRequest_updateMask'
        name:
          description: |-
            Name of lifecycle policy.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of lifecycle policy.

            The maximum string length in characters is 256.
          type: string
        status:
          $ref: '#/components/schemas/LifecyclePolicyStatus_in_UpdateLifecyclePolicyRequest_status'
        rules:
          description: The rules of the lifecycle policy.
          type: array
          items:
            $ref: '#/components/schemas/LifecycleRule'
    UpdateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the Registry resource that is being updated.
          type: string
    UpdateRegistryRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateRegistryRequest_updateMask'
        name:
          description: |-
            Name of the registry.

            There may be only one registry per folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    UpsertRepositoryMetadata:
      type: object
      properties:
        repositoryId:
          description: ID of the repository that is being upserted.
          type: string
    UpsertRepositoryRequest:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the repository.

            The name of the repository should match the name of the images that will be pushed in the repository.

            Value must match the regular expression `` [a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))* ``.
          type: string
    Vulnerability:
      description: A Vulnerability resource.
      type: object
      allOf:
      - type: object
        properties:
          severity:
            $ref: '#/components/schemas/VulnerabilitySeverity'
            description: Output only. Severity of the Vulnerability.
      - title: vulnerability
        type: object
        maxProperties: 1
        properties:
          package:
            $ref: '#/components/schemas/PackageVulnerability'
    VulnerabilitySeverity:
      description: |2-
         - CRITICAL: Critical severity is a world-burning problem, exploitable for nearly all users.
        Includes remote root privilege escalations, or massive data loss.
         - HIGH: High severity is a real problem, exploitable for many users in a default installation.
        Includes serious remote denial of services, local root privilege escalations, or data loss.
         - MEDIUM: Medium severity is a real security problem, and is exploitable for many users.
        Includes network daemon denial of service attacks, cross-site scripting, and gaining user privileges.
        Updates should be made soon for this priority of issue.
         - LOW: Low severity is a security problem, but is hard to exploit due to environment, requires a user-assisted attack,
        a small install base, or does very little damage. These tend to be included in security updates only when
        higher priority issues require an update, or if many low priority issues have built up.
         - NEGLIGIBLE: Negligible severity is technically a security problem, but is only theoretical in nature, requires a very special situation,
        has almost no install base, or does no real damage. These tend not to get backport from upstream,
        and will likely not be included in security updates unless there is an easy fix and some other issue causes an update.
         - UNDEFINED: Unknown severity is either a security problem that has not been assigned to a priority yet or
        a priority that our system did not recognize.
      type: string
      enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - NEGLIGIBLE
      - UNDEFINED
    VulnerabilityStats:
      description: A VulnerabilityStats resource.
      type: object
      properties:
        critical:
          description: Count of CRITICAL vulnerabilities.
          type: string
          format: int64
        high:
          description: Count of HIGH vulnerabilities.
          type: string
          format: int64
        medium:
          description: Count of MEDIUM vulnerabilities.
          type: string
          format: int64
        low:
          description: Count of LOW vulnerabilities.
          type: string
          format: int64
        negligible:
          description: Count of NEGLIGIBLE vulnerabilities.
          type: string
          format: int64
        undefined:
          description: Count of other vulnerabilities.
          type: string
          format: int64
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    LifecyclePolicyStatus_in_CreateLifecyclePolicyRequest_status:
      description: |-
        Required.
        Status of the lifecycle policy.

         - ACTIVE: Policy is active and regularly deletes Docker images according to the established rules.
         - DISABLED: Policy is disabled and does not delete Docker images in the repository.
        Policies in this status can be used for preparing and testing rules.
      type: string
      enum:
      - ACTIVE
      - DISABLED
    Blob_in_Image_config:
      description: |-
        Configuration of the Docker image.

        A Blob resource.
      type: object
      properties:
        id:
          description: Output only. ID of the blob.
          type: string
        digest:
          description: Content-addressable identifier of the blob.
          type: string
        size:
          description: Size of the blob, specified in bytes.
          type: string
          format: int64
        urls:
          description: List of blob urls.
          type: array
          items:
            type: string
    IpPermissionAction_in_IpPermission_action:
      type: string
      enum:
      - PULL
      - PUSH
    IpPermissionDeltaAction_in_IpPermissionDelta_action:
      description: |-
        Required.
        The action that is being performed on an ip permission.

         - ADD: Addition of an ip permission.
         - REMOVE: Removal of an ip permission.
      type: string
      enum:
      - ADD
      - REMOVE
    IpPermission_in_IpPermissionDelta_ipPermission:
      description: |-
        Required.
        Ip permission.
      type: object
      properties:
        action:
          $ref: '#/components/schemas/IpPermissionAction_in_IpPermission_action'
        ip:
          type: string
    LifecyclePolicyStatus_in_LifecyclePolicy_status:
      description: |-
        Status of lifecycle policy.

         - ACTIVE: Policy is active and regularly deletes Docker images according to the established rules.
         - DISABLED: Policy is disabled and does not delete Docker images in the repository.
        Policies in this status can be used for preparing and testing rules.
      type: string
      enum:
      - ACTIVE
      - DISABLED
    RegistryStatus_in_Registry_status:
      description: |-
        Output only. Status of the registry.

         - CREATING: Registry is being created.
         - ACTIVE: Registry is ready to use.
         - DELETING: Registry is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    ScanResultStatus_in_ScanResult_status:
      description: |-
        Output only. The status of the ScanResult.

         - RUNNING: Image scan is in progress.
         - READY: Image has been scanned and result is ready.
         - ERROR: Image scan is failed.
      type: string
      enum:
      - RUNNING
      - READY
      - ERROR
    VulnerabilityStats_in_ScanResult_vulnerabilities:
      description: |-
        Output only. Summary information about vulnerabilities found.

        A VulnerabilityStats resource.
      type: object
      properties:
        critical:
          description: Count of CRITICAL vulnerabilities.
          type: string
          format: int64
        high:
          description: Count of HIGH vulnerabilities.
          type: string
          format: int64
        medium:
          description: Count of MEDIUM vulnerabilities.
          type: string
          format: int64
        low:
          description: Count of LOW vulnerabilities.
          type: string
          format: int64
        negligible:
          description: Count of NEGLIGIBLE vulnerabilities.
          type: string
          format: int64
        undefined:
          description: Count of other vulnerabilities.
          type: string
          format: int64
    FieldMask_in_UpdateLifecyclePolicyRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the lifecycle policy resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    LifecyclePolicyStatus_in_UpdateLifecyclePolicyRequest_status:
      description: |-
        Required.
        Status of the lifecycle policy.

         - ACTIVE: Policy is active and regularly deletes Docker images according to the established rules.
         - DISABLED: Policy is disabled and does not delete Docker images in the repository.
        Policies in this status can be used for preparing and testing rules.
      type: string
      enum:
      - ACTIVE
      - DISABLED
    FieldMask_in_UpdateRegistryRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Registry resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Image
  description: A set of methods for managing Image resources.
- name: LifecyclePolicy
  description: A set of methods for managing Lifecycle policy resources.
- name: Registry
  description: A set of methods for managing Registry resources.
- name: Repository
  description: A set of methods for managing Repository resources.
- name: Scanner
  description: A set of methods for scanning Docker images.
