openapi: "3.0"
info:
  title: Yandex Container Registry API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about Yandex.Cloud API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://container-registry.api.cloud.yandex.net
paths:
  /container-registry/v1/images:
    get:
      tags:
      - Image
      summary: Retrieves the list of Image resources in the specified registry or
        repository.
      operationId: ImageList
      parameters:
      - name: registryId
        in: query
        description: |-
          ID of the registry to list Docker images in.

          [registryId](/docs/container-registry/api-ref/Image/list#query_params) is ignored if a [repositoryName](/docs/container-registry/api-ref/Image/list#query_params) is specified in the request.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: repositoryName
        in: query
        description: |-
          Name of the repository to list Docker images in.

          To get the repository name use a [list](/docs/container-registry/api-ref/Repository/list) request.

          Value must match the regular expression `` |[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))* ``.
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          ID of the folder to list Docker images in.

          [folderId](/docs/container-registry/api-ref/Image/list#query_params) is ignored if a [repositoryName](/docs/container-registry/api-ref/Image/list#query_params) or a [registryId](/docs/container-registry/api-ref/Image/list#query_params) are specified in the request.

          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Image/list#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Image/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Image/list#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Image.name](/docs/container-registry/api-ref/Image#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be a maximum of 256 characters and match the regular expression `[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImagesResponse'
      x-y-navtitle: list
  /container-registry/v1/images/{imageId}:
    get:
      tags:
      - Image
      summary: Returns the specified Image resource.
      description: To get the list of available Image resources, make a [list](/docs/container-registry/api-ref/Image/list)
        request.
      operationId: ImageGet
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the Docker image resource to return.

          To get the Docker image ID use a [list](/docs/container-registry/api-ref/Image/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
      x-y-navtitle: get
    delete:
      tags:
      - Image
      summary: Deletes the specified Docker image.
      operationId: ImageDelete
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the Docker image to delete.

          To get Docker image ID use a [list](/docs/container-registry/api-ref/Image/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteImageMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/registries/{registryId}:
    get:
      tags:
      - Registry
      summary: Returns the specified Registry resource.
      description: To get the list of available Registry resources, make a [list](/docs/container-registry/api-ref/Registry/list)
        request.
      operationId: RegistryGet
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the Registry resource to return.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
      x-y-navtitle: get
    delete:
      tags:
      - Registry
      summary: Deletes the specified registry.
      operationId: RegistryDelete
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the registry to delete.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRegistryMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Registry
      summary: Updates the specified registry.
      operationId: RegistryUpdate
      parameters:
      - name: registryId
        in: path
        description: |-
          Required.
          ID of the Registry resource to update.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/container-registry/api-ref/Registry#representation)'
  /container-registry/v1/registries:
    get:
      tags:
      - Registry
      summary: Retrieves the list of Registry resources in the specified folder.
      operationId: RegistryList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list registries in.

          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Registry/list#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Registry/list#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Registry.name](/docs/container-registry/api-ref/Registry#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. Value or a list of values to compare against the values of the field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistriesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Registry
      summary: Creates a registry in the specified folder.
      operationId: RegistryCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/container-registry/api-ref/Registry#representation)'
  /container-registry/v1/registries/{resourceId}:listAccessBindings:
    get:
      tags:
      - Registry
      summary: Lists access bindings for the specified registry.
      operationId: RegistryListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than pageSize,
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set pageToken
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /container-registry/v1/registries/{resourceId}:setAccessBindings:
    post:
      tags:
      - Registry
      summary: Sets access bindings for the specified registry.
      operationId: RegistrySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/registries/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Registry
      summary: Updates access bindings for the specified registry.
      operationId: RegistryUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/repositories/{repositoryId}:
    get:
      tags:
      - Repository
      summary: Returns the specified Repository resource.
      description: To get the list of available Repository resources, make a [list](/docs/container-registry/api-ref/Repository/list)
        request.
      operationId: RepositoryGet
      parameters:
      - name: repositoryId
        in: path
        description: |-
          Required.
          ID of the Repository resource to return.

          To get the repository ID use a [list](/docs/container-registry/api-ref/Repository/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      x-y-navtitle: get
  /container-registry/v1/repositories:
    get:
      tags:
      - Repository
      summary: Retrieves the list of Repository resources in the specified registry.
      operationId: RepositoryList
      parameters:
      - name: registryId
        in: query
        description: |-
          ID of the registry to list repositories in.

          To get the registry ID use a [list](/docs/container-registry/api-ref/Registry/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          ID of the folder to list registries in.

          [folderId](/docs/container-registry/api-ref/Repository/list#query_params) is ignored if a [registryId](/docs/container-registry/api-ref/Image/list#query_params) is specified in the request.

          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/container-registry/api-ref/Repository/list#query_params),
          the service returns a [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/container-registry/api-ref/Repository/list#query_params) to the
          [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Repository.name](/docs/container-registry/api-ref/Repository#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. Value or a list of values to compare against the values of the field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      x-y-navtitle: list
  /container-registry/v1/repositories/{resourceId}:listAccessBindings:
    get:
      tags:
      - Repository
      summary: Lists access bindings for the specified repository.
      operationId: RepositoryListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than pageSize,
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set pageToken
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /container-registry/v1/repositories/{resourceId}:setAccessBindings:
    post:
      tags:
      - Repository
      summary: Sets access bindings for the specified repository.
      operationId: RepositorySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/repositories/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Repository
      summary: Updates access bindings for the specified repository.
      operationId: RepositoryUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the subject.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    Blob:
      description: A Blob resource.
      type: object
      properties:
        id:
          description: Output only. ID of the blob.
          type: string
        digest:
          description: Content-addressable identifier of the blob.
          type: string
        size:
          description: Size of the blob, specified in bytes.
          type: string
          format: int64
        urls:
          type: array
          items:
            type: string
    CreateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that is being created.
          type: string
    CreateRegistryRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a registry in.

            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the registry.

            There may be only one registry per folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    DeleteImageMetadata:
      type: object
      properties:
        imageId:
          description: ID of the Docker image that is being deleted.
          type: string
    DeleteRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the registry that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Image:
      description: An Image resource. For more information, see [Docker image](/docs/cloud/container-registry/docker-image).
      type: object
      properties:
        id:
          description: Output only. ID of the Docker image.
          type: string
        name:
          description: |-
            Name of the Docker image.
            The name is unique within the registry.
          type: string
        digest:
          description: Content-addressable identifier of the Docker image.
          type: string
        compressedSize:
          description: Compressed size of the Docker image, specified in bytes.
          type: string
          format: int64
        config:
          $ref: '#/components/schemas/Blob_in_Image_config'
        layers:
          description: Layers of the Docker image.
          type: array
          items:
            $ref: '#/components/schemas/Blob'
        tags:
          description: |-
            Tags of the Docker image.

            Each tag is unique within the repository.
          type: array
          items:
            type: string
        createdAt:
          description: |-
            Output only. Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than pageSize, use
            the nextPageToken as the value
            for the pageToken query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListImagesResponse:
      type: object
      properties:
        images:
          description: List of Image resources.
          type: array
          items:
            $ref: '#/components/schemas/Image'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Image/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Image/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) to continue paging through the results.
          type: string
    ListRegistriesResponse:
      type: object
      properties:
        registries:
          description: List of Registry resources.
          type: array
          items:
            $ref: '#/components/schemas/Registry'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Registry/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Registry/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) to continue paging through the results.
          type: string
    ListRepositoriesResponse:
      type: object
      properties:
        repositories:
          description: List of Repository resources.
          type: array
          items:
            $ref: '#/components/schemas/Repository'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/container-registry/api-ref/Repository/list#query_params), use
            the [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) as the value
            for the [pageToken](/docs/container-registry/api-ref/Repository/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) to continue paging through the results.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Registry:
      description: A Registry resource. For more information, see [Registry](/docs/cloud/containerregistry/registry).
      type: object
      properties:
        id:
          description: Output only. ID of the registry.
          type: string
        folderId:
          description: ID of the folder that the registry belongs to.
          type: string
        name:
          description: Name of the registry.
          type: string
        status:
          $ref: '#/components/schemas/RegistryStatus_in_Registry_status'
        createdAt:
          description: |-
            Output only. Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        labels:
          description: Resource labels as `key:value` pairs. Мaximum of 64 per resource.
          type: object
          additionalProperties:
            type: string
    RegistryStatus:
      description: |2-
         - CREATING: Registry is being created.
         - ACTIVE: Registry is ready to use.
         - DELETING: Registry is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    Repository:
      description: A Repository resource. For more information, see [Repository](/docs/cloud/container-registry/repository).
      type: object
      properties:
        name:
          description: |-
            Name of the repository.
            The name is unique within the registry.
          type: string
        id:
          description: Output only. ID of the repository.
          type: string
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Required.
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    Subject:
      type: object
      properties:
        id:
          description: |-
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the type is `system`.

            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the type is `userAccount` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Type of the subject.

            It can contain one of the following values:
            * `system`: System group. This type represents several accounts with a common system identifier.
            * `userAccount`: An user account (for example, "alice.the.girl@yandex.ru"). This type represents the [UserAccount](/docs/iam/api-ref/UserAccount#representation) resource.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: ID of the Registry resource that is being updated.
          type: string
    UpdateRegistryRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateRegistryRequest_updateMask'
        name:
          description: |-
            Name of the registry.

            There may be only one registry per folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the type is `system`.

            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the type is `userAccount` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Type of the subject.

            It can contain one of the following values:
            * `system`: System group. This type represents several accounts with a common system identifier.
            * `userAccount`: An user account (for example, "alice.the.girl@yandex.ru"). This type represents the [UserAccount](/docs/iam/api-ref/UserAccount#representation) resource.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the subject.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    Blob_in_Image_config:
      description: |-
        Configuration of the Docker image.

        A Blob resource.
      type: object
      properties:
        id:
          description: Output only. ID of the blob.
          type: string
        digest:
          description: Content-addressable identifier of the blob.
          type: string
        size:
          description: Size of the blob, specified in bytes.
          type: string
          format: int64
        urls:
          type: array
          items:
            type: string
    RegistryStatus_in_Registry_status:
      description: |-
        Output only. Status of the registry.

         - CREATING: Registry is being created.
         - ACTIVE: Registry is ready to use.
         - DELETING: Registry is being deleted.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    FieldMask_in_UpdateRegistryRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Registry resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Image
  description: A set of methods for managing Image resources.
- name: Registry
  description: A set of methods for managing Registry resources.
- name: Repository
  description: A set of methods for managing Repository resources.
