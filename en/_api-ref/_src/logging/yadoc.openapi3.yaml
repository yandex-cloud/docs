openapi: 3.0.0
info:
  title: Cloud Logging Service
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://logging.api.cloud.yandex.net
paths:
  /logging/v1/logGroups/{logGroupId}:
    get:
      tags:
      - LogGroup
      summary: Returns the specified log group.
      description: To get the list of all available log groups, make a [list](/docs/logging/api-ref/LogGroup/list)
        request.
      operationId: LogGroupGet
      parameters:
      - name: logGroupId
        in: path
        description: |-
          Required.
          ID of the log group to return.

          To get a log group ID make a [list](/docs/logging/api-ref/LogGroup/list) request.

          The maximum string length in characters is 64.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogGroup'
      x-y-navtitle: get
    delete:
      tags:
      - LogGroup
      summary: Deletes the specified log group.
      operationId: LogGroupDelete
      parameters:
      - name: logGroupId
        in: path
        description: |-
          Required.
          ID of the log group to delete.

          To get a log group ID make a [list](/docs/logging/api-ref/LogGroup/list) request.

          The maximum string length in characters is 64.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteLogGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - LogGroup
      summary: Updates the specified log group.
      operationId: LogGroupUpdate
      parameters:
      - name: logGroupId
        in: path
        description: |-
          Required.
          ID of the log group to update.

          To get a log group ID make a [list](/docs/logging/api-ref/LogGroup/list) request.

          The maximum string length in characters is 64.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLogGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateLogGroupMetadata'
      x-y-operation-response: '[LogGroup](/docs/logging/api-ref/LogGroup#representation)'
  /logging/v1/logGroups/{logGroupId}/stats:
    get:
      tags:
      - LogGroup
      summary: Returns stats for the specified log group.
      operationId: LogGroupStats
      parameters:
      - name: logGroupId
        in: path
        description: |-
          Required.
          ID of the log group to return stats for.

          To get a log group ID make a [list](/docs/logging/api-ref/LogGroup/list) request.

          The maximum string length in characters is 64.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLogGroupStatsResponse'
      x-y-navtitle: stats
  /logging/v1/logGroups:
    get:
      tags:
      - LogGroup
      summary: Retrieves the list of log groups in the specified folder.
      operationId: LogGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          Folder ID of the log groups to return.

          To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 64.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/logging/api-ref/LogGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/logging/api-ref/LogGroup/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters log groups listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can only be applied to the [LogGroup.name](/docs/logging/api-ref/LogGroup#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-log-group`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLogGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - LogGroup
      summary: Creates a log group in the specified folder.
      operationId: LogGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLogGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateLogGroupMetadata'
      x-y-operation-response: '[LogGroup](/docs/logging/api-ref/LogGroup#representation)'
  /logging/v1/logGroups/{logGroupId}:listResources:
    get:
      tags:
      - LogGroup
      summary: Retrieves the resources (type and IDs) in the specified log group.
      operationId: LogGroupListResources
      parameters:
      - name: logGroupId
        in: path
        description: |-
          Required.
          ID of the log group to list resources for.

          To get a log group ID make a [list](/docs/logging/api-ref/LogGroup/list) request.

          The maximum string length in characters is 64.
        required: true
        schema:
          type: string
      - name: type
        in: query
        description: |-
          Resource type to return resources for.

          If not specified, `ListResourcesResponse` will contain information about all resource types.

          The maximum string length in characters is 256.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesResponse'
      x-y-navtitle: listResources
  /logging/v1/logGroups/{logGroupId}/operations:
    get:
      tags:
      - LogGroup
      summary: Lists operations for the specified log group.
      operationId: LogGroupListOperations
      parameters:
      - name: logGroupId
        in: path
        description: |-
          Required.
          ID of the log group to list operations for.

          To get a log group ID make a [list](/docs/logging/api-ref/LogGroup/list) request.

          The maximum string length in characters is 64.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/logging/api-ref/LogGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/logging/api-ref/LogGroup/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can be applied to the [Operation.description](/docs/operation/api-ref/Operation#representation), [Operation.createdAt](/docs/operation/api-ref/Operation#representation), [Operation.modifiedAt](/docs/operation/api-ref/Operation#representation), [Operation.createdBy](/docs/operation/api-ref/Operation#representation), [Operation.done](/docs/operation/api-ref/Operation#representation) fields.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Examples of a filter: `done=false`, `created_by='John.Doe'`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      x-y-navtitle: listOperations
  /logging/v1/logGroups/{resourceId}:listAccessBindings:
    get:
      tags:
      - LogGroup
      summary: Lists existing access bindings for the specified log group.
      operationId: LogGroupListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /logging/v1/logGroups/{resourceId}:setAccessBindings:
    post:
      tags:
      - LogGroup
      summary: Sets access bindings for the specified log group.
      operationId: LogGroupSetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /logging/v1/logGroups/{resourceId}:updateAccessBindings:
    patch:
      tags:
      - LogGroup
      summary: Updates access bindings for the specified log group.
      operationId: LogGroupUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    CreateLogGroupMetadata:
      type: object
      properties:
        logGroupId:
          description: ID of the log group being created.
          type: string
    CreateLogGroupRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a log group in.

            To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 64.
          type: string
        name:
          description: |-
            Name of the log group.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{1,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            Description of the log group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Log group labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        retentionPeriod:
          description: |-
            Log group entry retention period.

            Entries will be present in group during this period.
            If specified, must be non-negative.
            Empty or zero value is treated as no limit.
          type: string
        dataStream:
          description: |-
            If specified, all log records will be written to this data stream

            The maximum string length in characters is 512.
          type: string
    Criteria:
      description: Read criteria. Should be used in initial `ReadRequest`.
      type: object
      properties:
        logGroupId:
          description: |-
            Required.
            ID of the log group to return.

            To get a log group ID make a [list](/docs/logging/api-ref/LogGroup/list) request.

            The maximum string length in characters is 64.
          type: string
        resourceTypes:
          description: |-
            List of resource types to limit log entries to.

            Empty list disables filter.

            The maximum number of elements is 100.
            Each value must match the regular expression `` |[a-zA-Z][-a-zA-Z0-9_.]{0,63} ``.
          type: array
          items:
            type: string
        resourceIds:
          description: |-
            List of resource IDs to limit log entries to.

            Empty list disables filter.

            The maximum number of elements is 100.
            Each value must match the regular expression `` |[a-zA-Z0-9][-a-zA-Z0-9_.]{0,63} ``.
          type: array
          items:
            type: string
        since:
          description: |-
            Lower bound of log entries timestamps.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        until:
          description: |-
            Upper bound of log entries timestamps.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        levels:
          description: |-
            List of log levels to limit log entries to.

            Empty list disables filter.

            The maximum number of elements is 10.
          type: array
          items:
            $ref: '#/components/schemas/LogLevelLevel'
        filter:
          description: |-
            Filter expression. For details about filtering, see [documentation](/docs/logging/concepts/filter).

            The maximum string length in characters is 1000.
          type: string
        streamNames:
          description: |-
            List of stream names to limit log entries to.

            Empty list disables filter.

            The maximum number of elements is 100.
            Each value must match the regular expression `` |[a-zA-Z][-a-zA-Z0-9_.]{0,63} ``.
          type: array
          items:
            type: string
        pageSize:
          description: |-
            The maximum number of results per page to return.

            Acceptable values are 1 to 1000, inclusive.
          type: string
          format: int64
        maxResponseSize:
          description: |-
            Limits response to maximum size in bytes. Prevents gRPC resource exhaustion.

            Default value for max response size is 3.5 MiB

            Acceptable values are 0 to 10485760, inclusive.
          type: string
          format: int64
    DeleteLogGroupMetadata:
      type: object
      properties:
        logGroupId:
          description: ID of the log group being deleted.
          type: string
    Destination:
      type: object
      allOf:
      - title: destination
        type: object
        maxProperties: 1
        properties:
          logGroupId:
            description: |-
              Entry should be written to log group resolved by ID.

              Value must match the regular expression `` ([a-zA-Z][-a-zA-Z0-9_.]{0,63})? ``.
            type: string
          folderId:
            description: |-
              Entry should be written to default log group for the folder.

              Value must match the regular expression `` ([a-zA-Z][-a-zA-Z0-9_.]{0,63})? ``.
            type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GetLogGroupStatsResponse:
      type: object
      properties:
        logGroupId:
          description: Log group ID the stats are returned for.
          type: string
        bytes:
          description: Size of data in log group in bytes.
          type: string
          format: int64
        records:
          description: Amount of records in log group.
          type: string
          format: int64
    IncomingLogEntry:
      type: object
      properties:
        timestamp:
          description: |-
            Required.
            Timestamp of the entry.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        level:
          $ref: '#/components/schemas/LogLevelLevel_in_IncomingLogEntry_level'
        message:
          description: Entry text message.
          type: string
        jsonPayload:
          description: Entry annotation.
          type: object
        streamName:
          description: |-
            Entry stream name.

            Value must match the regular expression `` |[a-zA-Z][-a-zA-Z0-9_.]{0,63} ``.
          type: string
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListLogGroupsResponse:
      type: object
      properties:
        groups:
          description: List of log groups in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/LogGroup'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/logging/api-ref/LogGroup/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/logging/api-ref/LogGroup/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified log group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/logging/api-ref/LogGroup/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/logging/api-ref/LogGroup/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListResourcesResponse:
      type: object
      properties:
        resources:
          description: List of resources present in log group.
          type: array
          items:
            $ref: '#/components/schemas/LogGroupResource'
    LogEntry:
      type: object
      properties:
        uid:
          description: |-
            Unique entry ID.

            Useful for logs deduplication.
          type: string
        resource:
          $ref: '#/components/schemas/LogEntryResource_in_LogEntry_resource'
        timestamp:
          description: |-
            Timestamp of the entry.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        ingestedAt:
          description: |-
            Entry ingestion time observed by `LogIngestion`.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        savedAt:
          description: |-
            Entry save time.

            Entry is ready to be read since this moment.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        level:
          $ref: '#/components/schemas/LogLevelLevel_in_LogEntry_level'
        message:
          description: Entry text message.
          type: string
        jsonPayload:
          description: Entry annotation.
          type: object
        streamName:
          description: |-
            Entry stream name.

            Value must match the regular expression `` |[a-zA-Z][-a-zA-Z0-9_.]{0,63} ``.
          type: string
    LogEntryDefaults:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/LogLevelLevel_in_LogEntryDefaults_level'
        jsonPayload:
          description: |-
            Default entry annotation.
            Will be merged with entry annotation.
            Any conflict will be resolved in favor of entry own annotation.
          type: object
        streamName:
          description: |-
            Entry stream name.

            Value must match the regular expression `` |[a-zA-Z][-a-zA-Z0-9_.]{0,63} ``.
          type: string
    LogEntryResource:
      description: |-
        Log entry resource specification.

        May be used either by services and by user.
      type: object
      properties:
        type:
          description: |-
            Resource type, i.e., `serverless.function`

            Value must match the regular expression `` ([a-zA-Z][-a-zA-Z0-9_.]{0,63})? ``.
          type: string
        id:
          description: |-
            Resource ID, i.e., ID of the function producing logs.

            Value must match the regular expression `` ([a-zA-Z0-9][-a-zA-Z0-9_.]{0,63})? ``.
          type: string
    LogGroup:
      type: object
      properties:
        id:
          description: Log group ID.
          type: string
        folderId:
          description: Log group folder ID.
          type: string
        cloudId:
          description: Log group cloud ID.
          type: string
        createdAt:
          description: |-
            Log group creation time.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Log group name.
          type: string
        description:
          description: Log group description.
          type: string
        labels:
          description: Log group labels.
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/LogGroupStatus_in_LogGroup_status'
        retentionPeriod:
          description: |-
            Log group entry retention period.

            Entries will be present in group during this period.
          type: string
        dataStream:
          description: Data stream name
          type: string
    LogGroupResource:
      description: Log group resource.
      type: object
      properties:
        type:
          description: |-
            Resource type.

            Collected from log entries inside log group.
          type: string
        ids:
          description: List of resource IDs with the same resource type.
          type: array
          items:
            type: string
    LogGroupStatus:
      description: |-
        Possible log group statuses.

         - STATUS_UNSPECIFIED: Unknown status.

        Should never occur.
         - CREATING: Log group is creating.
         - ACTIVE: Log group is ready to accept messages,
         - DELETING: Log group is being deleted.

        No messages will be accepted.
         - ERROR: Log group is in failed state.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    LogLevelLevel:
      description: |-
        Possible log levels for entries.

         - LEVEL_UNSPECIFIED: Default log level.

        Equivalent to not specifying log level at all.
         - TRACE: Trace log level.

        Possible use case: verbose logging of some business logic.
         - DEBUG: Debug log level.

        Possible use case: debugging special cases in application logic.
         - INFO: Info log level.

        Mostly used for information messages.
         - WARN: Warn log level.

        May be used to alert about significant events.
         - ERROR: Error log level.

        May be used to alert about errors in infrastructure, logic, etc.
         - FATAL: Fatal log level.

        May be used to alert about unrecoverable failures and events.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    ReadResponse:
      type: object
      properties:
        logGroupId:
          description: Log group ID the read was performed from.
          type: string
        entries:
          description: List of matching log entries.
          type: array
          items:
            $ref: '#/components/schemas/LogEntry'
        nextPageToken:
          description: |-
            Token for getting the next page of the log entries.

            After getting log entries initially with `Criteria`, you can use `next_page_token` as the value
            for the [ReadRequest.page_token] parameter in the next read request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
        previousPageToken:
          description: |-
            Token for getting the previous page of the log entries.

            After getting log entries initially with `Criteria`, you can use `previous_page_token` as the value
            for the [ReadRequest.page_token] parameter in the next read request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).

            The maximum number of elements is 1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateLogGroupMetadata:
      type: object
      properties:
        logGroupId:
          description: ID of the log group being updated.
          type: string
    UpdateLogGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateLogGroupRequest_updateMask'
        name:
          description: |-
            New name of the log group.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{1,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            New Description of the log group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            New log group labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        retentionPeriod:
          description: |-
            New log group entry retention period.

            Entries will be present in group during this period.
            If specified, must be non-negative.
            Empty or zero value is treated as no limit.
          type: string
        dataStream:
          description: |-
            If specified, log records will be written to this data stream

            The maximum string length in characters is 512.
          type: string
    WriteResponse:
      type: object
      properties:
        errors:
          description: |-
            Map<idx, status> of ingest failures.

            If entry with idx N is absent, it was ingested successfully.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/rpcStatus'
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    LogLevelLevel_in_IncomingLogEntry_level:
      description: |-
        Entry severity.

        See `LogLevelLevel` for details.

        Possible log levels for entries.

         - LEVEL_UNSPECIFIED: Default log level.

        Equivalent to not specifying log level at all.
         - TRACE: Trace log level.

        Possible use case: verbose logging of some business logic.
         - DEBUG: Debug log level.

        Possible use case: debugging special cases in application logic.
         - INFO: Info log level.

        Mostly used for information messages.
         - WARN: Warn log level.

        May be used to alert about significant events.
         - ERROR: Error log level.

        May be used to alert about errors in infrastructure, logic, etc.
         - FATAL: Fatal log level.

        May be used to alert about unrecoverable failures and events.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
    LogEntryResource_in_LogEntry_resource:
      description: |-
        Entry resource specification.

        May contain information about source service and resource ID.
        Also may be provided by the user.

        Log entry resource specification.

        May be used either by services and by user.
      type: object
      properties:
        type:
          description: |-
            Resource type, i.e., `serverless.function`

            Value must match the regular expression `` ([a-zA-Z][-a-zA-Z0-9_.]{0,63})? ``.
          type: string
        id:
          description: |-
            Resource ID, i.e., ID of the function producing logs.

            Value must match the regular expression `` ([a-zA-Z0-9][-a-zA-Z0-9_.]{0,63})? ``.
          type: string
    LogLevelLevel_in_LogEntry_level:
      description: |-
        Entry severity.

        See `LogLevelLevel` for details.

        Possible log levels for entries.

         - LEVEL_UNSPECIFIED: Default log level.

        Equivalent to not specifying log level at all.
         - TRACE: Trace log level.

        Possible use case: verbose logging of some business logic.
         - DEBUG: Debug log level.

        Possible use case: debugging special cases in application logic.
         - INFO: Info log level.

        Mostly used for information messages.
         - WARN: Warn log level.

        May be used to alert about significant events.
         - ERROR: Error log level.

        May be used to alert about errors in infrastructure, logic, etc.
         - FATAL: Fatal log level.

        May be used to alert about unrecoverable failures and events.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
    LogLevelLevel_in_LogEntryDefaults_level:
      description: |-
        Default entry severity.
        Will be applied if entry level is unspecified.

        See `LogLevelLevel` for details.

        Possible log levels for entries.

         - LEVEL_UNSPECIFIED: Default log level.

        Equivalent to not specifying log level at all.
         - TRACE: Trace log level.

        Possible use case: verbose logging of some business logic.
         - DEBUG: Debug log level.

        Possible use case: debugging special cases in application logic.
         - INFO: Info log level.

        Mostly used for information messages.
         - WARN: Warn log level.

        May be used to alert about significant events.
         - ERROR: Error log level.

        May be used to alert about errors in infrastructure, logic, etc.
         - FATAL: Fatal log level.

        May be used to alert about unrecoverable failures and events.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
    LogGroupStatus_in_LogGroup_status:
      description: |-
        Status of the log group.

        Possible log group statuses.

         - STATUS_UNSPECIFIED: Unknown status.

        Should never occur.
         - CREATING: Log group is creating.
         - ACTIVE: Log group is ready to accept messages,
         - DELETING: Log group is being deleted.

        No messages will be accepted.
         - ERROR: Log group is in failed state.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    FieldMask_in_UpdateLogGroupRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the function should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: LogGroup
  description: A set of methods for managing log groups.
- name: LogIngestion
  description: A set of methods for writing to log groups. To make a request use `ingester.logging.yandexcloud.net`.
- name: LogReading
  description: A set of methods for reading from log groups. To make a request use
    `reader.logging.yandexcloud.net`.
