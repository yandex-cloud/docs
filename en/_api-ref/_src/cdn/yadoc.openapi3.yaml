openapi: 3.0.0
info:
  title: Cloud CDN API
  description: This API reference is organized around CDN resources. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://cdn.api.cloud.yandex.net
paths:
  /cdn/v1/cache/{resourceId}:purge:
    post:
      tags:
      - Cache
      summary: Removes specified files from the cache of the specified resource. For
        details about purging, see [documentation](/docs/cdn/concepts/caching#purge).
      description: Purging may take up to 15 minutes.
      operationId: CachePurge
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to perform purge operation on.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeCacheRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: purge
      x-y-operation-metadata:
        $ref: '#/components/schemas/PurgeCacheMetadata'
      x-y-operation-response: Empty
  /cdn/v1/cache/{resourceId}:prefetch:
    post:
      tags:
      - Cache
      summary: Uploads specified files from origins to cache of the specified resource.
        For defails about prefetching, see [documentation](/docs/cdn/concepts/caching#prefetch).
      operationId: CachePrefetch
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to perform prefetch operation on.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrefetchCacheRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: prefetch
      x-y-operation-metadata:
        $ref: '#/components/schemas/PrefetchCacheMetadata'
      x-y-operation-response: Empty
  /cdn/v1/originGroups/{originGroupId}:
    get:
      tags:
      - OriginGroup
      summary: Gets origin group with specified origin group id.
      operationId: OriginGroupGet
      parameters:
      - name: originGroupId
        in: path
        description: |-
          ID of the origin group to return.

          To get a origin group ID, make a [list](/docs/cdn/api-ref/OriginGroup/list) request.

          Value must be greater than 0.
        required: true
        schema:
          type: string
          format: int64
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the origin group belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginGroup'
      x-y-navtitle: get
    delete:
      tags:
      - OriginGroup
      summary: Deletes origin group with specified origin group id.
      operationId: OriginGroupDelete
      parameters:
      - name: originGroupId
        in: path
        description: |-
          ID of the origin group.

          Value must be greater than 0.
        required: true
        schema:
          type: string
          format: int64
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the origin group belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteOriginGroupMetadata'
      x-y-operation-response: Empty
  /cdn/v1/originGroups:
    get:
      tags:
      - OriginGroup
      summary: Lists origins of origin group.
      operationId: OriginGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the origin group belongs to..

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/cdn/api-ref/OriginGroup/list#query_params),
          the service returns a [nextPageToken](/docs/cdn/api-ref/OriginGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/cdn/api-ref/OriginGroup/list#query_params) to the [nextPageToken](/docs/cdn/api-ref/OriginGroup/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOriginGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - OriginGroup
      summary: Creates origin group.
      operationId: OriginGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOriginGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateOriginGroupMetadata'
      x-y-operation-response: '[OriginGroup](/docs/cdn/api-ref/OriginGroup#representation)'
    patch:
      tags:
      - OriginGroup
      summary: Updates the specified origin group.
      description: |-
        Changes may take up to 15 minutes to apply. Afterwards, it is recommended to purge cache of the resources that
        use the origin group via a [purge](/docs/cdn/api-ref/Cache/purge) request.
      operationId: OriginGroupUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOriginGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateOriginGroupMetadata'
      x-y-operation-response: '[OriginGroup](/docs/cdn/api-ref/OriginGroup#representation)'
  /cdn/v1/origins/{originId}:
    get:
      tags:
      - Origin
      summary: Get origin in origin group.
      operationId: OriginGet
      parameters:
      - name: originId
        in: path
        description: |-
          [originId](/docs/cdn/api-ref/Origin/get#path_params) group ID to request origin from.

          Value must be greater than 0.
        required: true
        schema:
          type: string
          format: int64
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the origin belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1Origin'
      x-y-navtitle: get
    delete:
      tags:
      - Origin
      summary: Deletes origin from origin group.
      operationId: OriginDelete
      parameters:
      - name: originId
        in: path
        description: |-
          ID of the origin.

          Value must be greater than 0.
        required: true
        schema:
          type: string
          format: int64
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the origin belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteOriginMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Origin
      summary: Updates the specified origin from the origin group.
      description: |-
        Changes may take up to 15 minutes to apply. Afterwards, it is recommended to purge cache of the resources that
        use the origin via a [purge](/docs/cdn/api-ref/Cache/purge) request.
      operationId: OriginUpdate
      parameters:
      - name: originId
        in: path
        description: |-
          ID of the origin.

          Value must be greater than 0.
        required: true
        schema:
          type: string
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOriginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateOriginMetadata'
      x-y-operation-response: '[Origin](/docs/cdn/api-ref/Origin#representation)'
  /cdn/v1/origins:
    get:
      tags:
      - Origin
      summary: Lists origins of origin group.
      operationId: OriginList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the origin belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: originGroupId
        in: query
        description: |-
          ID of the group to request origins from.

          Value must be greater than 0.
        schema:
          type: string
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOriginsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Origin
      summary: Creates origin inside origin group.
      operationId: OriginCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOriginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateOriginMetadata'
      x-y-operation-response: '[Origin](/docs/cdn/api-ref/Origin#representation)'
  /cdn/v1/providers:activate:
    post:
      tags:
      - Provider
      summary: Activate provider for specified client.
      operationId: ProviderActivate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateProviderRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: activate
      x-y-operation-metadata:
        $ref: '#/components/schemas/ActivateProviderMetadata'
      x-y-operation-response: Empty
  /cdn/v1/providers:
    get:
      tags:
      - Provider
      summary: List activated providers for specified client.
      operationId: ProviderListActivated
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder that the activate provider belongs to.

          The maximum string length in characters is 50.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActivatedProvidersResponse'
      x-y-navtitle: listActivated
  /cdn/v1/rawLogs:activate:
    post:
      tags:
      - RawLogs
      operationId: RawLogsActivate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateRawLogsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: activate
      x-y-operation-metadata:
        $ref: '#/components/schemas/ActivateRawLogsMetadata'
      x-y-operation-response: '`ActivateRawLogsResponse`'
  /cdn/v1/rawLogs/{resourceId}:
    get:
      tags:
      - RawLogs
      operationId: RawLogsGet
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of CDN resource to request status and settings.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRawLogsResponse'
      x-y-navtitle: get
    post:
      tags:
      - RawLogs
      operationId: RawLogsDeactivate
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of CDN resource to deactivate Raw Logs for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deactivate
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeactivateRawLogsMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - RawLogs
      operationId: RawLogsUpdate
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of CDN resource.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRawLogsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateRawLogsMetadata'
      x-y-operation-response: '`UpdateRawLogsResponse`'
  /cdn/v1/resources/{resourceId}:
    get:
      tags:
      - Resource
      summary: Get client's CDN resource by resource id.
      operationId: ResourceGet
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the requested resource.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
      x-y-navtitle: get
    delete:
      tags:
      - Resource
      summary: Deletes client's CDN resource.
      operationId: ResourceDelete
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of resource to delete.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteResourceMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Resource
      summary: Updates the specified CDN resource.
      description: |-
        The method implements patch behaviour, i.e. only the fields specified in the request are updated in the resource.

        Changes may take up to 15 minutes to apply. Afterwards, it is recommended to purge the resource's cache via a
        [purge](/docs/cdn/api-ref/Cache/purge) request.
      operationId: ResourceUpdate
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of updated resource.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateResourceMetadata'
      x-y-operation-response: '[Resource](/docs/cdn/api-ref/Resource#representation)'
  /cdn/v1/resources:
    get:
      tags:
      - Resource
      summary: Lists CDN resources.
      operationId: ResourceList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to request listing for.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/cdn/api-ref/Resource/list#query_params),
          the service returns a [nextPageToken](/docs/cdn/api-ref/Resource/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/cdn/api-ref/Resource/list#query_params) to the [nextPageToken](/docs/cdn/api-ref/Resource/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Resource
      summary: Creates a CDN resource in the specified folder.
      description: Creation may take up to 15 minutes.
      operationId: ResourceCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateResourceMetadata'
      x-y-operation-response: '[Resource](/docs/cdn/api-ref/Resource#representation)'
  /cdn/v1/cname/{folderId}:
    get:
      tags:
      - Resource
      summary: |-
        Get Provider's CNAME (edge endpoint) bind to specified folder id.
        Returns UNIMPLEMENTED error, if provider doesn't support CNAME request.
      operationId: ResourceGetProviderCName
      parameters:
      - name: folderId
        in: path
        description: |-
          Required.
          Folder ID to get provider's CNAME.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProviderCNameResponse'
      x-y-navtitle: getProviderCName
components:
  schemas:
    ActivateProviderMetadata:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder that the activate provider belongs to.

            The maximum string length in characters is 50.
          type: string
    ActivateProviderRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder that the activate provider belongs to.

            The maximum string length in characters is 50.
          type: string
        providerType:
          description: |-
            Required.
            Specify provider brand/type.

            Possible values: `gcore`.

            The maximum string length in characters is 50.
          type: string
    ActivateRawLogsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of resource with activated raw logs.
          type: string
    ActivateRawLogsRequest:
      type: object
      properties:
        resourceId:
          description: |-
            Required.
            ID of CDN resource to switch logs storage for..

            The maximum string length in characters is 50.
          type: string
        settings:
          $ref: '#/components/schemas/RawLogsSettings_in_ActivateRawLogsRequest_settings'
    ActivateRawLogsResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RawLogsStatus_in_ActivateRawLogsResponse_status'
        settings:
          $ref: '#/components/schemas/RawLogsSettings_in_ActivateRawLogsResponse_settings'
    CreateOriginGroupMetadata:
      type: object
      properties:
        originGroupId:
          description: |-
            ID of created origin group.

            Value must be greater than 0.
          type: string
          format: int64
    CreateOriginGroupRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder that the origin group belongs to.

            The maximum string length in characters is 50.
          type: string
        name:
          description: Name of the origin group.
          type: string
        useNext:
          description: |-
            This option have two possible conditions:
             true - The option is active. In case the origin responds with 4XX or 5XX codes,
                    use the next origin from the list.
             false - The option is disabled.

             default value is true
          type: boolean
          format: boolean
        origins:
          description: |-
            List of origins: IP addresses or Domain names of your origins and the port
            (if custom).
          type: array
          items:
            $ref: '#/components/schemas/OriginParams'
    CreateOriginMetadata:
      type: object
      properties:
        originId:
          description: |-
            ID of the origin.

            Value must be greater than 0.
          type: string
          format: int64
        originGroupId:
          description: |-
            ID pf the parent origins group.

            Value must be greater than 0.
          type: string
          format: int64
    CreateOriginRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder that the origin belongs to.

            The maximum string length in characters is 50.
          type: string
        originGroupId:
          description: |-
            [originGroupId](/docs/cdn/api-ref/Origin/create#body_params) group ID to request origins from.

            Value must be greater than 0.
          type: string
          format: int64
        source:
          description: |-
            Required.
            IP address or Domain name of your origin and the port (if custom).
            Used if [meta](/docs/cdn/api-ref/Origin/create#body_params) variant is `common`.

            The maximum string length in characters is 50.
          type: string
        enabled:
          description: |-
            The setting allows to enable or disable an Origin source in the Origins group.

            It has two possible values:

            True - The origin is enabled and used as a source for the CDN. An origins
            group must contain at least one enabled origin. Default value.
            False - The origin is disabled and the CDN is not using it to pull content.
          type: boolean
          format: boolean
        backup:
          description: "Specifies whether the origin is used in its origin group as
            backup. \nA backup origin is used when one of active origins becomes unavailable.\n\nDefault
            value: False."
          type: boolean
          format: boolean
        meta:
          $ref: '#/components/schemas/OriginMeta_in_CreateOriginRequest_meta'
    CreateResourceMetadata:
      type: object
      properties:
        resourceId:
          description: |-
            Required.
            ID of created resource.

            The maximum string length in characters is 50.
          type: string
    CreateResourceRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the to bind with new resource.

            The maximum string length in characters is 50.
          type: string
        cname:
          description: |-
            Required.
            CDN endpoint CNAME, must be unique among clients's resources.
          type: string
        origin:
          $ref: '#/components/schemas/CreateResourceRequestOrigin_in_CreateResourceRequest_origin'
        secondaryHostnames:
          $ref: '#/components/schemas/SecondaryHostnames_in_CreateResourceRequest_secondaryHostnames'
        originProtocol:
          $ref: '#/components/schemas/OriginProtocol_in_CreateResourceRequest_originProtocol'
        active:
          description: |-
            Flag to create Resource either in active or disabled state.
            In active state Origins payload could be transmitted from CDN CNAME requests.
            Default value: true
          type: boolean
          format: boolean
        options:
          $ref: '#/components/schemas/ResourceOptions_in_CreateResourceRequest_options'
        sslCertificate:
          $ref: '#/components/schemas/SSLTargetCertificate_in_CreateResourceRequest_sslCertificate'
    CreateResourceRequestOrigin:
      type: object
      allOf:
      - title: origin_variant
        type: object
        maxProperties: 1
        properties:
          originGroupId:
            description: ID of pre-created origin group.
            type: string
            format: int64
          originSource:
            description: |-
              Create new Origins group with single source, it's id will be
              returned in result.
            type: string
          originSourceParams:
            $ref: '#/components/schemas/ResourceOriginParams'
            description: Set up resource origin parameters.
    DeactivateRawLogsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of CDN resource.
          type: string
    DeleteOriginGroupMetadata:
      type: object
      properties:
        originGroupId:
          description: |-
            ID of the origin group.

            Value must be greater than 0.
          type: string
          format: int64
    DeleteOriginMetadata:
      type: object
      properties:
        originId:
          description: |-
            ID of the origin.

            Value must be greater than 0.
          type: string
          format: int64
    DeleteResourceMetadata:
      type: object
      properties:
        resourceId:
          description: ID of deleted resource.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    GetProviderCNameResponse:
      type: object
      properties:
        cname:
          description: Provider's CNAME.
          type: string
        folderId:
          description: ID of the folder that the provider belongs to.
          type: string
    GetRawLogsResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RawLogsStatus_in_GetRawLogsResponse_status'
        settings:
          $ref: '#/components/schemas/RawLogsSettings_in_GetRawLogsResponse_settings'
    ListActivatedProvidersResponse:
      type: object
      properties:
        providers:
          description: Creates a list of providers.
          type: array
          items:
            type: string
    ListOriginGroupsResponse:
      type: object
      properties:
        originGroups:
          description: List of all Origin Groups associated with folder.
          type: array
          items:
            $ref: '#/components/schemas/OriginGroup'
        nextPageToken:
          description: |-
            [nextPageToken](/docs/cdn/api-ref/OriginGroup/list#responses) token allows you to get the next page of results for list requests.
            If the number of results is larger than [pageSize](/docs/cdn/api-ref/OriginGroup/list#query_params), use
            the [nextPageToken](/docs/cdn/api-ref/OriginGroup/list#responses) as the value for the [pageToken](/docs/cdn/api-ref/OriginGroup/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/cdn/api-ref/OriginGroup/list#responses) to continue paging through the results.
          type: string
    ListOriginsResponse:
      type: object
      properties:
        origins:
          description: Origin from response.
          type: array
          items:
            $ref: '#/components/schemas/v1Origin'
    ListResourcesResponse:
      type: object
      properties:
        resources:
          description: List of the resources
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        nextPageToken:
          description: |-
            [nextPageToken](/docs/cdn/api-ref/Resource/list#responses) token allows you to get the next page of results for list requests.
            If the number of results is larger than [pageSize](/docs/cdn/api-ref/Resource/list#query_params), use
            the [nextPageToken](/docs/cdn/api-ref/Resource/list#responses) as the value for the [pageToken](/docs/cdn/api-ref/Resource/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/cdn/api-ref/Resource/list#responses) to continue paging through the results.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/Status'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    OriginBalancerMeta:
      description: Application Load Balancer origin info. For details about the concept,
        see [documentation](/docs/cdn/concepts/origins).
      type: object
      properties:
        id:
          description: ID of the origin.
          type: string
    OriginGroup:
      description: Origin group parameters. For details about the concept, see [documentation](/docs/cdn/concepts/origins#groups).
      type: object
      properties:
        id:
          description: ID of the origin group. Generated at creation time.
          type: string
          format: int64
        folderId:
          description: ID of the folder that the origin group belongs to.
          type: string
        name:
          description: Name of the origin group.
          type: string
        useNext:
          description: |-
            This option have two possible conditions:
            true - the option is active. In case the origin responds with 4XX or 5XX codes,
                   use the next origin from the list.
            false - the option is disabled.
          type: boolean
          format: boolean
        origins:
          description: List of origins.
          type: array
          items:
            $ref: '#/components/schemas/v1Origin'
    OriginMeta:
      description: Origin type. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      allOf:
      - title: origin_meta_variant
        type: object
        maxProperties: 1
        properties:
          common:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: A server with a domain name linked to it
          bucket:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket not configured as a static site
              hosting.
          website:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket configured as a static site hosting.
          balancer:
            $ref: '#/components/schemas/OriginBalancerMeta'
            description: |-
              An L7 load balancer from Application Load Balancer.
              CDN servers will access the load balancer at one of its IP addresses that must be selected in the origin settings.
    OriginNamedMeta:
      description: Origin info. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      properties:
        name:
          description: Name of the origin.
          type: string
    OriginParams:
      description: Origin parameters. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      properties:
        source:
          description: 'Source: IP address or Domain name of your origin and the port
            (if custom).'
          type: string
        enabled:
          description: |-
            The setting allows to enable or disable an Origin source in the Origins group.

            It has two possible values:

            True - The origin is enabled and used as a source for the CDN. An origins
            group must contain at least one enabled origins. False - The origin is disabled
            and the CDN is not using it to pull content.
          type: boolean
          format: boolean
        backup:
          description: |-
            backup option has two possible values:

              True - The option is active. The origin will not be used until one of
                     active origins become unavailable.
              False - The option is disabled.
          type: boolean
          format: boolean
        meta:
          $ref: '#/components/schemas/OriginMeta_in_OriginParams_meta'
    OriginProtocol:
      description: |-
        This option defines the protocol that will be used by CDN servers to request
        content from an origin source. If not specified, we will use HTTP to connect
        to an origin server.

         - HTTP: CDN servers will connect to your origin via HTTP.
         - HTTPS: CDN servers will connect to your origin via HTTPS.
         - MATCH: Connection protocol will be chosen automatically (content on the
        origin source should be available for the CDN both through HTTP and HTTPS).
      type: string
      enum:
      - HTTP
      - HTTPS
      - MATCH
    PrefetchCacheMetadata:
      type: object
      properties:
        resourceId:
          description: |-
            Required.
            ID of the resource.

            The maximum string length in characters is 50.
          type: string
    PrefetchCacheRequest:
      type: object
      properties:
        paths:
          description: Set of paths to prefetch.
          type: array
          items:
            type: string
    PurgeCacheMetadata:
      type: object
      properties:
        resourceId:
          description: |-
            Required.
            ID of the resource.

            The maximum string length in characters is 50.
          type: string
    PurgeCacheRequest:
      type: object
      properties:
        paths:
          description: |-
            Set of paths:
            Paths of the files to remove from the cache.

            You may use asterisk (`*`) as a wildcard character that substitutes any number of characters.

            If an empty array of paths is specified, the cache is purged entirely.
          type: array
          items:
            type: string
    RawLogsSettings:
      description: User settings for Raw logs.
      type: object
      properties:
        bucketName:
          description: |-
            Required.
            Destination S3 bucket name, note that the suer should be owner of the bucket.

            The maximum string length in characters is 1024.
          type: string
        bucketRegion:
          description: |-
            Bucket region, unused for now, could be blank.

            The maximum string length in characters is 50.
          type: string
        filePrefix:
          description: |-
            file_prefix: prefix each log object name with specified prefix.

            The prefix makes it simpler for you to locate the log objects.
            For example, if you specify the prefix value logs/, each log object that
            S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
            could be setup.

            The maximum string length in characters is 50.
          type: string
    RawLogsStatus:
      description: |-
        Provider side statuses of Raw logs processing.

         - RAW_LOGS_STATUS_NOT_ACTIVATED: Raw logs wasn't activated.
         - RAW_LOGS_STATUS_OK: Raw logs was activated, and logs storing process works as expected.
         - RAW_LOGS_STATUS_FAILED: Raw logs was activated, but logs CDN provider has been failed to store logs.
      type: string
      enum:
      - RAW_LOGS_STATUS_NOT_ACTIVATED
      - RAW_LOGS_STATUS_OK
      - RAW_LOGS_STATUS_FAILED
    Resource:
      description: A CDN resource - representation of providers resource.
      type: object
      properties:
        id:
          description: ID of the resource.
          type: string
        folderId:
          description: Folder id.
          type: string
        cname:
          description: CDN endpoint CNAME, must be unique among resources.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        updatedAt:
          description: |-
            Update timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        active:
          description: |-
            Flag to create Resource either in active or disabled state.
            True - the content from CDN is available to clients.
            False - the content from CDN isn't available to clients.
          type: boolean
          format: boolean
        options:
          $ref: '#/components/schemas/ResourceOptions_in_Resource_options'
        secondaryHostnames:
          description: List of secondary hostname strings.
          type: array
          items:
            type: string
        originGroupId:
          description: ID of the origin group.
          type: string
          format: int64
        originGroupName:
          description: Name of the origin group.
          type: string
        originProtocol:
          $ref: '#/components/schemas/OriginProtocol_in_Resource_originProtocol'
        sslCertificate:
          $ref: '#/components/schemas/SSLCertificate_in_Resource_sslCertificate'
    ResourceOptions:
      description: A major set of various resource options.
      type: object
      properties:
        disableCache:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableCache'
        edgeCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsEdgeCacheSettings_in_ResourceOptions_edgeCacheSettings'
        browserCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsInt64Option_in_ResourceOptions_browserCacheSettings'
        cacheHttpHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cacheHttpHeaders'
        queryParamsOptions:
          $ref: '#/components/schemas/ResourceOptionsQueryParamsOptions_in_ResourceOptions_queryParamsOptions'
        slice:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_slice'
        compressionOptions:
          $ref: '#/components/schemas/ResourceOptionsCompressionOptions_in_ResourceOptions_compressionOptions'
        redirectOptions:
          $ref: '#/components/schemas/ResourceOptionsRedirectOptions_in_ResourceOptions_redirectOptions'
        hostOptions:
          $ref: '#/components/schemas/ResourceOptionsHostOptions_in_ResourceOptions_hostOptions'
        staticHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticHeaders'
        cors:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cors'
        stale:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_stale'
        allowedHttpMethods:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_allowedHttpMethods'
        proxyCacheMethodsSet:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_proxyCacheMethodsSet'
        disableProxyForceRanges:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableProxyForceRanges'
        staticRequestHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticRequestHeaders'
        customServerName:
          $ref: '#/components/schemas/ResourceOptionsStringOption_in_ResourceOptions_customServerName'
        ignoreCookie:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_ignoreCookie'
        rewrite:
          $ref: '#/components/schemas/ResourceOptionsRewriteOption_in_ResourceOptions_rewrite'
    ResourceOptionsBoolOption:
      description: Set up bool values.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: boolean
          format: boolean
    ResourceOptionsCachingTimes:
      description: A set of the caching response time parameters.
      type: object
      properties:
        simpleValue:
          description: |-
            Caching time for a response with codes 200, 206, 301, 302.
            Responses with codes 4xx, 5xx will not be cached. Use `0s` disable to caching.
            Use `customValues` field to specify a custom caching time for a response with specific codes.
          type: string
          format: int64
        customValues:
          description: |-
            Caching time for a response with specific codes. These settings have a higher priority than the value field.
            Response code (`304`, `404` for example). Use `any` to specify caching time for all response codes.
            Caching time in seconds (`0s`, `600s` for example). Use `0s` to disable caching for a specific response code.
          type: object
          additionalProperties:
            type: string
            format: int64
    ResourceOptionsCompressionOptions:
      description: A set of the compression variant parameters.
      type: object
      allOf:
      - title: compression_variant
        type: object
        maxProperties: 1
        properties:
          fetchCompressed:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: |-
              The Fetch compressed option helps you to reduce
              the bandwidth between origin and CDN servers.
              Also, content delivery speed becomes higher because of reducing the time
              for compressing files in a CDN.
          gzipOn:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. GZip compression at CDN
              servers reduces file size by 70% and can be as high as 90%.
          brotliCompression:
            $ref: '#/components/schemas/ResourceOptionsStringsListOption'
            description: |-
              The option allows to compress content with brotli on the CDN's end.

              Compression is performed on the Origin Shielding. If a pre-cache server doesn't active for a resource, compression does not occur even if the option is enabled.

              Specify the content-type for each type of content you wish to have compressed. CDN servers will request only uncompressed content from the origin.
    ResourceOptionsEdgeCacheSettings:
      description: A set of the edge cache parameters.
      type: object
      allOf:
      - type: object
        properties:
          enabled:
            description: |-
              True - the option is enabled and its `values_variant` is applied to the resource.
              False - the option is disabled and its default value is used for the resource.
            type: boolean
            format: boolean
      - title: values_variant
        type: object
        maxProperties: 1
        properties:
          value:
            $ref: '#/components/schemas/ResourceOptionsCachingTimes'
            description: Value of the option.
          defaultValue:
            description: |-
              Content will be cached according to origin cache settings.
              The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308
              if an origin server does not have caching HTTP headers.
              Responses with other codes will not be cached.
            type: string
            format: int64
    ResourceOptionsHostOptions:
      description: A set of the host parameters.
      type: object
      allOf:
      - title: host_variant
        type: object
        maxProperties: 1
        properties:
          host:
            $ref: '#/components/schemas/ResourceOptionsStringOption'
            description: |-
              Custom value for the Host header.

              Your server must be able to process requests with the chosen header.

              Default value (if `enabled` is `false`) is [Resource.cname](/docs/cdn/api-ref/Resource#representation).
          forwardHostHeader:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: |-
              Using `ResourceOptionsBoolOption`. Choose the Forward Host header option if is important to send in the request to the Origin
              the same Host header as was sent in the request to CDN server.
    ResourceOptionsInt64Option:
      description: A set of the numeric parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: string
          format: int64
    ResourceOptionsQueryParamsOptions:
      description: A set of the query parameters.
      type: object
      allOf:
      - title: query_params_variant
        type: object
        maxProperties: 1
        properties:
          ignoreQueryString:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. Selected by default. Files
              with different query parameters are cached as objects with the same
              key regardless of the parameter value.
          queryParamsWhitelist:
            $ref: '#/components/schemas/ResourceOptionsStringsListOption'
            description: |-
              Ignore All Except.
              Files with the specified query parameters are cached as objects with different keys,
              files with other parameters are cached as objects with the same key.
          queryParamsBlacklist:
            $ref: '#/components/schemas/ResourceOptionsStringsListOption'
            description: |-
              Ignore only. Files with the specified query parameters are cached as objects with the same key,
              files with other parameters are cached as objects with different keys.
    ResourceOptionsRedirectOptions:
      description: A set of the redirect parameters.
      type: object
      allOf:
      - title: redirect_variant
        type: object
        maxProperties: 1
        properties:
          redirectHttpToHttps:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. Set up a redirect from
              HTTPS to HTTP.
          redirectHttpsToHttp:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. Set up a redirect from
              HTTP to HTTPS.
    ResourceOptionsRewriteOption:
      description: An option for changing or redirecting query paths.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `flag` is applied to the resource.
            False - the option is disabled and its default value of the `flag` is used for the resource.
          type: boolean
          format: boolean
        body:
          description: |-
            Pattern for rewrite.

            The value must have the following format: `<source path> <destination path>`, where both paths are regular expressions which use at least one group. E.g., `/foo/(.*) /bar/$1`.
          type: string
        flag:
          $ref: '#/components/schemas/RewriteFlag_in_ResourceOptionsRewriteOption_flag'
    ResourceOptionsStringOption:
      description: A set of the string parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: string
    ResourceOptionsStringsListOption:
      description: A set of the string list parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: array
          items:
            type: string
    ResourceOptionsStringsMapOption:
      description: A set of the strings map parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: object
          additionalProperties:
            type: string
    ResourceOriginParams:
      description: A set of resource origin parameters.
      type: object
      properties:
        source:
          description: Source of the content.
          type: string
        meta:
          $ref: '#/components/schemas/OriginMeta_in_ResourceOriginParams_meta'
    RewriteFlag:
      description: |-
        RewriteFlag defines flag for the Rewrite option.

         - LAST: Stops processing of the current set of ngx_http_rewrite_module directives and
        starts a search for a new location matching changed URI.
         - BREAK: Stops processing of the current set of the Rewrite option.
         - REDIRECT: Returns a temporary redirect with the 302 code; It is used when a replacement string does not start
        with "http://", "https://", or "$scheme".
         - PERMANENT: Returns a permanent redirect with the 301 code.
      type: string
      enum:
      - LAST
      - BREAK
      - REDIRECT
      - PERMANENT
    SSLCertificate:
      description: A SSL certificate parameters.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SSLCertificateType_in_SSLCertificate_type'
        status:
          $ref: '#/components/schemas/SSLCertificateStatus_in_SSLCertificate_status'
        data:
          $ref: '#/components/schemas/SSLCertificateData_in_SSLCertificate_data'
    SSLCertificateCMData:
      description: A certificate data custom parameters.
      type: object
      properties:
        id:
          description: ID of the custom certificate.
          type: string
    SSLCertificateData:
      description: A certificate data parameters.
      type: object
      allOf:
      - title: ssl_certificate_data_variant
        type: object
        maxProperties: 1
        properties:
          cm:
            $ref: '#/components/schemas/SSLCertificateCMData'
            description: |-
              Custom (add your SSL certificate by uploading the certificate
              in PEM format and your private key).
    SSLCertificateStatus:
      description: |-
        A certificate status parameters.

         - SSL_CERTIFICATE_STATUS_UNSPECIFIED: SSL certificate is unspecified.
         - READY: SSL certificate is ready to use.
         - CREATING: SSL certificate is creating.
      type: string
      enum:
      - READY
      - CREATING
    SSLCertificateType:
      description: |-
        A certificate type parameters.

         - SSL_CERTIFICATE_TYPE_UNSPECIFIED: SSL certificate is unspecified.
         - DONT_USE: No SSL certificate is added, the requests are sent via HTTP.
         - LETS_ENCRYPT_GCORE: Works only if you have already pointed your domain name to the protected IP address in your DNS
         - CM: Add your SSL certificate by uploading the certificate in PEM format and your private key
      type: string
      enum:
      - DONT_USE
      - LETS_ENCRYPT_GCORE
      - CM
    SSLTargetCertificate:
      description: A set of the personal SSL certificate parameters.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SSLCertificateType_in_SSLTargetCertificate_type'
        data:
          $ref: '#/components/schemas/SSLCertificateData_in_SSLTargetCertificate_data'
    SecondaryHostnames:
      description: List of secondary (alternative) CNAMEs.
      type: object
      properties:
        values:
          description: List of secondary hostname values.
          type: array
          items:
            type: string
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    UpdateOriginGroupMetadata:
      type: object
      properties:
        originGroupId:
          description: |-
            ID of the origin group.

            Value must be greater than 0.
          type: string
          format: int64
    UpdateOriginGroupRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder that the origin group belongs to.

            The maximum string length in characters is 50.
          type: string
        originGroupId:
          description: |-
            ID of the origin group.

            Value must be greater than 0.
          type: string
          format: int64
        groupName:
          description: Name of the origin group.
          type: string
        useNext:
          description: |-
            This option have two possible values:

              True - The option is active. In case the origin responds with 4XX or 5XX
                     codes, use the next origin from the list.
              False - The option is disabled.
          type: boolean
          format: boolean
        origins:
          description: |-
            List of origins: IP addresses or Domain names of your origins and the port
            (if custom).
          type: array
          items:
            $ref: '#/components/schemas/OriginParams'
    UpdateOriginMetadata:
      type: object
      properties:
        originId:
          description: |-
            ID of the origin.

            Value must be greater than 0.
          type: string
          format: int64
        originGroupId:
          description: |-
            Parent origins group ID.

            Value must be greater than 0.
          type: string
          format: int64
    UpdateOriginRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder that the origin belongs to.

            The maximum string length in characters is 50.
          type: string
        source:
          description: |-
            IP address or Domain name of your origin and the port (if custom).
            Used if [meta](/docs/cdn/api-ref/Origin/update#body_params) variant is `common`.
            Required.
          type: string
        enabled:
          description: |-
            The setting allows to enable or disable an Origin source in the Origins group.

            It has two possible values:

            True - The origin is enabled and used as a source for the CDN. An origins
            group must contain at least one enabled origin. Default value.
            False - The origin is disabled and the CDN is not using it to pull content.

            Required.
          type: boolean
          format: boolean
        backup:
          description: "Specifies whether the origin is used in its origin group as
            backup. \nA backup origin is used when one of active origins becomes unavailable.\n\nRequired."
          type: boolean
          format: boolean
        meta:
          $ref: '#/components/schemas/OriginMeta_in_UpdateOriginRequest_meta'
    UpdateRawLogsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of CDN resource.
          type: string
    UpdateRawLogsRequest:
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/RawLogsSettings_in_UpdateRawLogsRequest_settings'
    UpdateRawLogsResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RawLogsStatus_in_UpdateRawLogsResponse_status'
        settings:
          $ref: '#/components/schemas/RawLogsSettings_in_UpdateRawLogsResponse_settings'
    UpdateResourceMetadata:
      type: object
      properties:
        resourceId:
          description: |-
            Required.
            ID of updated resource.

            The maximum string length in characters is 50.
          type: string
    UpdateResourceRequest:
      type: object
      properties:
        originGroupId:
          description: ID of updated origin group.
          type: integer
          format: int64
        secondaryHostnames:
          $ref: '#/components/schemas/SecondaryHostnames_in_UpdateResourceRequest_secondaryHostnames'
        options:
          $ref: '#/components/schemas/ResourceOptions_in_UpdateResourceRequest_options'
        originProtocol:
          $ref: '#/components/schemas/OriginProtocol_in_UpdateResourceRequest_originProtocol'
        active:
          description: |-
            Flag to create Resource either in active or disabled state.
            In active state Origins payload could be transmitted from CDN CNAME requests.
            Default value: true
          type: boolean
          format: boolean
        sslCertificate:
          $ref: '#/components/schemas/SSLTargetCertificate_in_UpdateResourceRequest_sslCertificate'
    v1Origin:
      description: An origin. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      properties:
        id:
          description: ID of the origin.
          type: string
          format: int64
        originGroupId:
          description: ID of the parent origin group.
          type: string
          format: int64
        source:
          description: |-
            IP address or Domain name of your origin and the port (if custom).
            Used if [meta](/docs/cdn/api-ref/Origin#representation) variant is `common`.
          type: string
        enabled:
          description: "The setting allows to enable or disable an Origin source in
            the Origins group.\n\nIt has two possible values:\n\nTrue - The origin
            is enabled and used as a source for the CDN. An origins\ngroup must contain
            at least one enabled origin. \nFalse - The origin is disabled and the
            CDN is not using it to pull content."
          type: boolean
          format: boolean
        backup:
          description: "Specifies whether the origin is used in its origin group as
            backup. \nA backup origin is used when one of active origins becomes unavailable."
          type: boolean
          format: boolean
        meta:
          $ref: '#/components/schemas/OriginMeta_in_v1Origin_meta'
    RawLogsSettings_in_ActivateRawLogsRequest_settings:
      description: |-
        Raw logs settings.

        User settings for Raw logs.
      type: object
      properties:
        bucketName:
          description: |-
            Required.
            Destination S3 bucket name, note that the suer should be owner of the bucket.

            The maximum string length in characters is 1024.
          type: string
        bucketRegion:
          description: |-
            Bucket region, unused for now, could be blank.

            The maximum string length in characters is 50.
          type: string
        filePrefix:
          description: |-
            file_prefix: prefix each log object name with specified prefix.

            The prefix makes it simpler for you to locate the log objects.
            For example, if you specify the prefix value logs/, each log object that
            S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
            could be setup.

            The maximum string length in characters is 50.
          type: string
    RawLogsStatus_in_ActivateRawLogsResponse_status:
      description: |-
        Raw logs status.

        Provider side statuses of Raw logs processing.

         - RAW_LOGS_STATUS_NOT_ACTIVATED: Raw logs wasn't activated.
         - RAW_LOGS_STATUS_OK: Raw logs was activated, and logs storing process works as expected.
         - RAW_LOGS_STATUS_FAILED: Raw logs was activated, but logs CDN provider has been failed to store logs.
      type: string
      enum:
      - RAW_LOGS_STATUS_NOT_ACTIVATED
      - RAW_LOGS_STATUS_OK
      - RAW_LOGS_STATUS_FAILED
    RawLogsSettings_in_ActivateRawLogsResponse_settings:
      description: |-
        Raw logs settings.

        User settings for Raw logs.
      type: object
      properties:
        bucketName:
          description: |-
            Required.
            Destination S3 bucket name, note that the suer should be owner of the bucket.

            The maximum string length in characters is 1024.
          type: string
        bucketRegion:
          description: |-
            Bucket region, unused for now, could be blank.

            The maximum string length in characters is 50.
          type: string
        filePrefix:
          description: |-
            file_prefix: prefix each log object name with specified prefix.

            The prefix makes it simpler for you to locate the log objects.
            For example, if you specify the prefix value logs/, each log object that
            S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
            could be setup.

            The maximum string length in characters is 50.
          type: string
    OriginMeta_in_CreateOriginRequest_meta:
      description: |-
        Set up origin of the content.

        Origin type. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      allOf:
      - title: origin_meta_variant
        type: object
        maxProperties: 1
        properties:
          common:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: A server with a domain name linked to it
          bucket:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket not configured as a static site
              hosting.
          website:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket configured as a static site hosting.
          balancer:
            $ref: '#/components/schemas/OriginBalancerMeta'
            description: |-
              An L7 load balancer from Application Load Balancer.
              CDN servers will access the load balancer at one of its IP addresses that must be selected in the origin settings.
    CreateResourceRequestOrigin_in_CreateResourceRequest_origin:
      description: |-
        Required.
        Specify the origins to be used for CDN resources requests.
      type: object
      allOf:
      - title: origin_variant
        type: object
        maxProperties: 1
        properties:
          originGroupId:
            description: ID of pre-created origin group.
            type: string
            format: int64
          originSource:
            description: |-
              Create new Origins group with single source, it's id will be
              returned in result.
            type: string
          originSourceParams:
            $ref: '#/components/schemas/ResourceOriginParams'
            description: Set up resource origin parameters.
    SecondaryHostnames_in_CreateResourceRequest_secondaryHostnames:
      description: |-
        List of additional CNAMEs.

        List of secondary (alternative) CNAMEs.
      type: object
      properties:
        values:
          description: List of secondary hostname values.
          type: array
          items:
            type: string
    OriginProtocol_in_CreateResourceRequest_originProtocol:
      description: |-
        Specify the protocol schema to be used in communication with origin.

        This option defines the protocol that will be used by CDN servers to request
        content from an origin source. If not specified, we will use HTTP to connect
        to an origin server.

         - HTTP: CDN servers will connect to your origin via HTTP.
         - HTTPS: CDN servers will connect to your origin via HTTPS.
         - MATCH: Connection protocol will be chosen automatically (content on the
        origin source should be available for the CDN both through HTTP and HTTPS).
      type: string
      enum:
      - HTTP
      - HTTPS
      - MATCH
    ResourceOptions_in_CreateResourceRequest_options:
      description: |-
        Resource settings and options to tune CDN edge behavior. Most is unset.

        A major set of various resource options.
      type: object
      properties:
        disableCache:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableCache'
        edgeCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsEdgeCacheSettings_in_ResourceOptions_edgeCacheSettings'
        browserCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsInt64Option_in_ResourceOptions_browserCacheSettings'
        cacheHttpHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cacheHttpHeaders'
        queryParamsOptions:
          $ref: '#/components/schemas/ResourceOptionsQueryParamsOptions_in_ResourceOptions_queryParamsOptions'
        slice:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_slice'
        compressionOptions:
          $ref: '#/components/schemas/ResourceOptionsCompressionOptions_in_ResourceOptions_compressionOptions'
        redirectOptions:
          $ref: '#/components/schemas/ResourceOptionsRedirectOptions_in_ResourceOptions_redirectOptions'
        hostOptions:
          $ref: '#/components/schemas/ResourceOptionsHostOptions_in_ResourceOptions_hostOptions'
        staticHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticHeaders'
        cors:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cors'
        stale:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_stale'
        allowedHttpMethods:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_allowedHttpMethods'
        proxyCacheMethodsSet:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_proxyCacheMethodsSet'
        disableProxyForceRanges:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableProxyForceRanges'
        staticRequestHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticRequestHeaders'
        customServerName:
          $ref: '#/components/schemas/ResourceOptionsStringOption_in_ResourceOptions_customServerName'
        ignoreCookie:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_ignoreCookie'
        rewrite:
          $ref: '#/components/schemas/ResourceOptionsRewriteOption_in_ResourceOptions_rewrite'
    SSLTargetCertificate_in_CreateResourceRequest_sslCertificate:
      description: |-
        SSL Certificate options.

        A set of the personal SSL certificate parameters.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SSLCertificateType_in_SSLTargetCertificate_type'
        data:
          $ref: '#/components/schemas/SSLCertificateData_in_SSLTargetCertificate_data'
    RawLogsStatus_in_GetRawLogsResponse_status:
      description: |-
        Raw logs status.

        Provider side statuses of Raw logs processing.

         - RAW_LOGS_STATUS_NOT_ACTIVATED: Raw logs wasn't activated.
         - RAW_LOGS_STATUS_OK: Raw logs was activated, and logs storing process works as expected.
         - RAW_LOGS_STATUS_FAILED: Raw logs was activated, but logs CDN provider has been failed to store logs.
      type: string
      enum:
      - RAW_LOGS_STATUS_NOT_ACTIVATED
      - RAW_LOGS_STATUS_OK
      - RAW_LOGS_STATUS_FAILED
    RawLogsSettings_in_GetRawLogsResponse_settings:
      description: |-
        Raw logs settings.

        User settings for Raw logs.
      type: object
      properties:
        bucketName:
          description: |-
            Required.
            Destination S3 bucket name, note that the suer should be owner of the bucket.

            The maximum string length in characters is 1024.
          type: string
        bucketRegion:
          description: |-
            Bucket region, unused for now, could be blank.

            The maximum string length in characters is 50.
          type: string
        filePrefix:
          description: |-
            file_prefix: prefix each log object name with specified prefix.

            The prefix makes it simpler for you to locate the log objects.
            For example, if you specify the prefix value logs/, each log object that
            S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
            could be setup.

            The maximum string length in characters is 50.
          type: string
    OriginMeta_in_OriginParams_meta:
      description: |-
        Set up origin of the content.

        Origin type. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      allOf:
      - title: origin_meta_variant
        type: object
        maxProperties: 1
        properties:
          common:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: A server with a domain name linked to it
          bucket:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket not configured as a static site
              hosting.
          website:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket configured as a static site hosting.
          balancer:
            $ref: '#/components/schemas/OriginBalancerMeta'
            description: |-
              An L7 load balancer from Application Load Balancer.
              CDN servers will access the load balancer at one of its IP addresses that must be selected in the origin settings.
    ResourceOptions_in_Resource_options:
      description: |-
        Resource settings and options to tune CDN edge behavior.

        A major set of various resource options.
      type: object
      properties:
        disableCache:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableCache'
        edgeCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsEdgeCacheSettings_in_ResourceOptions_edgeCacheSettings'
        browserCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsInt64Option_in_ResourceOptions_browserCacheSettings'
        cacheHttpHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cacheHttpHeaders'
        queryParamsOptions:
          $ref: '#/components/schemas/ResourceOptionsQueryParamsOptions_in_ResourceOptions_queryParamsOptions'
        slice:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_slice'
        compressionOptions:
          $ref: '#/components/schemas/ResourceOptionsCompressionOptions_in_ResourceOptions_compressionOptions'
        redirectOptions:
          $ref: '#/components/schemas/ResourceOptionsRedirectOptions_in_ResourceOptions_redirectOptions'
        hostOptions:
          $ref: '#/components/schemas/ResourceOptionsHostOptions_in_ResourceOptions_hostOptions'
        staticHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticHeaders'
        cors:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cors'
        stale:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_stale'
        allowedHttpMethods:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_allowedHttpMethods'
        proxyCacheMethodsSet:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_proxyCacheMethodsSet'
        disableProxyForceRanges:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableProxyForceRanges'
        staticRequestHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticRequestHeaders'
        customServerName:
          $ref: '#/components/schemas/ResourceOptionsStringOption_in_ResourceOptions_customServerName'
        ignoreCookie:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_ignoreCookie'
        rewrite:
          $ref: '#/components/schemas/ResourceOptionsRewriteOption_in_ResourceOptions_rewrite'
    OriginProtocol_in_Resource_originProtocol:
      description: |-
        Specify the protocol schema to be used in communication with origin.

        This option defines the protocol that will be used by CDN servers to request
        content from an origin source. If not specified, we will use HTTP to connect
        to an origin server.

         - HTTP: CDN servers will connect to your origin via HTTP.
         - HTTPS: CDN servers will connect to your origin via HTTPS.
         - MATCH: Connection protocol will be chosen automatically (content on the
        origin source should be available for the CDN both through HTTP and HTTPS).
      type: string
      enum:
      - HTTP
      - HTTPS
      - MATCH
    SSLCertificate_in_Resource_sslCertificate:
      description: |-
        SSL certificate options.

        A SSL certificate parameters.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SSLCertificateType_in_SSLCertificate_type'
        status:
          $ref: '#/components/schemas/SSLCertificateStatus_in_SSLCertificate_status'
        data:
          $ref: '#/components/schemas/SSLCertificateData_in_SSLCertificate_data'
    ResourceOptionsBoolOption_in_ResourceOptions_disableCache:
      description: |-
        Set up a cache status.

        Set up bool values.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: boolean
          format: boolean
    ResourceOptionsEdgeCacheSettings_in_ResourceOptions_edgeCacheSettings:
      description: |-
        Set up `ResourceOptionsEdgeCacheSettings`.

        A set of the edge cache parameters.
      type: object
      allOf:
      - type: object
        properties:
          enabled:
            description: |-
              True - the option is enabled and its `values_variant` is applied to the resource.
              False - the option is disabled and its default value is used for the resource.
            type: boolean
            format: boolean
      - title: values_variant
        type: object
        maxProperties: 1
        properties:
          value:
            $ref: '#/components/schemas/ResourceOptionsCachingTimes'
            description: Value of the option.
          defaultValue:
            description: |-
              Content will be cached according to origin cache settings.
              The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308
              if an origin server does not have caching HTTP headers.
              Responses with other codes will not be cached.
            type: string
            format: int64
    ResourceOptionsInt64Option_in_ResourceOptions_browserCacheSettings:
      description: |-
        Using `ResourceOptionsInt64Option`. Set up a cache period for the end-users browser.
        Content will be cached due to origin settings.
        If there are no cache settings on your origin, the content will not be cached.
        The list of HTTP response codes that can be cached in browsers: 200, 201, 204, 206, 301, 302, 303, 304, 307, 308.
        Other response codes will not be cached.
        The default value is 4 days.

        A set of the numeric parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: string
          format: int64
    ResourceOptionsStringsListOption_in_ResourceOptions_cacheHttpHeaders:
      description: |-
        List HTTP headers that must be included in responses to clients.

        A set of the string list parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: array
          items:
            type: string
    ResourceOptionsQueryParamsOptions_in_ResourceOptions_queryParamsOptions:
      description: |-
        Set up `ResourceOptionsQueryParamsOptions`.

        A set of the query parameters.
      type: object
      allOf:
      - title: query_params_variant
        type: object
        maxProperties: 1
        properties:
          ignoreQueryString:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. Selected by default. Files
              with different query parameters are cached as objects with the same
              key regardless of the parameter value.
          queryParamsWhitelist:
            $ref: '#/components/schemas/ResourceOptionsStringsListOption'
            description: |-
              Ignore All Except.
              Files with the specified query parameters are cached as objects with different keys,
              files with other parameters are cached as objects with the same key.
          queryParamsBlacklist:
            $ref: '#/components/schemas/ResourceOptionsStringsListOption'
            description: |-
              Ignore only. Files with the specified query parameters are cached as objects with the same key,
              files with other parameters are cached as objects with different keys.
    ResourceOptionsBoolOption_in_ResourceOptions_slice:
      description: |-
        Files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte.

        The origin must support HTTP Range requests.

        By default the option is disabled.

        Set up bool values.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: boolean
          format: boolean
    ResourceOptionsCompressionOptions_in_ResourceOptions_compressionOptions:
      description: |-
        Set up compression variant.

        A set of the compression variant parameters.
      type: object
      allOf:
      - title: compression_variant
        type: object
        maxProperties: 1
        properties:
          fetchCompressed:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: |-
              The Fetch compressed option helps you to reduce
              the bandwidth between origin and CDN servers.
              Also, content delivery speed becomes higher because of reducing the time
              for compressing files in a CDN.
          gzipOn:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. GZip compression at CDN
              servers reduces file size by 70% and can be as high as 90%.
          brotliCompression:
            $ref: '#/components/schemas/ResourceOptionsStringsListOption'
            description: |-
              The option allows to compress content with brotli on the CDN's end.

              Compression is performed on the Origin Shielding. If a pre-cache server doesn't active for a resource, compression does not occur even if the option is enabled.

              Specify the content-type for each type of content you wish to have compressed. CDN servers will request only uncompressed content from the origin.
    ResourceOptionsRedirectOptions_in_ResourceOptions_redirectOptions:
      description: |-
        Set up redirects.

        A set of the redirect parameters.
      type: object
      allOf:
      - title: redirect_variant
        type: object
        maxProperties: 1
        properties:
          redirectHttpToHttps:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. Set up a redirect from
              HTTPS to HTTP.
          redirectHttpsToHttp:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: Using `ResourceOptionsBoolOption`. Set up a redirect from
              HTTP to HTTPS.
    ResourceOptionsHostOptions_in_ResourceOptions_hostOptions:
      description: |-
        Set up host parameters.

        A set of the host parameters.
      type: object
      allOf:
      - title: host_variant
        type: object
        maxProperties: 1
        properties:
          host:
            $ref: '#/components/schemas/ResourceOptionsStringOption'
            description: |-
              Custom value for the Host header.

              Your server must be able to process requests with the chosen header.

              Default value (if `enabled` is `false`) is [Resource.cname](/docs/cdn/api-ref/Resource#representation).
          forwardHostHeader:
            $ref: '#/components/schemas/ResourceOptionsBoolOption'
            description: |-
              Using `ResourceOptionsBoolOption`. Choose the Forward Host header option if is important to send in the request to the Origin
              the same Host header as was sent in the request to CDN server.
    ResourceOptionsStringsMapOption_in_ResourceOptions_staticHeaders:
      description: |-
        Set up static headers that CDN servers send in responses to clients.

        A set of the strings map parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: object
          additionalProperties:
            type: string
    ResourceOptionsStringsListOption_in_ResourceOptions_cors:
      description: |-
        Parameter that lets browsers get access to selected resources from a domain
        different to a domain from which the request is received.
        [Read more](/docs/cdn/concepts/cors).

        A set of the string list parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: array
          items:
            type: string
    ResourceOptionsStringsListOption_in_ResourceOptions_stale:
      description: |-
        List of errors which instruct CDN servers to serve stale content to clients.

        Possible values: `error`, `http_403`, `http_404`, `http_429`, `http_500`, `http_502`, `http_503`, `http_504`, `invalid_header`, `timeout`, `updating`.

        A set of the string list parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: array
          items:
            type: string
    ResourceOptionsStringsListOption_in_ResourceOptions_allowedHttpMethods:
      description: |-
        HTTP methods for your CDN content. By default the following methods
        are allowed: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS.
        In case some methods are not allowed to the user, they will get the 405
        (Method Not Allowed) response. If the method is not supported,
        the user gets the 501 (Not Implemented) response.

        A set of the string list parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: array
          items:
            type: string
    ResourceOptionsBoolOption_in_ResourceOptions_proxyCacheMethodsSet:
      description: |-
        Allows caching for GET, HEAD and POST requests.

        Set up bool values.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: boolean
          format: boolean
    ResourceOptionsBoolOption_in_ResourceOptions_disableProxyForceRanges:
      description: |-
        Disabling proxy force ranges.

        Set up bool values.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: boolean
          format: boolean
    ResourceOptionsStringsMapOption_in_ResourceOptions_staticRequestHeaders:
      description: |-
        Set up custom headers that CDN servers send in requests to origins.
        The Header name field can contain letters (A-Z, a-z), numbers (0-9), dashes (-) and underscores (_).
        The Value field can contain letters (A-Z, a-z), numbers (0-9), dashes (-),
        underscores (_), slashes (/), colons (:), equal (=), dots (.), and spaces.

        A set of the strings map parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: object
          additionalProperties:
            type: string
    ResourceOptionsStringOption_in_ResourceOptions_customServerName:
      description: |-
        Wildcard additional CNAME.
        If a resource has a wildcard additional CNAME, you can use your own certificate for content delivery via HTTPS. Read-only.

        A set of the string parameters.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: string
    ResourceOptionsBoolOption_in_ResourceOptions_ignoreCookie:
      description: |-
        Using `ResourceOptionsBoolOption` for ignoring cookie.

        Set up bool values.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `value` is applied to the resource.
            False - the option is disabled and its default value is used for the resource.
          type: boolean
          format: boolean
        value:
          description: Value of the option.
          type: boolean
          format: boolean
    ResourceOptionsRewriteOption_in_ResourceOptions_rewrite:
      description: |-
        Changing or redirecting query paths.

        An option for changing or redirecting query paths.
      type: object
      properties:
        enabled:
          description: |-
            True - the option is enabled and its `flag` is applied to the resource.
            False - the option is disabled and its default value of the `flag` is used for the resource.
          type: boolean
          format: boolean
        body:
          description: |-
            Pattern for rewrite.

            The value must have the following format: `<source path> <destination path>`, where both paths are regular expressions which use at least one group. E.g., `/foo/(.*) /bar/$1`.
          type: string
        flag:
          $ref: '#/components/schemas/RewriteFlag_in_ResourceOptionsRewriteOption_flag'
    RewriteFlag_in_ResourceOptionsRewriteOption_flag:
      description: |-
        Break flag is applied to the option by default.
        It is not shown in the field.

        RewriteFlag defines flag for the Rewrite option.

         - LAST: Stops processing of the current set of ngx_http_rewrite_module directives and
        starts a search for a new location matching changed URI.
         - BREAK: Stops processing of the current set of the Rewrite option.
         - REDIRECT: Returns a temporary redirect with the 302 code; It is used when a replacement string does not start
        with "http://", "https://", or "$scheme".
         - PERMANENT: Returns a permanent redirect with the 301 code.
      type: string
      enum:
      - LAST
      - BREAK
      - REDIRECT
      - PERMANENT
    OriginMeta_in_ResourceOriginParams_meta:
      description: |-
        Set up type of the origin.

        Origin type. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      allOf:
      - title: origin_meta_variant
        type: object
        maxProperties: 1
        properties:
          common:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: A server with a domain name linked to it
          bucket:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket not configured as a static site
              hosting.
          website:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket configured as a static site hosting.
          balancer:
            $ref: '#/components/schemas/OriginBalancerMeta'
            description: |-
              An L7 load balancer from Application Load Balancer.
              CDN servers will access the load balancer at one of its IP addresses that must be selected in the origin settings.
    SSLCertificateType_in_SSLCertificate_type:
      description: |-
        Type of the certificate.

        A certificate type parameters.

         - SSL_CERTIFICATE_TYPE_UNSPECIFIED: SSL certificate is unspecified.
         - DONT_USE: No SSL certificate is added, the requests are sent via HTTP.
         - LETS_ENCRYPT_GCORE: Works only if you have already pointed your domain name to the protected IP address in your DNS
         - CM: Add your SSL certificate by uploading the certificate in PEM format and your private key
      type: string
      enum:
      - DONT_USE
      - LETS_ENCRYPT_GCORE
      - CM
    SSLCertificateStatus_in_SSLCertificate_status:
      description: |-
        Active status.

        A certificate status parameters.

         - SSL_CERTIFICATE_STATUS_UNSPECIFIED: SSL certificate is unspecified.
         - READY: SSL certificate is ready to use.
         - CREATING: SSL certificate is creating.
      type: string
      enum:
      - READY
      - CREATING
    SSLCertificateData_in_SSLCertificate_data:
      description: |-
        Certificate data.

        A certificate data parameters.
      type: object
      allOf:
      - title: ssl_certificate_data_variant
        type: object
        maxProperties: 1
        properties:
          cm:
            $ref: '#/components/schemas/SSLCertificateCMData'
            description: |-
              Custom (add your SSL certificate by uploading the certificate
              in PEM format and your private key).
    SSLCertificateType_in_SSLTargetCertificate_type:
      description: |-
        Type of the certificate.

        A certificate type parameters.

         - SSL_CERTIFICATE_TYPE_UNSPECIFIED: SSL certificate is unspecified.
         - DONT_USE: No SSL certificate is added, the requests are sent via HTTP.
         - LETS_ENCRYPT_GCORE: Works only if you have already pointed your domain name to the protected IP address in your DNS
         - CM: Add your SSL certificate by uploading the certificate in PEM format and your private key
      type: string
      enum:
      - DONT_USE
      - LETS_ENCRYPT_GCORE
      - CM
    SSLCertificateData_in_SSLTargetCertificate_data:
      description: |-
        Certificate data.

        A certificate data parameters.
      type: object
      allOf:
      - title: ssl_certificate_data_variant
        type: object
        maxProperties: 1
        properties:
          cm:
            $ref: '#/components/schemas/SSLCertificateCMData'
            description: |-
              Custom (add your SSL certificate by uploading the certificate
              in PEM format and your private key).
    OriginMeta_in_UpdateOriginRequest_meta:
      description: |-
        Set up type of the origin.

        Origin type. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      allOf:
      - title: origin_meta_variant
        type: object
        maxProperties: 1
        properties:
          common:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: A server with a domain name linked to it
          bucket:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket not configured as a static site
              hosting.
          website:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket configured as a static site hosting.
          balancer:
            $ref: '#/components/schemas/OriginBalancerMeta'
            description: |-
              An L7 load balancer from Application Load Balancer.
              CDN servers will access the load balancer at one of its IP addresses that must be selected in the origin settings.
    RawLogsSettings_in_UpdateRawLogsRequest_settings:
      description: |-
        Raw logs settings.

        User settings for Raw logs.
      type: object
      properties:
        bucketName:
          description: |-
            Required.
            Destination S3 bucket name, note that the suer should be owner of the bucket.

            The maximum string length in characters is 1024.
          type: string
        bucketRegion:
          description: |-
            Bucket region, unused for now, could be blank.

            The maximum string length in characters is 50.
          type: string
        filePrefix:
          description: |-
            file_prefix: prefix each log object name with specified prefix.

            The prefix makes it simpler for you to locate the log objects.
            For example, if you specify the prefix value logs/, each log object that
            S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
            could be setup.

            The maximum string length in characters is 50.
          type: string
    RawLogsStatus_in_UpdateRawLogsResponse_status:
      description: |-
        Raw logs status.

        Provider side statuses of Raw logs processing.

         - RAW_LOGS_STATUS_NOT_ACTIVATED: Raw logs wasn't activated.
         - RAW_LOGS_STATUS_OK: Raw logs was activated, and logs storing process works as expected.
         - RAW_LOGS_STATUS_FAILED: Raw logs was activated, but logs CDN provider has been failed to store logs.
      type: string
      enum:
      - RAW_LOGS_STATUS_NOT_ACTIVATED
      - RAW_LOGS_STATUS_OK
      - RAW_LOGS_STATUS_FAILED
    RawLogsSettings_in_UpdateRawLogsResponse_settings:
      description: |-
        Raw logs settings.

        User settings for Raw logs.
      type: object
      properties:
        bucketName:
          description: |-
            Required.
            Destination S3 bucket name, note that the suer should be owner of the bucket.

            The maximum string length in characters is 1024.
          type: string
        bucketRegion:
          description: |-
            Bucket region, unused for now, could be blank.

            The maximum string length in characters is 50.
          type: string
        filePrefix:
          description: |-
            file_prefix: prefix each log object name with specified prefix.

            The prefix makes it simpler for you to locate the log objects.
            For example, if you specify the prefix value logs/, each log object that
            S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
            could be setup.

            The maximum string length in characters is 50.
          type: string
    SecondaryHostnames_in_UpdateResourceRequest_secondaryHostnames:
      description: |-
        List of additional CNAMEs.

        List of secondary (alternative) CNAMEs.
      type: object
      properties:
        values:
          description: List of secondary hostname values.
          type: array
          items:
            type: string
    ResourceOptions_in_UpdateResourceRequest_options:
      description: |-
        Resource settings and options to tune CDN edge behavior.

        A major set of various resource options.
      type: object
      properties:
        disableCache:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableCache'
        edgeCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsEdgeCacheSettings_in_ResourceOptions_edgeCacheSettings'
        browserCacheSettings:
          $ref: '#/components/schemas/ResourceOptionsInt64Option_in_ResourceOptions_browserCacheSettings'
        cacheHttpHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cacheHttpHeaders'
        queryParamsOptions:
          $ref: '#/components/schemas/ResourceOptionsQueryParamsOptions_in_ResourceOptions_queryParamsOptions'
        slice:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_slice'
        compressionOptions:
          $ref: '#/components/schemas/ResourceOptionsCompressionOptions_in_ResourceOptions_compressionOptions'
        redirectOptions:
          $ref: '#/components/schemas/ResourceOptionsRedirectOptions_in_ResourceOptions_redirectOptions'
        hostOptions:
          $ref: '#/components/schemas/ResourceOptionsHostOptions_in_ResourceOptions_hostOptions'
        staticHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticHeaders'
        cors:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_cors'
        stale:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_stale'
        allowedHttpMethods:
          $ref: '#/components/schemas/ResourceOptionsStringsListOption_in_ResourceOptions_allowedHttpMethods'
        proxyCacheMethodsSet:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_proxyCacheMethodsSet'
        disableProxyForceRanges:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_disableProxyForceRanges'
        staticRequestHeaders:
          $ref: '#/components/schemas/ResourceOptionsStringsMapOption_in_ResourceOptions_staticRequestHeaders'
        customServerName:
          $ref: '#/components/schemas/ResourceOptionsStringOption_in_ResourceOptions_customServerName'
        ignoreCookie:
          $ref: '#/components/schemas/ResourceOptionsBoolOption_in_ResourceOptions_ignoreCookie'
        rewrite:
          $ref: '#/components/schemas/ResourceOptionsRewriteOption_in_ResourceOptions_rewrite'
    OriginProtocol_in_UpdateResourceRequest_originProtocol:
      description: |-
        Specify the protocol schema to be used in communication with origin.

        This option defines the protocol that will be used by CDN servers to request
        content from an origin source. If not specified, we will use HTTP to connect
        to an origin server.

         - HTTP: CDN servers will connect to your origin via HTTP.
         - HTTPS: CDN servers will connect to your origin via HTTPS.
         - MATCH: Connection protocol will be chosen automatically (content on the
        origin source should be available for the CDN both through HTTP and HTTPS).
      type: string
      enum:
      - HTTP
      - HTTPS
      - MATCH
    SSLTargetCertificate_in_UpdateResourceRequest_sslCertificate:
      description: |-
        SSL Certificate options.

        A set of the personal SSL certificate parameters.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SSLCertificateType_in_SSLTargetCertificate_type'
        data:
          $ref: '#/components/schemas/SSLCertificateData_in_SSLTargetCertificate_data'
    OriginMeta_in_v1Origin_meta:
      description: |-
        Set up origin of the content.

        Origin type. For details about the concept, see [documentation](/docs/cdn/concepts/origins).
      type: object
      allOf:
      - title: origin_meta_variant
        type: object
        maxProperties: 1
        properties:
          common:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: A server with a domain name linked to it
          bucket:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket not configured as a static site
              hosting.
          website:
            $ref: '#/components/schemas/OriginNamedMeta'
            description: An Object Storage bucket configured as a static site hosting.
          balancer:
            $ref: '#/components/schemas/OriginBalancerMeta'
            description: |-
              An L7 load balancer from Application Load Balancer.
              CDN servers will access the load balancer at one of its IP addresses that must be selected in the origin settings.
tags:
- name: Cache
  description: A set of methods for managing Cache Service resources.
- name: OriginGroup
  description: Origin Groups management service.
- name: Origin
  description: |-
    Origin management service.
    Origin is not a standalone entity. It can live only within origin group.
- name: Provider
  description: A set of methods for managing Provider Service resources.
- name: RawLogs
- name: Resource
  description: Provider's resources management service.
