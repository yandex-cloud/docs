openapi: 3.0.0
info:
  title: Managed Service for YDB API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://ydb.api.cloud.yandex.net
paths:
  /ydb/v1/backups/{backupId}:
    get:
      tags:
      - Backup
      summary: Returns the specified backup.
      operationId: BackupGet
      parameters:
      - name: backupId
        in: path
        description: |-
          Required.
          Required. ID of the YDB backup.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      x-y-navtitle: get
    delete:
      tags:
      - Backup
      summary: Deletes the specified backup.
      operationId: BackupDelete
      parameters:
      - name: backupId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteBackupMetadata'
      x-y-operation-response: Empty
  /ydb/v1/backups/{backupId}/paths:
    get:
      tags:
      - Backup
      operationId: BackupListPaths
      parameters:
      - name: backupId
        in: path
        description: |-
          Required.
          Required. ID of the YDB backup.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListPaths requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListPaths
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPathsResponse'
      x-y-navtitle: listPaths
  /ydb/v1/backups:
    get:
      tags:
      - Backup
      summary: Retrieves a list of backups.
      operationId: BackupList
      parameters:
      - name: folderId
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListBackups requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListBackups
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      x-y-navtitle: list
  /ydb/v1/databases/{databaseId}:
    get:
      tags:
      - Database
      summary: Returns the specified database.
      operationId: DatabaseGet
      parameters:
      - name: databaseId
        in: path
        description: |-
          Required.
          Required. ID of the YDB cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      x-y-navtitle: get
    delete:
      tags:
      - Database
      summary: Deletes the specified database.
      operationId: DatabaseDelete
      parameters:
      - name: databaseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDatabaseMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Database
      summary: Modifies the specified database.
      operationId: DatabaseUpdate
      parameters:
      - name: databaseId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/databases:
    get:
      tags:
      - Database
      summary: Retrieves a list of databases.
      operationId: DatabaseList
      parameters:
      - name: folderId
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListDatabases requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListDatabases
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Database
      summary: Creates a new database.
      operationId: DatabaseCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/databases/{databaseId}:start:
    post:
      tags:
      - Database
      summary: Starts the specified database.
      operationId: DatabaseStart
      parameters:
      - name: databaseId
        in: path
        description: |-
          Required.
          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/databases/{databaseId}:stop:
    post:
      tags:
      - Database
      summary: Stops the specified database.
      operationId: DatabaseStop
      parameters:
      - name: databaseId
        in: path
        description: |-
          Required.
          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/databases:restore:
    post:
      tags:
      - Database
      summary: Restores the specified backup
      operationId: DatabaseRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreBackupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restore
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestoreBackupMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/databases:backup:
    post:
      tags:
      - Database
      operationId: DatabaseBackup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: backup
      x-y-operation-metadata:
        $ref: '#/components/schemas/BackupDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/locations/{locationId}:
    get:
      tags:
      - Location
      summary: Returns the specified location.
      operationId: LocationGet
      parameters:
      - name: locationId
        in: path
        description: |-
          Required.
          Required. ID of the location to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      x-y-navtitle: get
  /ydb/v1/locations:
    get:
      tags:
      - Location
      summary: Returns the list of available locations.
      operationId: LocationList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListLocations requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListLocations
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      x-y-navtitle: list
  /ydb/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified resource preset.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          Required. ID of the resource preset to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /ydb/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Returns the list of available resource presets.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListResourcePresets requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListResourcePresets
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /ydb/v1/storageTypes/{storageTypeId}:
    get:
      tags:
      - StorageType
      summary: Returns the specified storage types.
      operationId: StorageTypeGet
      parameters:
      - name: storageTypeId
        in: path
        description: |-
          Required.
          Required. ID of the storage type to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageType'
      x-y-navtitle: get
  /ydb/v1/storageTypes:
    get:
      tags:
      - StorageType
      summary: Returns the list of available storage types.
      operationId: StorageTypeList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListStorageTypes requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListStorageTypes
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStorageTypesResponse'
      x-y-navtitle: list
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    Alert:
      type: object
      properties:
        alertId:
          description: output only field.
          type: string
        alertTemplateId:
          description: template of the alert.
          type: string
        name:
          description: name of the alert.
          type: string
        description:
          description: human readable description of the alert.
          type: string
        notificationChannels:
          description: the notification channels of the alert.
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
        alertParameters:
          description: alert parameters to override.
          type: array
          items:
            $ref: '#/components/schemas/AlertParameter'
        alertThresholds:
          description: alert paratemers to override.
          type: array
          items:
            $ref: '#/components/schemas/AlertParameter'
    AlertEvaluationStatus:
      type: string
      enum:
      - ALERT_EVALUATION_STATUS_OK
      - ALERT_EVALUATION_STATUS_NO_DATA
      - ALERT_EVALUATION_STATUS_ERROR
      - ALERT_EVALUATION_STATUS_ALARM
      - ALERT_EVALUATION_STATUS_WARN
    AlertParameter:
      type: object
      allOf:
      - title: parameter
        type: object
        maxProperties: 1
        properties:
          doubleParameterValue:
            $ref: '#/components/schemas/AlertParameterDoubleParameterValue'
          integerParameterValue:
            $ref: '#/components/schemas/AlertParameterIntegerParameterValue'
          textParameterValue:
            $ref: '#/components/schemas/AlertParameterTextParameterValue'
          textListParameterValue:
            $ref: '#/components/schemas/AlertParameterTextListParameterValue'
          labelListParameterValue:
            $ref: '#/components/schemas/AlertParameterLabelListParameterValue'
    AlertParameterDoubleParameterValue:
      type: object
      properties:
        name:
          description: Required. Parameter name
          type: string
        value:
          description: Required. Parameter value
          type: number
          format: double
    AlertParameterIntegerParameterValue:
      type: object
      properties:
        name:
          description: Required. Parameter name
          type: string
        value:
          description: Required. Parameter value
          type: string
          format: int64
    AlertParameterLabelListParameterValue:
      type: object
      properties:
        name:
          description: Required. Parameter name
          type: string
        values:
          description: Required. Parameter value
          type: array
          items:
            type: string
    AlertParameterTextListParameterValue:
      type: object
      properties:
        name:
          description: Required. Parameter name
          type: string
        values:
          description: Required. Parameter value
          type: array
          items:
            type: string
    AlertParameterTextParameterValue:
      type: object
      properties:
        name:
          description: Required. Parameter name
          type: string
        value:
          description: Required. Parameter value
          type: string
    Backup:
      type: object
      properties:
        id:
          type: string
        name:
          description: human readable backup name.
          type: string
        folderId:
          type: string
        databaseId:
          type: string
        description:
          description: description of backup.
          type: string
        createdAt:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        startedAt:
          description: |-
            indicates when backup started.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        completedAt:
          description: |-
            indicates when backup completed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/BackupStatus_in_Backup_status'
        backupSettings:
          $ref: '#/components/schemas/BackupSettings_in_Backup_backupSettings'
        type:
          $ref: '#/components/schemas/BackupType_in_Backup_type'
        size:
          description: size of backup in bytes.
          type: string
          format: int64
    BackupConfig:
      type: object
      properties:
        backupSettings:
          type: array
          items:
            $ref: '#/components/schemas/BackupSettings'
    BackupDatabaseMetadata:
      type: object
      properties:
        backupId:
          type: string
        databaseId:
          type: string
    BackupDatabaseRequest:
      type: object
      properties:
        databaseId:
          type: string
        backupSettings:
          $ref: '#/components/schemas/BackupSettings_in_BackupDatabaseRequest_backupSettings'
    BackupSchedule:
      type: object
      allOf:
      - type: object
        properties:
          nextExecuteTime:
            description: |-
              output only field: when next backup will be executed
              using provided schedule.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
      - title: policy
        type: object
        maxProperties: 1
        properties:
          dailyBackupSchedule:
            $ref: '#/components/schemas/DailyBackupSchedule'
          weeklyBackupSchedule:
            $ref: '#/components/schemas/WeeklyBackupSchedule'
          recurringBackupSchedule:
            $ref: '#/components/schemas/RecurringBackupSchedule'
    BackupSettings:
      type: object
      properties:
        name:
          description: |-
            name of backup settings

            The maximum string length in characters is 256.
          type: string
        description:
          description: |-
            human readable description.

            The maximum string length in characters is 256.
          type: string
        backupSchedule:
          $ref: '#/components/schemas/BackupSchedule_in_BackupSettings_backupSchedule'
        backupTimeToLive:
          description: provide time to live of backup.
          type: string
        sourcePaths:
          description: |-
            provide a list of source paths. Each path can be directory, table or even database itself.
            Each directory (or database) will be traversed recursively and all childs of directory will be included to backup.
            By default, backup will be created for full database.

            The maximum number of elements is 256.
          type: array
          items:
            type: string
        sourcePathsToExclude:
          description: |-
            provide a list of paths to exclude from backup.
            Each path is a directory, table, or database.
            Each directory (or database) will be traversed recursively and all childs of directory will be excluded.

            The maximum number of elements is 256.
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/BackupSettingsType_in_BackupSettings_type'
        storageClass:
          $ref: '#/components/schemas/BackupSettingsStorageClass_in_BackupSettings_storageClass'
    BackupSettingsStorageClass:
      type: string
      enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - GLACIER
      - DEEP_ARCHIVE
      - OUTPOSTS
    BackupSettingsType:
      type: string
      enum:
      - SYSTEM
      - USER
    BackupStatus:
      description: id of backup
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - CANCELLED
    BackupType:
      description: ' - SYSTEM: indicates that backup started by the system.'
      type: string
      enum:
      - SYSTEM
      - USER
    CreateDatabaseMetadata:
      type: object
      properties:
        databaseId:
          description: Required. ID of the YDB cluster.
          type: string
        databaseName:
          description: Required. Name of the creating database.
          type: string
    CreateDatabaseRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            type: string
          name:
            type: string
          description:
            type: string
          resourcePresetId:
            type: string
          storageConfig:
            $ref: '#/components/schemas/StorageConfig'
          scalePolicy:
            $ref: '#/components/schemas/ScalePolicy'
          networkId:
            type: string
          subnetIds:
            type: array
            items:
              type: string
          assignPublicIps:
            type: boolean
            format: boolean
          locationId:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
          backupConfig:
            $ref: '#/components/schemas/BackupConfig'
          monitoringConfig:
            $ref: '#/components/schemas/MonitoringConfig'
      - title: database_type
        type: object
        maxProperties: 1
        properties:
          zonalDatabase:
            $ref: '#/components/schemas/ZonalDatabase'
            description: deprecated field
          regionalDatabase:
            $ref: '#/components/schemas/RegionalDatabase'
            description: deprecated field
          dedicatedDatabase:
            $ref: '#/components/schemas/DedicatedDatabase'
          serverlessDatabase:
            $ref: '#/components/schemas/ServerlessDatabase'
    DailyBackupSchedule:
      type: object
      properties:
        executeTime:
          $ref: '#/components/schemas/TimeOfDay_in_DailyBackupSchedule_executeTime'
    Database:
      description: YDB database.
      type: object
      allOf:
      - type: object
        properties:
          id:
            type: string
          folderId:
            type: string
          createdAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          name:
            type: string
          description:
            type: string
          status:
            $ref: '#/components/schemas/DatabaseStatus'
          endpoint:
            type: string
          resourcePresetId:
            type: string
          storageConfig:
            $ref: '#/components/schemas/StorageConfig'
          scalePolicy:
            $ref: '#/components/schemas/ScalePolicy'
          networkId:
            type: string
          subnetIds:
            type: array
            items:
              type: string
          assignPublicIps:
            type: boolean
            format: boolean
          locationId:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
          backupConfig:
            $ref: '#/components/schemas/BackupConfig'
          documentApiEndpoint:
            type: string
          kinesisApiEndpoint:
            type: string
          monitoringConfig:
            $ref: '#/components/schemas/MonitoringConfig'
      - title: database_type
        type: object
        maxProperties: 1
        properties:
          zonalDatabase:
            $ref: '#/components/schemas/ZonalDatabase'
            description: deprecated field
          regionalDatabase:
            $ref: '#/components/schemas/RegionalDatabase'
            description: deprecated field
          dedicatedDatabase:
            $ref: '#/components/schemas/DedicatedDatabase'
          serverlessDatabase:
            $ref: '#/components/schemas/ServerlessDatabase'
    DatabaseStatus:
      type: string
      enum:
      - PROVISIONING
      - RUNNING
      - UPDATING
      - ERROR
      - DELETING
      - STARTING
      - STOPPED
    DayOfWeek:
      description: |-
        Represents a day of week.

         - DAY_OF_WEEK_UNSPECIFIED: The unspecified day-of-week.
         - MONDAY: The day-of-week of Monday.
         - TUESDAY: The day-of-week of Tuesday.
         - WEDNESDAY: The day-of-week of Wednesday.
         - THURSDAY: The day-of-week of Thursday.
         - FRIDAY: The day-of-week of Friday.
         - SATURDAY: The day-of-week of Saturday.
         - SUNDAY: The day-of-week of Sunday.
      type: string
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    DaysOfWeekBackupSchedule:
      type: object
      properties:
        days:
          description: |-
            Required.
            The number of elements must be in the range 1-7.
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
        executeTime:
          $ref: '#/components/schemas/TimeOfDay_in_DaysOfWeekBackupSchedule_executeTime'
    DedicatedDatabase:
      type: object
      properties:
        resourcePresetId:
          type: string
        storageConfig:
          $ref: '#/components/schemas/StorageConfig_in_DedicatedDatabase_storageConfig'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_DedicatedDatabase_scalePolicy'
        networkId:
          type: string
        subnetIds:
          type: array
          items:
            type: string
        assignPublicIps:
          type: boolean
          format: boolean
    DeleteBackupMetadata:
      type: object
      properties:
        backupId:
          type: string
        databaseId:
          type: string
    DeleteDatabaseMetadata:
      type: object
      properties:
        databaseId:
          type: string
        databaseName:
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListBackupsResponse:
      type: object
      properties:
        backups:
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListBackups requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListBackups request. Subsequent ListBackups
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          type: array
          items:
            $ref: '#/components/schemas/Database'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListDatabases requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListDatabases request. Subsequent ListDatabases
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListLocationsResponse:
      type: object
      properties:
        locations:
          description: Requested list of locations.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListLocations requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListLocations request. Subsequent ListLocations
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListPathsResponse:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
        nextPageToken:
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: Requested list of resource presets.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListResourcePresets requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListResourcePresets request. Subsequent ListResourcePresets
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListStorageTypesResponse:
      type: object
      properties:
        storageTypes:
          description: Requested list of storage types.
          type: array
          items:
            $ref: '#/components/schemas/StorageType'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListStorageTypes requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListStorageTypes request. Subsequent ListStorageTypes
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    Location:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
    MonitoringConfig:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
    NotificationChannel:
      type: object
      properties:
        notificationChannelId:
          type: string
        notifyAboutStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AlertEvaluationStatus'
        repeateNotifyDelayMs:
          type: string
          format: int64
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RecurringBackupSchedule:
      type: object
      properties:
        startTime:
          description: |-
            Required.
            Timestamp of the first recurrence.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        recurrence:
          description: |-
            Required.
            An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
            this backup reccurs.
            The FREQ values of MINUTELY, and SECONDLY are not supported.
          type: string
    RegionalDatabase:
      type: object
      properties:
        regionId:
          description: Required.
          type: string
    ResourcePreset:
      type: object
      properties:
        id:
          type: string
        cores:
          type: string
          format: int64
        memory:
          type: string
          format: int64
    RestoreBackupMetadata:
      type: object
      properties:
        backupId:
          type: string
        databaseId:
          type: string
    RestoreBackupRequest:
      type: object
      properties:
        backupId:
          description: |-
            Required.
            Required. ID of the YDB backup.

            The maximum string length in characters is 50.
          type: string
        databaseId:
          description: |-
            Required.
            Required. ID of the YDB database.

            The maximum string length in characters is 50.
          type: string
        pathsToRestore:
          description: |-
            Specify paths to restore.
            If empty, all paths will restored by default.
          type: array
          items:
            type: string
        targetPath:
          description: Specify target path.
          type: string
    ScalePolicy:
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
    ScalePolicyFixedScale:
      type: object
      properties:
        size:
          description: The minimum value is 1.
          type: string
          format: int64
    ServerlessDatabase:
      type: object
      properties:
        throttlingRcuLimit:
          description: |-
            Let's define 1 RU  - 1 request unit
            Let's define 1 RCU - 1 request capacity unit, which is 1 RU per second.
            If `enable_throttling_rcu_limit` flag is true, the database will be throttled using `throttling_rcu_limit` value.
            Otherwise, the database is throttled using the cloud quotas.
            If zero, all requests will be blocked until non zero value is set.
          type: string
          format: int64
        storageSizeLimit:
          description: Specify serverless database storage size limit. If zero, default
            value is applied.
          type: string
          format: int64
        enableThrottlingRcuLimit:
          description: If false, the database is throttled by cloud value.
          type: boolean
          format: boolean
        provisionedRcuLimit:
          description: |-
            Specify the number of provisioned RCUs to pay less if the database has predictable load.
            You will be charged for the provisioned capacity regularly even if this capacity is not fully consumed.
            You will be charged for the on-demand consumption only if provisioned capacity is consumed.
          type: string
          format: int64
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    StartDatabaseMetadata:
      type: object
      properties:
        databaseId:
          type: string
        databaseName:
          type: string
    StopDatabaseMetadata:
      type: object
      properties:
        databaseId:
          type: string
        databaseName:
          type: string
    StorageConfig:
      type: object
      properties:
        storageOptions:
          description: |-
            Required.
            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/StorageOption'
        storageSizeLimit:
          description: 'output only field: storage size limit of dedicated database.'
          type: string
          format: int64
    StorageOption:
      type: object
      properties:
        storageTypeId:
          type: string
        groupCount:
          type: string
          format: int64
    StorageType:
      type: object
      properties:
        id:
          type: string
        deviceType:
          type: string
        redundancyType:
          type: string
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    TimeOfDay:
      description: |-
        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateDatabaseMetadata:
      type: object
      properties:
        databaseId:
          type: string
        databaseName:
          type: string
    UpdateDatabaseRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            type: string
          updateMask:
            $ref: '#/components/schemas/FieldMask'
          name:
            type: string
          description:
            type: string
          resourcePresetId:
            type: string
          storageConfig:
            $ref: '#/components/schemas/StorageConfig'
          scalePolicy:
            $ref: '#/components/schemas/ScalePolicy'
          networkId:
            type: string
          subnetIds:
            type: array
            items:
              type: string
          assignPublicIps:
            type: boolean
            format: boolean
          locationId:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
          backupConfig:
            $ref: '#/components/schemas/BackupConfig'
          monitoringConfig:
            $ref: '#/components/schemas/MonitoringConfig'
      - title: database_type
        type: object
        maxProperties: 1
        properties:
          zonalDatabase:
            $ref: '#/components/schemas/ZonalDatabase'
          regionalDatabase:
            $ref: '#/components/schemas/RegionalDatabase'
          dedicatedDatabase:
            $ref: '#/components/schemas/DedicatedDatabase'
          serverlessDatabase:
            $ref: '#/components/schemas/ServerlessDatabase'
    WeeklyBackupSchedule:
      type: object
      properties:
        daysOfWeek:
          description: |-
            Required.
            The number of elements must be in the range 1-7.
          type: array
          items:
            $ref: '#/components/schemas/DaysOfWeekBackupSchedule'
    ZonalDatabase:
      type: object
      properties:
        zoneId:
          description: Required.
          type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    BackupStatus_in_Backup_status:
      description: id of backup
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - CANCELLED
    BackupSettings_in_Backup_backupSettings:
      description: settings used to make backup.
      type: object
      properties:
        name:
          description: |-
            name of backup settings

            The maximum string length in characters is 256.
          type: string
        description:
          description: |-
            human readable description.

            The maximum string length in characters is 256.
          type: string
        backupSchedule:
          $ref: '#/components/schemas/BackupSchedule_in_BackupSettings_backupSchedule'
        backupTimeToLive:
          description: provide time to live of backup.
          type: string
        sourcePaths:
          description: |-
            provide a list of source paths. Each path can be directory, table or even database itself.
            Each directory (or database) will be traversed recursively and all childs of directory will be included to backup.
            By default, backup will be created for full database.

            The maximum number of elements is 256.
          type: array
          items:
            type: string
        sourcePathsToExclude:
          description: |-
            provide a list of paths to exclude from backup.
            Each path is a directory, table, or database.
            Each directory (or database) will be traversed recursively and all childs of directory will be excluded.

            The maximum number of elements is 256.
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/BackupSettingsType_in_BackupSettings_type'
        storageClass:
          $ref: '#/components/schemas/BackupSettingsStorageClass_in_BackupSettings_storageClass'
    BackupType_in_Backup_type:
      description: ' - SYSTEM: indicates that backup started by the system.'
      type: string
      enum:
      - SYSTEM
      - USER
    BackupSettings_in_BackupDatabaseRequest_backupSettings:
      description: custom backup options, if required.
      type: object
      properties:
        name:
          description: |-
            name of backup settings

            The maximum string length in characters is 256.
          type: string
        description:
          description: |-
            human readable description.

            The maximum string length in characters is 256.
          type: string
        backupSchedule:
          $ref: '#/components/schemas/BackupSchedule_in_BackupSettings_backupSchedule'
        backupTimeToLive:
          description: provide time to live of backup.
          type: string
        sourcePaths:
          description: |-
            provide a list of source paths. Each path can be directory, table or even database itself.
            Each directory (or database) will be traversed recursively and all childs of directory will be included to backup.
            By default, backup will be created for full database.

            The maximum number of elements is 256.
          type: array
          items:
            type: string
        sourcePathsToExclude:
          description: |-
            provide a list of paths to exclude from backup.
            Each path is a directory, table, or database.
            Each directory (or database) will be traversed recursively and all childs of directory will be excluded.

            The maximum number of elements is 256.
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/BackupSettingsType_in_BackupSettings_type'
        storageClass:
          $ref: '#/components/schemas/BackupSettingsStorageClass_in_BackupSettings_storageClass'
    BackupSchedule_in_BackupSettings_backupSchedule:
      description: provide schedule. if empty, backup will be disabled.
      type: object
      allOf:
      - type: object
        properties:
          nextExecuteTime:
            description: |-
              output only field: when next backup will be executed
              using provided schedule.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
      - title: policy
        type: object
        maxProperties: 1
        properties:
          dailyBackupSchedule:
            $ref: '#/components/schemas/DailyBackupSchedule'
          weeklyBackupSchedule:
            $ref: '#/components/schemas/WeeklyBackupSchedule'
          recurringBackupSchedule:
            $ref: '#/components/schemas/RecurringBackupSchedule'
    BackupSettingsType_in_BackupSettings_type:
      type: string
      enum:
      - SYSTEM
      - USER
    BackupSettingsStorageClass_in_BackupSettings_storageClass:
      type: string
      enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - GLACIER
      - DEEP_ARCHIVE
      - OUTPOSTS
    TimeOfDay_in_DailyBackupSchedule_executeTime:
      description: |-
        Required.

        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    TimeOfDay_in_DaysOfWeekBackupSchedule_executeTime:
      description: |-
        Required.

        Represents a time of day. The date and time zone are either not significant
        or are specified elsewhere. An API may choose to allow leap seconds. Related
        types are [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) and [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
            to allow the value "24:00:00" for scenarios like business closing time.
          type: integer
          format: int32
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Seconds of minutes of the time. Must normally be from 0 to 59. An API may
            allow the value 60 if it allows leap-seconds.
          type: integer
          format: int32
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          type: integer
          format: int32
    StorageConfig_in_DedicatedDatabase_storageConfig:
      type: object
      properties:
        storageOptions:
          description: |-
            Required.
            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/StorageOption'
        storageSizeLimit:
          description: 'output only field: storage size limit of dedicated database.'
          type: string
          format: int64
    ScalePolicy_in_DedicatedDatabase_scalePolicy:
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
tags:
- name: Backup
  description: A set of methods for managing backups.
- name: Database
  description: A set of methods for managing databases.
- name: Location
- name: ResourcePreset
- name: StorageType
