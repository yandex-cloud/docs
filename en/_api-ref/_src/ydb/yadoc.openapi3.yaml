openapi: "3.0"
info:
  title: Yandex Database Control Plane API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about Yandex.Cloud API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://ydb.api.cloud.yandex.net
paths:
  /ydb/v1/databases/{databaseId}:
    get:
      tags:
      - Database
      summary: Returns the specified database.
      operationId: DatabaseGet
      parameters:
      - name: databaseId
        in: path
        description: |-
          Required.
          Required. ID of the YDB cluster.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      x-y-navtitle: get
    delete:
      tags:
      - Database
      summary: Deletes the specified database.
      operationId: DatabaseDelete
      parameters:
      - name: databaseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDatabaseMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Database
      summary: Modifies the specified database.
      operationId: DatabaseUpdate
      parameters:
      - name: databaseId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/databases:
    get:
      tags:
      - Database
      summary: Retrieves a list of databases.
      operationId: DatabaseList
      parameters:
      - name: folderId
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListDatabases requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListDatabases
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Database
      summary: Creates a new database.
      operationId: DatabaseCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/ydb/api-ref/Database#representation)'
  /ydb/v1/locations/{locationId}:
    get:
      tags:
      - Location
      summary: Returns the specified location.
      operationId: LocationGet
      parameters:
      - name: locationId
        in: path
        description: |-
          Required.
          Required. ID of the location to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      x-y-navtitle: get
  /ydb/v1/locations:
    get:
      tags:
      - Location
      summary: Returns the list of available locations.
      operationId: LocationList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListLocations requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListLocations
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      x-y-navtitle: list
  /ydb/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Returns the specified resource preset.
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Required.
          Required. ID of the resource preset to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /ydb/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Returns the list of available resource presets.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListResourcePresets requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListResourcePresets
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /ydb/v1/storageTypes/{storageTypeId}:
    get:
      tags:
      - StorageType
      summary: Returns the specified storage types.
      operationId: StorageTypeGet
      parameters:
      - name: storageTypeId
        in: path
        description: |-
          Required.
          Required. ID of the storage type to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageType'
      x-y-navtitle: get
  /ydb/v1/storageTypes:
    get:
      tags:
      - StorageType
      summary: Returns the list of available storage types.
      operationId: StorageTypeList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `page_size`, the service returns a `next_page_token` that can be used
          to get the next page of results in subsequent ListStorageTypes requests.
          Acceptable values are 0 to 1000, inclusive. Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set `page_token` to the `next_page_token` returned by a previous ListStorageTypes
          request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStorageTypesResponse'
      x-y-navtitle: list
components:
  schemas:
    CreateDatabaseMetadata:
      type: object
      properties:
        databaseId:
          description: Required. ID of the YDB cluster.
          type: string
        databaseName:
          description: Required. Name of the creating database.
          type: string
    CreateDatabaseRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            type: string
          name:
            type: string
          description:
            type: string
          resourcePresetId:
            type: string
          storageConfig:
            $ref: '#/components/schemas/StorageConfig'
          scalePolicy:
            $ref: '#/components/schemas/ScalePolicy'
          networkId:
            type: string
          subnetIds:
            type: array
            items:
              type: string
          assignPublicIps:
            type: boolean
            format: boolean
          locationId:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
      - title: database_type
        type: object
        maxProperties: 1
        properties:
          zonalDatabase:
            $ref: '#/components/schemas/ZonalDatabase'
            description: deprecated field
          regionalDatabase:
            $ref: '#/components/schemas/RegionalDatabase'
            description: deprecated field
          dedicatedDatabase:
            $ref: '#/components/schemas/DedicatedDatabase'
          serverlessDatabase:
            $ref: '#/components/schemas/ServerlessDatabase'
    Database:
      description: YDB database.
      type: object
      allOf:
      - type: object
        properties:
          id:
            type: string
          folderId:
            type: string
          createdAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          name:
            type: string
          description:
            type: string
          status:
            $ref: '#/components/schemas/DatabaseStatus'
          endpoint:
            type: string
          resourcePresetId:
            type: string
          storageConfig:
            $ref: '#/components/schemas/StorageConfig'
          scalePolicy:
            $ref: '#/components/schemas/ScalePolicy'
          networkId:
            type: string
          subnetIds:
            type: array
            items:
              type: string
          assignPublicIps:
            type: boolean
            format: boolean
          locationId:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
      - title: database_type
        type: object
        maxProperties: 1
        properties:
          zonalDatabase:
            $ref: '#/components/schemas/ZonalDatabase'
            description: deprecated field
          regionalDatabase:
            $ref: '#/components/schemas/RegionalDatabase'
            description: deprecated field
          dedicatedDatabase:
            $ref: '#/components/schemas/DedicatedDatabase'
          serverlessDatabase:
            $ref: '#/components/schemas/ServerlessDatabase'
    DatabaseStatus:
      type: string
      enum:
      - PROVISIONING
      - RUNNING
      - UPDATING
      - ERROR
      - DELETING
    DedicatedDatabase:
      type: object
      properties:
        resourcePresetId:
          type: string
        storageConfig:
          $ref: '#/components/schemas/StorageConfig_in_DedicatedDatabase_storageConfig'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_DedicatedDatabase_scalePolicy'
        networkId:
          type: string
        subnetIds:
          type: array
          items:
            type: string
        assignPublicIps:
          type: boolean
          format: boolean
    DeleteDatabaseMetadata:
      type: object
      properties:
        databaseId:
          type: string
        databaseName:
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          type: array
          items:
            $ref: '#/components/schemas/Database'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListDatabases requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListDatabases request. Subsequent ListDatabases
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListLocationsResponse:
      type: object
      properties:
        locations:
          description: Requested list of locations.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListLocations requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListLocations request. Subsequent ListLocations
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: Requested list of resource presets.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListResourcePresets requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListResourcePresets request. Subsequent ListResourcePresets
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    ListStorageTypesResponse:
      type: object
      properties:
        storageTypes:
          description: Requested list of storage types.
          type: array
          items:
            $ref: '#/components/schemas/StorageType'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for ListStorageTypes requests,
            if the number of results is larger than `page_size` specified in the request.
            To get the next page, specify the value of `next_page_token` as a value for
            the `page_token` parameter in the next ListStorageTypes request. Subsequent ListStorageTypes
            requests will have their own `next_page_token` to continue paging through the results.
          type: string
    Location:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RegionalDatabase:
      type: object
      properties:
        regionId:
          description: Required.
          type: string
    ResourcePreset:
      type: object
      properties:
        id:
          type: string
        cores:
          type: string
          format: int64
        memory:
          type: string
          format: int64
    ScalePolicy:
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
    ScalePolicyFixedScale:
      type: object
      properties:
        size:
          description: The minimum value is 1.
          type: string
          format: int64
    ServerlessDatabase:
      type: object
      properties: {}
    StorageConfig:
      type: object
      properties:
        storageOptions:
          description: |-
            Required.
            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/StorageOption'
    StorageOption:
      type: object
      properties:
        storageTypeId:
          type: string
        groupCount:
          type: string
          format: int64
    StorageType:
      type: object
      properties:
        id:
          type: string
        deviceType:
          type: string
        redundancyType:
          type: string
    UpdateDatabaseMetadata:
      type: object
      properties:
        databaseId:
          type: string
        databaseName:
          type: string
    UpdateDatabaseRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            type: string
          updateMask:
            $ref: '#/components/schemas/FieldMask'
          name:
            type: string
          description:
            type: string
          resourcePresetId:
            type: string
          storageConfig:
            $ref: '#/components/schemas/StorageConfig'
          scalePolicy:
            $ref: '#/components/schemas/ScalePolicy'
          networkId:
            type: string
          subnetIds:
            type: array
            items:
              type: string
          assignPublicIps:
            type: boolean
            format: boolean
          locationId:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
      - title: database_type
        type: object
        maxProperties: 1
        properties:
          zonalDatabase:
            $ref: '#/components/schemas/ZonalDatabase'
          regionalDatabase:
            $ref: '#/components/schemas/RegionalDatabase'
          dedicatedDatabase:
            $ref: '#/components/schemas/DedicatedDatabase'
          serverlessDatabase:
            $ref: '#/components/schemas/ServerlessDatabase'
    ZonalDatabase:
      type: object
      properties:
        zoneId:
          description: Required.
          type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    StorageConfig_in_DedicatedDatabase_storageConfig:
      type: object
      properties:
        storageOptions:
          description: |-
            Required.
            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/StorageOption'
    ScalePolicy_in_DedicatedDatabase_scalePolicy:
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
tags:
- name: Database
  description: A set of methods for managing databases.
- name: Location
- name: ResourcePreset
- name: StorageType
