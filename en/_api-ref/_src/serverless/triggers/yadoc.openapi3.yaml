openapi: "3.0"
info:
  title: Yandex Serverless Triggers Service
  description: Description not set.
  version: v1
paths:
  /triggers/v1/triggers/{triggerId}:
    get:
      tags:
      - Trigger
      operationId: TriggerGet
      parameters:
      - name: triggerId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
      x-y-navtitle: get
    delete:
      tags:
      - Trigger
      operationId: TriggerDelete
      parameters:
      - name: triggerId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteTriggerMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Trigger
      operationId: TriggerUpdate
      parameters:
      - name: triggerId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTriggerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateTriggerMetadata'
      x-y-operation-response: '[Trigger](/Trigger#representation)'
  /triggers/v1/triggers:
    get:
      tags:
      - Trigger
      operationId: TriggerList
      parameters:
      - name: folderId
        in: query
        description: Required.
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Trigger
      operationId: TriggerCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTriggerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateTriggerMetadata'
      x-y-operation-response: '[Trigger](/Trigger#representation)'
  /triggers/v1/triggers/{triggerId}/operations:
    get:
      tags:
      - Trigger
      operationId: TriggerListOperations
      parameters:
      - name: triggerId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggerOperationsResponse'
      x-y-navtitle: listOperations
components:
  schemas:
    BatchSettings:
      type: object
      properties:
        size:
          description: |-
            Maximum batch size: trigger will send a batch if number of events exceeds this value.

            Acceptable values are 0 to 10, inclusive.
          type: string
          format: int64
        cutoff:
          description: |-
            Required.
            Maximum batch size: trigger will send a batch if its lifetime exceeds this value.
          type: string
    CreateTriggerMetadata:
      type: object
      properties:
        triggerId:
          type: string
    CreateTriggerRequest:
      type: object
      properties:
        folderId:
          description: Required.
          type: string
        name:
          description: Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9]
            ``.
          type: string
        description:
          description: The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        rule:
          $ref: '#/components/schemas/TriggerRule_in_CreateTriggerRequest_rule'
    DeleteTriggerMetadata:
      type: object
      properties:
        triggerId:
          description: Required.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    InvokeFunctionOnce:
      type: object
      properties:
        functionId:
          description: |-
            Required.
            The maximum string length in characters is 50.
          type: string
        functionTag:
          type: string
        serviceAccountId:
          description: SA which should be used to call a function, optional.
          type: string
    InvokeFunctionWithRetry:
      type: object
      properties:
        functionId:
          description: |-
            Required.
            The maximum string length in characters is 50.
          type: string
        functionTag:
          type: string
        serviceAccountId:
          description: SA which has call permission on the function, optional.
          type: string
        retrySettings:
          $ref: '#/components/schemas/RetrySettings_in_InvokeFunctionWithRetry_retrySettings'
    ListTriggerOperationsResponse:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          type: string
    ListTriggersResponse:
      type: object
      properties:
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
        nextPageToken:
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/Status'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RetrySettings:
      type: object
      properties:
        retryAttempts:
          description: |-
            Maximum number of retries (extra calls) before an action fails.

            Acceptable values are 1 to 5, inclusive.
          type: string
          format: int64
        interval:
          description: |-
            Required.
            Interval between tries.
          type: string
    Status:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Trigger:
      type: object
      properties:
        id:
          description: ID of the trigger.
          type: string
        folderId:
          description: |-
            Required.
            ID of the folder that the trigger belongs to.

            The maximum string length in characters is 50.
          type: string
        createdAt:
          description: |-
            Timestamp when the trigger was created.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Required.
            Name of the trigger.
          type: string
        description:
          description: Description of the trigger.
          type: string
        labels:
          description: Resource labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        rule:
          $ref: '#/components/schemas/TriggerRule_in_Trigger_rule'
    TriggerIoTMessage:
      type: object
      allOf:
      - type: object
        properties:
          registryId:
            description: Required.
            type: string
          deviceId:
            type: string
          mqttTopic:
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
    TriggerMessageQueue:
      type: object
      allOf:
      - type: object
        properties:
          queueId:
            description: ID of the queue.
            type: string
          serviceAccountId:
            description: |-
              Required.
              SA which has read access to the queue.

              The maximum string length in characters is 50.
            type: string
          batchSettings:
            $ref: '#/components/schemas/BatchSettings'
            description: |-
              Required.
              Batch settings for YMQ client.
          visibilityTimeout:
            description: |-
              Queue visibility timeout override.

              The maximum value is 43200 seconds.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionOnce'
    TriggerRule:
      type: object
      allOf:
      - title: rule
        type: object
        maxProperties: 1
        properties:
          messageQueue:
            $ref: '#/components/schemas/TriggerMessageQueue'
          iotMessage:
            $ref: '#/components/schemas/TriggerIoTMessage'
    UpdateTriggerMetadata:
      type: object
      properties:
        triggerId:
          description: Required.
          type: string
    UpdateTriggerRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateTriggerRequest_updateMask'
        name:
          description: Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9]
            ``.
          type: string
        description:
          description: The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    TriggerRule_in_CreateTriggerRequest_rule:
      description: Required.
      type: object
      allOf:
      - title: rule
        type: object
        maxProperties: 1
        properties:
          messageQueue:
            $ref: '#/components/schemas/TriggerMessageQueue'
          iotMessage:
            $ref: '#/components/schemas/TriggerIoTMessage'
    RetrySettings_in_InvokeFunctionWithRetry_retrySettings:
      description: Retry policy, optional (no value means no retry).
      type: object
      properties:
        retryAttempts:
          description: |-
            Maximum number of retries (extra calls) before an action fails.

            Acceptable values are 1 to 5, inclusive.
          type: string
          format: int64
        interval:
          description: |-
            Required.
            Interval between tries.
          type: string
    TriggerRule_in_Trigger_rule:
      description: |-
        Required.
        Defines trigger rule (is always consistent with type filed)
      type: object
      allOf:
      - title: rule
        type: object
        maxProperties: 1
        properties:
          messageQueue:
            $ref: '#/components/schemas/TriggerMessageQueue'
          iotMessage:
            $ref: '#/components/schemas/TriggerIoTMessage'
    FieldMask_in_UpdateTriggerRequest_updateMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Trigger
