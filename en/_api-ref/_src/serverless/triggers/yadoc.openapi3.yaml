openapi: 3.0.0
info:
  title: Cloud Functions Triggers Service
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: triggers/api-ref
  x-y-baseUrl: https://serverless-triggers.api.cloud.yandex.net
paths:
  /triggers/v1/triggers/{triggerId}:
    get:
      tags:
      - Trigger
      summary: Returns the specified trigger.
      description: To get the list of all available triggers, make a [list](/docs/functions/triggers/api-ref/Trigger/list)
        request.
      operationId: TriggerGet
      parameters:
      - name: triggerId
        in: path
        description: |-
          Required.
          ID of the trigger to return.

          To get a trigger ID make a [list](/docs/functions/triggers/api-ref/Trigger/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
      x-y-navtitle: get
    delete:
      tags:
      - Trigger
      summary: Deletes the specified trigger.
      operationId: TriggerDelete
      parameters:
      - name: triggerId
        in: path
        description: |-
          Required.
          ID of the trigger to delete.

          To get a trigger ID make a [list](/docs/functions/triggers/api-ref/Trigger/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteTriggerMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Trigger
      summary: Updates the specified trigger.
      operationId: TriggerUpdate
      parameters:
      - name: triggerId
        in: path
        description: |-
          Required.
          ID of the trigger to update.

          To get a trigger ID make a [list](/docs/functions/triggers/api-ref/Trigger/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTriggerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateTriggerMetadata'
      x-y-operation-response: '[Trigger](/docs/functions/triggers/api-ref/Trigger#representation)'
  /triggers/v1/triggers:
    get:
      tags:
      - Trigger
      summary: Retrieves the list of triggers in the specified folder.
      operationId: TriggerList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list triggers in.

          To get a folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `pageSize`, the service returns a [nextPageToken](/docs/functions/triggers/api-ref/Trigger/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `pageToken` to the
          [nextPageToken](/docs/functions/triggers/api-ref/Trigger/list#responses) returned by a previous list request.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters triggers listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can only be applied to the [Trigger.name](/docs/functions/triggers/api-ref/Trigger#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-trigger`.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Trigger
      summary: Creates a trigger in the specified folder.
      operationId: TriggerCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTriggerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateTriggerMetadata'
      x-y-operation-response: '[Trigger](/docs/functions/triggers/api-ref/Trigger#representation)'
  /triggers/v1/triggers/{triggerId}:pause:
    post:
      tags:
      - Trigger
      summary: Pauses the specified trigger.
      operationId: TriggerPause
      parameters:
      - name: triggerId
        in: path
        description: |-
          Required.
          ID of the trigger to pause

          To get a trigger ID make a [list](/docs/functions/triggers/api-ref/Trigger/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseTriggerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: pause
      x-y-operation-metadata:
        $ref: '#/components/schemas/PauseTriggerMetadata'
      x-y-operation-response: '[Trigger](/docs/functions/triggers/api-ref/Trigger#representation)'
  /triggers/v1/triggers/{triggerId}:resume:
    post:
      tags:
      - Trigger
      summary: Restarts the specified trigger.
      operationId: TriggerResume
      parameters:
      - name: triggerId
        in: path
        description: |-
          Required.
          ID of the trigger to pause

          To get a trigger ID make a [list](/docs/functions/triggers/api-ref/Trigger/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeTriggerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: resume
      x-y-operation-metadata:
        $ref: '#/components/schemas/ResumeTriggerMetadata'
      x-y-operation-response: '[Trigger](/docs/functions/triggers/api-ref/Trigger#representation)'
  /triggers/v1/triggers/{triggerId}/operations:
    get:
      tags:
      - Trigger
      summary: Lists operations for the specified trigger.
      operationId: TriggerListOperations
      parameters:
      - name: triggerId
        in: path
        description: |-
          Required.
          ID of the trigger to list operations for.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `pageSize`, the service returns a [nextPageToken](/docs/functions/triggers/api-ref/Trigger/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `pageToken` to the
          [nextPageToken](/docs/functions/triggers/api-ref/Trigger/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can only be applied to the [Trigger.name](/docs/functions/triggers/api-ref/Trigger#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-function`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTriggerOperationsResponse'
      x-y-navtitle: listOperations
components:
  schemas:
    BatchSettings:
      description: Settings for batch processing of messages in a queue.
      type: object
      properties:
        size:
          description: |-
            Batch size. Trigger will send the batch of messages to the function
            when the number of messages in the queue reaches `size`, or the `cutoff` time has passed.

            Acceptable values are 0 to 10, inclusive.
          type: string
          format: int64
        cutoff:
          description: |-
            Required.
            Maximum wait time. Trigger will send the batch of messages to the function when
            the number of messages in the queue reaches `size`, or the `cutoff` time has passed.
          type: string
    BillingBudget:
      type: object
      allOf:
      - type: object
        properties:
          billingAccountId:
            description: |-
              Required.
              The maximum string length in characters is 50.
            type: string
          budgetId:
            description: The maximum string length in characters is 50.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
    CloudLogsBatchSettings:
      type: object
      properties:
        size:
          description: |-
            Batch size. Trigger will send the batch of messages to the function
            when the number of messages in the log group reaches `size`, or the `cutoff` time has passed.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        cutoff:
          description: |-
            Maximum wait time. Trigger will send the batch of messages to the function when
            the number of messages in the log group reaches `size`, or the `cutoff` time has passed.

            Acceptable values are 1 seconds to 60 seconds, inclusive.
          type: string
    CreateTriggerMetadata:
      type: object
      properties:
        triggerId:
          description: ID of the trigger that is being created.
          type: string
    CreateTriggerRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a trigger in.

            To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.
          type: string
        name:
          description: |-
            Name of the trigger.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the trigger.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        rule:
          $ref: '#/components/schemas/TriggerRule_in_CreateTriggerRequest_rule'
    DataStream:
      type: object
      allOf:
      - type: object
        properties:
          endpoint:
            description: Data stream endpoint.
            type: string
          database:
            description: Data stream database.
            type: string
          stream:
            description: Stream name.
            type: string
          serviceAccountId:
            description: ID of the service account which has permission to read data
              stream.
            type: string
          batchSettings:
            $ref: '#/components/schemas/DataStreamBatchSettings'
            description: Batch settings for processing events.
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
    DataStreamBatchSettings:
      type: object
      properties:
        size:
          description: |-
            Batch size in bytes. Trigger will send the batch of messages to the associated function
            when size of log events reaches this value, or the `cutoff` time has passed.

            Acceptable values are 1 to 65536, inclusive.
          type: string
          format: int64
        cutoff:
          description: |-
            Maximum wait time. Trigger will send the batch of messages the time since the last batch
            exceeds the `cutoff` value, regardless of the amount of log events.

            Acceptable values are 1 seconds to 60 seconds, inclusive.
          type: string
    DeleteTriggerMetadata:
      type: object
      properties:
        triggerId:
          description: |-
            Required.
            ID of the trigger that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    InvokeContainerOnce:
      description: A single container invocation.
      type: object
      properties:
        containerId:
          description: |-
            Required.
            ID of the container to invoke.

            The maximum string length in characters is 50.
          type: string
        path:
          description: Endpoint HTTP path to invoke.
          type: string
        serviceAccountId:
          description: ID of the service account which has permission to invoke the
            container.
          type: string
    InvokeContainerWithRetry:
      description: A container invocation with retries.
      type: object
      properties:
        containerId:
          description: |-
            Required.
            ID of the container to invoke.

            The maximum string length in characters is 50.
          type: string
        path:
          description: Endpoint HTTP path to invoke.
          type: string
        serviceAccountId:
          description: ID of the service account which has permission to invoke the
            container.
          type: string
        retrySettings:
          $ref: '#/components/schemas/RetrySettings_in_InvokeContainerWithRetry_retrySettings'
        deadLetterQueue:
          $ref: '#/components/schemas/PutQueueMessage_in_InvokeContainerWithRetry_deadLetterQueue'
    InvokeFunctionOnce:
      description: A single function invocation.
      type: object
      properties:
        functionId:
          description: |-
            Required.
            ID of the function to invoke.

            The maximum string length in characters is 50.
          type: string
        functionTag:
          description: Version tag of the function to execute.
          type: string
        serviceAccountId:
          description: ID of the service account that should be used to invoke the
            function.
          type: string
    InvokeFunctionWithRetry:
      description: A function invocation with retries.
      type: object
      properties:
        functionId:
          description: |-
            Required.
            ID of the function to invoke.

            The maximum string length in characters is 50.
          type: string
        functionTag:
          description: Version tag of the function to execute.
          type: string
        serviceAccountId:
          description: ID of the service account which has permission to invoke the
            function.
          type: string
        retrySettings:
          $ref: '#/components/schemas/RetrySettings_in_InvokeFunctionWithRetry_retrySettings'
        deadLetterQueue:
          $ref: '#/components/schemas/PutQueueMessage_in_InvokeFunctionWithRetry_deadLetterQueue'
    ListTriggerOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified trigger.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/functions/triggers/api-ref/Trigger/listOperations#query_params), use `nextPageToken` as the value
            for the [pageToken](/docs/functions/triggers/api-ref/Trigger/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `nextPageToken` to continue paging through the results.
          type: string
    ListTriggersResponse:
      type: object
      properties:
        triggers:
          description: List of triggers in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/functions/triggers/api-ref/Trigger/list#query_params), use `nextPageToken` as the value
            for the [pageToken](/docs/functions/triggers/api-ref/Trigger/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `nextPageToken` to continue paging through the results.
          type: string
    LogLevelLevel:
      description: |-
        Possible log levels for entries.

         - LEVEL_UNSPECIFIED: Default log level.

        Equivalent to not specifying log level at all.
         - TRACE: Trace log level.

        Possible use case: verbose logging of some business logic.
         - DEBUG: Debug log level.

        Possible use case: debugging special cases in application logic.
         - INFO: Info log level.

        Mostly used for information messages.
         - WARN: Warn log level.

        May be used to alert about significant events.
         - ERROR: Error log level.

        May be used to alert about errors in infrastructure, logic, etc.
         - FATAL: Fatal log level.

        May be used to alert about unrecoverable failures and events.
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - FATAL
    LoggingBatchSettings:
      type: object
      properties:
        size:
          description: |-
            Batch size. Trigger will send the batch of messages to the associated function
            when the number of log events reaches this value, or the `cutoff` time has passed.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
        cutoff:
          description: |-
            Maximum wait time. Trigger will send the batch of messages the time since the last batch
            exceeds the `cutoff` value, regardless of the amount of log events.

            Acceptable values are 1 seconds to 60 seconds, inclusive.
          type: string
    Mail:
      type: object
      allOf:
      - type: object
        properties:
          email:
            description: |-
              Address to receive emails for trigger activation.
              Field is ignored for write requests and populated on trigger creation.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PauseTriggerMetadata:
      type: object
      properties:
        triggerId:
          description: |-
            Required.
            ID of the trigger that is being paused.
          type: string
    PauseTriggerRequest:
      type: object
      properties: {}
    PutQueueMessage:
      type: object
      properties:
        queueId:
          description: ID of the queue.
          type: string
        serviceAccountId:
          description: |-
            Required.
            Service account which has write permission on the queue.

            The maximum string length in characters is 50.
          type: string
    ResumeTriggerMetadata:
      type: object
      properties:
        triggerId:
          description: |-
            Required.
            ID of the trigger that is being paused.
          type: string
    ResumeTriggerRequest:
      type: object
      properties: {}
    RetrySettings:
      description: Settings for retrying to invoke a function.
      type: object
      properties:
        retryAttempts:
          description: |-
            Maximum number of retries (extra invokes) before the action is considered failed.

            Acceptable values are 1 to 5, inclusive.
          type: string
          format: int64
        interval:
          description: |-
            Required.
            Time in seconds to wait between individual retries.
          type: string
    Trigger:
      description: A trigger to invoke a serverless function. For more information,
        see [Triggers](/docs/functions/concepts/trigger).
      type: object
      properties:
        id:
          description: ID of the trigger. Generated at creation time.
          type: string
        folderId:
          description: |-
            Required.
            ID of the folder that the trigger belongs to.

            The maximum string length in characters is 50.
          type: string
        createdAt:
          description: |-
            Creation timestamp for the trigger.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the trigger.

            The string length in characters must be 3-63.
          type: string
        description:
          description: |-
            Description of the trigger.

            The string length in characters must be 0-256.
          type: string
        labels:
          description: Trigger labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        rule:
          $ref: '#/components/schemas/TriggerRule_in_Trigger_rule'
        status:
          $ref: '#/components/schemas/TriggerStatus_in_Trigger_status'
    TriggerCloudLogs:
      type: object
      allOf:
      - type: object
        properties:
          logGroupId:
            description: Log group identifiers, at least one value is required.
            type: array
            items:
              type: string
          batchSettings:
            $ref: '#/components/schemas/CloudLogsBatchSettings'
            description: |-
              Required.
              Batch settings for processing log events.
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
            description: Instructions for invoking a function with retries as needed.
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
            description: Instructions for invoking a container with retries as needed.
    TriggerContainerRegistry:
      type: object
      allOf:
      - type: object
        properties:
          eventType:
            description: |-
              Required.
              Type (name) of events, at least one value is required.

              Must contain at least one element.
            type: array
            items:
              $ref: '#/components/schemas/TriggerContainerRegistryEventType'
          registryId:
            description: ID of the registry.
            type: string
          imageName:
            description: Docker-image name. Filter, optional.
            type: string
          tag:
            description: Docker-image tag. Filter, optional.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
            description: Instructions for invoking a function with retries as needed.
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
            description: Instructions for invoking a container with retries as needed.
    TriggerContainerRegistryEventType:
      type: string
      enum:
      - CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE
      - CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE
      - CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE_TAG
      - CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE_TAG
    TriggerIoTMessage:
      description: Rule for activating a IoT Core trigger.
      type: object
      allOf:
      - type: object
        properties:
          registryId:
            description: |-
              Required.
              ID of the IoT Core registry.
            type: string
          deviceId:
            description: ID of the IoT Core device in the registry.
            type: string
          mqttTopic:
            description: MQTT topic whose messages activate the trigger.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
            description: Instructions for invoking a function with retries as needed.
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
            description: Instructions for invoking a container with retries as needed.
    TriggerLogging:
      type: object
      allOf:
      - type: object
        properties:
          logGroupId:
            description: |-
              Log events filter settings.

              The maximum string length in characters is 50.
            type: string
          resourceType:
            description: |-
              The maximum number of elements is 100.
              Each value must match the regular expression `` [a-zA-Z][-a-zA-Z0-9_.]{1,62} ``.
            type: array
            items:
              type: string
          resourceId:
            description: |-
              The maximum number of elements is 100.
              Each value must match the regular expression `` [a-zA-Z][-a-zA-Z0-9_.]{1,62} ``.
            type: array
            items:
              type: string
          levels:
            description: The maximum number of elements is 10.
            type: array
            items:
              $ref: '#/components/schemas/LogLevelLevel'
          batchSettings:
            $ref: '#/components/schemas/LoggingBatchSettings'
            description: |-
              Required.
              Batch settings for processing log events.
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
            description: Instructions for invoking a function with retries as needed.
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
            description: Instructions for invoking a container with retries as needed.
    TriggerMessageQueue:
      description: Rule for activating a message queue trigger.
      type: object
      allOf:
      - type: object
        properties:
          queueId:
            description: |-
              Required.
              ID of the message queue in Message Queue.
            type: string
          serviceAccountId:
            description: |-
              Required.
              ID of the service account which has read access to the message queue.

              The maximum string length in characters is 50.
            type: string
          batchSettings:
            $ref: '#/components/schemas/BatchSettings'
            description: |-
              Required.
              Batch settings for processing messages in the queue.
          visibilityTimeout:
            description: |-
              Queue visibility timeout override.

              The maximum value is 43200 seconds.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionOnce'
            description: Instructions for invoking a function once.
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerOnce'
            description: Instructions for invoking a container once.
    TriggerObjectStorage:
      type: object
      allOf:
      - type: object
        properties:
          eventType:
            description: |-
              Required.
              Type (name) of events, at least one value is required.

              Must contain at least one element.
            type: array
            items:
              $ref: '#/components/schemas/TriggerObjectStorageEventType'
          bucketId:
            description: ID of the bucket.
            type: string
          prefix:
            description: Prefix of the object key. Filter, optional.
            type: string
          suffix:
            description: Suffix of the object key. Filter, optional.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
            description: Instructions for invoking a function with retries as needed.
          invokeContainer:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
            description: Instructions for invoking a container with retries as needed.
    TriggerObjectStorageEventType:
      type: string
      enum:
      - OBJECT_STORAGE_EVENT_TYPE_CREATE_OBJECT
      - OBJECT_STORAGE_EVENT_TYPE_UPDATE_OBJECT
      - OBJECT_STORAGE_EVENT_TYPE_DELETE_OBJECT
    TriggerRule:
      description: Description of a rule for trigger activation.
      type: object
      allOf:
      - title: rule
        type: object
        maxProperties: 1
        properties:
          timer:
            $ref: '#/components/schemas/TriggerTimer'
            description: Rule for a timed trigger.
          messageQueue:
            $ref: '#/components/schemas/TriggerMessageQueue'
            description: Rule for a message queue trigger.
          iotMessage:
            $ref: '#/components/schemas/TriggerIoTMessage'
            description: Rule for a IoT Core trigger.
          objectStorage:
            $ref: '#/components/schemas/TriggerObjectStorage'
          containerRegistry:
            $ref: '#/components/schemas/TriggerContainerRegistry'
          cloudLogs:
            $ref: '#/components/schemas/TriggerCloudLogs'
          logging:
            $ref: '#/components/schemas/TriggerLogging'
          billingBudget:
            $ref: '#/components/schemas/BillingBudget'
          dataStream:
            $ref: '#/components/schemas/DataStream'
          mail:
            $ref: '#/components/schemas/Mail'
    TriggerStatus:
      type: string
      enum:
      - ACTIVE
      - PAUSED
    TriggerTimer:
      description: Rule for activating a timed trigger.
      type: object
      allOf:
      - type: object
        properties:
          cronExpression:
            description: |-
              Required.
              Description of a schedule as a [cron expression](/docs/functions/concepts/trigger/timer).

              The maximum string length in characters is 100.
            type: string
      - title: action
        type: object
        maxProperties: 1
        properties:
          invokeFunction:
            $ref: '#/components/schemas/InvokeFunctionOnce'
            description: Instructions for invoking a function once.
          invokeFunctionWithRetry:
            $ref: '#/components/schemas/InvokeFunctionWithRetry'
            description: Instructions for invoking a function with retry.
          invokeContainerWithRetry:
            $ref: '#/components/schemas/InvokeContainerWithRetry'
            description: Instructions for invoking a container with retry.
    UpdateTriggerMetadata:
      type: object
      properties:
        triggerId:
          description: |-
            Required.
            ID of the trigger that is being updated.
          type: string
    UpdateTriggerRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateTriggerRequest_updateMask'
        name:
          description: |-
            New name for the trigger.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            New description of the trigger.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Trigger labels as `key:value` pairs.

            Existing set of labels is completely replaced by the provided set, so if you just want
            to add or remove a label, request the current set of labels with a [get](/docs/functions/triggers/api-ref/Trigger/get) request.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    TriggerRule_in_CreateTriggerRequest_rule:
      description: |-
        Required.
        Trigger type.

        Description of a rule for trigger activation.
      type: object
      allOf:
      - title: rule
        type: object
        maxProperties: 1
        properties:
          timer:
            $ref: '#/components/schemas/TriggerTimer'
            description: Rule for a timed trigger.
          messageQueue:
            $ref: '#/components/schemas/TriggerMessageQueue'
            description: Rule for a message queue trigger.
          iotMessage:
            $ref: '#/components/schemas/TriggerIoTMessage'
            description: Rule for a IoT Core trigger.
          objectStorage:
            $ref: '#/components/schemas/TriggerObjectStorage'
          containerRegistry:
            $ref: '#/components/schemas/TriggerContainerRegistry'
          cloudLogs:
            $ref: '#/components/schemas/TriggerCloudLogs'
          logging:
            $ref: '#/components/schemas/TriggerLogging'
          billingBudget:
            $ref: '#/components/schemas/BillingBudget'
          dataStream:
            $ref: '#/components/schemas/DataStream'
          mail:
            $ref: '#/components/schemas/Mail'
    RetrySettings_in_InvokeContainerWithRetry_retrySettings:
      description: |-
        Retry policy. If the field is not specified, or the value is empty, no retries will be attempted.

        Settings for retrying to invoke a function.
      type: object
      properties:
        retryAttempts:
          description: |-
            Maximum number of retries (extra invokes) before the action is considered failed.

            Acceptable values are 1 to 5, inclusive.
          type: string
          format: int64
        interval:
          description: |-
            Required.
            Time in seconds to wait between individual retries.
          type: string
    PutQueueMessage_in_InvokeContainerWithRetry_deadLetterQueue:
      description: DLQ policy (no value means discarding a message).
      type: object
      properties:
        queueId:
          description: ID of the queue.
          type: string
        serviceAccountId:
          description: |-
            Required.
            Service account which has write permission on the queue.

            The maximum string length in characters is 50.
          type: string
    RetrySettings_in_InvokeFunctionWithRetry_retrySettings:
      description: |-
        Retry policy. If the field is not specified, or the value is empty, no retries will be attempted.

        Settings for retrying to invoke a function.
      type: object
      properties:
        retryAttempts:
          description: |-
            Maximum number of retries (extra invokes) before the action is considered failed.

            Acceptable values are 1 to 5, inclusive.
          type: string
          format: int64
        interval:
          description: |-
            Required.
            Time in seconds to wait between individual retries.
          type: string
    PutQueueMessage_in_InvokeFunctionWithRetry_deadLetterQueue:
      description: DLQ policy (no value means discarding a message).
      type: object
      properties:
        queueId:
          description: ID of the queue.
          type: string
        serviceAccountId:
          description: |-
            Required.
            Service account which has write permission on the queue.

            The maximum string length in characters is 50.
          type: string
    TriggerRule_in_Trigger_rule:
      description: |-
        Required.
        Rule for trigger activation (always consistent with the trigger type).

        Description of a rule for trigger activation.
      type: object
      allOf:
      - title: rule
        type: object
        maxProperties: 1
        properties:
          timer:
            $ref: '#/components/schemas/TriggerTimer'
            description: Rule for a timed trigger.
          messageQueue:
            $ref: '#/components/schemas/TriggerMessageQueue'
            description: Rule for a message queue trigger.
          iotMessage:
            $ref: '#/components/schemas/TriggerIoTMessage'
            description: Rule for a IoT Core trigger.
          objectStorage:
            $ref: '#/components/schemas/TriggerObjectStorage'
          containerRegistry:
            $ref: '#/components/schemas/TriggerContainerRegistry'
          cloudLogs:
            $ref: '#/components/schemas/TriggerCloudLogs'
          logging:
            $ref: '#/components/schemas/TriggerLogging'
          billingBudget:
            $ref: '#/components/schemas/BillingBudget'
          dataStream:
            $ref: '#/components/schemas/DataStream'
          mail:
            $ref: '#/components/schemas/Mail'
    TriggerStatus_in_Trigger_status:
      description: Trigger status.
      type: string
      enum:
      - ACTIVE
      - PAUSED
    FieldMask_in_UpdateTriggerRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the trigger should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Trigger
  description: A set of methods for managing triggers for serverless functions.
