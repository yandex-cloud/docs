openapi: 3.0.0
info:
  title: Serverless Containers Service
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: containers/api-ref
  x-y-baseUrl: https://serverless-containers.api.cloud.yandex.net
paths:
  /containers/v1/containers/{containerId}:
    get:
      tags:
      - Container
      summary: Returns the specified container.
      description: To get the list of all available containers, make a [list](/docs/serverless/containers/api-ref/Container/list)
        request.
      operationId: ContainerGet
      parameters:
      - name: containerId
        in: path
        description: |-
          Required.
          ID of the container to return.

          To get a container ID make a [list](/docs/serverless/containers/api-ref/Container/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      x-y-navtitle: get
    delete:
      tags:
      - Container
      summary: Deletes the specified container.
      operationId: ContainerDelete
      parameters:
      - name: containerId
        in: path
        description: |-
          Required.
          ID of the container to delete.
          To get a container ID make a [list](/docs/serverless/containers/api-ref/Container/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteContainerMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Container
      summary: Updates the specified container.
      operationId: ContainerUpdate
      parameters:
      - name: containerId
        in: path
        description: |-
          Required.
          ID of the container to update.

          To get a container ID make a [list](/docs/serverless/containers/api-ref/Container/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContainerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateContainerMetadata'
      x-y-operation-response: '[Container](/docs/serverless/containers/api-ref/Container#representation)'
  /containers/v1/containers:
    get:
      tags:
      - Container
      summary: Retrieves the list of containers in the specified folder.
      operationId: ContainerList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list containers in.

          To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `pageSize`, the service returns a [nextPageToken](/docs/serverless/containers/api-ref/Container/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `pageToken` to the
          [nextPageToken](/docs/serverless/containers/api-ref/Container/list#responses) returned by a previous list request.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters containers listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can only be applied to the [Container.name](/docs/serverless/containers/api-ref/Container#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name="my-container"`.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContainersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Container
      summary: Creates a container in the specified folder.
      operationId: ContainerCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateContainerMetadata'
      x-y-operation-response: '[Container](/docs/serverless/containers/api-ref/Container#representation)'
  /containers/v1/revisions:deploy:
    post:
      tags:
      - Container
      summary: Deploys a revision for the specified container.
      operationId: ContainerDeployRevision
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployContainerRevisionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deployRevision
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeployContainerRevisionMetadata'
      x-y-operation-response: '`Revision`'
  /containers/v1/containers/{containerId}:rollback:
    post:
      tags:
      - Container
      summary: Rollback the specified container to an old revision.
      operationId: ContainerRollback
      parameters:
      - name: containerId
        in: path
        description: |-
          Required.
          ID of the container to rollback to an old revision.

          To get a container ID, make a [list](/docs/serverless/containers/api-ref/Container/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackContainerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: rollback
      x-y-operation-metadata:
        $ref: '#/components/schemas/RollbackContainerMetadata'
      x-y-operation-response: '[Container](/docs/serverless/containers/api-ref/Container#representation)'
  /containers/v1/revisions/{containerRevisionId}:
    get:
      tags:
      - Container
      summary: Returns the specified revision of a container.
      description: To get the list of available revision, make a [listRevisions](/docs/serverless/containers/api-ref/Container/listRevisions)
        request.
      operationId: ContainerGetRevision
      parameters:
      - name: containerRevisionId
        in: path
        description: |-
          Required.
          ID of the revision to return.

          To get a revision ID make a [listRevisions](/docs/serverless/containers/api-ref/Container/listRevisions) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      x-y-navtitle: getRevision
  /containers/v1/revisions:
    get:
      tags:
      - Container
      summary: |-
        Retrieves the list of revisions for the specified container, or of all container revisions
        in the specified folder.
      operationId: ContainerListRevisions
      parameters:
      - name: folderId
        in: query
        description: |-
          ID of the folder to list container revisions for.
          To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: containerId
        in: query
        description: |-
          ID of the container to list revisions for.
          To get a container ID use a [list](/docs/serverless/containers/api-ref/Container/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available results
          is larger than `pageSize`, the service returns a [nextPageToken](/docs/serverless/containers/api-ref/Container/listRevisions#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `pageToken` to the
          [nextPageToken](/docs/serverless/containers/api-ref/Container/listRevisions#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can only be applied to the `status` and [Revision.runtime] fields.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `status="ACTIVE"`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContainersRevisionsResponse'
      x-y-navtitle: listRevisions
  /containers/v1/containers/{containerId}/operations:
    get:
      tags:
      - Container
      summary: Lists operations for the specified container.
      operationId: ContainerListOperations
      parameters:
      - name: containerId
        in: path
        description: |-
          Required.
          ID of the container to list operations for.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `pageSize`, the service returns a [nextPageToken](/docs/serverless/containers/api-ref/Container/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `pageToken` to the
          [nextPageToken](/docs/serverless/containers/api-ref/Container/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can be applied to the [Operation.done](/docs/operation/api-ref/Operation#representation), [Operation.createdBy](/docs/operation/api-ref/Operation#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Examples of a filter: `done=false`, `created_by='John.Doe'`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContainerOperationsResponse'
      x-y-navtitle: listOperations
  /containers/v1/containers/{resourceId}:listAccessBindings:
    get:
      tags:
      - Container
      summary: Lists existing access bindings for the specified container.
      operationId: ContainerListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /containers/v1/containers/{resourceId}:setAccessBindings:
    post:
      tags:
      - Container
      summary: Sets access bindings for the container.
      operationId: ContainerSetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /containers/v1/containers/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Container
      summary: Updates access bindings for the specified container.
      operationId: ContainerUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    Args:
      type: object
      properties:
        args:
          description: |-
            Arguments that will override CMD of an image.

            Arguments will be passed as is. The runtime will not substitute environment
            variables or execute shell commands. If one wants to do that, they should
            invoke shell interpreter with an appropriate shell script.
          type: array
          items:
            type: string
    Command:
      type: object
      properties:
        command:
          description: |-
            Command that will override ENTRYPOINT of an image.

            Commands will be executed as is. The runtime will not substitute environment
            variables or execute shell commands. If one wants to do that, they should
            invoke shell interpreter with an appropriate shell script.
          type: array
          items:
            type: string
    Connectivity:
      description: Revision connectivity specification.
      type: object
      properties:
        networkId:
          description: Network the revision will have access to.
          type: string
        subnetIds:
          description: |-
            The list of subnets (from the same network) the revision can be attached to.

            Deprecated, it is sufficient to specify only network_id, without the list of subnet_ids.
          type: array
          items:
            type: string
    Container:
      type: object
      properties:
        id:
          description: ID of the container. Generated at creation time.
          type: string
        folderId:
          description: ID of the folder that the container belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp for the container.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the container. The name is unique within the folder.
          type: string
        description:
          description: Description of the container.
          type: string
        labels:
          description: Container labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        url:
          description: URL that needs to be requested to call the container.
          type: string
        status:
          $ref: '#/components/schemas/ContainerStatus_in_Container_status'
    ContainerStatus:
      description: |2-
         - CREATING: Container is being created.
         - ACTIVE: Container is ready for use.
         - DELETING: Container is being deleted.
         - ERROR: Container failed. The only allowed action is delete.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    CreateContainerMetadata:
      type: object
      properties:
        containerId:
          description: ID of the container that is being created.
          type: string
    CreateContainerRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a container in.

            To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.
          type: string
        name:
          description: |-
            Name of the container.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the container.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    DeleteContainerMetadata:
      type: object
      properties:
        containerId:
          description: ID of the container that is being deleted.
          type: string
    DeployContainerRevisionMetadata:
      type: object
      properties:
        containerRevisionId:
          description: ID of the revision that is being created.
          type: string
    DeployContainerRevisionRequest:
      type: object
      properties:
        containerId:
          description: |-
            Required.
            ID of the container to create a revision for.

            To get a container ID, make a [list](/docs/serverless/containers/api-ref/Container/list) request.
          type: string
        description:
          description: Description of the revision.
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_DeployContainerRevisionRequest_resources'
        executionTimeout:
          description: |-
            Timeout for the execution of the revision.

            If the timeout is exceeded, Serverless Containers responds with a 504 HTTP code.

            The maximum value is 600 seconds.
          type: string
        serviceAccountId:
          description: ID of the service account to associate with the revision.
          type: string
        imageSpec:
          $ref: '#/components/schemas/ImageSpec_in_DeployContainerRevisionRequest_imageSpec'
        concurrency:
          description: |-
            The number of concurrent requests allowed per container instance.

            The default value is 1.
          type: string
          format: int64
        secrets:
          description: Yandex Lockbox secrets to be used by the revision.
          type: array
          items:
            $ref: '#/components/schemas/Secret'
        connectivity:
          $ref: '#/components/schemas/Connectivity_in_DeployContainerRevisionRequest_connectivity'
        provisionPolicy:
          $ref: '#/components/schemas/ProvisionPolicy_in_DeployContainerRevisionRequest_provisionPolicy'
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Image:
      description: Revision image specification.
      type: object
      properties:
        imageUrl:
          description: Image URL, that is used by the revision.
          type: string
        imageDigest:
          description: Digest of the image. Calculated at creation time.
          type: string
        command:
          $ref: '#/components/schemas/Command_in_Image_command'
        args:
          $ref: '#/components/schemas/Args_in_Image_args'
        environment:
          description: |-
            Additional environment for the container.

            Each key must match the regular expression `` [a-zA-Z][a-zA-Z0-9_]* ``.
            The maximum string length in characters for each value is 4096.
          type: object
          additionalProperties:
            type: string
        workingDir:
          description: Override for the image's WORKDIR.
          type: string
    ImageSpec:
      description: Revision image specification.
      type: object
      properties:
        imageUrl:
          description: |-
            Required.
            Image URL, that is used by the revision.
          type: string
        command:
          $ref: '#/components/schemas/Command_in_ImageSpec_command'
        args:
          $ref: '#/components/schemas/Args_in_ImageSpec_args'
        environment:
          description: |-
            Additional environment for the container.

            Each key must match the regular expression `` [a-zA-Z][a-zA-Z0-9_]* ``.
            The maximum string length in characters for each value is 4096.
          type: object
          additionalProperties:
            type: string
        workingDir:
          description: Override for the image's WORKDIR.
          type: string
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListContainerOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified container.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/serverless/containers/api-ref/Container/listOperations#query_params), use `nextPageToken` as the value
            for the [pageToken](/docs/serverless/containers/api-ref/Container/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `nextPageToken` to continue paging through the results.
          type: string
    ListContainersResponse:
      type: object
      properties:
        containers:
          description: List of containers in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/Container'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/serverless/containers/api-ref/Container/list#query_params), use `nextPageToken` as the value
            for the [pageToken](/docs/serverless/containers/api-ref/Container/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `nextPageToken` to continue paging through the results.
          type: string
    ListContainersRevisionsResponse:
      type: object
      properties:
        revisions:
          description: List of revisions for the specified folder or container.
          type: array
          items:
            $ref: '#/components/schemas/Revision'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/serverless/containers/api-ref/Container/listRevisions#query_params), use `nextPageToken` as the value
            for the [pageToken](/docs/serverless/containers/api-ref/Container/listRevisions#query_params) parameter in the next list request.

            Each subsequent page will have its own `nextPageToken` to continue paging through the results.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    ProvisionPolicy:
      type: object
      properties:
        minInstances:
          description: |-
            Minimum number of guaranteed provisioned container instances for all zones
            in total.
          type: string
          format: int64
    Resources:
      description: Resources allocated to a revision.
      type: object
      properties:
        memory:
          description: |-
            Amount of memory available to the revision, specified in bytes.

            Acceptable values are 134217728 to 8589934592, inclusive.
          type: string
          format: int64
        cores:
          description: |-
            Number of cores available to the revision.

            Acceptable values are 0 to 1, inclusive.
          type: string
          format: int64
        coreFraction:
          description: |-
            Specifies baseline performance for a core in percent.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
    Revision:
      type: object
      properties:
        id:
          description: ID of the revision.
          type: string
        containerId:
          description: ID of the container that the revision belongs to.
          type: string
        description:
          description: Description of the revision.
          type: string
        createdAt:
          description: |-
            Creation timestamp for the revision.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        image:
          $ref: '#/components/schemas/Image_in_Revision_image'
        resources:
          $ref: '#/components/schemas/Resources_in_Revision_resources'
        executionTimeout:
          description: |-
            Timeout for the execution of the revision.

            If the timeout is exceeded, Serverless Containers responds with a 504 HTTP code.
          type: string
        concurrency:
          description: The number of concurrent requests allowed per container instance.
          type: string
          format: int64
        serviceAccountId:
          description: ID of the service account associated with the revision.
          type: string
        status:
          $ref: '#/components/schemas/RevisionStatus_in_Revision_status'
        secrets:
          description: Yandex Lockbox secrets to be used by the revision.
          type: array
          items:
            $ref: '#/components/schemas/Secret'
        connectivity:
          $ref: '#/components/schemas/Connectivity_in_Revision_connectivity'
        provisionPolicy:
          $ref: '#/components/schemas/ProvisionPolicy_in_Revision_provisionPolicy'
    RevisionStatus:
      description: |2-
         - CREATING: Revision is being created.
         - ACTIVE: Revision is currently used by the container.
         - OBSOLETE: Revision is not used by the container. May be deleted later.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - OBSOLETE
    RollbackContainerMetadata:
      type: object
      properties:
        containerId:
          description: ID of the container that is being rolled back.
          type: string
        revisionId:
          description: ID of the revision that the container is being rolled back
            to.
          type: string
    RollbackContainerRequest:
      type: object
      properties:
        revisionId:
          description: |-
            Required.
            ID of the revision to rollback to.

            To get a revision ID make a [listRevisions](/docs/serverless/containers/api-ref/Container/listRevisions) request.
          type: string
    Secret:
      description: Secret that is available to the container at run time.
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of Yandex Lockbox secret.
            type: string
          versionId:
            description: ID of Yandex Lockbox secret.
            type: string
          key:
            description: Key in secret's payload, which value to be delivered into
              container environment.
            type: string
      - title: reference
        type: object
        maxProperties: 1
        properties:
          environmentVariable:
            description: Environment variable in which secret's value is delivered.
            type: string
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).

            The maximum number of elements is 1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateContainerMetadata:
      type: object
      properties:
        containerId:
          description: ID of the container that is being updated.
          type: string
    UpdateContainerRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateContainerRequest_updateMask'
        name:
          description: |-
            New name for the container.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            New description for the container.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Container labels as `key:value` pairs.

            Existing set of labels is completely replaced by the provided set, so if you just want
            to add or remove a label, request the current set of labels with a [get](/docs/serverless/containers/api-ref/Container/get) request.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    ContainerStatus_in_Container_status:
      description: |-
        Status of the container.

         - CREATING: Container is being created.
         - ACTIVE: Container is ready for use.
         - DELETING: Container is being deleted.
         - ERROR: Container failed. The only allowed action is delete.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    Resources_in_DeployContainerRevisionRequest_resources:
      description: |-
        Required.
        Resources allocated to the revision.

        Resources allocated to a revision.
      type: object
      properties:
        memory:
          description: |-
            Amount of memory available to the revision, specified in bytes.

            Acceptable values are 134217728 to 8589934592, inclusive.
          type: string
          format: int64
        cores:
          description: |-
            Number of cores available to the revision.

            Acceptable values are 0 to 1, inclusive.
          type: string
          format: int64
        coreFraction:
          description: |-
            Specifies baseline performance for a core in percent.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
    ImageSpec_in_DeployContainerRevisionRequest_imageSpec:
      description: |-
        Required.
        Image configuration for the revision.

        Revision image specification.
      type: object
      properties:
        imageUrl:
          description: |-
            Required.
            Image URL, that is used by the revision.
          type: string
        command:
          $ref: '#/components/schemas/Command_in_ImageSpec_command'
        args:
          $ref: '#/components/schemas/Args_in_ImageSpec_args'
        environment:
          description: |-
            Additional environment for the container.

            Each key must match the regular expression `` [a-zA-Z][a-zA-Z0-9_]* ``.
            The maximum string length in characters for each value is 4096.
          type: object
          additionalProperties:
            type: string
        workingDir:
          description: Override for the image's WORKDIR.
          type: string
    Connectivity_in_DeployContainerRevisionRequest_connectivity:
      description: |-
        Network access. If specified the revision will be attached to specified network/subnet(s).

        Revision connectivity specification.
      type: object
      properties:
        networkId:
          description: Network the revision will have access to.
          type: string
        subnetIds:
          description: |-
            The list of subnets (from the same network) the revision can be attached to.

            Deprecated, it is sufficient to specify only network_id, without the list of subnet_ids.
          type: array
          items:
            type: string
    ProvisionPolicy_in_DeployContainerRevisionRequest_provisionPolicy:
      description: |-
        Policy for provisioning instances of the revision.

        The policy is only applied when the revision is ACTIVE.
      type: object
      properties:
        minInstances:
          description: |-
            Minimum number of guaranteed provisioned container instances for all zones
            in total.
          type: string
          format: int64
    Command_in_Image_command:
      description: Override for the image's ENTRYPOINT.
      type: object
      properties:
        command:
          description: |-
            Command that will override ENTRYPOINT of an image.

            Commands will be executed as is. The runtime will not substitute environment
            variables or execute shell commands. If one wants to do that, they should
            invoke shell interpreter with an appropriate shell script.
          type: array
          items:
            type: string
    Args_in_Image_args:
      description: Override for the image's CMD.
      type: object
      properties:
        args:
          description: |-
            Arguments that will override CMD of an image.

            Arguments will be passed as is. The runtime will not substitute environment
            variables or execute shell commands. If one wants to do that, they should
            invoke shell interpreter with an appropriate shell script.
          type: array
          items:
            type: string
    Command_in_ImageSpec_command:
      description: Override for the image's ENTRYPOINT.
      type: object
      properties:
        command:
          description: |-
            Command that will override ENTRYPOINT of an image.

            Commands will be executed as is. The runtime will not substitute environment
            variables or execute shell commands. If one wants to do that, they should
            invoke shell interpreter with an appropriate shell script.
          type: array
          items:
            type: string
    Args_in_ImageSpec_args:
      description: Override for the image's CMD.
      type: object
      properties:
        args:
          description: |-
            Arguments that will override CMD of an image.

            Arguments will be passed as is. The runtime will not substitute environment
            variables or execute shell commands. If one wants to do that, they should
            invoke shell interpreter with an appropriate shell script.
          type: array
          items:
            type: string
    Image_in_Revision_image:
      description: |-
        Image configuration for the revision.

        Revision image specification.
      type: object
      properties:
        imageUrl:
          description: Image URL, that is used by the revision.
          type: string
        imageDigest:
          description: Digest of the image. Calculated at creation time.
          type: string
        command:
          $ref: '#/components/schemas/Command_in_Image_command'
        args:
          $ref: '#/components/schemas/Args_in_Image_args'
        environment:
          description: |-
            Additional environment for the container.

            Each key must match the regular expression `` [a-zA-Z][a-zA-Z0-9_]* ``.
            The maximum string length in characters for each value is 4096.
          type: object
          additionalProperties:
            type: string
        workingDir:
          description: Override for the image's WORKDIR.
          type: string
    Resources_in_Revision_resources:
      description: |-
        Resources allocated to the revision.

        Resources allocated to a revision.
      type: object
      properties:
        memory:
          description: |-
            Amount of memory available to the revision, specified in bytes.

            Acceptable values are 134217728 to 8589934592, inclusive.
          type: string
          format: int64
        cores:
          description: |-
            Number of cores available to the revision.

            Acceptable values are 0 to 1, inclusive.
          type: string
          format: int64
        coreFraction:
          description: |-
            Specifies baseline performance for a core in percent.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
    RevisionStatus_in_Revision_status:
      description: |-
        Status of the revision.

         - CREATING: Revision is being created.
         - ACTIVE: Revision is currently used by the container.
         - OBSOLETE: Revision is not used by the container. May be deleted later.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - OBSOLETE
    Connectivity_in_Revision_connectivity:
      description: |-
        Network access. If specified the revision will be attached to specified network/subnet(s).

        Revision connectivity specification.
      type: object
      properties:
        networkId:
          description: Network the revision will have access to.
          type: string
        subnetIds:
          description: |-
            The list of subnets (from the same network) the revision can be attached to.

            Deprecated, it is sufficient to specify only network_id, without the list of subnet_ids.
          type: array
          items:
            type: string
    ProvisionPolicy_in_Revision_provisionPolicy:
      description: |-
        Policy for provisioning instances of the revision.

        The policy is only applied when the revision is ACTIVE.
      type: object
      properties:
        minInstances:
          description: |-
            Minimum number of guaranteed provisioned container instances for all zones
            in total.
          type: string
          format: int64
    FieldMask_in_UpdateContainerRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the container should be updated.

        A comma-separated names off ALL fields to be updated.
        Only the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: Container
  description: A set of methods for managing serverless containers.
