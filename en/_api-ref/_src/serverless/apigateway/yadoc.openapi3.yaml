openapi: 3.0.0
info:
  title: API Gateway Service
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: apigateway/api-ref
  x-y-baseUrl: https://serverless-apigateway.api.cloud.yandex.net
paths:
  /apigateways/v1/apigateways/{apiGatewayId}:
    get:
      tags:
      - ApiGateway
      summary: |-
        Returns the specified API gateway. Note that only API gateway basic attributes are returned.
        To get associated openapi specification, make a [getOpenapiSpec](/docs/functions/api-gateway/api-ref/ApiGateway/getOpenapiSpec) request.
      description: To get the list of all available API gateways, make a [list](/docs/functions/api-gateway/api-ref/ApiGateway/list)
        request.
      operationId: ApiGatewayGet
      parameters:
      - name: apiGatewayId
        in: path
        description: |-
          Required.
          ID of the API gateway to return.

          To get a API gateway ID make a [list](/docs/functions/api-gateway/api-ref/ApiGateway/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiGateway'
      x-y-navtitle: get
    delete:
      tags:
      - ApiGateway
      summary: Deletes the specified API gateway.
      operationId: ApiGatewayDelete
      parameters:
      - name: apiGatewayId
        in: path
        description: |-
          Required.
          ID of the API gateway to update.

          To get a API gateway ID make a [list](/docs/functions/api-gateway/api-ref/ApiGateway/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteApiGatewayMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - ApiGateway
      summary: Updates the specified API gateway.
      operationId: ApiGatewayUpdate
      parameters:
      - name: apiGatewayId
        in: path
        description: |-
          Required.
          ID of the API gateway to update.

          To get a API gateway ID make a [list](/docs/functions/api-gateway/api-ref/ApiGateway/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiGatewayRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateApiGatewayMetadata'
      x-y-operation-response: '[ApiGateway](/docs/functions/api-gateway/api-ref/ApiGateway#representation)'
  /apigateways/v1/apigateways:
    get:
      tags:
      - ApiGateway
      summary: Retrieves the list of API gateways in the specified folder.
      operationId: ApiGatewayList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list API gateways in.

          To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `pageSize`, the service returns a [nextPageToken](/docs/functions/api-gateway/api-ref/ApiGateway/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `pageToken` to the
          [nextPageToken](/docs/functions/api-gateway/api-ref/ApiGateway/list#responses) returned by a previous list request.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters functions listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can only be applied to the [ApiGateway.name](/docs/functions/api-gateway/api-ref/ApiGateway#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{0,61}[a-z0-9])?`.
          Example of a filter: `name=my-apigw`.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiGatewayResponse'
      x-y-navtitle: list
    post:
      tags:
      - ApiGateway
      summary: Creates an API gateway in the specified folder.
      operationId: ApiGatewayCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiGatewayRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateApiGatewayMetadata'
      x-y-operation-response: '[ApiGateway](/docs/functions/api-gateway/api-ref/ApiGateway#representation)'
  /apigateways/v1/apigateways/{apiGatewayId}:addDomain:
    post:
      tags:
      - ApiGateway
      summary: Attaches domain to the specified API gateway.
      operationId: ApiGatewayAddDomain
      parameters:
      - name: apiGatewayId
        in: path
        description: |-
          Required.
          ID of the API gateway that the domain is attached to.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDomainRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addDomain
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddDomainMetadata'
      x-y-operation-response: Empty
  /apigateways/v1/apigateways/{apiGatewayId}:removeDomain:
    post:
      tags:
      - ApiGateway
      summary: Detaches domain from the specified API gateway.
      operationId: ApiGatewayRemoveDomain
      parameters:
      - name: apiGatewayId
        in: path
        description: |-
          Required.
          ID of the API gateway from which the domain is being detached.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveDomainRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeDomain
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveDomainMetadata'
      x-y-operation-response: Empty
  /apigateways/v1/apigateways/{apiGatewayId}:spec:
    get:
      tags:
      - ApiGateway
      summary: Returns the OpenAPI specification of specified API gateway.
      operationId: ApiGatewayGetOpenapiSpec
      parameters:
      - name: apiGatewayId
        in: path
        description: |-
          Required.
          ID of the API gateway to get specification from.
        required: true
        schema:
          type: string
      - name: format
        in: query
        description: Format of returned specification. Default is the original format
          used in `CreateApiGatewayRequest`.
        schema:
          $ref: '#/components/schemas/GetOpenapiSpecRequestFormat'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOpenapiSpecResponse'
      x-y-navtitle: getOpenapiSpec
  /apigateways/v1/apigateways/{apiGatewayId}/operations:
    get:
      tags:
      - ApiGateway
      summary: Lists operations for the specified API gateway.
      operationId: ApiGatewayListOperations
      parameters:
      - name: apiGatewayId
        in: path
        description: |-
          Required.
          ID of the API gateway to list operations for.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than `pageSize`, the service returns a [nextPageToken](/docs/functions/api-gateway/api-ref/ApiGateway/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `pageToken` to the
          [nextPageToken](/docs/functions/api-gateway/api-ref/ApiGateway/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.

          The expression must specify:
          1. The field name. Currently filtering can be applied to the [Operation.done](/docs/operation/api-ref/Operation#representation), [Operation.createdBy](/docs/operation/api-ref/Operation#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Examples of a filter: `done=false`, `created_by='John.Doe'`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      x-y-navtitle: listOperations
  /apigateways/v1/apigateways/{resourceId}:listAccessBindings:
    get:
      tags:
      - ApiGateway
      summary: Lists existing access bindings for the specified API gateway.
      operationId: ApiGatewayListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /apigateways/v1/apigateways/{resourceId}:setAccessBindings:
    post:
      tags:
      - ApiGateway
      summary: Sets access bindings for the specified API gateway.
      operationId: ApiGatewaySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /apigateways/v1/apigateways/{resourceId}:updateAccessBindings:
    patch:
      tags:
      - ApiGateway
      summary: Updates access bindings for the specified API gateway.
      operationId: ApiGatewayUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    AddDomainMetadata:
      type: object
      properties:
        apiGatewayId:
          description: ID of the API gateway that the domain is attached to.
          type: string
        domainId:
          description: ID of the attaching domain.
          type: string
        domainName:
          description: Name of the attaching domain.
          type: string
    AddDomainRequest:
      type: object
      properties:
        domainId:
          description: ID of the attaching domain.
          deprecated: true
          type: string
        domainName:
          description: Name of the attaching domain.
          type: string
        certificateId:
          description: ID of certificate for the attaching domain.
          type: string
    ApiGateway:
      type: object
      properties:
        id:
          description: ID of the API gateway. Generated at creation time.
          type: string
        folderId:
          description: ID of the folder that the API gateway belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp for the API-gateway.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the API gateway. The name is unique within the folder.
          type: string
        description:
          description: Description of the API gateway.
          type: string
        labels:
          description: API gateway labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/ApiGatewayStatus_in_ApiGateway_status'
        domain:
          description: Default domain for the API gateway. Generated at creation time.
          type: string
        logGroupId:
          description: ID of the log group for the API gateway.
          type: string
        attachedDomains:
          description: List of domains attached to API gateway.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDomain'
        connectivity:
          $ref: '#/components/schemas/Connectivity_in_ApiGateway_connectivity'
    ApiGatewayStatus:
      description: |2-
         - CREATING: API gateway is being created.
         - ACTIVE: API gateway is ready for use.
         - DELETING: API gateway is being deleted.
         - ERROR: API gateway failed. The only allowed action is delete.
         - UPDATING: API gateway is being updated.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
      - UPDATING
    AttachedDomain:
      type: object
      properties:
        domainId:
          description: ID of the domain.
          type: string
        certificateId:
          description: ID of the domain certificate.
          type: string
        enabled:
          description: Enabling flag.
          type: boolean
          format: boolean
        domain:
          description: Name of the domain.
          type: string
    Connectivity:
      description: Gateway connectivity specification.
      type: object
      properties:
        networkId:
          description: |-
            Network the gateway will have access to.
            It's essential to specify network with subnets in all availability zones.
          type: string
        subnetId:
          description: |-
            Complete list of subnets (from the same network) the gateway can be attached to.
            It's essential to specify at least one subnet for each availability zones.
          type: array
          items:
            type: string
    CreateApiGatewayMetadata:
      type: object
      properties:
        apiGatewayId:
          description: ID of the API gateway that is being created.
          type: string
    CreateApiGatewayRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            description: |-
              Required.
              ID of the folder to create an API gateway in.

              To get a folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.
            type: string
          name:
            description: |-
              Name of the API gateway.
              The name must be unique within the folder.

              Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          description:
            description: |-
              Description of the API gateway.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Resource labels as `key:value` pairs.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
          connectivity:
            $ref: '#/components/schemas/Connectivity'
            description: Gateway connectivity. If specified the gateway will be attached
              to specified network/subnet(s).
      - title: spec
        type: object
        maxProperties: 1
        properties:
          openapiSpec:
            description: The text of specification, JSON or YAML.
            type: string
    DeleteApiGatewayMetadata:
      type: object
      properties:
        apiGatewayId:
          description: ID of the API gateway that is being deleted.
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GetOpenapiSpecRequestFormat:
      type: string
      enum:
      - JSON
      - YAML
    GetOpenapiSpecResponse:
      type: object
      properties:
        apiGatewayId:
          description: ID of the API gateway.
          type: string
        openapiSpec:
          description: The text of specification, JSON or YAML.
          type: string
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListApiGatewayResponse:
      type: object
      properties:
        apiGateways:
          description: List of API gateways in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/ApiGateway'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/functions/api-gateway/api-ref/ApiGateway/list#query_params), use `nextPageToken` as the value
            for the [pageToken](/docs/functions/api-gateway/api-ref/ApiGateway/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `nextPageToken` to continue paging through the results.
          type: string
    ListOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified API gateway.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/functions/api-gateway/api-ref/ApiGateway/listOperations#query_params), use `nextPageToken` as the value
            for the [pageToken](/docs/functions/api-gateway/api-ref/ApiGateway/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `nextPageToken` to continue paging through the results.
          type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RemoveDomainMetadata:
      type: object
      properties:
        apiGatewayId:
          description: ID of the API gateway from which the domain is being detached.
          type: string
        domainId:
          description: ID of the detaching domain.
          type: string
    RemoveDomainRequest:
      type: object
      properties:
        domainId:
          description: |-
            Required.
            ID of the detaching domain.
          type: string
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).

            The maximum number of elements is 1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateApiGatewayMetadata:
      type: object
      properties:
        apiGatewayId:
          description: ID of the API gateway that is being updated.
          type: string
    UpdateApiGatewayRequest:
      type: object
      allOf:
      - type: object
        properties:
          updateMask:
            $ref: '#/components/schemas/FieldMask'
            description: Field mask that specifies which attributes of the API gateway
              should be updated.
          name:
            description: |-
              New name for the API gateway.
              The name must be unique within the folder.

              Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          description:
            description: |-
              New description for the API gateway.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              API gateway labels as `key:value` pairs.

              Existing set of labels is completely replaced by the provided set, so if you just want
              to add or remove a label, request the current set of labels with a [get](/docs/functions/api-gateway/api-ref/ApiGateway/get) request.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
          connectivity:
            $ref: '#/components/schemas/Connectivity'
            description: Gateway connectivity. If specified the gateway will be attached
              to specified network/subnet(s).
      - title: spec
        type: object
        maxProperties: 1
        properties:
          openapiSpec:
            description: The text of specification, JSON or YAML.
            type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    ApiGatewayStatus_in_ApiGateway_status:
      description: |-
        Status of the API gateway.

         - CREATING: API gateway is being created.
         - ACTIVE: API gateway is ready for use.
         - DELETING: API gateway is being deleted.
         - ERROR: API gateway failed. The only allowed action is delete.
         - UPDATING: API gateway is being updated.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
      - UPDATING
    Connectivity_in_ApiGateway_connectivity:
      description: |-
        Network access. If specified the gateway will be attached to specified network/subnet(s).

        Gateway connectivity specification.
      type: object
      properties:
        networkId:
          description: |-
            Network the gateway will have access to.
            It's essential to specify network with subnets in all availability zones.
          type: string
        subnetId:
          description: |-
            Complete list of subnets (from the same network) the gateway can be attached to.
            It's essential to specify at least one subnet for each availability zones.
          type: array
          items:
            type: string
tags:
- name: ApiGateway
  description: A set of methods for managing API gateways.
