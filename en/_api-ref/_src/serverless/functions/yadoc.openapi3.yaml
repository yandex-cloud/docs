openapi: "3.0"
info:
  title: Yandex Serverless Functions Service
  description: Description not set.
  version: v1
paths:
  /functions/v1/functions/{functionId}:
    get:
      tags:
      - Function
      operationId: FunctionGet
      parameters:
      - name: functionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
      x-y-navtitle: get
    delete:
      tags:
      - Function
      operationId: FunctionDelete
      parameters:
      - name: functionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteFunctionMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Function
      operationId: FunctionUpdate
      parameters:
      - name: functionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFunctionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateFunctionMetadata'
      x-y-operation-response: '[Function](/Function#representation)'
  /functions/v1/functions:
    get:
      tags:
      - Function
      operationId: FunctionList
      parameters:
      - name: folderId
        in: query
        description: Required.
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Function
      operationId: FunctionCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFunctionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateFunctionMetadata'
      x-y-operation-response: '[Function](/Function#representation)'
  /functions/v1/versions/{functionVersionId}:
    get:
      tags:
      - Function
      operationId: FunctionGetVersion
      parameters:
      - name: functionVersionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      x-y-navtitle: getVersion
  /functions/v1/versions:byTag:
    get:
      tags:
      - Function
      operationId: FunctionGetVersionByTag
      parameters:
      - name: functionId
        in: query
        description: Required.
        schema:
          type: string
      - name: tag
        in: query
        description: Value must match the regular expression `` [a-z][-_0-9a-z]*|[$]latest
          ``.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      x-y-navtitle: getVersionByTag
  /functions/v1/versions:
    get:
      tags:
      - Function
      operationId: FunctionListVersions
      parameters:
      - name: folderId
        in: query
        schema:
          type: string
      - name: functionId
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        description: Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionsVersionsResponse'
      x-y-navtitle: listVersions
    post:
      tags:
      - Function
      operationId: FunctionCreateVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFunctionVersionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: createVersion
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateFunctionVersionMetadata'
      x-y-operation-response: Version
  /functions/v1/versions/{functionVersionId}:setTag:
    post:
      tags:
      - Function
      operationId: FunctionSetTag
      parameters:
      - name: functionVersionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFunctionTagRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setTag
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetFunctionTagMetadata'
      x-y-operation-response: Version
  /functions/v1/versions/{functionVersionId}:removeTag:
    post:
      tags:
      - Function
      operationId: FunctionRemoveTag
      parameters:
      - name: functionVersionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFunctionTagRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeTag
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveFunctionTagMetadata'
      x-y-operation-response: Version
  /functions/v1/functions/{functionId}:tagHistory:
    get:
      tags:
      - Function
      operationId: FunctionListTagHistory
      parameters:
      - name: functionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      - name: tag
        in: query
        description: Value must match the regular expression `` [a-z][-_0-9a-z]*|[$]latest
          ``.
        schema:
          type: string
      - name: pageSize
        in: query
        description: Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionTagHistoryResponse'
      x-y-navtitle: listTagHistory
  /functions/v1/runtimes:
    get:
      tags:
      - Function
      operationId: FunctionListRuntimes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimesResponse'
      x-y-navtitle: listRuntimes
  /functions/v1/functions/{functionId}/operations:
    get:
      tags:
      - Function
      operationId: FunctionListOperations
      parameters:
      - name: functionId
        in: path
        description: Required.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionOperationsResponse'
      x-y-navtitle: listOperations
  /functions/v1/functions/{resourceId}:listAccessBindings:
    get:
      tags:
      - Function
      operationId: FunctionListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than pageSize,
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set pageToken
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /functions/v1/functions/{resourceId}:setAccessBindings:
    post:
      tags:
      - Function
      operationId: FunctionSetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /functions/v1/functions/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Function
      operationId: FunctionUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the subject.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    CreateFunctionMetadata:
      type: object
      properties:
        functionId:
          type: string
    CreateFunctionRequest:
      type: object
      properties:
        folderId:
          description: Required.
          type: string
        name:
          description: Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9]
            ``.
          type: string
        description:
          description: The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    CreateFunctionVersionMetadata:
      type: object
      properties:
        functionVersionId:
          type: string
    CreateFunctionVersionRequest:
      type: object
      allOf:
      - type: object
        properties:
          functionId:
            description: Required.
            type: string
          runtime:
            description: Required.
            type: string
          description:
            type: string
          entrypoint:
            description: Required.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: Required.
          executionTimeout:
            description: Required.
            type: string
          serviceAccountId:
            type: string
          environment:
            description: |-
              Each key must match the regular expression `` [a-zA-Z][a-zA-Z0-9_]* ``.
              The maximum string length in characters for each value is 4096.
            type: object
            additionalProperties:
              type: string
      - title: package_source
        type: object
        maxProperties: 1
        properties:
          package:
            $ref: '#/components/schemas/Package'
          content:
            description: The maximum string length in characters is 52428800.
            type: string
            format: byte
    DeleteFunctionMetadata:
      type: object
      properties:
        functionId:
          type: string
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Function:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        createdAt:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        logGroupId:
          type: string
        httpInvokeUrl:
          type: string
        status:
          $ref: '#/components/schemas/FunctionStatus_in_Function_status'
    FunctionStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than pageSize, use
            the nextPageToken as the value
            for the pageToken query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListFunctionOperationsResponse:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          type: string
    ListFunctionTagHistoryResponse:
      type: object
      properties:
        functionTagHistoryRecord:
          type: array
          items:
            $ref: '#/components/schemas/ListFunctionTagHistoryResponseFunctionTagHistoryRecord'
        nextPageToken:
          type: string
    ListFunctionTagHistoryResponseFunctionTagHistoryRecord:
      type: object
      properties:
        functionId:
          type: string
        functionVersionId:
          type: string
        tag:
          type: string
        effectiveFrom:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        effectiveTo:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
    ListFunctionsResponse:
      type: object
      properties:
        functions:
          type: array
          items:
            $ref: '#/components/schemas/Function'
        nextPageToken:
          type: string
    ListFunctionsVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/Version'
        nextPageToken:
          type: string
    ListRuntimesResponse:
      type: object
      properties:
        runtimes:
          type: array
          items:
            type: string
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Package:
      type: object
      properties:
        bucketName:
          description: Required.
          type: string
        objectName:
          description: Required.
          type: string
        sha256:
          type: string
    RemoveFunctionTagMetadata:
      type: object
      properties:
        functionVersionId:
          type: string
    RemoveFunctionTagRequest:
      type: object
      properties:
        tag:
          description: Value must match the regular expression `` [a-z][-_0-9a-z]*
            ``.
          type: string
    Resources:
      type: object
      properties:
        memory:
          description: Acceptable values are 33554432 to 1073741824, inclusive.
          type: string
          format: int64
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Required.
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    SetFunctionTagMetadata:
      type: object
      properties:
        functionVersionId:
          type: string
    SetFunctionTagRequest:
      type: object
      properties:
        tag:
          description: Value must match the regular expression `` [a-z][-_0-9a-z]*
            ``.
          type: string
    Subject:
      type: object
      properties:
        id:
          description: |-
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the type is `system`.

            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the type is `userAccount` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Type of the subject.

            It can contain one of the following values:
            * `system`: System group. This type represents several accounts with a common system identifier.
            * `userAccount`: An user account (for example, "alice.the.girl@yandex.ru"). This type represents the [UserAccount](/docs/iam/api-ref/UserAccount#representation) resource.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateFunctionMetadata:
      type: object
      properties:
        functionId:
          type: string
    UpdateFunctionRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateFunctionRequest_updateMask'
        name:
          description: Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9]
            ``.
          type: string
        description:
          description: The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    Version:
      type: object
      properties:
        id:
          type: string
        functionId:
          type: string
        description:
          type: string
        createdAt:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        runtime:
          type: string
        entrypoint:
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_Version_resources'
        executionTimeout:
          type: string
        serviceAccountId:
          type: string
        imageSize:
          type: string
          format: int64
        status:
          $ref: '#/components/schemas/VersionStatus_in_Version_status'
        tags:
          type: array
          items:
            type: string
        logGroupId:
          type: string
        environment:
          type: object
          additionalProperties:
            type: string
    VersionStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the type is `system`.

            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the type is `userAccount` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Type of the subject.

            It can contain one of the following values:
            * `system`: System group. This type represents several accounts with a common system identifier.
            * `userAccount`: An user account (for example, "alice.the.girl@yandex.ru"). This type represents the [UserAccount](/docs/iam/api-ref/UserAccount#representation) resource.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the subject.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    FunctionStatus_in_Function_status:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    FieldMask_in_UpdateFunctionRequest_updateMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Resources_in_Version_resources:
      type: object
      properties:
        memory:
          description: Acceptable values are 33554432 to 1073741824, inclusive.
          type: string
          format: int64
    VersionStatus_in_Version_status:
      type: string
      enum:
      - CREATING
      - ACTIVE
tags:
- name: Function
