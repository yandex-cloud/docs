openapi: 3.0.0
info:
  title: Application Load Balancer API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://alb.api.cloud.yandex.net
paths:
  /apploadbalancer/v1/backendGroups/{backendGroupId}:
    get:
      tags:
      - BackendGroup
      summary: Returns the specified backend group.
      description: To get the list of all available backend groups, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list)
        request.
      operationId: BackendGroupGet
      parameters:
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group to return.

          To get the backend group ID, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackendGroup'
      x-y-navtitle: get
    delete:
      tags:
      - BackendGroup
      summary: Deletes the specified backend group.
      operationId: BackendGroupDelete
      parameters:
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group to delete.

          To get the backend group ID, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteBackendGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - BackendGroup
      summary: Updates the specified backend group.
      operationId: BackendGroupUpdate
      parameters:
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group to update.

          To get the backend group ID, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackendGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateBackendGroupMetadata'
      x-y-operation-response: '[BackendGroup](/docs/application-load-balancer/api-ref/BackendGroup#representation)'
  /apploadbalancer/v1/backendGroups:
    get:
      tags:
      - BackendGroup
      summary: Lists backend groups in the specified folder.
      operationId: BackendGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list backend groups in.

          To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/BackendGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/application-load-balancer/api-ref/BackendGroup/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters backend groups listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [BackendGroup.name](/docs/application-load-balancer/api-ref/BackendGroup#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-backend-group`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackendGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - BackendGroup
      summary: Creates a backend group in the specified folder.
      operationId: BackendGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackendGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateBackendGroupMetadata'
      x-y-operation-response: '[BackendGroup](/docs/application-load-balancer/api-ref/BackendGroup#representation)'
  /apploadbalancer/v1/backendGroups/{backendGroupId}:addBackend:
    post:
      tags:
      - BackendGroup
      summary: Adds backends to the specified backend group.
      operationId: BackendGroupAddBackend
      parameters:
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group to add a backend to.

          To get the backend group ID, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBackendRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addBackend
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddBackendMetadata'
      x-y-operation-response: '[BackendGroup](/docs/application-load-balancer/api-ref/BackendGroup#representation)'
  /apploadbalancer/v1/backendGroups/{backendGroupId}:removeBackend:
    post:
      tags:
      - BackendGroup
      summary: Removes backends from the specified backend group.
      operationId: BackendGroupRemoveBackend
      parameters:
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group to remove a backend from.

          To get the backend group ID, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveBackendRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeBackend
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveBackendMetadata'
      x-y-operation-response: '[BackendGroup](/docs/application-load-balancer/api-ref/BackendGroup#representation)'
  /apploadbalancer/v1/backendGroups/{backendGroupId}:updateBackend:
    post:
      tags:
      - BackendGroup
      summary: Updates the specified backend.
      operationId: BackendGroupUpdateBackend
      parameters:
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group to update the backend in.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackendRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateBackend
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateBackendMetadata'
      x-y-operation-response: '[BackendGroup](/docs/application-load-balancer/api-ref/BackendGroup#representation)'
  /apploadbalancer/v1/backendGroups/{backendGroupId}/operations:
    get:
      tags:
      - BackendGroup
      summary: Lists operations for the specified backend group.
      operationId: BackendGroupListOperations
      parameters:
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group to get operations for.

          To get the backend group ID, use a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/application-load-balancer/api-ref/BackendGroup/listOperations#query_params), the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/BackendGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/application-load-balancer/api-ref/BackendGroup/listOperations#query_params) to the
          [nextPageToken](/docs/application-load-balancer/api-ref/BackendGroup/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackendGroupOperationsResponse'
      x-y-navtitle: listOperations
  /apploadbalancer/v1/httpRouters/{httpRouterId}:
    get:
      tags:
      - HttpRouter
      summary: Returns the specified HTTP router.
      description: To get the list of all available HTTP routers, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list)
        request.
      operationId: HttpRouterGet
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to return.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpRouter'
      x-y-navtitle: get
    delete:
      tags:
      - HttpRouter
      summary: Deletes the specified HTTP router.
      operationId: HttpRouterDelete
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to delete.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteHttpRouterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - HttpRouter
      summary: Updates the specified HTTP router.
      operationId: HttpRouterUpdate
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to update.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHttpRouterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateHttpRouterMetadata'
      x-y-operation-response: '[HttpRouter](/docs/application-load-balancer/api-ref/HttpRouter#representation)'
  /apploadbalancer/v1/httpRouters:
    get:
      tags:
      - HttpRouter
      summary: Lists HTTP routers in the specified folder.
      operationId: HttpRouterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list HTTP routers in.

          To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/HttpRouter/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/application-load-balancer/api-ref/HttpRouter/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters HTTP routers listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [HttpRouter.name](/docs/application-load-balancer/api-ref/HttpRouter#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-http-router`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHttpRoutersResponse'
      x-y-navtitle: list
    post:
      tags:
      - HttpRouter
      summary: Creates an HTTP router in the specified folder.
      operationId: HttpRouterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHttpRouterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateHttpRouterMetadata'
      x-y-operation-response: '[HttpRouter](/docs/application-load-balancer/api-ref/HttpRouter#representation)'
  /apploadbalancer/v1/httpRouters/{httpRouterId}/operations:
    get:
      tags:
      - HttpRouter
      summary: Lists operations for the specified HTTP router.
      operationId: HttpRouterListOperations
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to get operations for.

          To get the HTTP router ID, use a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/application-load-balancer/api-ref/HttpRouter/listOperations#query_params), the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/HttpRouter/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/application-load-balancer/api-ref/HttpRouter/listOperations#query_params) to the
          [nextPageToken](/docs/application-load-balancer/api-ref/HttpRouter/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHttpRouterOperationsResponse'
      x-y-navtitle: listOperations
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:
    get:
      tags:
      - LoadBalancer
      summary: Returns the specified application load balancer.
      description: To get the list of all available application load balancers, make
        a [list](/docs/application-load-balancer/api-ref/LoadBalancer/list) request.
      operationId: LoadBalancerGet
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to return.

          To get the application load balancer ID, make a [list](/docs/application-load-balancer/api-ref/LoadBalancer/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
      x-y-navtitle: get
    delete:
      tags:
      - LoadBalancer
      summary: Deletes the specified application load balancer.
      operationId: LoadBalancerDelete
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to delete.

          To get the application load balancer ID, make a [list](/docs/application-load-balancer/api-ref/LoadBalancer/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteLoadBalancerMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - LoadBalancer
      summary: Updates the specified application load balancer.
      operationId: LoadBalancerUpdate
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to update.

          To get the application load balancer ID, make a [list](/docs/application-load-balancer/api-ref/LoadBalancer/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoadBalancerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateLoadBalancerMetadata'
      x-y-operation-response: '[LoadBalancer](/docs/application-load-balancer/api-ref/LoadBalancer#representation)'
  /apploadbalancer/v1/loadBalancers:
    get:
      tags:
      - LoadBalancer
      summary: Lists application load balancers in the specified folder.
      operationId: LoadBalancerList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list application load balancers in.

          To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/LoadBalancer/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/application-load-balancer/api-ref/LoadBalancer/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters application load balancers listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [LoadBalancer.name](/docs/application-load-balancer/api-ref/LoadBalancer#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-load-balancer`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLoadBalancersResponse'
      x-y-navtitle: list
    post:
      tags:
      - LoadBalancer
      summary: Creates an application load balancer in the specified folder.
      operationId: LoadBalancerCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoadBalancerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateLoadBalancerMetadata'
      x-y-operation-response: '[LoadBalancer](/docs/application-load-balancer/api-ref/LoadBalancer#representation)'
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:start:
    post:
      tags:
      - LoadBalancer
      summary: Starts the specified application load balancer.
      operationId: LoadBalancerStart
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to start.

          The application load balancer must have a `STOPPED` status ([LoadBalancer.status](/docs/application-load-balancer/api-ref/LoadBalancer#representation)).

          To get the application load balancer ID, make a [list](/docs/application-load-balancer/api-ref/LoadBalancer/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartLoadBalancerMetadata'
      x-y-operation-response: '[LoadBalancer](/docs/application-load-balancer/api-ref/LoadBalancer#representation)'
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:stop:
    post:
      tags:
      - LoadBalancer
      summary: Stops the specified application load balancer.
      operationId: LoadBalancerStop
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to stop.

          The application load balancer must have an `ACTIVE` status ([LoadBalancer.status](/docs/application-load-balancer/api-ref/LoadBalancer#representation)).

          To get the application load balancer ID, make a [list](/docs/application-load-balancer/api-ref/LoadBalancer/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopLoadBalancerMetadata'
      x-y-operation-response: '[LoadBalancer](/docs/application-load-balancer/api-ref/LoadBalancer#representation)'
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:addListener:
    post:
      tags:
      - LoadBalancer
      summary: Adds a listener to the specified application load balancer.
      operationId: LoadBalancerAddListener
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to add a listener to.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddListenerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addListener
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddListenerMetadata'
      x-y-operation-response: '[LoadBalancer](/docs/application-load-balancer/api-ref/LoadBalancer#representation)'
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:removeListener:
    post:
      tags:
      - LoadBalancer
      summary: Deletes the specified listener.
      operationId: LoadBalancerRemoveListener
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to remove the listener from.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveListenerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeListener
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveListenerMetadata'
      x-y-operation-response: '[LoadBalancer](/docs/application-load-balancer/api-ref/LoadBalancer#representation)'
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:updateListener:
    post:
      tags:
      - LoadBalancer
      summary: Updates the specified listener of the specified application load balancer.
      operationId: LoadBalancerUpdateListener
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to update the listener in.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateListenerRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateListener
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateListenerMetadata'
      x-y-operation-response: '[LoadBalancer](/docs/application-load-balancer/api-ref/LoadBalancer#representation)'
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:addSniMatch:
    post:
      tags:
      - LoadBalancer
      summary: Adds a SNI handler to the specified listener.
      description: This request does not allow to add `defaultHandler`. Make an [updateListener](/docs/application-load-balancer/api-ref/LoadBalancer/updateListener)
        request instead.
      operationId: LoadBalancerAddSniMatch
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to add a SNI handler to.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSniMatchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addSniMatch
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddSniMatchMetadata'
      x-y-operation-response: Empty
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:updateSniMatch:
    post:
      tags:
      - LoadBalancer
      summary: Updates the specified SNI handler of the specified listener.
      description: This request does not allow to update `defaultHandler`. Make an
        [updateListener](/docs/application-load-balancer/api-ref/LoadBalancer/updateListener)
        request instead.
      operationId: LoadBalancerUpdateSniMatch
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to update the SNI handler in.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSniMatchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateSniMatch
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateSniMatchMetadata'
      x-y-operation-response: Empty
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}:removeSniMatch:
    post:
      tags:
      - LoadBalancer
      summary: Deletes the specified SNI handler.
      description: This request does not allow to delete `defaultHandler`.
      operationId: LoadBalancerRemoveSniMatch
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to remove the SNI handler from.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveSniMatchRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeSniMatch
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveSniMatchMetadata'
      x-y-operation-response: Empty
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}/targetStates/{backendGroupId}/{targetGroupId}:
    get:
      tags:
      - LoadBalancer
      summary: Returns the statuses of all targets of the specified backend group
        in all their availability zones.
      operationId: LoadBalancerGetTargetStates
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer that the backend group is attributed to.
        required: true
        schema:
          type: string
      - name: backendGroupId
        in: path
        description: |-
          Required.
          ID of the backend group that the target group is attributed to.
        required: true
        schema:
          type: string
      - name: targetGroupId
        in: path
        description: |-
          Required.
          ID of the target group to get target states of.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTargetStatesResponse'
      x-y-navtitle: getTargetStates
  /apploadbalancer/v1/loadBalancers/{loadBalancerId}/operations:
    get:
      tags:
      - LoadBalancer
      summary: Lists operations for the specified application load balancer.
      operationId: LoadBalancerListOperations
      parameters:
      - name: loadBalancerId
        in: path
        description: |-
          Required.
          ID of the application load balancer to get operations for.

          To get the application load balancer ID, use a [list](/docs/application-load-balancer/api-ref/LoadBalancer/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/application-load-balancer/api-ref/LoadBalancer/listOperations#query_params), the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/LoadBalancer/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/application-load-balancer/api-ref/LoadBalancer/listOperations#query_params) to the
          [nextPageToken](/docs/application-load-balancer/api-ref/LoadBalancer/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLoadBalancerOperationsResponse'
      x-y-navtitle: listOperations
  /apploadbalancer/v1/targetGroups/{targetGroupId}:
    get:
      tags:
      - TargetGroup
      summary: Returns the specified target group.
      description: To get the list of all available target groups, make a [list](/docs/application-load-balancer/api-ref/TargetGroup/list)
        request.
      operationId: TargetGroupGet
      parameters:
      - name: targetGroupId
        in: path
        description: |-
          Required.
          ID of the target group to return.

          To get the target group ID, make a [list](/docs/application-load-balancer/api-ref/TargetGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetGroup'
      x-y-navtitle: get
    delete:
      tags:
      - TargetGroup
      summary: Deletes the specified target group.
      operationId: TargetGroupDelete
      parameters:
      - name: targetGroupId
        in: path
        description: |-
          Required.
          ID of the target group to delete.

          To get the target group ID, make a [list](/docs/application-load-balancer/api-ref/TargetGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteTargetGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - TargetGroup
      summary: Updates the specified target group.
      operationId: TargetGroupUpdate
      parameters:
      - name: targetGroupId
        in: path
        description: |-
          Required.
          ID of the target group to update.

          To get the target group ID, make a [list](/docs/application-load-balancer/api-ref/TargetGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTargetGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateTargetGroupMetadata'
      x-y-operation-response: '[TargetGroup](/docs/application-load-balancer/api-ref/TargetGroup#representation)'
  /apploadbalancer/v1/targetGroups:
    get:
      tags:
      - TargetGroup
      summary: Lists target groups in the specified folder.
      operationId: TargetGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list target groups in.

          To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/TargetGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/application-load-balancer/api-ref/TargetGroup/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters target groups listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on [TargetGroup.name](/docs/application-load-balancer/api-ref/TargetGroup#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
          Example of a filter: `name=my-target-group`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - TargetGroup
      summary: Creates a target group in the specified folder.
      operationId: TargetGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTargetGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateTargetGroupMetadata'
      x-y-operation-response: '[TargetGroup](/docs/application-load-balancer/api-ref/TargetGroup#representation)'
  /apploadbalancer/v1/targetGroups/{targetGroupId}:addTargets:
    post:
      tags:
      - TargetGroup
      summary: Adds targets to the specified target group.
      operationId: TargetGroupAddTargets
      parameters:
      - name: targetGroupId
        in: path
        description: |-
          Required.
          ID of the target group to add targets to.

          To get the target group ID, make a [list](/docs/application-load-balancer/api-ref/TargetGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTargetsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addTargets
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddTargetsMetadata'
      x-y-operation-response: '[TargetGroup](/docs/application-load-balancer/api-ref/TargetGroup#representation)'
  /apploadbalancer/v1/targetGroups/{targetGroupId}:removeTargets:
    post:
      tags:
      - TargetGroup
      summary: Removes targets from the specified target group.
      operationId: TargetGroupRemoveTargets
      parameters:
      - name: targetGroupId
        in: path
        description: |-
          Required.
          ID of the target group to remove targets from.

          To get the target group ID, make a [list](/docs/application-load-balancer/api-ref/TargetGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTargetsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeTargets
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveTargetsMetadata'
      x-y-operation-response: '[TargetGroup](/docs/application-load-balancer/api-ref/TargetGroup#representation)'
  /apploadbalancer/v1/targetGroups/{targetGroupId}/operations:
    get:
      tags:
      - TargetGroup
      summary: Lists operations for the specified target group.
      operationId: TargetGroupListOperations
      parameters:
      - name: targetGroupId
        in: path
        description: |-
          Required.
          ID of the target group to get operations for.

          To get the target group ID, use a [list](/docs/application-load-balancer/api-ref/TargetGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/application-load-balancer/api-ref/TargetGroup/listOperations#query_params), the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/TargetGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/application-load-balancer/api-ref/TargetGroup/listOperations#query_params) to the
          [nextPageToken](/docs/application-load-balancer/api-ref/TargetGroup/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTargetGroupOperationsResponse'
      x-y-navtitle: listOperations
  /apploadbalancer/v1/httpRouters/{httpRouterId}/virtualHosts/{virtualHostName}:
    get:
      tags:
      - VirtualHost
      summary: Returns the specified virtual host.
      description: To get the list of all virtual hosts of an HTTP router, make a
        [list](/docs/application-load-balancer/api-ref/VirtualHost/list) request.
      operationId: VirtualHostGet
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router that the virtual host belongs to.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      - name: virtualHostName
        in: path
        description: |-
          Required.
          Name of the virtual host to return.

          To get the virtual host name, make a [list](/docs/application-load-balancer/api-ref/VirtualHost/list) request.

          Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHost'
      x-y-navtitle: get
    delete:
      tags:
      - VirtualHost
      summary: Deletes the specified virtual host.
      operationId: VirtualHostDelete
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to delete a virtual host from.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      - name: virtualHostName
        in: path
        description: |-
          Required.
          Name of the virtual host to delete.

          To get the virtual host name, make a [list](/docs/application-load-balancer/api-ref/VirtualHost/list) request.

          Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteVirtualHostMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - VirtualHost
      summary: Updates the specified virtual host of the specified HTTP router.
      operationId: VirtualHostUpdate
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to update a virtual host in.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      - name: virtualHostName
        in: path
        description: |-
          Required.
          Name of the virtual host.

          Used only to refer to the virtual host. The name of a host cannot be changed.

          To get the virtual host name, make a [list](/docs/application-load-balancer/api-ref/VirtualHost/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVirtualHostRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateVirtualHostMetadata'
      x-y-operation-response: '[VirtualHost](/docs/application-load-balancer/api-ref/VirtualHost#representation)'
  /apploadbalancer/v1/httpRouters/{httpRouterId}/virtualHosts:
    get:
      tags:
      - VirtualHost
      summary: Lists virtual hosts of the specified HTTP router.
      operationId: VirtualHostList
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to list virtual hosts in.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/application-load-balancer/api-ref/VirtualHost/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/application-load-balancer/api-ref/VirtualHost/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVirtualHostsResponse'
      x-y-navtitle: list
    post:
      tags:
      - VirtualHost
      summary: Creates a virtual host in the specified HTTP router.
      operationId: VirtualHostCreate
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to create a virtual host in.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVirtualHostRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateVirtualHostMetadata'
      x-y-operation-response: '[VirtualHost](/docs/application-load-balancer/api-ref/VirtualHost#representation)'
  /apploadbalancer/v1/httpRouters/{httpRouterId}/virtualHosts/{virtualHostName}:removeRoute:
    post:
      tags:
      - VirtualHost
      summary: Deletes the specified route from the specified virtual host.
      operationId: VirtualHostRemoveRoute
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to delete a route from.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      - name: virtualHostName
        in: path
        description: |-
          Required.
          Name of the virtual host to delete a route from.

          To get the virtual host name, make a [list](/docs/application-load-balancer/api-ref/VirtualHost/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveRouteRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeRoute
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveRouteMetadata'
      x-y-operation-response: '[VirtualHost](/docs/application-load-balancer/api-ref/VirtualHost#representation)'
  /apploadbalancer/v1/httpRouters/{httpRouterId}/virtualHosts/{virtualHostName}:updateRoute:
    post:
      tags:
      - VirtualHost
      summary: Updates the specified route of the specified virtual host.
      operationId: VirtualHostUpdateRoute
      parameters:
      - name: httpRouterId
        in: path
        description: |-
          Required.
          ID of the HTTP router to update a route in.

          To get the HTTP router ID, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
        required: true
        schema:
          type: string
      - name: virtualHostName
        in: path
        description: |-
          Required.
          Name of the virtual host to update a route in.

          To get the virtual host name, make a [list](/docs/application-load-balancer/api-ref/VirtualHost/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRouteRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateRoute
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateRouteMetadata'
      x-y-operation-response: '[VirtualHost](/docs/application-load-balancer/api-ref/VirtualHost#representation)'
components:
  schemas:
    AddBackendMetadata:
      type: object
      properties:
        backendGroupId:
          description: ID of the backend group that the backend is being added to.
          type: string
        backendName:
          description: Name of the backend that is being added to the backend group.
          type: string
    AddBackendRequest:
      type: object
      allOf:
      - title: backend
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpBackend'
            description: HTTP backend to add to the backend group.
          grpc:
            $ref: '#/components/schemas/GrpcBackend'
            description: gRPC backend to add to the backend group.
          stream:
            $ref: '#/components/schemas/StreamBackend'
            description: New settings for the Stream backend.
    AddListenerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that the listener is being
            added to.
          type: string
        listenerName:
          description: Name of the listener that is being added to the application
            load balancer.
          type: string
    AddListenerRequest:
      type: object
      properties:
        listenerSpec:
          $ref: '#/components/schemas/ListenerSpec_in_AddListenerRequest_listenerSpec'
    AddSniMatchMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that the SNI handler is
            being added to.
          type: string
        listenerName:
          description: Name of the listener that the SNI handler is being added to.
          type: string
        sniMatchName:
          description: Name of the SNI handler that is being added to the listener.
          type: string
    AddSniMatchRequest:
      type: object
      properties:
        listenerName:
          description: |-
            Required.
            Name of the listener to add a SNI handler to.
          type: string
        name:
          description: |-
            Required.
            Name of the SNI handler to add.
          type: string
        serverNames:
          description: |-
            Required.
            Server names that are matched by the SNI handler.

            Must contain at least one element.
          type: array
          items:
            type: string
        handler:
          $ref: '#/components/schemas/TlsHandler_in_AddSniMatchRequest_handler'
    AddTargetsMetadata:
      type: object
      properties:
        targetGroupId:
          description: ID of the target group that the targets are being added to.
          type: string
    AddTargetsRequest:
      type: object
      properties:
        targets:
          description: |-
            Required.
            List of targets to add to the target group.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/Target'
    Address:
      description: An endpoint address resource.
      type: object
      allOf:
      - title: address
        type: object
        maxProperties: 1
        properties:
          externalIpv4Address:
            $ref: '#/components/schemas/ExternalIpv4Address'
            description: Public IPv4 endpoint address.
          internalIpv4Address:
            $ref: '#/components/schemas/InternalIpv4Address'
            description: |-
              Internal IPv4 endpoint address.

              To enable the use of listeners with internal addresses, [contact support](https://console.cloud.yandex.ru/support).
          externalIpv6Address:
            $ref: '#/components/schemas/ExternalIpv6Address'
            description: Public IPv6 endpoint address.
    AddressSpec:
      type: object
      allOf:
      - title: address_spec
        type: object
        maxProperties: 1
        properties:
          externalIpv4AddressSpec:
            $ref: '#/components/schemas/ExternalIpv4AddressSpec'
            description: Public IPv4 endpoint address.
          internalIpv4AddressSpec:
            $ref: '#/components/schemas/InternalIpv4AddressSpec'
            description: |-
              Internal IPv4 endpoint address.

              To enable the use of listeners with internal addresses, [contact support](https://console.cloud.yandex.ru/support).
          externalIpv6AddressSpec:
            $ref: '#/components/schemas/ExternalIpv6AddressSpec'
            description: Public IPv6 endpoint address.
    AllocationPolicy:
      description: A locality settings (allocation policy) resource.
      type: object
      properties:
        locations:
          description: |-
            Required.
            Availability zones and subnets that the application load balancer resides.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/Location'
    BackendGroup:
      description: |-
        A backend group resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/backend-group).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the backend group. Generated at creation time.
            type: string
          name:
            description: Name of the backend group. The name is unique within the
              folder. The string length in characters is 3-63.
            type: string
          description:
            description: Description of the backend group. The string is 0-256 characters
              long.
            type: string
          folderId:
            description: ID of the folder that the backend group belongs to.
            type: string
          labels:
            description: |-
              Backend group labels as `key:value` pairs.
              For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
              The maximum number of labels is 64.
            type: object
            additionalProperties:
              type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
      - title: backend
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpBackendGroup'
            description: List of HTTP backends that the backend group consists of.
          grpc:
            $ref: '#/components/schemas/GrpcBackendGroup'
            description: List of gRPC backends that the backend group consists of.
          stream:
            $ref: '#/components/schemas/StreamBackendGroup'
            description: List of stream (TCP) backends that the backend group consists
              of.
    BackendTls:
      description: A resource for backend TLS settings.
      type: object
      properties:
        sni:
          description: Server Name Indication (SNI) string for TLS connections.
          type: string
        validationContext:
          $ref: '#/components/schemas/ValidationContext_in_BackendTls_validationContext'
    ConnectionSessionAffinity:
      description: A resource for connection-based session affinity configuration.
      type: object
      properties:
        sourceIp:
          description: Specifies whether an IP address of the client is used to define
            a connection for session affinity.
          type: boolean
          format: boolean
    CookieSessionAffinity:
      description: A resource for cookie-based session affinity configuration.
      type: object
      properties:
        name:
          description: |-
            Name of the cookie that is used for session affinity.

            The string length in characters must be 1-256.
          type: string
        ttl:
          description: |-
            Maximum age of cookies that are generated for sessions.

            If set to `0`, session cookies are used, which are stored by clients in temporary memory and are deleted
            on client restarts.

            If not set, the balancer does not generate cookies and only uses incoming ones for establishing session affinity.
          type: string
    CreateBackendGroupMetadata:
      type: object
      properties:
        backendGroupId:
          description: ID of the backend group that is being created.
          type: string
    CreateBackendGroupRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            description: |-
              Required.
              ID of the folder to create a backend group in.

              To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
            type: string
          name:
            description: |-
              Name of the backend group.
              The name must be unique within the folder.

              Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
            type: string
          description:
            description: |-
              Description of the backend group.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Backend group labels as `key:value` pairs.
              For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
      - title: backend
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpBackendGroup'
            description: List of HTTP backends that the backend group will consist
              of.
          grpc:
            $ref: '#/components/schemas/GrpcBackendGroup'
            description: List of gRPC backends that the backend group consists of.
          stream:
            $ref: '#/components/schemas/StreamBackendGroup'
            description: List of stream (TCP) backends that the backend group consists
              of.
    CreateHttpRouterMetadata:
      type: object
      properties:
        httpRouterId:
          description: ID of the HTTP router that is being created.
          type: string
    CreateHttpRouterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create an HTTP router in.

            To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
          type: string
        name:
          description: |-
            Name of the HTTP router.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            Description of the HTTP router.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            HTTP router labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        virtualHosts:
          description: |-
            Virtual hosts that combine routes inside the router.
            For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#virtual-host).

            Only one virtual host with no authority (default match) can be specified.
          type: array
          items:
            $ref: '#/components/schemas/VirtualHost'
    CreateLoadBalancerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that is being created.
          type: string
    CreateLoadBalancerRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create an application load balancer in.

            To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
          type: string
        name:
          description: |-
            Name of the application load balancer.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            Description of the application load balancer.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Application load balancer labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        regionId:
          description: |-
            Required.
            ID of the region that the application load balancer is located at.

            The only supported value is `ru-central1`.
          type: string
        networkId:
          description: |-
            Required.
            ID of the network that the application load balancer belongs to.
          type: string
        listenerSpecs:
          description: |-
            Listeners that belong to the application load balancer.

            For details about the concept,
            see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#listener).
          type: array
          items:
            $ref: '#/components/schemas/ListenerSpec'
        allocationPolicy:
          $ref: '#/components/schemas/AllocationPolicy_in_CreateLoadBalancerRequest_allocationPolicy'
        securityGroupIds:
          description: |-
            ID's of the security groups attributed to the application load balancer.

            For details about the concept,
            see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#security-groups).
          type: array
          items:
            type: string
    CreateTargetGroupMetadata:
      type: object
      properties:
        targetGroupId:
          description: ID of the target group that is being created.
          type: string
    CreateTargetGroupRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a target group in.

            To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.
          type: string
        name:
          description: |-
            Name of the target group.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            Description of the target group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Target group labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        targets:
          description: List of targets in the target group.
          type: array
          items:
            $ref: '#/components/schemas/Target'
    CreateVirtualHostMetadata:
      type: object
      properties:
        httpRouterId:
          description: |-
            Required.
            ID of the HTTP router that the virtual host is being created in.
          type: string
        virtualHostName:
          description: Name of the virtual host that is being created.
          type: string
    CreateVirtualHostRequest:
      type: object
      properties:
        name:
          description: |-
            Name of the virtual host. The name must be unique within the HTTP router and cannot be changed after creation.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
          type: string
        authority:
          description: |-
            List of domains that are attributed to the virtual host.

            The host is selected to process the request received by the load balancer
            if the domain specified in the HTTP/1.1 `Host` header or the HTTP/2 `:authority` pseudo-header matches a domain
            specified in the host.

            A wildcard asterisk character (`*`) matches 0 or more characters.

            If not specified, all domains are attributed to the host, which is the same as specifying a `*` value.
            An HTTP router must not contain more than one virtual host to which all domains are attributed.
          type: array
          items:
            type: string
        routes:
          description: |-
            Routes of the virtual host.

            A route contains a set of conditions (predicates) that are used by the load balancer to select the route
            for the request and an action on the request.
            For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#routes).

            The order of routes matters: the first route whose predicate matches the request is selected.
            The most specific routes should be at the top of the list, so that they are not overridden.
            For example, if the first HTTP route is configured, via `match`, to match paths prefixed with just `/`,
            other routes are never matched.
          type: array
          items:
            $ref: '#/components/schemas/Route'
        modifyRequestHeaders:
          description: Modifications that are made to the headers of incoming HTTP
            requests before they are forwarded to backends.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
        modifyResponseHeaders:
          description: |-
            Modifications that are made to the headers of HTTP responses received from backends
            before responses are forwarded to clients.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
    DeleteBackendGroupMetadata:
      type: object
      properties:
        backendGroupId:
          description: ID of the backend group that is being deleted.
          type: string
    DeleteHttpRouterMetadata:
      type: object
      properties:
        httpRouterId:
          description: ID of the HTTP router that is being deleted.
          type: string
    DeleteLoadBalancerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that is being deleted.
          type: string
    DeleteTargetGroupMetadata:
      type: object
      properties:
        targetGroupId:
          description: ID of the target group that is being deleted.
          type: string
    DeleteVirtualHostMetadata:
      type: object
      properties:
        httpRouterId:
          description: ID of the HTTP router that the virtual host is being deleted
            from.
          type: string
        virtualHostName:
          description: Name of the virtual host that is being deleted.
          type: string
    DirectResponseAction:
      description: A direct response action resource.
      type: object
      properties:
        status:
          description: |-
            HTTP status code to use in responses.

            Acceptable values are 100 to 599, inclusive.
          type: string
          format: int64
        body:
          $ref: '#/components/schemas/Payload_in_DirectResponseAction_body'
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    Endpoint:
      description: An endpoint resource.
      type: object
      properties:
        addresses:
          description: |-
            Required.
            Endpoint public (external) and internal addresses.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/Address'
        ports:
          description: |-
            Required.
            Endpoint ports.

            Must contain at least one element.
            Acceptable values are 1 to 65535, inclusive.
          type: array
          items:
            type: string
            format: int64
    EndpointSpec:
      type: object
      properties:
        addressSpecs:
          description: |-
            Required.
            Endpoint public (external) and internal addresses.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/AddressSpec'
        ports:
          description: |-
            Required.
            Endpoint ports.

            Must contain at least one element.
            Acceptable values are 1 to 65535, inclusive.
          type: array
          items:
            type: string
            format: int64
    ExternalIpv4Address:
      description: A public (external) IPv4 endpoint address resource.
      type: object
      properties:
        address:
          description: IPv4 address.
          type: string
    ExternalIpv4AddressSpec:
      type: object
      properties:
        address:
          description: IPv4 address.
          type: string
    ExternalIpv6Address:
      description: A public (external) IPv4 endpoint address resource.
      type: object
      properties:
        address:
          description: IPv6 address.
          type: string
    ExternalIpv6AddressSpec:
      type: object
      properties:
        address:
          description: IPv6 address.
          type: string
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    GetTargetStatesResponse:
      type: object
      properties:
        targetStates:
          description: Target states of the specified target group.
          type: array
          items:
            $ref: '#/components/schemas/TargetState'
    GrpcBackend:
      description: A gRPC backend resource.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the backend.

              Value must match the regular expression `` [a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
          backendWeight:
            description: |-
              Backend weight. Traffic is distributed between backends of a backend group according to their weights.

              Weights must be set either for all backends of a group or for none of them.
              Setting no weights is the same as setting equal non-zero weights for all backends.

              If the weight is non-positive, traffic is not sent to the backend.
            type: integer
            format: int64
          loadBalancingConfig:
            $ref: '#/components/schemas/LoadBalancingConfig'
            description: Load balancing configuration for the backend.
          port:
            description: |-
              Port used by all targets to receive traffic.

              Acceptable values are 0 to 65535, inclusive.
            type: string
            format: int64
          healthchecks:
            description: |-
              Health checks to perform on targets from target groups.
              For details about health checking, see [documentation](/docs/application-load-balancer/concepts/backend-group#health-checks).

              If no health checks are specified, active health checking is not performed.
            type: array
            items:
              $ref: '#/components/schemas/HealthCheck'
          tls:
            $ref: '#/components/schemas/BackendTls'
            description: |-
              Settings for TLS connections between load balancer nodes and backend targets.

              If specified, the load balancer establishes HTTPS (HTTP over TLS) connections with targets
              and compares received certificates with the one specified in `validationContext`.
              If not specified, the load balancer establishes unencrypted HTTP connections with targets.
      - title: backend_type
        type: object
        maxProperties: 1
        properties:
          targetGroups:
            $ref: '#/components/schemas/TargetGroupsBackend'
            description: Target groups that belong to the backend.
    GrpcBackendGroup:
      description: A gRPC backend group resource.
      type: object
      allOf:
      - type: object
        properties:
          backends:
            description: List of gRPC backends.
            type: array
            items:
              $ref: '#/components/schemas/GrpcBackend'
      - title: session_affinity
        type: object
        maxProperties: 1
        properties:
          connection:
            $ref: '#/components/schemas/ConnectionSessionAffinity'
            description: |-
              Connection-based session affinity configuration.

              For now, a connection is defined only by an IP address of the client.
          header:
            $ref: '#/components/schemas/HeaderSessionAffinity'
            description: HTTP-header-field-based session affinity configuration.
          cookie:
            $ref: '#/components/schemas/CookieSessionAffinity'
            description: Cookie-based session affinity configuration.
    GrpcRoute:
      description: A gRPC route configuration resource.
      type: object
      allOf:
      - type: object
        properties:
          match:
            $ref: '#/components/schemas/GrpcRouteMatch'
            description: Condition (predicate) used to select the route.
      - title: action
        type: object
        maxProperties: 1
        properties:
          route:
            $ref: '#/components/schemas/GrpcRouteAction'
            description: Forwards the request to a backend group for processing as
              configured.
          statusResponse:
            $ref: '#/components/schemas/GrpcStatusResponseAction'
            description: Instructs the load balancer to respond directly with a specified
              status.
    GrpcRouteAction:
      description: A gRPC route action resource.
      type: object
      allOf:
      - type: object
        properties:
          backendGroupId:
            description: |-
              Required.
              Backend group to forward requests to.
            type: string
          maxTimeout:
            description: |-
              Overall timeout for an underlying HTTP connection between a load balancer node an a backend from the backend group:
              the maximum time the connection is kept alive for, regardless of whether data is transferred over it.

              If a client specifies a lower timeout in HTTP `grpc-timeout` header, the `max_timeout` value is ignored.

              If a connection times out, the load balancer responds to the client with an `UNAVAILABLE` status code.

              Default value: `60`.
            type: string
          idleTimeout:
            description: |-
              Idle timeout for an underlying HTTP connection between a load balancer node an a backend from the backend group:
              the maximum time the connection is allowed to be idle, i.e. without any data transferred over it.

              Specifying meaningful values for both `maxTimeout` and `idle_timeout` is useful for implementing
              server-push mechanisms such as long polling, server-sent events etc.

              If a connection times out, the load balancer responds to the client with an `UNAVAILABLE` status code.

              If not specified, no idle timeout is used, and an alive connection may be idle for any duration
              (see `maxTimeout`).
            type: string
      - title: host_rewrite_specifier
        type: object
        maxProperties: 1
        properties:
          hostRewrite:
            description: Host replacement.
            type: string
          autoHostRewrite:
            description: Automatically replaces the host with that of the target.
            type: boolean
            format: boolean
    GrpcRouteMatch:
      description: A gRPC route condition (predicate) resource.
      type: object
      properties:
        fqmn:
          $ref: '#/components/schemas/StringMatch_in_GrpcRouteMatch_fqmn'
    GrpcStatusResponseAction:
      description: A gRPC status response action resource.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/GrpcStatusResponseActionStatus_in_GrpcStatusResponseAction_status'
    GrpcStatusResponseActionStatus:
      description: |-
        gRPC status code supported for use in responses.

         - OK: `OK` (0) status code.
         - INVALID_ARGUMENT: `INVALID_ARGUMENT` (3) status code.
         - NOT_FOUND: `NOT_FOUND` (5) status code.
         - PERMISSION_DENIED: `PERMISSION_DENIED` (7) status code.
         - UNAUTHENTICATED: `UNAUTHENTICATED` (16) status code.
         - UNIMPLEMENTED: `UNIMPLEMENTED` (12) status code.
         - INTERNAL: `INTERNAL` (13) status code.
         - UNAVAILABLE: `UNAVAILABLE` (14) status code.
      type: string
      enum:
      - OK
      - INVALID_ARGUMENT
      - NOT_FOUND
      - PERMISSION_DENIED
      - UNAUTHENTICATED
      - UNIMPLEMENTED
      - INTERNAL
      - UNAVAILABLE
      default: OK
    HeaderModification:
      description: A header modification resource.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: Name of the header.
            type: string
      - title: operation
        type: object
        maxProperties: 1
        properties:
          append:
            description: |-
              Appends the specified string to the header value.

              Variables [defined for Envoy proxy](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#custom-request-response-headers)
              are supported.
            type: string
          replace:
            description: |-
              Replaces the value of the header with the specified string.

              Variables [defined for Envoy proxy](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#custom-request-response-headers)
              are supported.
            type: string
          remove:
            description: Removes the header.
            type: boolean
            format: boolean
          rename:
            description: |-
              Replaces the name of the header with the specified string.
              This operation is only supported for ALB Virtual Hosts.
            type: string
    HeaderSessionAffinity:
      description: A resource for HTTP-header-field-based session affinity configuration.
      type: object
      properties:
        headerName:
          description: |-
            Name of the HTTP header field that is used for session affinity.

            The string length in characters must be 1-256.
          type: string
    HealthCheck:
      description: |-
        A health check resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/backend-group#health-checks).
      type: object
      allOf:
      - type: object
        properties:
          timeout:
            description: |-
              Required.
              Health check timeout.

              The timeout is the time allowed for the target to respond to a check.
              If the target doesn't respond in time, the check is considered failed.
            type: string
          interval:
            description: |-
              Required.
              Base interval between consecutive health checks.
            type: string
          intervalJitterPercent:
            type: number
            format: double
          healthyThreshold:
            description: |-
              Number of consecutive successful health checks required to mark an unhealthy target as healthy.

              Both `0` and `1` values amount to one successful check required.

              The value is ignored when a load balancer is initialized; a target is marked healthy after one successful check.

              Default value: `0`.
            type: string
            format: int64
          unhealthyThreshold:
            description: |-
              Number of consecutive failed health checks required to mark a healthy target as unhealthy.

              Both `0` and `1` values amount to one unsuccessful check required.

              The value is ignored if a health check is failed due to an HTTP `503 Service Unavailable` response from the target
              (not applicable to TCP stream health checks). The target is immediately marked unhealthy.

              Default value: `0`.
            type: string
            format: int64
          healthcheckPort:
            description: |-
              Port used for health checks.

              If not specified, the backend port (`port` or `port`) is used for health checks.

              Acceptable values are 0 to 65535, inclusive.
            type: string
            format: int64
      - title: healthcheck
        type: object
        maxProperties: 1
        properties:
          stream:
            $ref: '#/components/schemas/HealthCheckStreamHealthCheck'
            description: TCP stream health check settings.
          http:
            $ref: '#/components/schemas/HealthCheckHttpHealthCheck'
            description: HTTP health check settings.
          grpc:
            $ref: '#/components/schemas/HealthCheckGrpcHealthCheck'
            description: gRPC health check settings.
      - title: transport_settings
        type: object
        maxProperties: 1
        properties:
          plaintext:
            $ref: '#/components/schemas/PlaintextTransportSettings'
          tls:
            $ref: '#/components/schemas/SecureTransportSettings'
    HealthCheckGrpcHealthCheck:
      description: A resource for gRPC health check settings.
      type: object
      properties:
        serviceName:
          description: |-
            Name of the gRPC service to be checked.

            If not specified, overall health is checked.

            For details about the concept, see [GRPC Health Checking Protocol](https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
          type: string
    HealthCheckHttpHealthCheck:
      description: A resource for HTTP health check settings.
      type: object
      properties:
        host:
          description: Value for the HTTP/1.1 `Host` header or the HTTP/2 `:authority`
            pseudo-header used in requests to targets.
          type: string
        path:
          description: |-
            Required.
            HTTP path used in requests to targets: request URI for HTTP/1.1 request line
            or value for the HTTP/2 `:path` pseudo-header.
          type: string
        useHttp2:
          description: |-
            Enables HTTP/2 usage in health checks.

            Default value: `false`, HTTP/1.1 is used.
          type: boolean
          format: boolean
    HealthCheckStreamHealthCheck:
      description: A resource for TCP stream health check settings.
      type: object
      properties:
        send:
          $ref: '#/components/schemas/Payload_in_HealthCheckStreamHealthCheck_send'
        receive:
          $ref: '#/components/schemas/Payload_in_HealthCheckStreamHealthCheck_receive'
    Http2Options:
      description: An HTTP/2 options resource.
      type: object
      properties:
        maxConcurrentStreams:
          description: Maximum number of concurrent HTTP/2 streams in a connection.
          type: string
          format: int64
    HttpBackend:
      description: An HTTP backend resource.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the backend.

              Value must match the regular expression `` [a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
          backendWeight:
            description: |-
              Backend weight. Traffic is distributed between backends of a backend group according to their weights.

              Weights must be set either for all backends in a group or for none of them.
              Setting no weights is the same as setting equal non-zero weights for all backends.

              If the weight is non-positive, traffic is not sent to the backend.
            type: integer
            format: int64
          loadBalancingConfig:
            $ref: '#/components/schemas/LoadBalancingConfig'
            description: Load balancing configuration for the backend.
          port:
            description: |-
              Port used by all targets to receive traffic.

              Acceptable values are 0 to 65535, inclusive.
            type: string
            format: int64
          healthchecks:
            description: |-
              Health checks to perform on targets from target groups.
              For details about health checking, see [documentation](/docs/application-load-balancer/concepts/backend-group#health-checks).

              If no health checks are specified, active health checking is not performed.
            type: array
            items:
              $ref: '#/components/schemas/HealthCheck'
          tls:
            $ref: '#/components/schemas/BackendTls'
            description: |-
              Settings for TLS connections between load balancer nodes and backend targets.

              If specified, the load balancer establishes HTTPS (HTTP over TLS) connections with targets
              and compares received certificates with the one specified in `validationContext`.
              If not specified, the load balancer establishes unencrypted HTTP connections with targets.
          useHttp2:
            description: |-
              Enables HTTP/2 usage in connections between load balancer nodes and backend targets.

              Default value: `false`, HTTP/1.1 is used.
            type: boolean
            format: boolean
      - title: backend_type
        type: object
        maxProperties: 1
        properties:
          targetGroups:
            $ref: '#/components/schemas/TargetGroupsBackend'
            description: |-
              Target groups that belong to the backend. For details about target groups, see
              [documentation](/docs/application-load-balancer/concepts/target-group).
          storageBucket:
            $ref: '#/components/schemas/StorageBucketBackend'
            description: |-
              Object Storage bucket to use as the backend. For details about buckets, see
              [documentation](/docs/storage/concepts/bucket).

              If a bucket is used as a backend, the list of bucket objects and the objects themselves must be publicly
              accessible. For instructions, see [documentation](/docs/storage/operations/buckets/bucket-availability).
    HttpBackendGroup:
      description: An HTTP backend group resource.
      type: object
      allOf:
      - type: object
        properties:
          backends:
            description: List of HTTP backends.
            type: array
            items:
              $ref: '#/components/schemas/HttpBackend'
      - title: session_affinity
        type: object
        maxProperties: 1
        properties:
          connection:
            $ref: '#/components/schemas/ConnectionSessionAffinity'
            description: |-
              Connection-based session affinity configuration.

              For now, a connection is defined only by an IP address of the client.
          header:
            $ref: '#/components/schemas/HeaderSessionAffinity'
            description: HTTP-header-field-based session affinity configuration.
          cookie:
            $ref: '#/components/schemas/CookieSessionAffinity'
            description: Cookie-based session affinity configuration.
    HttpHandler:
      description: An HTTP handler resource.
      type: object
      allOf:
      - type: object
        properties:
          httpRouterId:
            description: |-
              ID of the HTTP router processing requests. For details about the concept, see
              [documentation](/docs/application-load-balancer/concepts/http-router).

              To get the list of all available HTTP routers, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
            type: string
      - title: protocol_settings
        type: object
        maxProperties: 1
        properties:
          http2Options:
            $ref: '#/components/schemas/Http2Options'
            description: |-
              HTTP/2 settings.

              If specified, incoming HTTP/2 requests are supported by the listener.
          allowHttp10:
            description: Enables support for incoming HTTP/1.0 and HTTP/1.1 requests
              and disables it for HTTP/2 requests.
            type: boolean
            format: boolean
    HttpListener:
      description: An HTTP listener resource.
      type: object
      properties:
        handler:
          $ref: '#/components/schemas/HttpHandler_in_HttpListener_handler'
        redirects:
          $ref: '#/components/schemas/Redirects_in_HttpListener_redirects'
    HttpRoute:
      description: An HTTP route configuration resource.
      type: object
      allOf:
      - type: object
        properties:
          match:
            $ref: '#/components/schemas/HttpRouteMatch'
            description: Condition (predicate) used to select the route.
      - title: action
        type: object
        maxProperties: 1
        properties:
          route:
            $ref: '#/components/schemas/HttpRouteAction'
            description: Forwards the request to a backend group for processing as
              configured.
          redirect:
            $ref: '#/components/schemas/RedirectAction'
            description: Redirects the request as configured.
          directResponse:
            $ref: '#/components/schemas/DirectResponseAction'
            description: Instructs the load balancer to respond directly as configured.
    HttpRouteAction:
      description: An HTTP route action resource.
      type: object
      allOf:
      - type: object
        properties:
          backendGroupId:
            description: |-
              Required.
              Backend group to forward requests to.

              Stream (TCP) backend groups are not supported.
            type: string
          timeout:
            description: |-
              Overall timeout for an HTTP connection between a load balancer node an a backend from the backend group:
              the maximum time the connection is kept alive for, regardless of whether data is transferred over it.

              If a connection times out, the load balancer responds to the client with a `504 Gateway Timeout` status code.

              Default value: `60`.
            type: string
          idleTimeout:
            description: |-
              Idle timeout for an HTTP connection between a load balancer node an a backend from the backend group:
              the maximum time the connection is allowed to be idle, i.e. without any data transferred over it.

              Specifying meaningful values for both `timeout` and `idle_timeout` is useful for implementing
              server-push mechanisms such as long polling, server-sent events (`EventSource` interface) etc.

              If a connection times out, the load balancer responds to the client with a `504 Gateway Timeout` status code.

              If not specified, no idle timeout is used, and an alive connection may be idle for any duration (see `timeout`).
            type: string
          prefixRewrite:
            description: |-
              Replacement for the path prefix matched by `StringMatch`.

              For instance, if `prefixMatch` value is `/foo` and `replace_prefix` value is `/bar`,
              a request with `/foobaz` path is forwarded with `/barbaz` path.
              For `exactMatch`, the whole path is replaced.

              If not specified, the path is not changed.
            type: string
          upgradeTypes:
            description: Supported values for HTTP `Upgrade` header. E.g. `websocket`.
            type: array
            items:
              type: string
      - title: host_rewrite_specifier
        type: object
        maxProperties: 1
        properties:
          hostRewrite:
            description: Host replacement.
            type: string
          autoHostRewrite:
            description: Automatically replaces the host with that of the target.
            type: boolean
            format: boolean
    HttpRouteMatch:
      description: An HTTP route condition (predicate) resource.
      type: object
      properties:
        httpMethod:
          description: HTTP method specified in the request.
          type: array
          items:
            type: string
        path:
          $ref: '#/components/schemas/StringMatch_in_HttpRouteMatch_path'
    HttpRouter:
      description: |-
        An HTTP router resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router).
      type: object
      properties:
        id:
          description: ID of the router. Generated at creation time.
          type: string
        name:
          description: Name of the router. The name is unique within the folder.
          type: string
        description:
          description: Description of the router.
          type: string
        folderId:
          description: ID of the folder that the router belongs to.
          type: string
        labels:
          description: |-
            Router labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
          type: object
          additionalProperties:
            type: string
        virtualHosts:
          description: |-
            Virtual hosts that combine routes inside the router.
            For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#virtual-host).

            Only one virtual host with no authority (default match) can be specified.
          type: array
          items:
            $ref: '#/components/schemas/VirtualHost'
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        routeOptions:
          $ref: '#/components/schemas/RouteOptions_in_HttpRouter_routeOptions'
    InternalIpv4Address:
      description: An internal IPv4 endpoint address resource.
      type: object
      properties:
        address:
          description: IPv4 address.
          type: string
        subnetId:
          description: ID of the subnet that the address belongs to.
          type: string
    InternalIpv4AddressSpec:
      type: object
      properties:
        address:
          description: IPv4 address.
          type: string
        subnetId:
          description: ID of the subnet that the address belongs to.
          type: string
    ListBackendGroupOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified backend group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/BackendGroup/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/BackendGroup/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListBackendGroupsResponse:
      type: object
      properties:
        backendGroups:
          description: List of backend groups in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/BackendGroup'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/BackendGroup/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/BackendGroup/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListHttpRouterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified HTTP router.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/HttpRouter/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/HttpRouter/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListHttpRoutersResponse:
      type: object
      properties:
        httpRouters:
          description: List of HTTP routers in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/HttpRouter'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/HttpRouter/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/HttpRouter/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListLoadBalancerOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified application load balancer.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/LoadBalancer/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/LoadBalancer/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListLoadBalancersResponse:
      type: object
      properties:
        loadBalancers:
          description: List of application load balancers in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancer'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/LoadBalancer/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/LoadBalancer/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListTargetGroupOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified target group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/TargetGroup/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/TargetGroup/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListTargetGroupsResponse:
      type: object
      properties:
        targetGroups:
          description: List of target groups in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/TargetGroup'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/TargetGroup/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/TargetGroup/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListVirtualHostsResponse:
      type: object
      properties:
        virtualHosts:
          description: List of virtual hosts of the specified HTTP router.
          type: array
          items:
            $ref: '#/components/schemas/VirtualHost'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/application-load-balancer/api-ref/VirtualHost/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/application-load-balancer/api-ref/VirtualHost/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    Listener:
      description: |-
        A listener resource.

        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#listener).
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the listener. The name is unique within the application load balancer.
              The string length in characters is 3-63.
            type: string
          endpoints:
            description: |-
              Endpoints of the listener.

              Endpoints are defined by their IP addresses and ports.
            type: array
            items:
              $ref: '#/components/schemas/Endpoint'
      - title: listener
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpListener'
            description: Unencrypted HTTP listener settings.
          tls:
            $ref: '#/components/schemas/TlsListener'
            description: |-
              TLS-encrypted HTTP or TCP stream listener settings.

              All handlers within a listener (`defaultHandler` and `sniHandlers`) must be of one
              type, `HttpHandler` or `StreamHandler`. Mixing HTTP and TCP stream traffic in a TLS-encrypted listener is not
              supported.
          stream:
            $ref: '#/components/schemas/StreamListener'
            description: Unencrypted stream (TCP) listener settings.
    ListenerSpec:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the listener. The name is unique within the application load balancer.

              Value must match the regular expression `` [a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          endpointSpecs:
            description: |-
              Required.
              Endpoints of the listener.

              Endpoints are defined by their IP addresses and ports.

              Must contain at least one element.
            type: array
            items:
              $ref: '#/components/schemas/EndpointSpec'
      - title: listener
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpListener'
            description: Unencrypted HTTP listener settings.
          tls:
            $ref: '#/components/schemas/TlsListener'
            description: |-
              TLS-encrypted HTTP or TCP stream listener settings.

              All handlers within a listener (`defaultHandler` and `sniHandlers`) must be of one
              type, `HttpHandler` or `StreamHandler`. Mixing HTTP and TCP stream traffic in a TLS-encrypted listener is not
              supported.
          stream:
            $ref: '#/components/schemas/StreamListener'
            description: Unencrypted stream (TCP) listener settings.
    LoadBalancer:
      description: |-
        An application load balancer resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/application-load-balancer).
      type: object
      properties:
        id:
          description: ID of the application load balancer. Generated at creation
            time.
          type: string
        name:
          description: Name of the application load balancer. The name is unique within
            the folder.
          type: string
        description:
          description: Description of the application load balancer.
          type: string
        folderId:
          description: ID of the folder that the application load balancer belongs
            to.
          type: string
        labels:
          description: |-
            Application load balancer labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/LoadBalancerStatus_in_LoadBalancer_status'
        regionId:
          description: ID of the region that the application load balancer is located
            at.
          type: string
        networkId:
          description: ID of the network that the application load balancer belongs
            to.
          type: string
        listeners:
          description: |-
            Listeners that belong to the application load balancer.

            For details about the concept, see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#listener).
          type: array
          items:
            $ref: '#/components/schemas/Listener'
        allocationPolicy:
          $ref: '#/components/schemas/AllocationPolicy_in_LoadBalancer_allocationPolicy'
        logGroupId:
          description: |-
            ID of the log group that stores access logs of the application load balancer.

            The logs can be accessed using a Cloud Functions [trigger for Cloud Logs](/docs/functions/operations/trigger/cloudlogs-trigger-create).
          type: string
        securityGroupIds:
          description: |-
            ID's of the security groups attributed to the application load balancer.

            For details about the concept,
            see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#security-groups).
          type: array
          items:
            type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    LoadBalancerStatus:
      description: |2-
         - CREATING: The application load balancer is being created.
         - STARTING: The application load balancer is being started.
         - ACTIVE: The application load balancer is active and sends traffic to the targets.
         - STOPPING: The application load balancer is being stopped.
         - STOPPED: The application load balancer is stopped and doesn't send traffic to the targets.
         - DELETING: The application load balancer is being deleted.
      type: string
      enum:
      - CREATING
      - STARTING
      - ACTIVE
      - STOPPING
      - STOPPED
      - DELETING
    LoadBalancingConfig:
      description: A load balancing configuration resource.
      type: object
      properties:
        panicThreshold:
          description: |-
            Threshold for panic mode.

            If percentage of healthy backends in the group drops below threshold,
            panic mode will be activated and traffic will be routed to all backends, regardless of their health check status.
            This helps to avoid overloading healthy backends.
            For details about panic mode, see [documentation](/docs/application-load-balancer/concepts/backend-group#panic-mode).

            If the value is `0`, panic mode will never be activated and traffic is routed only to healthy backends at all times.

            Default value: `0`.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        localityAwareRoutingPercent:
          description: |-
            Percentage of traffic that a load balancer node sends to healthy backends in its availability zone.
            The rest is divided equally between other zones. For details about zone-aware routing, see
            [documentation](/docs/application-load-balancer/concepts/backend-group#locality).

            If there are no healthy backends in an availability zone, all the traffic is divided between other zones.

            If `strictLocality` is `true`, the specified value is ignored.
            A load balancer node sends all the traffic within its availability zone, regardless of backends' health.

            Default value: `0`.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        strictLocality:
          description: |-
            Specifies whether a load balancer node should only send traffic to backends in its availability zone,
            regardless of their health, and ignore backends in other zones.

            If set to `true` and there are no healthy backends in the zone, the node in this zone will respond
            to incoming traffic with errors.
            For details about strict locality, see [documentation](/docs/application-load-balancer/concepts/backend-group#locality).

            If `strict_locality` is `true`, the value specified in `localityAwareRoutingPercent` is ignored.

            Default value: `false`.
          type: boolean
          format: boolean
        mode:
          $ref: '#/components/schemas/LoadBalancingMode_in_LoadBalancingConfig_mode'
    LoadBalancingMode:
      description: |-
        A load balancing mode resource.
        For details about the concept, see
        [documentation](/docs/application-load-balancer/concepts/backend-group#balancing-mode).

         - ROUND_ROBIN: Round robin load balancing mode.

        All endpoints of the backend take their turns to receive requests attributed to the backend.
         - RANDOM: Random load balancing mode. Default value.

        For a request attributed to the backend, an endpoint that receives it is picked at random.
         - LEAST_REQUEST: Least request load balancing mode.

        To pick an endpoint that receives a request attributed to the backend, the power of two choices algorithm is used;
        that is, two endpoints are picked at random, and the request is sent to the one which has the fewest active
        requests.
         - MAGLEV_HASH: Maglev hashing load balancing mode.

        Each endpoint is hashed, and a hash table with 65537 rows is filled accordingly, so that every endpoint occupies
        the same amount of rows. An attribute of each request is also hashed by the same function (if session affinity is
        enabled for the backend group, the attribute to hash is specified in session affinity configuration). The row
        with the same number as the resulting value is looked up in the table to determine the endpoint that receives
        the request.

        If the backend group with session affinity enabled contains more than one backend with positive weight, endpoints
        for backends with `MAGLEV_HASH` load balancing mode are picked at `RANDOM` instead.
      type: string
      enum:
      - ROUND_ROBIN
      - RANDOM
      - LEAST_REQUEST
      - MAGLEV_HASH
      default: ROUND_ROBIN
    Location:
      description: |-
        An application load balancer location resource.

        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#lb-location).
      type: object
      properties:
        zoneId:
          description: |-
            Required.
            ID of the availability zone where the application load balancer resides.

            Each availability zone can only be specified once.
          type: string
        subnetId:
          description: ID of the subnet that the application load balancer belongs
            to.
          type: string
        disableTraffic:
          description: |-
            Disables the load balancer node in the specified availability zone.

            Backends in the availability zone are not directly affected by this setting.
            They still may receive traffic from the load balancer nodes in other availability zones,
            subject to `localityAwareRoutingPercent` and `strictLocality` settings.
          type: boolean
          format: boolean
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Payload:
      description: A health check payload resource.
      type: object
      allOf:
      - title: payload
        type: object
        maxProperties: 1
        properties:
          text:
            description: |-
              Payload text.

              The string length in characters must be greater than 0.
            type: string
    PlaintextTransportSettings:
      description: Transport settings to be used instead of the settings configured
        per-cluster
      type: object
      properties: {}
    RedirectAction:
      description: A redirect action resource.
      type: object
      allOf:
      - type: object
        properties:
          replaceScheme:
            description: |-
              URI scheme replacement.

              If `http` or `https` scheme is to be replaced and `80` or `443` port is specified in the original URI,
              the port is also removed.

              If not specified, the original scheme and port are used.
            type: string
          replaceHost:
            description: |-
              URI host replacement.

              If not specified, the original host is used.
            type: string
          replacePort:
            description: |-
              URI host replacement.

              If not specified, the original host is used.
            type: string
            format: int64
          removeQuery:
            description: Removes URI query.
            type: boolean
            format: boolean
          responseCode:
            $ref: '#/components/schemas/RedirectActionRedirectResponseCode'
            description: HTTP status code to use in redirect responses.
      - title: path
        type: object
        maxProperties: 1
        properties:
          replacePath:
            description: Replacement for the whole path.
            type: string
          replacePrefix:
            description: |-
              Replacement for the path prefix matched by `StringMatch`.

              For instance, if `prefixMatch` value is `/foo` and `replace_prefix` value is `/bar`,
              a request with `https://example.com/foobaz` URI is redirected to `https://example.com/barbaz`.
              For `exactMatch`, the whole path is replaced.
            type: string
    RedirectActionRedirectResponseCode:
      description: |-
        HTTP status codes supported for use in redirect responses.

         - MOVED_PERMANENTLY: `301 Moved Permanently` status code.
         - FOUND: `302 Found` status code.
         - SEE_OTHER: `303 See Other` status code.
         - TEMPORARY_REDIRECT: `307 Temporary Redirect` status code.
         - PERMANENT_REDIRECT: `308 Permanent Redirect` status code.
      type: string
      enum:
      - MOVED_PERMANENTLY
      - FOUND
      - SEE_OTHER
      - TEMPORARY_REDIRECT
      - PERMANENT_REDIRECT
      default: MOVED_PERMANENTLY
    Redirects:
      description: A listener redirects resource.
      type: object
      properties:
        httpToHttps:
          description: |-
            Redirects all unencrypted HTTP requests to the same URI with scheme changed to `https`.

            The setting has the same effect as a single, catch-all `HttpRoute`
            with `replaceScheme` set to `https`.
          type: boolean
          format: boolean
    RemoveBackendMetadata:
      type: object
      properties:
        backendGroupId:
          description: ID of the backend group that the backend is being removed from.
          type: string
        backendName:
          description: Name of the backend that is being removed.
          type: string
    RemoveBackendRequest:
      type: object
      properties:
        backendName:
          description: |-
            Required.
            Name of the backend to remove.

            To get the backend name, make a [get](/docs/application-load-balancer/api-ref/BackendGroup/get) request.
          type: string
    RemoveListenerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that the listener is being
            removed from.
          type: string
        listenerName:
          description: Name of the listener that is being removed from the application
            load balancer.
          type: string
    RemoveListenerRequest:
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the listener to remove from the application load balancer.
          type: string
    RemoveRouteMetadata:
      type: object
      properties:
        httpRouterId:
          description: ID of the HTTP router that the route is being deleted from.
          type: string
        virtualHostName:
          description: Name of the virtual host that the route is being deleted from.
          type: string
        routeName:
          description: Name of the route that is being deleted.
          type: string
    RemoveRouteRequest:
      type: object
      properties:
        routeName:
          description: |-
            Required.
            Name of the route to delete.

            To get the route name, make a [get](/docs/application-load-balancer/api-ref/VirtualHost/get) request.
          type: string
    RemoveSniMatchMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that the SNI handler is
            being removed from.
          type: string
        listenerName:
          description: Name of the listener that the SNI handler is being removed
            from.
          type: string
        sniMatchName:
          description: Name of the SNI handler that is being removed.
          type: string
    RemoveSniMatchRequest:
      type: object
      properties:
        listenerName:
          description: |-
            Required.
            Name of the listener te remove the SNI handler from.
          type: string
        sniMatchName:
          description: |-
            Required.
            Name of the SNI handler to remove.
          type: string
    RemoveTargetsMetadata:
      type: object
      properties:
        targetGroupId:
          description: ID of the target group that the targets are being removed from.
          type: string
    RemoveTargetsRequest:
      type: object
      properties:
        targets:
          description: |-
            Required.
            List of targets to remove from the target group.

            Must contain at least one element.
          type: array
          items:
            $ref: '#/components/schemas/Target'
    Route:
      description: |-
        A route resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#routes).
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the route.
            type: string
          routeOptions:
            $ref: '#/components/schemas/RouteOptions'
      - title: route
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpRoute'
            description: HTTP route configuration.
          grpc:
            $ref: '#/components/schemas/GrpcRoute'
            description: gRPC route configuration.
    RouteOptions:
      type: object
      properties:
        modifyRequestHeaders:
          description: Apply the following modifications to the request headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
        modifyResponseHeaders:
          description: Apply the following modifications to the response headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
    SecureTransportSettings:
      description: Transport settings to be used instead of the settings configured
        per-cluster
      type: object
      properties:
        sni:
          description: SNI string for TLS connections.
          type: string
        validationContext:
          $ref: '#/components/schemas/ValidationContext_in_SecureTransportSettings_validationContext'
    SniMatch:
      description: A SNI handler resource.
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the SNI handler.
          type: string
        serverNames:
          description: |-
            Required.
            Server names that are matched by the SNI handler.

            Must contain at least one element.
          type: array
          items:
            type: string
        handler:
          $ref: '#/components/schemas/TlsHandler_in_SniMatch_handler'
    StartLoadBalancerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that is being started.
          type: string
    StopLoadBalancerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that is being stopped.
          type: string
    StorageBucketBackend:
      description: |-
        A resource for Object Storage bucket used as a backend. For details about the concept,
        see [documentation](/docs/storage/concepts/bucket).
      type: object
      properties:
        bucket:
          description: |-
            Required.
            Name of the bucket.
          type: string
    StreamBackend:
      description: A stream (TCP) backend resource.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Name of the backend.

              Value must match the regular expression `` [a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
          backendWeight:
            description: |-
              Backend weight. Traffic is distributed between backends of a backend group according to their weights.

              Weights must be set either for all backends in a group or for none of them.
              Setting no weights is the same as setting equal non-zero weights for all backends.

              If the weight is non-positive, traffic is not sent to the backend.
            type: integer
            format: int64
          loadBalancingConfig:
            $ref: '#/components/schemas/LoadBalancingConfig'
            description: Load balancing configuration for the backend.
          port:
            description: |-
              Port used by all targets to receive traffic.

              Acceptable values are 0 to 65535, inclusive.
            type: string
            format: int64
          healthchecks:
            description: |-
              Health checks to perform on targets from target groups.
              For details about health checking, see [documentation](/docs/application-load-balancer/concepts/backend-group#health-checks).

              If no health checks are specified, active health checking is not performed.
            type: array
            items:
              $ref: '#/components/schemas/HealthCheck'
          tls:
            $ref: '#/components/schemas/BackendTls'
            description: |-
              Settings for TLS connections between load balancer nodes and backend targets.

              If specified, the load balancer establishes TLS-encrypted TCP connections with targets and compares received
              certificates with the one specified in `validationContext`.
              If not specified, the load balancer establishes unencrypted TCP connections with targets.
          enableProxyProtocol:
            description: If set, proxy protocol will be enabled for this backend.
            type: boolean
            format: boolean
      - title: backend_type
        type: object
        maxProperties: 1
        properties:
          targetGroups:
            $ref: '#/components/schemas/TargetGroupsBackend'
            description: |-
              Target groups that belong to the backend. For details about target groups, see
              [documentation](/docs/application-load-balancer/concepts/target-group).
    StreamBackendGroup:
      description: A stream (TCP) backend group resource.
      type: object
      allOf:
      - type: object
        properties:
          backends:
            description: List of stream (TCP) backends.
            type: array
            items:
              $ref: '#/components/schemas/StreamBackend'
      - title: session_affinity
        type: object
        maxProperties: 1
        properties:
          connection:
            $ref: '#/components/schemas/ConnectionSessionAffinity'
            description: |-
              Connection-based session affinity configuration.

              For now, a connection is defined only by an IP address of the client.
    StreamHandler:
      description: A stream (TCP) handler resource.
      type: object
      properties:
        backendGroupId:
          description: |-
            Required.
            ID of the backend group processing requests. For details about the concept, see
            [documentation](/docs/application-load-balancer/concepts/backend-group).

            The backend group type, specified via [BackendGroup.backend], must be `stream`.

            To get the list of all available backend groups, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.
          type: string
    StreamListener:
      description: A stream (TCP) listener resource.
      type: object
      properties:
        handler:
          $ref: '#/components/schemas/StreamHandler_in_StreamListener_handler'
    StringMatch:
      description: A string matcher resource.
      type: object
      allOf:
      - title: match
        type: object
        maxProperties: 1
        properties:
          exactMatch:
            description: Exact match string.
            type: string
          prefixMatch:
            description: Prefix match string.
            type: string
    Target:
      description: |-
        A target resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/target-group).
      type: object
      allOf:
      - type: object
        properties:
          subnetId:
            description: ID of the subnet that the target is connected to.
            type: string
          privateIpv4Address:
            description: |-
              If set, will not require `subnet_id` to validate the target.
              Instead, the address should belong to one of the following ranges:
              10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
              Only one of `subnet_id` or `private_ipv4_address` should be set.
            type: boolean
            format: boolean
      - title: address_type
        type: object
        maxProperties: 1
        properties:
          ipAddress:
            description: IP address of the target.
            type: string
    TargetGroup:
      description: |-
        A target group resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/target-group).
      type: object
      properties:
        id:
          description: ID of the target group. Generated at creation time.
          type: string
        name:
          description: Name of the target group. The name is unique within the folder.
          type: string
        description:
          description: Description of the target group.
          type: string
        folderId:
          description: ID of the folder that the target group belongs to.
          type: string
        labels:
          description: |-
            Target group labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
          type: object
          additionalProperties:
            type: string
        targets:
          description: List of targets in the target group.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    TargetGroupsBackend:
      description: A resource for target groups that belong to the backend.
      type: object
      properties:
        targetGroupIds:
          description: |-
            Required.
            List of ID's of target groups that belong to the backend.

            To get the ID's of all available target groups, make a [list](/docs/application-load-balancer/api-ref/TargetGroup/list) request.

            Must contain at least one element.
          type: array
          items:
            type: string
    TargetState:
      description: A target state resource.
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TargetStateHealthcheckStatus_in_TargetState_status'
        target:
          $ref: '#/components/schemas/Target_in_TargetState_target'
    TargetStateHealthcheckStatus:
      description: Health of the target.
      type: object
      properties:
        zoneStatuses:
          description: Statuses of the target in its availability zones.
          type: array
          items:
            $ref: '#/components/schemas/TargetStateZoneHealthcheckStatus'
    TargetStateStatus:
      description: |-
        Supported target statuses.

         - HEALTHY: All of the health checks specified in `healthchecks` or `healthchecks` are passed
        (the number depends on the `healthyThreshold` setting) and the target is ready to receive traffic.
         - PARTIALLY_HEALTHY: Some of the health checks specified in `healthchecks` or `healthchecks` failed
        (the number depends on the `unhealthyThreshold` setting).
        The target is ready to receive traffic from the load balancer nodes which, based on their health checks,
        consider the target healthy.
         - UNHEALTHY: All of the health checks specified in `healthchecks` or `healthchecks` failed
        (the number depends on the `unhealthyThreshold` setting) and the target is not receiving traffic.
         - DRAINING: Target is being deleted and the application load balancer is no longer sending traffic to this target.
      type: string
      enum:
      - HEALTHY
      - PARTIALLY_HEALTHY
      - UNHEALTHY
      - DRAINING
      - TIMEOUT
    TargetStateZoneHealthcheckStatus:
      description: Health of the target in the availability zone.
      type: object
      properties:
        zoneId:
          description: |-
            Required.
            ID of the availability zone.
          type: string
        status:
          $ref: '#/components/schemas/TargetStateStatus_in_TargetStateZoneHealthcheckStatus_status'
        failedActiveHc:
          description: |-
            Indicates whether the target has been marked `UNHEALTHY` due to failing active health checks,
            which determine target statuses as configured in `healthchecks` or `healthchecks`.

            Currently the only type of health checks is active, as described above.
            Passive health checks, which determine the health of a target based on its responses to production requests
            (HTTP 5xx status codes, connection errors etc.), are not implemented yet.
          type: boolean
          format: boolean
    TlsHandler:
      description: A TLS-encrypted (HTTP or TCP stream) handler resource.
      type: object
      allOf:
      - type: object
        properties:
          certificateIds:
            description: |-
              Required.
              ID's of the TLS server certificates from [Certificate Manager](/docs/certificate-manager/).

              RSA and ECDSA certificates are supported, and only the first certificate of each type is used.

              Must contain at least one element.
            type: array
            items:
              type: string
      - title: handler
        type: object
        maxProperties: 1
        properties:
          httpHandler:
            $ref: '#/components/schemas/HttpHandler'
            description: HTTP handler.
          streamHandler:
            $ref: '#/components/schemas/StreamHandler'
            description: Stream (TCP) handler.
    TlsListener:
      description: TLS-encrypted (HTTP or TCP stream) listener resource.
      type: object
      properties:
        defaultHandler:
          $ref: '#/components/schemas/TlsHandler_in_TlsListener_defaultHandler'
        sniHandlers:
          description: |-
            Settings for handling requests with Server Name Indication (SNI)
            matching one of `serverNames` values.
          type: array
          items:
            $ref: '#/components/schemas/SniMatch'
    UpdateBackendGroupMetadata:
      type: object
      properties:
        backendGroupId:
          description: ID of the backend group that is being updated.
          type: string
    UpdateBackendGroupRequest:
      type: object
      allOf:
      - type: object
        properties:
          updateMask:
            $ref: '#/components/schemas/FieldMask'
            description: Field mask that specifies which attributes of the backend
              group should be updated.
          name:
            description: |-
              New name for the backend group.
              The name must be unique within the folder.

              Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
            type: string
          description:
            description: |-
              New description of the backend group.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Backend group labels as `key:value` pairs.
              For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

              Existing set of labels is completely replaced by the provided set, so if you just want
              to add or remove a label:
              1. Get the current set of labels with a [get](/docs/application-load-balancer/api-ref/BackendGroup/get) request.
              2. Add or remove a label in this set.
              3. Send the new set in this field.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
      - title: backend
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpBackendGroup'
            description: New list of HTTP backends that the backend group will consist
              of.
          grpc:
            $ref: '#/components/schemas/GrpcBackendGroup'
            description: New list of gRPC backends that the backend group will consist
              of.
          stream:
            $ref: '#/components/schemas/StreamBackendGroup'
            description: New list of stream (TCP) backends that the backend group
              will consist of.
    UpdateBackendMetadata:
      type: object
      properties:
        backendGroupId:
          description: ID of the backend group that the backend is being updated it.
          type: string
        backendName:
          description: Name of the backend that is being updated.
          type: string
    UpdateBackendRequest:
      type: object
      allOf:
      - type: object
        properties:
          updateMask:
            $ref: '#/components/schemas/FieldMask'
            description: Field mask that specifies which attributes of the backend
              should be updated.
      - title: backend
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpBackend'
            description: New settings for the HTTP backend.
          grpc:
            $ref: '#/components/schemas/GrpcBackend'
            description: New settings for the gRPC backend.
          stream:
            $ref: '#/components/schemas/StreamBackend'
            description: New settings for the stream (TCP) backend.
    UpdateHttpRouterMetadata:
      type: object
      properties:
        httpRouterId:
          description: ID of the HTTP router that is being updated.
          type: string
    UpdateHttpRouterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateHttpRouterRequest_updateMask'
        name:
          description: |-
            New name for the HTTP router.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            New description of the HTTP router.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            HTTP router labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            Existing set of labels is completely replaced by the provided set, so if you just want
            to add or remove a label:
            1. Get the current set of labels with a [get](/docs/application-load-balancer/api-ref/HttpRouter/get) request.
            2. Add or remove a label in this set.
            3. Send the new set in this field.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        virtualHosts:
          description: |-
            New virtual hosts that combine routes inside the router.
            For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#virtual-host).

            Only one virtual host with no authority (default match) can be specified.

            Existing list of virtual hosts is completely replaced by the specified list, so if you just want to add or remove
            a virtual host, make a [create](/docs/application-load-balancer/api-ref/VirtualHost/create) request or a [delete](/docs/application-load-balancer/api-ref/VirtualHost/delete) request.
          type: array
          items:
            $ref: '#/components/schemas/VirtualHost'
    UpdateListenerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that the listener is being
            updated in.
          type: string
        listenerName:
          description: Name of the listener that is being updated.
          type: string
    UpdateListenerRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateListenerRequest_updateMask'
        listenerSpec:
          $ref: '#/components/schemas/ListenerSpec_in_UpdateListenerRequest_listenerSpec'
    UpdateLoadBalancerMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that is being updated.
          type: string
    UpdateLoadBalancerRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateLoadBalancerRequest_updateMask'
        name:
          description: |-
            New name for the application load balancer.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            New description of the application load balancer.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            New application load balancer labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            Existing set of labels is completely replaced by the provided set, so if you just want
            to add or remove a label:
            1. Get the current set of labels with a [get](/docs/application-load-balancer/api-ref/LoadBalancer/get) request.
            2. Add or remove a label in this set.
            3. Send the new set in this field.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        listenerSpecs:
          description: |-
            New listeners for the application load balancer.

            For details about the concept,
            see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#listener).

            Existing list of listeners is completely replaced by the specified list, so if you just want to add, update,
            or remove a listener, make a [addListener](/docs/application-load-balancer/api-ref/LoadBalancer/addListener) request,
            a [updateListener](/docs/application-load-balancer/api-ref/LoadBalancer/updateListener) request, or a [removeListener](/docs/application-load-balancer/api-ref/LoadBalancer/removeListener) request.
          type: array
          items:
            $ref: '#/components/schemas/ListenerSpec'
        allocationPolicy:
          $ref: '#/components/schemas/AllocationPolicy_in_UpdateLoadBalancerRequest_allocationPolicy'
        securityGroupIds:
          description: |-
            ID's of new security groups attributed to the application load balancer.

            For details about the concept,
            see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#security-groups).

            Existing list of security groups is completely replaced by the specified list,
            so if you just want to add or remove an allocation policy:
            1. Get the current set of security groups with a [get](/docs/application-load-balancer/api-ref/LoadBalancer/get) request.
            2. Add or remove a group in this set.
            3. Send the new set in this field.
          type: array
          items:
            type: string
    UpdateRouteMetadata:
      type: object
      properties:
        httpRouterId:
          description: ID of the HTTP router that the route is being updated in.
          type: string
        virtualHostName:
          description: Name of the virtual host that the route is being updated in.
          type: string
        routeName:
          description: Name of the route that is being updated.
          type: string
    UpdateRouteRequest:
      type: object
      allOf:
      - type: object
        properties:
          routeName:
            description: |-
              Required.
              Name of the route to update.

              To get the route name, make a [get](/docs/application-load-balancer/api-ref/VirtualHost/get) request.
            type: string
          updateMask:
            $ref: '#/components/schemas/FieldMask'
            description: Field mask that specifies which attributes of the route should
              be updated.
      - title: route
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpRoute'
            description: New settings of the HTTP route.
          grpc:
            $ref: '#/components/schemas/GrpcRoute'
            description: New settings of the gRPC route.
    UpdateSniMatchMetadata:
      type: object
      properties:
        loadBalancerId:
          description: ID of the application load balancer that the SNI handler is
            being updated in.
          type: string
        listenerName:
          description: Name of the listener that the SNI handler is being updated
            in.
          type: string
        sniMatchName:
          description: Name of the SNI handler that is being updated.
          type: string
    UpdateSniMatchRequest:
      type: object
      properties:
        listenerName:
          description: |-
            Required.
            Name of the listener to update the SNI handler in.
          type: string
        name:
          description: |-
            Required.
            Name of the SNI handler to update.
          type: string
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateSniMatchRequest_updateMask'
        serverNames:
          description: |-
            Required.
            New server names that are matched by the SNI handler.

            Existing set of server names is completely replaced by the provided set, so if you just want
            to add or remove a server name:
            1. Get the current set of server names with a [get](/docs/application-load-balancer/api-ref/LoadBalancer/get) request.
            2. Add or remove a server name in this set.
            3. Send the new set in this field.

            Must contain at least one element.
          type: array
          items:
            type: string
        handler:
          $ref: '#/components/schemas/TlsHandler_in_UpdateSniMatchRequest_handler'
    UpdateTargetGroupMetadata:
      type: object
      properties:
        targetGroupId:
          description: ID of the target group that is being updated.
          type: string
    UpdateTargetGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateTargetGroupRequest_updateMask'
        name:
          description: |-
            New name for the target group.
            The name must be unique within the folder.

            Value must match the regular expression `` ([a-z]([-a-z0-9]{0,61}[a-z0-9])?)? ``.
          type: string
        description:
          description: |-
            New description of the target group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Target group labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            Existing set of labels is completely replaced by the provided set, so if you just want
            to add or remove a label:
            1. Get the current set of labels with a [get](/docs/application-load-balancer/api-ref/TargetGroup/get) request.
            2. Add or remove a label in this set.
            3. Send the new set in this field.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        targets:
          description: |-
            New list of targets in the target group.

            Existing list of targets is completely replaced by the specified list, so if you just want to add or remove
            a target, make a [addTargets](/docs/application-load-balancer/api-ref/TargetGroup/addTargets) request or a [removeTargets](/docs/application-load-balancer/api-ref/TargetGroup/removeTargets) request.
          type: array
          items:
            $ref: '#/components/schemas/Target'
    UpdateVirtualHostMetadata:
      type: object
      properties:
        httpRouterId:
          description: ID of the HTTP router that the virtual host is being updated
            in.
          type: string
        virtualHostName:
          description: Name of the virtual host that is being updated.
          type: string
    UpdateVirtualHostRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateVirtualHostRequest_updateMask'
        authority:
          description: |-
            New list of domains to attribute to the virtual host.

            The host is selected to process the request received by the load balancer
            if the domain specified in the HTTP/1.1 `Host` header or the HTTP/2 `:authority` pseudo-header matches a domain
            specified in the host.

            A wildcard asterisk character (`*`) matches 0 or more characters.

            Existing list of domains is completely replaced by the specified list.

            If not specified, all domains are attributed to the host, which is the same as specifying a `*` value.
            An HTTP router must not contain more than one virtual host to which all domains are attributed.
          type: array
          items:
            type: string
        routes:
          description: |-
            New list of routes of the virtual host.

            A route contains a set of conditions (predicates) that are used by the load balancer to select the route
            for the request and an action on the request.
            For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#routes).

            The order of routes matters: the first route whose predicate matches the request is selected.
            The most specific routes should be at the top of the list, so that they are not overridden.
            For example, if the first HTTP route is configured, via `match`, to match paths prefixed with just `/`,
            other routes are never matched.

            Existing list of routes is completely replaced by the specified list, so if you just want to remove a route,
            make a [removeRoute](/docs/application-load-balancer/api-ref/VirtualHost/removeRoute) request.
          type: array
          items:
            $ref: '#/components/schemas/Route'
        modifyRequestHeaders:
          description: |-
            New list of modifications that are made to the headers of incoming HTTP requests
            before they are forwarded to backends.

            Existing list of modifications is completely replaced by the specified list.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
        modifyResponseHeaders:
          description: |-
            New list of modifications that are made to the headers of HTTP responses received from backends
            before responses are forwarded to clients.

            Existing list of modifications is completely replaced by the specified list.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
    ValidationContext:
      description: A TLS validation context resource.
      type: object
      allOf:
      - title: trusted_ca
        type: object
        maxProperties: 1
        properties:
          trustedCaId:
            type: string
          trustedCaBytes:
            description: X.509 certificate contents in PEM format.
            type: string
    VirtualHost:
      description: |-
        A virtual host resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#virtual-host).
      type: object
      properties:
        name:
          description: |-
            Required.
            Name of the virtual host. The name is unique within the HTTP router.
          type: string
        authority:
          description: |-
            List of domains that are attributed to the virtual host.

            The host is selected to process the request received by the load balancer
            if the domain specified in the HTTP/1.1 `Host` header or the HTTP/2 `:authority` pseudo-header matches a domain
            specified in the host.

            A wildcard asterisk character (`*`) matches 0 or more characters.

            If not specified, all domains are attributed to the host, which is the same as specifying a `*` value.
            An HTTP router must not contain more than one virtual host to which all domains are attributed.
          type: array
          items:
            type: string
        routes:
          description: |-
            Routes of the virtual host.

            A route contains a set of conditions (predicates) that are used by the load balancer to select the route
            for the request and an action on the request.
            For details about the concept, see [documentation](/docs/application-load-balancer/concepts/http-router#routes).

            The order of routes matters: the first route whose predicate matches the request is selected.
            The most specific routes should be at the top of the list, so that they are not overridden.
            For example, if the first HTTP route is configured, via `match`, to match paths prefixed with just `/`,
            other routes are never matched.
          type: array
          items:
            $ref: '#/components/schemas/Route'
        modifyRequestHeaders:
          description: Deprecated, use route_options.modify_request_headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
        modifyResponseHeaders:
          description: Deprecated, use route_options.modify_response_headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
        routeOptions:
          $ref: '#/components/schemas/RouteOptions_in_VirtualHost_routeOptions'
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ListenerSpec_in_AddListenerRequest_listenerSpec:
      description: |-
        Required.
        Listener to add to the application load balancer.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the listener. The name is unique within the application load balancer.

              Value must match the regular expression `` [a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          endpointSpecs:
            description: |-
              Required.
              Endpoints of the listener.

              Endpoints are defined by their IP addresses and ports.

              Must contain at least one element.
            type: array
            items:
              $ref: '#/components/schemas/EndpointSpec'
      - title: listener
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpListener'
            description: Unencrypted HTTP listener settings.
          tls:
            $ref: '#/components/schemas/TlsListener'
            description: |-
              TLS-encrypted HTTP or TCP stream listener settings.

              All handlers within a listener (`defaultHandler` and `sniHandlers`) must be of one
              type, `HttpHandler` or `StreamHandler`. Mixing HTTP and TCP stream traffic in a TLS-encrypted listener is not
              supported.
          stream:
            $ref: '#/components/schemas/StreamListener'
            description: Unencrypted stream (TCP) listener settings.
    TlsHandler_in_AddSniMatchRequest_handler:
      description: |-
        Required.
        Settings for handling requests with Server Name Indication (SNI) matching one of [serverNames](/docs/application-load-balancer/api-ref/LoadBalancer/addSniMatch#body_params) values.

        A TLS-encrypted (HTTP or TCP stream) handler resource.
      type: object
      allOf:
      - type: object
        properties:
          certificateIds:
            description: |-
              Required.
              ID's of the TLS server certificates from [Certificate Manager](/docs/certificate-manager/).

              RSA and ECDSA certificates are supported, and only the first certificate of each type is used.

              Must contain at least one element.
            type: array
            items:
              type: string
      - title: handler
        type: object
        maxProperties: 1
        properties:
          httpHandler:
            $ref: '#/components/schemas/HttpHandler'
            description: HTTP handler.
          streamHandler:
            $ref: '#/components/schemas/StreamHandler'
            description: Stream (TCP) handler.
    ValidationContext_in_BackendTls_validationContext:
      description: |-
        Validation context for TLS connections.

        A TLS validation context resource.
      type: object
      allOf:
      - title: trusted_ca
        type: object
        maxProperties: 1
        properties:
          trustedCaId:
            type: string
          trustedCaBytes:
            description: X.509 certificate contents in PEM format.
            type: string
    AllocationPolicy_in_CreateLoadBalancerRequest_allocationPolicy:
      description: |-
        Locality settings of the application load balancer.

        For details about the concept,
        see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#lb-location).

        A locality settings (allocation policy) resource.
      type: object
      properties:
        locations:
          description: |-
            Required.
            Availability zones and subnets that the application load balancer resides.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/Location'
    Payload_in_DirectResponseAction_body:
      description: |-
        Response body.

        A health check payload resource.
      type: object
      allOf:
      - title: payload
        type: object
        maxProperties: 1
        properties:
          text:
            description: |-
              Payload text.

              The string length in characters must be greater than 0.
            type: string
    StringMatch_in_GrpcRouteMatch_fqmn:
      description: |-
        Match settings for gRPC service method called in the request.

        A match string must be a fully qualified method name, e.g. `foo.bar.v1.BazService/Get`, or a prefix of such.

        If not specified, the route matches all methods.

        A string matcher resource.
      type: object
      allOf:
      - title: match
        type: object
        maxProperties: 1
        properties:
          exactMatch:
            description: Exact match string.
            type: string
          prefixMatch:
            description: Prefix match string.
            type: string
    GrpcStatusResponseActionStatus_in_GrpcStatusResponseAction_status:
      description: |-
        gRPC [status code](https://grpc.github.io/grpc/core/md_doc_statuscodes.html) to use in responses.

        gRPC status code supported for use in responses.

         - OK: `OK` (0) status code.
         - INVALID_ARGUMENT: `INVALID_ARGUMENT` (3) status code.
         - NOT_FOUND: `NOT_FOUND` (5) status code.
         - PERMISSION_DENIED: `PERMISSION_DENIED` (7) status code.
         - UNAUTHENTICATED: `UNAUTHENTICATED` (16) status code.
         - UNIMPLEMENTED: `UNIMPLEMENTED` (12) status code.
         - INTERNAL: `INTERNAL` (13) status code.
         - UNAVAILABLE: `UNAVAILABLE` (14) status code.
      type: string
      enum:
      - OK
      - INVALID_ARGUMENT
      - NOT_FOUND
      - PERMISSION_DENIED
      - UNAUTHENTICATED
      - UNIMPLEMENTED
      - INTERNAL
      - UNAVAILABLE
      default: OK
    Payload_in_HealthCheckStreamHealthCheck_send:
      description: |-
        Message sent to targets during TCP data transfer.

        If not specified, no data is sent to the target.

        A health check payload resource.
      type: object
      allOf:
      - title: payload
        type: object
        maxProperties: 1
        properties:
          text:
            description: |-
              Payload text.

              The string length in characters must be greater than 0.
            type: string
    Payload_in_HealthCheckStreamHealthCheck_receive:
      description: |-
        Data that must be contained in the messages received from targets for a successful health check.

        If not specified, no messages are expected from targets, and those that are received are not checked.

        A health check payload resource.
      type: object
      allOf:
      - title: payload
        type: object
        maxProperties: 1
        properties:
          text:
            description: |-
              Payload text.

              The string length in characters must be greater than 0.
            type: string
    HttpHandler_in_HttpListener_handler:
      description: |-
        Settings for handling HTTP requests.

        Only one of `handler` and `redirects` can be specified.

        An HTTP handler resource.
      type: object
      allOf:
      - type: object
        properties:
          httpRouterId:
            description: |-
              ID of the HTTP router processing requests. For details about the concept, see
              [documentation](/docs/application-load-balancer/concepts/http-router).

              To get the list of all available HTTP routers, make a [list](/docs/application-load-balancer/api-ref/HttpRouter/list) request.
            type: string
      - title: protocol_settings
        type: object
        maxProperties: 1
        properties:
          http2Options:
            $ref: '#/components/schemas/Http2Options'
            description: |-
              HTTP/2 settings.

              If specified, incoming HTTP/2 requests are supported by the listener.
          allowHttp10:
            description: Enables support for incoming HTTP/1.0 and HTTP/1.1 requests
              and disables it for HTTP/2 requests.
            type: boolean
            format: boolean
    Redirects_in_HttpListener_redirects:
      description: |-
        Redirects settings.

        Only one of `redirects` and `handler` can be specified.

        A listener redirects resource.
      type: object
      properties:
        httpToHttps:
          description: |-
            Redirects all unencrypted HTTP requests to the same URI with scheme changed to `https`.

            The setting has the same effect as a single, catch-all `HttpRoute`
            with `replaceScheme` set to `https`.
          type: boolean
          format: boolean
    StringMatch_in_HttpRouteMatch_path:
      description: |-
        Match settings for the path specified in the request.

        If not specified, the route matches all paths.

        A string matcher resource.
      type: object
      allOf:
      - title: match
        type: object
        maxProperties: 1
        properties:
          exactMatch:
            description: Exact match string.
            type: string
          prefixMatch:
            description: Prefix match string.
            type: string
    RouteOptions_in_HttpRouter_routeOptions:
      type: object
      properties:
        modifyRequestHeaders:
          description: Apply the following modifications to the request headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
        modifyResponseHeaders:
          description: Apply the following modifications to the response headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
    LoadBalancerStatus_in_LoadBalancer_status:
      description: |-
        Status of the application load balancer.

         - CREATING: The application load balancer is being created.
         - STARTING: The application load balancer is being started.
         - ACTIVE: The application load balancer is active and sends traffic to the targets.
         - STOPPING: The application load balancer is being stopped.
         - STOPPED: The application load balancer is stopped and doesn't send traffic to the targets.
         - DELETING: The application load balancer is being deleted.
      type: string
      enum:
      - CREATING
      - STARTING
      - ACTIVE
      - STOPPING
      - STOPPED
      - DELETING
    AllocationPolicy_in_LoadBalancer_allocationPolicy:
      description: |-
        Locality settings of the application load balancer.

        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#lb-location).

        A locality settings (allocation policy) resource.
      type: object
      properties:
        locations:
          description: |-
            Required.
            Availability zones and subnets that the application load balancer resides.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/Location'
    LoadBalancingMode_in_LoadBalancingConfig_mode:
      description: |-
        Load balancing mode for the backend.

        For details about load balancing modes, see
        [documentation](/docs/application-load-balancer/concepts/backend-group#balancing-mode).

        A load balancing mode resource.
        For details about the concept, see
        [documentation](/docs/application-load-balancer/concepts/backend-group#balancing-mode).

         - ROUND_ROBIN: Round robin load balancing mode.

        All endpoints of the backend take their turns to receive requests attributed to the backend.
         - RANDOM: Random load balancing mode. Default value.

        For a request attributed to the backend, an endpoint that receives it is picked at random.
         - LEAST_REQUEST: Least request load balancing mode.

        To pick an endpoint that receives a request attributed to the backend, the power of two choices algorithm is used;
        that is, two endpoints are picked at random, and the request is sent to the one which has the fewest active
        requests.
         - MAGLEV_HASH: Maglev hashing load balancing mode.

        Each endpoint is hashed, and a hash table with 65537 rows is filled accordingly, so that every endpoint occupies
        the same amount of rows. An attribute of each request is also hashed by the same function (if session affinity is
        enabled for the backend group, the attribute to hash is specified in session affinity configuration). The row
        with the same number as the resulting value is looked up in the table to determine the endpoint that receives
        the request.

        If the backend group with session affinity enabled contains more than one backend with positive weight, endpoints
        for backends with `MAGLEV_HASH` load balancing mode are picked at `RANDOM` instead.
      type: string
      enum:
      - ROUND_ROBIN
      - RANDOM
      - LEAST_REQUEST
      - MAGLEV_HASH
      default: ROUND_ROBIN
    ValidationContext_in_SecureTransportSettings_validationContext:
      description: |-
        Validation context for backend TLS connections.

        A TLS validation context resource.
      type: object
      allOf:
      - title: trusted_ca
        type: object
        maxProperties: 1
        properties:
          trustedCaId:
            type: string
          trustedCaBytes:
            description: X.509 certificate contents in PEM format.
            type: string
    TlsHandler_in_SniMatch_handler:
      description: |-
        Required.
        Settings for handling requests with Server Name Indication (SNI) matching one of `serverNames` values.

        A TLS-encrypted (HTTP or TCP stream) handler resource.
      type: object
      allOf:
      - type: object
        properties:
          certificateIds:
            description: |-
              Required.
              ID's of the TLS server certificates from [Certificate Manager](/docs/certificate-manager/).

              RSA and ECDSA certificates are supported, and only the first certificate of each type is used.

              Must contain at least one element.
            type: array
            items:
              type: string
      - title: handler
        type: object
        maxProperties: 1
        properties:
          httpHandler:
            $ref: '#/components/schemas/HttpHandler'
            description: HTTP handler.
          streamHandler:
            $ref: '#/components/schemas/StreamHandler'
            description: Stream (TCP) handler.
    StreamHandler_in_StreamListener_handler:
      description: |-
        Required.
        Settings for handling stream (TCP) requests.

        A stream (TCP) handler resource.
      type: object
      properties:
        backendGroupId:
          description: |-
            Required.
            ID of the backend group processing requests. For details about the concept, see
            [documentation](/docs/application-load-balancer/concepts/backend-group).

            The backend group type, specified via [BackendGroup.backend], must be `stream`.

            To get the list of all available backend groups, make a [list](/docs/application-load-balancer/api-ref/BackendGroup/list) request.
          type: string
    TargetStateHealthcheckStatus_in_TargetState_status:
      description: |-
        Health of the target, i.e. its statuses in all availability zones.

        Health of the target.
      type: object
      properties:
        zoneStatuses:
          description: Statuses of the target in its availability zones.
          type: array
          items:
            $ref: '#/components/schemas/TargetStateZoneHealthcheckStatus'
    Target_in_TargetState_target:
      description: |-
        Required.
        Target.

        A target resource.
        For details about the concept, see [documentation](/docs/application-load-balancer/concepts/target-group).
      type: object
      allOf:
      - type: object
        properties:
          subnetId:
            description: ID of the subnet that the target is connected to.
            type: string
          privateIpv4Address:
            description: |-
              If set, will not require `subnet_id` to validate the target.
              Instead, the address should belong to one of the following ranges:
              10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
              Only one of `subnet_id` or `private_ipv4_address` should be set.
            type: boolean
            format: boolean
      - title: address_type
        type: object
        maxProperties: 1
        properties:
          ipAddress:
            description: IP address of the target.
            type: string
    TargetStateStatus_in_TargetStateZoneHealthcheckStatus_status:
      description: |-
        Status of the target in the availability zone.

        Supported target statuses.

         - HEALTHY: All of the health checks specified in `healthchecks` or `healthchecks` are passed
        (the number depends on the `healthyThreshold` setting) and the target is ready to receive traffic.
         - PARTIALLY_HEALTHY: Some of the health checks specified in `healthchecks` or `healthchecks` failed
        (the number depends on the `unhealthyThreshold` setting).
        The target is ready to receive traffic from the load balancer nodes which, based on their health checks,
        consider the target healthy.
         - UNHEALTHY: All of the health checks specified in `healthchecks` or `healthchecks` failed
        (the number depends on the `unhealthyThreshold` setting) and the target is not receiving traffic.
         - DRAINING: Target is being deleted and the application load balancer is no longer sending traffic to this target.
      type: string
      enum:
      - HEALTHY
      - PARTIALLY_HEALTHY
      - UNHEALTHY
      - DRAINING
      - TIMEOUT
    TlsHandler_in_TlsListener_defaultHandler:
      description: |-
        Required.
        Settings for handling requests by default, with Server Name
        Indication (SNI) not matching any of the `sniHandlers`.

        A TLS-encrypted (HTTP or TCP stream) handler resource.
      type: object
      allOf:
      - type: object
        properties:
          certificateIds:
            description: |-
              Required.
              ID's of the TLS server certificates from [Certificate Manager](/docs/certificate-manager/).

              RSA and ECDSA certificates are supported, and only the first certificate of each type is used.

              Must contain at least one element.
            type: array
            items:
              type: string
      - title: handler
        type: object
        maxProperties: 1
        properties:
          httpHandler:
            $ref: '#/components/schemas/HttpHandler'
            description: HTTP handler.
          streamHandler:
            $ref: '#/components/schemas/StreamHandler'
            description: Stream (TCP) handler.
    FieldMask_in_UpdateHttpRouterRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the HTTP router should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateListenerRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the listener should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ListenerSpec_in_UpdateListenerRequest_listenerSpec:
      description: |-
        Required.
        New attributes of the listener.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Required.
              Name of the listener. The name is unique within the application load balancer.

              Value must match the regular expression `` [a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          endpointSpecs:
            description: |-
              Required.
              Endpoints of the listener.

              Endpoints are defined by their IP addresses and ports.

              Must contain at least one element.
            type: array
            items:
              $ref: '#/components/schemas/EndpointSpec'
      - title: listener
        type: object
        maxProperties: 1
        properties:
          http:
            $ref: '#/components/schemas/HttpListener'
            description: Unencrypted HTTP listener settings.
          tls:
            $ref: '#/components/schemas/TlsListener'
            description: |-
              TLS-encrypted HTTP or TCP stream listener settings.

              All handlers within a listener (`defaultHandler` and `sniHandlers`) must be of one
              type, `HttpHandler` or `StreamHandler`. Mixing HTTP and TCP stream traffic in a TLS-encrypted listener is not
              supported.
          stream:
            $ref: '#/components/schemas/StreamListener'
            description: Unencrypted stream (TCP) listener settings.
    FieldMask_in_UpdateLoadBalancerRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the application load balancer should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    AllocationPolicy_in_UpdateLoadBalancerRequest_allocationPolicy:
      description: |-
        New locality settings of the application load balancer.

        For details about the concept,
        see [documentation](/docs/application-load-balancer/concepts/application-load-balancer#lb-location).

        Existing locality settings are completely replaced by the specified settings,
        so if you just want to add or remove an allocation policy:
        1. Get the current settings with a [get](/docs/application-load-balancer/api-ref/LoadBalancer/get) request.
        2. Add or remove a policy in this set.
        3. Send the new set in this field.

        A locality settings (allocation policy) resource.
      type: object
      properties:
        locations:
          description: |-
            Required.
            Availability zones and subnets that the application load balancer resides.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/Location'
    FieldMask_in_UpdateSniMatchRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the SNI handler should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    TlsHandler_in_UpdateSniMatchRequest_handler:
      description: |-
        Required.
        New settings for handling requests with Server Name Indication (SNI) matching one of [serverNames](/docs/application-load-balancer/api-ref/LoadBalancer/updateSniMatch#body_params) values.

        A TLS-encrypted (HTTP or TCP stream) handler resource.
      type: object
      allOf:
      - type: object
        properties:
          certificateIds:
            description: |-
              Required.
              ID's of the TLS server certificates from [Certificate Manager](/docs/certificate-manager/).

              RSA and ECDSA certificates are supported, and only the first certificate of each type is used.

              Must contain at least one element.
            type: array
            items:
              type: string
      - title: handler
        type: object
        maxProperties: 1
        properties:
          httpHandler:
            $ref: '#/components/schemas/HttpHandler'
            description: HTTP handler.
          streamHandler:
            $ref: '#/components/schemas/StreamHandler'
            description: Stream (TCP) handler.
    FieldMask_in_UpdateTargetGroupRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the target group should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateVirtualHostRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the virtual host should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    RouteOptions_in_VirtualHost_routeOptions:
      type: object
      properties:
        modifyRequestHeaders:
          description: Apply the following modifications to the request headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
        modifyResponseHeaders:
          description: Apply the following modifications to the response headers.
          type: array
          items:
            $ref: '#/components/schemas/HeaderModification'
tags:
- name: BackendGroup
  description: A set of methods for managing backend groups.
- name: HttpRouter
  description: A set of methods for managing HTTP routers.
- name: LoadBalancer
  description: A set of methods for managing application load balancers.
- name: TargetGroup
  description: A set of methods for managing target groups.
- name: VirtualHost
  description: A set of methods for managing virtual hosts of HTTP routers.
