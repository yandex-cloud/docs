openapi: 3.0.0
info:
  title: Compute Cloud Instance Groups API
  description: This API reference is organized by resource. All actions are performed
    by sending HTTP requests to resource URLs. For more information about the API
    architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://compute.api.cloud.yandex.net
paths:
  /compute/v1/instanceGroups/{instanceGroupId}:
    get:
      tags:
      - InstanceGroup
      summary: Returns the specified InstanceGroup resource.
      description: To get the list of available InstanceGroup resources, make a [list](/docs/compute/api-ref/InstanceGroup/list)
        request.
      operationId: InstanceGroupGet
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the InstanceGroup resource to return.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: view
        in: query
        description: Defines which information about the Instance template should
          be returned in the server response.
        schema:
          $ref: '#/components/schemas/InstanceGroupView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceGroup'
      x-y-navtitle: get
    delete:
      tags:
      - InstanceGroup
      summary: Deletes the specified instance group.
      operationId: InstanceGroupDelete
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the instance group to delete.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteInstanceGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - InstanceGroup
      summary: |-
        Updates the specified instance group.
        This method starts an operation that can be cancelled by another operation.
      operationId: InstanceGroupUpdate
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the instance group to update.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateInstanceGroupMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
  /compute/v1/instanceGroups:
    get:
      tags:
      - InstanceGroup
      summary: Retrieves the list of InstanceGroup resources in the specified folder.
      operationId: InstanceGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list instance groups in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/InstanceGroup/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/InstanceGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/InstanceGroup/list#query_params) to the [nextPageToken](/docs/compute/api-ref/InstanceGroup/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the [InstanceGroup.name](/docs/compute/api-ref/InstanceGroup#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      - name: view
        in: query
        description: Defines which information about the Instance template should
          be returned in the server response.
        schema:
          $ref: '#/components/schemas/InstanceGroupView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - InstanceGroup
      summary: |-
        Creates an instance group in the specified folder.
        This method starts an operation that can be cancelled by another operation.
      operationId: InstanceGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateInstanceGroupMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
  /compute/v1/instanceGroups:yaml:
    post:
      tags:
      - InstanceGroup
      summary: |-
        Creates an instance group in the specified folder from a YAML file.
        This method starts an operation that can be cancelled by another operation.
      operationId: InstanceGroupCreateFromYaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceGroupFromYamlRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: createFromYaml
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateInstanceGroupMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
  /compute/v1/instanceGroups/{instanceGroupId}:yaml:
    patch:
      tags:
      - InstanceGroup
      summary: |-
        Updates the specified instance group from a YAML file.
        This method starts an operation that can be cancelled by another operation.
      operationId: InstanceGroupUpdateFromYaml
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the instance group to update.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceGroupFromYamlRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateFromYaml
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateInstanceGroupMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
  /compute/v1/instanceGroups/{instanceGroupId}:stop:
    post:
      tags:
      - InstanceGroup
      summary: Stops the specified instance group.
      operationId: InstanceGroupStop
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the instance group to stop.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopInstanceGroupMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
  /compute/v1/instanceGroups/{instanceGroupId}:start:
    post:
      tags:
      - InstanceGroup
      summary: Starts the specified instance group.
      operationId: InstanceGroupStart
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the instance group to start.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartInstanceGroupMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
  /compute/v1/instanceGroups/{instanceGroupId}/instances:
    get:
      tags:
      - InstanceGroup
      summary: Lists instances for the specified instance group.
      operationId: InstanceGroupListInstances
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the InstanceGroup resource to list instances for.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/InstanceGroup/listInstances#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/InstanceGroup/listInstances#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/InstanceGroup/listInstances#query_params) to the [nextPageToken](/docs/compute/api-ref/InstanceGroup/listInstances#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the `name` field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceGroupInstancesResponse'
      x-y-navtitle: listInstances
  /compute/v1/instanceGroups/{instanceGroupId}/operations:
    get:
      tags:
      - InstanceGroup
      summary: Lists operations for the specified instance group.
      operationId: InstanceGroupListOperations
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the InstanceGroup resource to list operations for.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is more than [pageSize](/docs/compute/api-ref/InstanceGroup/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/InstanceGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/InstanceGroup/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/InstanceGroup/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the [InstanceGroup.name](/docs/compute/api-ref/InstanceGroup#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceGroupOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/instanceGroups/{instanceGroupId}:logs:
    get:
      tags:
      - InstanceGroup
      summary: Lists logs for the specified instance group.
      operationId: InstanceGroupListLogRecords
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          Required.
          ID of the InstanceGroup resource to list logs for.
          To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/InstanceGroup/listLogRecords#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/InstanceGroup/listLogRecords#responses)
          that can be used to get the next page of results in subsequent list requests.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/InstanceGroup/listLogRecords#query_params) to the [nextPageToken](/docs/compute/api-ref/InstanceGroup/listLogRecords#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the [InstanceGroup.name](/docs/compute/api-ref/InstanceGroup#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceGroupLogRecordsResponse'
      x-y-navtitle: listLogRecords
  /compute/v1/instanceGroups/{resourceId}:listAccessBindings:
    get:
      tags:
      - InstanceGroup
      summary: Lists existing access bindings for the specified instance group.
      operationId: InstanceGroupListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource to list access bindings for.

          To get the resource ID, use a corresponding List request.
          For example, use the [list](/docs/resource-manager/api-ref/Cloud/list) request to get the Cloud resource ID.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [page_size],
          the service returns a nextPageToken
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. Set [page_token]
          to the nextPageToken
          returned by a previous list request to get the next page of results.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /compute/v1/instanceGroups/{resourceId}:setAccessBindings:
    post:
      tags:
      - InstanceGroup
      summary: Sets access bindings for the specified instance group.
      operationId: InstanceGroupSetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being set.

          To get the resource ID, use a corresponding List request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /compute/v1/instanceGroups/{resourceId}:updateAccessBindings:
    post:
      tags:
      - InstanceGroup
      summary: Updates access bindings for the specified instance group.
      operationId: InstanceGroupUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Required.
          ID of the resource for which access bindings are being updated.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
  /compute/v1/instanceGroups/{instanceGroupId}:resumeProcesses:
    post:
      tags:
      - InstanceGroup
      summary: |-
        Resumes all processes regarding management of the specified instance group,
        i.e. scaling, checking instances' health, auto-healing and updating them.
      operationId: InstanceGroupResumeProcesses
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          ID of the instance group to resume processes in.

          The instance group must have a `PAUSED` status ([InstanceGroup.status](/docs/compute/api-ref/InstanceGroup#representation)).

          To get the instance group ID, make a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResumeInstanceGroupProcessesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: resumeProcesses
      x-y-operation-metadata:
        $ref: '#/components/schemas/ResumeInstanceGroupProcessMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
  /compute/v1/instanceGroups/{instanceGroupId}:pauseProcesses:
    post:
      tags:
      - InstanceGroup
      summary: |-
        Pauses all processes regarding management of the specified instance group,
        i.e. scaling, checking instances' health, auto-healing and updating them. Running instances are not stopped.
      operationId: InstanceGroupPauseProcesses
      parameters:
      - name: instanceGroupId
        in: path
        description: |-
          ID of the instance group to pause processes in.

          The instance group must have an `ACTIVE` status ([InstanceGroup.status](/docs/compute/api-ref/InstanceGroup#representation)).

          To get the instance group ID, make a [list](/docs/compute/api-ref/InstanceGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PauseInstanceGroupProcessesRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: pauseProcesses
      x-y-operation-metadata:
        $ref: '#/components/schemas/PauseInstanceGroupProcessMetadata'
      x-y-operation-response: '[InstanceGroup](/docs/compute/api-ref/InstanceGroup#representation)'
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    AllocationPolicy:
      type: object
      properties:
        zones:
          description: |-
            Required.
            List of availability zones.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/AllocationPolicyZone'
    AllocationPolicyZone:
      type: object
      properties:
        zoneId:
          description: |-
            Required.
            ID of the availability zone where the instance resides.
          type: string
    ApplicationLoadBalancerSpec:
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/ApplicationTargetGroupSpec_in_ApplicationLoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    ApplicationLoadBalancerState:
      type: object
      properties:
        targetGroupId:
          description: ID of the Application Load Balancer target group attributed
            to the instance group.
          type: string
        statusMessage:
          description: Status message of the target group.
          type: string
    ApplicationTargetGroupSpec:
      type: object
      properties:
        name:
          description: Name of the target group.
          type: string
        description:
          description: Description of the target group.
          type: string
        labels:
          description: Resource labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
    AttachedDiskSpec:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AttachedDiskSpecMode_in_AttachedDiskSpec_mode'
        deviceName:
          description: |-
            Serial number that is reflected in the /dev/disk/by-id/ tree
            of a Linux operating system running within the instance.

            This value can be used to reference the device for mounting, resizing, and so on, from within the instance.

            Value must match the regular expression `` |[a-z][-_0-9a-z]{0,19} ``.
          type: string
        diskSpec:
          $ref: '#/components/schemas/AttachedDiskSpecDiskSpec_in_AttachedDiskSpec_diskSpec'
        diskId:
          description: |-
            Set to use an existing disk. To set use variables.

            The maximum string length in characters is 128.
            Value must match the regular expression `` [-a-zA-Z0-9._{}]* ``.
          type: string
    AttachedDiskSpecDiskSpec:
      type: object
      allOf:
      - type: object
        properties:
          description:
            description: |-
              Description of the disk.

              The maximum string length in characters is 256.
            type: string
          typeId:
            description: |-
              Required.
              ID of the disk type.
            type: string
          size:
            description: |-
              Size of the disk, specified in bytes.

              Acceptable values are 4194304 to 28587302322176, inclusive.
            type: string
            format: int64
          preserveAfterInstanceDelete:
            description: |-
              When set to true, disk will not be deleted even after managed instance is deleted.
              It will be a user's responsibility to delete such disks.
            type: boolean
            format: boolean
      - title: source_oneof
        type: object
        maxProperties: 1
        properties:
          imageId:
            description: |-
              ID of the image that will be used for disk creation.

              The maximum string length in characters is 50.
            type: string
          snapshotId:
            description: |-
              ID of the snapshot that will be used for disk creation.

              The maximum string length in characters is 50.
            type: string
    AttachedDiskSpecMode:
      description: |2-
         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    CreateInstanceGroupFromYamlRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create an instance group in.
            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.
          type: string
        instanceGroupYaml:
          description: |-
            Required.
            [create](/docs/compute/api-ref/InstanceGroup/create) request in YAML format.

            The maximum string length in characters is 1048576.
          type: string
    CreateInstanceGroupMetadata:
      type: object
      properties:
        instanceGroupId:
          description: |-
            ID of the instance group that is being created.

            The maximum string length in characters is 50.
          type: string
    CreateInstanceGroupRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create an instance group in.
            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.
          type: string
        name:
          description: |-
            Name of the instance group.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the instance group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        instanceTemplate:
          $ref: '#/components/schemas/InstanceTemplate_in_CreateInstanceGroupRequest_instanceTemplate'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_CreateInstanceGroupRequest_scalePolicy'
        deployPolicy:
          $ref: '#/components/schemas/DeployPolicy_in_CreateInstanceGroupRequest_deployPolicy'
        allocationPolicy:
          $ref: '#/components/schemas/AllocationPolicy_in_CreateInstanceGroupRequest_allocationPolicy'
        loadBalancerSpec:
          $ref: '#/components/schemas/LoadBalancerSpec_in_CreateInstanceGroupRequest_loadBalancerSpec'
        healthChecksSpec:
          $ref: '#/components/schemas/HealthChecksSpec_in_CreateInstanceGroupRequest_healthChecksSpec'
        serviceAccountId:
          description: |-
            ID of the service account. The service account will be used for all API calls
            made by the Instance Groups component on behalf of the user (for example, creating instances, adding them to load balancer target group, etc.). For more information, see [Service accounts](/docs/iam/concepts/users/service-accounts).
            To get the service account ID, use a [list](/docs/iam/api-ref/ServiceAccount/list) request.
          type: string
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
        deletionProtection:
          description: |-
            Flag prohibiting deletion of the instance group.

            Allowed values:</br>- `false`: The instance group can be deleted.</br>- `true`: The instance group cannot be deleted.

            The default is `false`.
          type: boolean
          format: boolean
        applicationLoadBalancerSpec:
          $ref: '#/components/schemas/ApplicationLoadBalancerSpec_in_CreateInstanceGroupRequest_applicationLoadBalancerSpec'
    DeleteInstanceGroupMetadata:
      type: object
      properties:
        instanceGroupId:
          description: |-
            ID of the instance group that is being deleted.
            To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.
          type: string
    DeleteInstancesMetadata:
      type: object
      properties:
        instanceGroupId:
          description: ID of the instance group that the instances are being deleted
            from.
          type: string
    DeployPolicy:
      type: object
      properties:
        maxUnavailable:
          description: |-
            The maximum number of running instances that can be taken offline (i.e., stopped or deleted) at the same time
            during the update process.
            If `maxExpansion` is not specified or set to zero, `maxUnavailable` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxDeleting:
          description: |-
            The maximum number of instances that can be deleted at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxCreating:
          description: |-
            The maximum number of instances that can be created at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxExpansion:
          description: |-
            The maximum number of instances that can be temporarily allocated above the group's target size
            during the update process.
            If `maxUnavailable` is not specified or set to zero, `maxExpansion` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        startupDuration:
          description: |-
            Instance startup duration.
            Instance will be considered up and running (and start receiving traffic) only after startup_duration
            has elapsed and all health checks are passed.
            See `ManagedInstanceStatus` for more information.

            Acceptable values are 0 seconds to 3600 seconds, inclusive.
          type: string
        strategy:
          $ref: '#/components/schemas/DeployPolicyStrategy_in_DeployPolicy_strategy'
    DeployPolicyStrategy:
      description: |2-
         - PROACTIVE: Instance Groups can forcefully stop a running instance. This is the default.
         - OPPORTUNISTIC: Instance Groups does not stop a running instance.
        Instead, it will wait until the instance stops itself or becomes unhealthy.
      type: string
      enum:
      - PROACTIVE
      - OPPORTUNISTIC
    DnsRecord:
      type: object
      properties:
        fqdn:
          description: |-
            Required.
            Name of the A/AAAA record as specified when creating the instance.
            Note that if `fqdn' has no trailing '.', it is specified relative to the zone (@see dns_zone_id).
          type: string
        dnsZoneId:
          description: DNS zone id (optional, if not set, some private zone is used).
          type: string
        ttl:
          description: |-
            DNS record ttl (optional, if 0, a reasonable default is used).

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
        ptr:
          description: When true, indicates there is a corresponding auto-created
            PTR DNS record.
          type: boolean
          format: boolean
    DnsRecordSpec:
      type: object
      properties:
        fqdn:
          description: |-
            Required.
            FQDN (required)
          type: string
        dnsZoneId:
          description: DNS zone id (optional, if not set, private zone used)
          type: string
        ttl:
          description: |-
            DNS record ttl, values in 0-86400 (optional)

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
        ptr:
          description: When set to true, also create PTR DNS record (optional)
          type: boolean
          format: boolean
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    HealthCheckSpec:
      type: object
      allOf:
      - type: object
        properties:
          interval:
            description: |-
              The interval between health checks. The default is 2 seconds.

              Acceptable values are 1 seconds to 300 seconds, inclusive.
            type: string
          timeout:
            description: |-
              Timeout for the managed instance to return a response for the health check. The default is 1 second.

              Acceptable values are 1 seconds to 60 seconds, inclusive.
            type: string
          unhealthyThreshold:
            description: |-
              The number of failed health checks for the managed instance to be considered unhealthy. The default (0) is 2.

              Value must be one of 0, 2, 3, 4, 5, 6, 7, 8, 9 or 10.
            type: string
            format: int64
          healthyThreshold:
            description: |-
              The number of successful health checks required in order for the managed instance to be considered healthy. The default (0) is 2.

              Value must be one of 0, 2, 3, 4, 5, 6, 7, 8, 9 or 10.
            type: string
            format: int64
      - title: health_check_options
        type: object
        maxProperties: 1
        properties:
          tcpOptions:
            $ref: '#/components/schemas/HealthCheckSpecTcpOptions'
            description: Configuration options for a TCP health check.
          httpOptions:
            $ref: '#/components/schemas/HealthCheckSpecHttpOptions'
            description: Configuration options for an HTTP health check.
    HealthCheckSpecHttpOptions:
      type: object
      properties:
        port:
          description: |-
            Port to use for HTTP health checks.

            Acceptable values are 1 to 65535, inclusive.
          type: string
          format: int64
        path:
          description: URL path to set for health checking requests.
          type: string
    HealthCheckSpecTcpOptions:
      type: object
      properties:
        port:
          description: |-
            Port to use for TCP health checks.

            Acceptable values are 1 to 65535, inclusive.
          type: string
          format: int64
    HealthChecksSpec:
      type: object
      properties:
        healthCheckSpecs:
          description: |-
            Required.
            Health checking specification. For more information, see [Health check](/docs/load-balancer/concepts/health-check).

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckSpec'
        maxCheckingHealthDuration:
          description: |-
            Timeout for waiting for the VM to become healthy. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    InstanceGroup:
      type: object
      properties:
        id:
          description: ID of the instance group.
          type: string
        folderId:
          description: ID of the folder that the instance group belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the instance group.
            The name is unique within the folder.
          type: string
        description:
          description: Description of the instance group.
          type: string
        labels:
          description: Resource labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        instanceTemplate:
          $ref: '#/components/schemas/InstanceTemplate_in_InstanceGroup_instanceTemplate'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_InstanceGroup_scalePolicy'
        deployPolicy:
          $ref: '#/components/schemas/DeployPolicy_in_InstanceGroup_deployPolicy'
        allocationPolicy:
          $ref: '#/components/schemas/AllocationPolicy_in_InstanceGroup_allocationPolicy'
        loadBalancerState:
          $ref: '#/components/schemas/LoadBalancerState_in_InstanceGroup_loadBalancerState'
        managedInstancesState:
          $ref: '#/components/schemas/ManagedInstancesState_in_InstanceGroup_managedInstancesState'
        loadBalancerSpec:
          $ref: '#/components/schemas/LoadBalancerSpec_in_InstanceGroup_loadBalancerSpec'
        healthChecksSpec:
          $ref: '#/components/schemas/HealthChecksSpec_in_InstanceGroup_healthChecksSpec'
        serviceAccountId:
          description: |-
            ID of the service account. The service account will be used for all API calls
            made by the Instance Groups component on behalf of the user (for example, creating instances, adding them to load balancer target group, etc.). For more information, see [Service accounts](/docs/iam/concepts/users/service-accounts).
            To get the service account ID, use a [list](/docs/iam/api-ref/ServiceAccount/list) request.
          type: string
        status:
          $ref: '#/components/schemas/InstanceGroupStatus_in_InstanceGroup_status'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
        deletionProtection:
          description: |-
            Flag prohibiting deletion of the instance group.

            Allowed values:</br>- `false`: The instance group can be deleted.</br>- `true`: The instance group cannot be deleted.

            The default is `false`.
          type: boolean
          format: boolean
        applicationLoadBalancerSpec:
          $ref: '#/components/schemas/ApplicationLoadBalancerSpec_in_InstanceGroup_applicationLoadBalancerSpec'
        applicationLoadBalancerState:
          $ref: '#/components/schemas/ApplicationLoadBalancerState_in_InstanceGroup_applicationLoadBalancerState'
    InstanceGroupStatus:
      description: |2-
         - STARTING: Instance group is being started and will become active soon.
         - ACTIVE: Instance group is active.
        In this state the group manages its instances and monitors their health,
        creating, deleting, stopping, updating and starting instances as needed.

        To stop the instance group, call [stop](/docs/compute/api-ref/InstanceGroup/stop).
        To pause the processes in the instance group, i.e. scaling, checking instances' health,
        auto-healing and updating them, without stopping the instances,
        call [pauseProcesses](/docs/compute/api-ref/InstanceGroup/pauseProcesses).
         - STOPPING: Instance group is being stopped.
        Group's instances stop receiving traffic from the load balancer (if any) and are then stopped.
         - STOPPED: Instance group is stopped.
        In this state the group cannot be updated and does not react to any changes made to its instances.
        To start the instance group, call [start](/docs/compute/api-ref/InstanceGroup/start).
         - DELETING: Instance group is being deleted.
         - PAUSED: Instance group is paused.
        In this state all the processes regarding the group management, i.e. scaling, checking instances' health,
        auto-healing and updating them, are paused. The instances that were running prior to pausing the group, however,
        may still be running.

        To resume the processes in the instance group,
        call [resumeProcesses](/docs/compute/api-ref/InstanceGroup/resumeProcesses).
        The group status will change to `ACTIVE`.
      type: string
      enum:
      - STARTING
      - ACTIVE
      - STOPPING
      - STOPPED
      - DELETING
      - PAUSED
    InstanceGroupView:
      description: |2-
         - BASIC: Doesn't include the metadata of the instance template in the server response.
         - FULL: Returns the metadata of the instance template in the server response.
      type: string
      enum:
      - BASIC
      - FULL
      default: BASIC
    InstanceTemplate:
      type: object
      properties:
        description:
          description: |-
            Description of the instance template.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 128.
          type: object
          additionalProperties:
            type: string
        platformId:
          description: |-
            Required.
            ID of the hardware platform configuration for the instance.
            Platforms allows you to create various types of instances: with a large amount of memory,
            with a large number of cores, with a burstable performance.
            For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_InstanceTemplate_resourcesSpec'
        metadata:
          description: |-
            The metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.

            Metadata values may contain one of the supported placeholders:
              {instance_group.id}
              {instance.short_id}
              {instance.index}
              {instance.index_in_zone}
              {instance.zone_id}
            InstanceGroup and Instance labels may be copied to metadata following way:
              {instance_group.labels.some_label_key}
              {instance.labels.another_label_key}
            These placeholders will be substituted for each created instance anywhere in the value text.
            In the rare case the value requires to contain this placeholder explicitly,
            it must be escaped with double brackets, in example {instance.index}.

            For example, you may use the metadata in order to provide your public SSH key to the instance.
            For more information, see [Metadata](/docs/compute/concepts/vm-metadata).

            No more than 128 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 262144.
          type: object
          additionalProperties:
            type: string
        bootDiskSpec:
          $ref: '#/components/schemas/AttachedDiskSpec_in_InstanceTemplate_bootDiskSpec'
        secondaryDiskSpecs:
          description: |-
            Array of secondary disks that will be attached to the instance.

            The maximum number of elements is 3.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDiskSpec'
        networkInterfaceSpecs:
          description: |-
            Required.
            Array of network interfaces that will be attached to the instance.

            Must contain exactly 1 element.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceSpec'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_InstanceTemplate_schedulingPolicy'
        serviceAccountId:
          description: Service account ID for the instance.
          type: string
        networkSettings:
          $ref: '#/components/schemas/NetworkSettings_in_InstanceTemplate_networkSettings'
        name:
          description: |-
            Name of the instance.
            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, default is used: {instance_group.id}-{instance.short_id}
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        hostname:
          description: |-
            Host name for the instance.
            This field is used to generate the [Instance.fqdn](/docs/compute/api-ref/Instance#representation) value.
            The host name must be unique within the network and region.
            If not specified, the host name will be equal to [Instance.id](/docs/compute/api-ref/Instance#representation) of the instance
            and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.

            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, `name` value will be used
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy_in_InstanceTemplate_placementPolicy'
    IpVersion:
      description: |2-
         - IPV4: IPv4 address, for example 192.168.0.0.
         - IPV6: IPv6 address, not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: List of access bindings for the specified resource.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [ListAccessBindingsRequest.page_size], use
            the nextPageToken as the value
            for the [ListAccessBindingsRequest.page_token] query parameter
            in the next list request. Each subsequent list request will have its own
            nextPageToken to continue paging through the results.
          type: string
    ListInstanceGroupInstancesResponse:
      type: object
      properties:
        instances:
          description: Lists instances for the specified instance group.
          type: array
          items:
            $ref: '#/components/schemas/ManagedInstance'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is more than [pageSize](/docs/compute/api-ref/InstanceGroup/listInstances#query_params), use
            [nextPageToken](/docs/compute/api-ref/InstanceGroup/listInstances#responses) as the value
            for the [pageToken](/docs/compute/api-ref/InstanceGroup/listInstances#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/InstanceGroup/listInstances#responses) to continue paging through the results.
          type: string
    ListInstanceGroupLogRecordsResponse:
      type: object
      properties:
        logRecords:
          description: Lists logs for the specified instance group.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/InstanceGroup/listLogRecords#query_params), use
            [nextPageToken](/docs/compute/api-ref/InstanceGroup/listLogRecords#responses) as the value
            for the [pageToken](/docs/compute/api-ref/InstanceGroup/listLogRecords#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/InstanceGroup/listLogRecords#responses) to continue paging through the results.
          type: string
    ListInstanceGroupOperationsResponse:
      type: object
      properties:
        operations:
          description: Lists operations for the specified instance group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is more than [pageSize](/docs/compute/api-ref/InstanceGroup/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/InstanceGroup/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/InstanceGroup/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/InstanceGroup/listOperations#responses) to continue paging through the results.
          type: string
    ListInstanceGroupsResponse:
      type: object
      properties:
        instanceGroups:
          description: Lists instance groups for the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/InstanceGroup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/InstanceGroup/list#query_params), use
            [nextPageToken](/docs/compute/api-ref/InstanceGroup/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/InstanceGroup/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/InstanceGroup/list#responses) to continue paging through the results.
          type: string
    LoadBalancerSpec:
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/TargetGroupSpec_in_LoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    LoadBalancerState:
      type: object
      properties:
        targetGroupId:
          description: ID of the Network Load Balancer target group attributed to
            the instance group.
          type: string
        statusMessage:
          description: Status message of the target group.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Log timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        message:
          description: The log message.
          type: string
    ManagedInstance:
      description: A ManagedInstance resource. For more information, see [Instance
        Groups Concepts](/docs/compute/concepts/instance-groups/).
      type: object
      properties:
        id:
          description: ID of the managed instance.
          type: string
        status:
          $ref: '#/components/schemas/ManagedInstanceStatus_in_ManagedInstance_status'
        instanceId:
          description: ID of the instance.
          type: string
        fqdn:
          description: Fully Qualified Domain Name.
          type: string
        name:
          description: The name of the managed instance.
          type: string
        statusMessage:
          description: Status message for the managed instance.
          type: string
        zoneId:
          description: ID of the availability zone where the instance resides.
          type: string
        networkInterfaces:
          description: Array of network interfaces that are attached to the managed
            instance.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
        statusChangedAt:
          description: |-
            The timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format when the status of the managed instance was last changed.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
    ManagedInstanceStatus:
      description: |2-
         - CREATING_INSTANCE: Instance is being created.
         - UPDATING_INSTANCE: Instance is being updated.
         - DELETING_INSTANCE: Instance is being deleted.
         - STARTING_INSTANCE: Instance is being started.
         - STOPPING_INSTANCE: Instance is being stopped.
         - AWAITING_STARTUP_DURATION: Instance has been created successfully, but startup duration has not elapsed yet.
         - CHECKING_HEALTH: Instance has been created successfully and startup duration has elapsed, but health checks have not passed yet and the managed instance is not ready to receive traffic.
         - OPENING_TRAFFIC: Instance Groups is initiating health checks and routing traffic to the instances.
         - AWAITING_WARMUP_DURATION: Instance is now receiving traffic, but warmup duration has not elapsed yet.
         - CLOSING_TRAFFIC: Instance Groups has initiated the process of stopping routing traffic to the instances.
         - RUNNING_ACTUAL: Instance is running normally and its attributes match the current InstanceTemplate.
         - RUNNING_OUTDATED: Instance is running normally, but its attributes do not match the current InstanceTemplate.
        It will be updated, recreated or deleted shortly.
         - STOPPED: Instance was stopped.
         - DELETED: Instance was deleted.
         - PREPARING_RESOURCES: Instance Groups is preparing dependent resources.
      type: string
      enum:
      - CREATING_INSTANCE
      - UPDATING_INSTANCE
      - DELETING_INSTANCE
      - STARTING_INSTANCE
      - STOPPING_INSTANCE
      - AWAITING_STARTUP_DURATION
      - CHECKING_HEALTH
      - OPENING_TRAFFIC
      - AWAITING_WARMUP_DURATION
      - CLOSING_TRAFFIC
      - RUNNING_ACTUAL
      - RUNNING_OUTDATED
      - STOPPED
      - DELETED
      - PREPARING_RESOURCES
    ManagedInstancesState:
      type: object
      properties:
        targetSize:
          description: Target number of instances for this instance group.
          type: string
          format: int64
        runningActualCount:
          description: The number of running instances that match the current instance
            template. For more information, see `RUNNING_ACTUAL`.
          type: string
          format: int64
        runningOutdatedCount:
          description: The number of running instances that does not match the current
            instance template. For more information, see `RUNNING_OUTDATED`.
          type: string
          format: int64
        processingCount:
          description: The number of instances in flight (for example, updating, starting,
            deleting). For more information, see `ManagedInstanceStatus`.
          type: string
          format: int64
    NetworkInterface:
      type: object
      properties:
        index:
          description: |-
            The index of the network interface, generated by the server, 0,1,2... etc.
            Currently only one network interface is supported per instance.
          type: string
        macAddress:
          description: MAC address that is assigned to the network interface.
          type: string
        subnetId:
          description: ID of the subnet.
          type: string
        primaryV4Address:
          $ref: '#/components/schemas/PrimaryAddress_in_NetworkInterface_primaryV4Address'
        primaryV6Address:
          $ref: '#/components/schemas/PrimaryAddress_in_NetworkInterface_primaryV6Address'
    NetworkInterfaceSpec:
      type: object
      properties:
        networkId:
          description: ID of the network.
          type: string
        subnetIds:
          description: IDs of the subnets.
          type: array
          items:
            type: string
        primaryV4AddressSpec:
          $ref: '#/components/schemas/PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV4AddressSpec'
        primaryV6AddressSpec:
          $ref: '#/components/schemas/PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV6AddressSpec'
        securityGroupIds:
          description: IDs of security groups.
          type: array
          items:
            type: string
    NetworkSettings:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkSettingsType_in_NetworkSettings_type'
    NetworkSettingsType:
      type: string
      enum:
      - STANDARD
      - SOFTWARE_ACCELERATED
      - HARDWARE_ACCELERATED
    OneToOneNat:
      type: object
      properties:
        address:
          description: An IPv4 external network address that is assigned to the managed
            instance for this network interface.
          type: string
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNat_ipVersion'
        dnsRecords:
          description: External DNS configuration.
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    OneToOneNatSpec:
      type: object
      properties:
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNatSpec_ipVersion'
        address:
          description: Manual set static public IP. To set use variables. (optional)
          type: string
        dnsRecordSpecs:
          description: External DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    PauseInstanceGroupProcessMetadata:
      type: object
      properties:
        instanceGroupId:
          description: ID of the instance group that processes are being paused in.
          type: string
    PauseInstanceGroupProcessesRequest:
      type: object
      properties: {}
    PlacementPolicy:
      type: object
      properties:
        placementGroupId:
          description: Identifier of placement group
          type: string
        hostAffinityRules:
          description: List of affinity rules. Scheduler will attempt to allocate
            instances according to order of rules.
          type: array
          items:
            $ref: '#/components/schemas/PlacementPolicyHostAffinityRule'
    PlacementPolicyHostAffinityRule:
      description: Affinity definition
      type: object
      properties:
        key:
          description: Affinity label or one of reserved values - 'yc.hostId', 'yc.hostGroupId'
          type: string
        op:
          $ref: '#/components/schemas/PlacementPolicyHostAffinityRuleOperator_in_PlacementPolicyHostAffinityRule_op'
        values:
          description: Affinity value or host ID or host group ID
          type: array
          items:
            type: string
    PlacementPolicyHostAffinityRuleOperator:
      type: string
      enum:
      - IN
      - NOT_IN
    PrimaryAddress:
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the managed instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNat:
          $ref: '#/components/schemas/OneToOneNat_in_PrimaryAddress_oneToOneNat'
        dnsRecords:
          description: Internal DNS configuration.
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    PrimaryAddressSpec:
      type: object
      properties:
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
        address:
          description: Optional. Manual set static internal IP. To set use variables.
          type: string
    ResourcesSpec:
      type: object
      properties:
        memory:
          description: |-
            The amount of memory available to the instance, specified in bytes.

            The maximum value is 824633720832.
          type: string
          format: int64
        cores:
          description: |-
            The number of cores available to the instance.

            Value must be one of 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76 or 80.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the ability to burst performance above that baseline level.
            This field sets baseline performance for each core.

            Value must be one of 0, 5, 20, 50 or 100.
          type: string
          format: int64
        gpus:
          description: |-
            The number of GPUs available to the instance.

            Value must be one of 0, 1, 2 or 4.
          type: string
          format: int64
    ResumeInstanceGroupProcessMetadata:
      type: object
      properties:
        instanceGroupId:
          description: ID of the instance group that processes are being resumed in.
          type: string
    ResumeInstanceGroupProcessesRequest:
      type: object
      properties: {}
    ScalePolicy:
      type: object
      allOf:
      - type: object
        properties:
          testAutoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: Test spec for [automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: '[Manual scaling policy](/docs/compute/concepts/instance-groups/scale#fixed-policy)
              of the instance group.'
          autoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: '[Automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.'
    ScalePolicyAutoScale:
      type: object
      properties:
        minZoneSize:
          description: |-
            Lower limit for instance count in each zone.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxSize:
          description: |-
            Upper limit for total instance count (across all zones).
            0 means maximum limit = 100.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        measurementDuration:
          description: |-
            Time in seconds allotted for averaging metrics.
            1 minute by default.

            Acceptable values are 60 seconds to 600 seconds, inclusive.
          type: string
        warmupDuration:
          description: |-
            The warmup time of the instance in seconds. During this time,
            traffic is sent to the instance, but instance metrics are not collected.

            The maximum value is 600 seconds.
          type: string
        stabilizationDuration:
          description: |-
            Minimum amount of time in seconds allotted for monitoring before
            Instance Groups can reduce the number of instances in the group.
            During this time, the group size doesn't decrease, even if the new metric values
            indicate that it should.

            Acceptable values are 60 seconds to 1800 seconds, inclusive.
          type: string
        initialSize:
          description: |-
            Target group size.

            The minimum value is 1.
          type: string
          format: int64
        cpuUtilizationRule:
          $ref: '#/components/schemas/ScalePolicyCpuUtilizationRule_in_ScalePolicyAutoScale_cpuUtilizationRule'
        customRules:
          description: |-
            Defines an autoscaling rule based on a [custom metric](/docs/monitoring/operations/metric/add) from Monitoring.

            If more than one rule is specified, e.g. CPU utilization (`cpuUtilizationRule`) and one or more Monitoring
            metrics, the size of the instance group will be equal to the maximum of sizes calculated according to each metric.

            The maximum number of elements is 3.
          type: array
          items:
            $ref: '#/components/schemas/ScalePolicyCustomRule'
        autoScaleType:
          $ref: '#/components/schemas/ScalePolicyAutoScaleAutoScaleType_in_ScalePolicyAutoScale_autoScaleType'
    ScalePolicyAutoScaleAutoScaleType:
      description: |2-
         - ZONAL: Scale each zone independently. This is the default.
         - REGIONAL: Scale group as a whole.
      type: string
      enum:
      - ZONAL
      - REGIONAL
    ScalePolicyCpuUtilizationRule:
      type: object
      properties:
        utilizationTarget:
          description: |-
            Target CPU utilization level. Instance Groups maintains this level for each availability zone.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
    ScalePolicyCustomRule:
      type: object
      properties:
        ruleType:
          $ref: '#/components/schemas/ScalePolicyCustomRuleRuleType_in_ScalePolicyCustomRule_ruleType'
        metricType:
          $ref: '#/components/schemas/ScalePolicyCustomRuleMetricType_in_ScalePolicyCustomRule_metricType'
        metricName:
          description: |-
            Required.
            Name of custom metric in Monitoring that should be used for scaling.

            Value must match the regular expression `` [a-zA-Z0-9./@_][ 0-9a-zA-Z./@_,:;()\[\]<>-]{0,198} ``.
          type: string
        labels:
          description: |-
            Labels of custom metric in Monitoring that should be used for scaling.

            Each key must match the regular expression `` ^[a-zA-Z][0-9a-zA-Z_]{0,31}$ ``.
            Each value must match the regular expression `` [a-zA-Z0-9./@_][ 0-9a-zA-Z./@_,:;()\[\]<>-]{0,198} ``.
          type: object
          additionalProperties:
            type: string
        target:
          description: |-
            Target value for the custom metric. Instance Groups maintains this level for each availability zone.

            Value must be greater than 0.
          type: number
          format: double
        folderId:
          description: |-
            Folder id of custom metric in Monitoring that should be used for scaling.

            The maximum string length in characters is 50.
          type: string
        service:
          description: |-
            Service of custom metric in Monitoring that should be used for scaling.

            The maximum string length in characters is 200.
          type: string
    ScalePolicyCustomRuleMetricType:
      description: |2-
         - GAUGE: This type is used for metrics that show the metric value at a certain point in time,
        such as requests per second to the server on an instance.

        Instance Groups calculates the average metric value for the period
        specified in the `measurementDuration` field.
         - COUNTER: This type is used for metrics that monotonically increase over time,
        such as the total number of requests to the server on an instance.

        Instance Groups calculates the average value increase for the period
        specified in the `measurementDuration` field.
      type: string
      enum:
      - GAUGE
      - COUNTER
    ScalePolicyCustomRuleRuleType:
      description: |2-
         - UTILIZATION: This type means that the metric applies to one instance.
        First, Instance Groups calculates the average metric value for each instance,
        then averages the values for instances in one availability zone or in whole group depends on autoscaling type.
        This type of metric must have the `instance_id` label.
         - WORKLOAD: This type means that the metric applies to instances in one availability zone or to whole group depends on autoscaling type.
        This type of metric must have the `zone_id` label if ZONAL autoscaling type is chosen.
      type: string
      enum:
      - UTILIZATION
      - WORKLOAD
    ScalePolicyFixedScale:
      type: object
      properties:
        size:
          description: |-
            Number of instances in the instance group.

            Acceptable values are 1 to 100, inclusive.
          type: string
          format: int64
    SchedulingPolicy:
      type: object
      properties:
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being set.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).

            The maximum number of elements is 1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    StartInstanceGroupMetadata:
      type: object
      properties:
        instanceGroupId:
          description: ID of the InstanceGroup resource that is being started.
          type: string
    StopInstanceGroupMetadata:
      type: object
      properties:
        instanceGroupId:
          description: ID of the InstanceGroup resource that is being stopped.
          type: string
    StopInstancesMetadata:
      type: object
      properties:
        instanceGroupId:
          description: ID of the instance group that the instances are being stopped
            from.
          type: string
    Subject:
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    TargetGroupSpec:
      type: object
      properties:
        name:
          description: |-
            Name of the target group.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the target group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: ID of the resource for which access bindings are being updated.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Required.
            Updates to access bindings.

            The number of elements must be in the range 1-1000.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateInstanceGroupFromYamlRequest:
      type: object
      properties:
        instanceGroupYaml:
          description: |-
            Required.
            [update](/docs/compute/api-ref/InstanceGroup/update) request in YAML format.

            The maximum string length in characters is 1048576.
          type: string
    UpdateInstanceGroupMetadata:
      type: object
      properties:
        instanceGroupId:
          description: |-
            ID of the InstanceGroup resource that is being updated.
            To get the instance group ID, use a [list](/docs/compute/api-ref/InstanceGroup/list) request.
          type: string
    UpdateInstanceGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateInstanceGroupRequest_updateMask'
        name:
          description: |-
            Name of the instance group.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the instance group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            The existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        instanceTemplate:
          $ref: '#/components/schemas/InstanceTemplate_in_UpdateInstanceGroupRequest_instanceTemplate'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_UpdateInstanceGroupRequest_scalePolicy'
        deployPolicy:
          $ref: '#/components/schemas/DeployPolicy_in_UpdateInstanceGroupRequest_deployPolicy'
        allocationPolicy:
          $ref: '#/components/schemas/AllocationPolicy_in_UpdateInstanceGroupRequest_allocationPolicy'
        healthChecksSpec:
          $ref: '#/components/schemas/HealthChecksSpec_in_UpdateInstanceGroupRequest_healthChecksSpec'
        serviceAccountId:
          description: |-
            ID of the service account. The service account will be used for all API calls
            made by the Instance Groups component on behalf of the user (for example, creating instances, adding them to load balancer target group, etc.). For more information, see [Service accounts](/docs/iam/concepts/users/service-accounts).
            To get the service account ID, use a [list](/docs/iam/api-ref/ServiceAccount/list) request.
          type: string
        loadBalancerSpec:
          $ref: '#/components/schemas/LoadBalancerSpec_in_UpdateInstanceGroupRequest_loadBalancerSpec'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
        deletionProtection:
          description: Flag that inhibits deletion of the instance group
          type: boolean
          format: boolean
        applicationLoadBalancerSpec:
          $ref: '#/components/schemas/ApplicationLoadBalancerSpec_in_UpdateInstanceGroupRequest_applicationLoadBalancerSpec'
    Variable:
      type: object
      properties:
        key:
          description: |-
            The string length in characters must be 1-128.
            Value must match the regular expression `` [a-zA-Z0-9._-]* ``.
          type: string
        value:
          description: The maximum string length in characters is 128.
          type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Required.
        Identity for which access binding is being created.
        It can represent an account with a unique ID or several accounts with a system identifier.
      type: object
      properties:
        id:
          description: |-
            Required.
            ID of the subject.

            It can contain one of the following values:
            * `allAuthenticatedUsers`: A special system identifier that represents anyone
               who is authenticated. It can be used only if the `type` is `system`.
            * `allUsers`: A special system identifier that represents anyone. No authentication is required.
               For example, you don't need to specify the IAM token in an API query.
            * `<cloud generated id>`: An identifier that represents a user account.
               It can be used only if the `type` is `userAccount`, `federatedUser` or `serviceAccount`.

            The maximum string length in characters is 50.
          type: string
        type:
          description: |-
            Required.
            Type of the subject.

            It can contain one of the following values:
            * `userAccount`: An account on Yandex or Yandex Connect, added to Yandex Cloud.
            * `serviceAccount`: A service account. This type represents the [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation) resource.
            * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
            * `system`: System group. This type represents several accounts with a common system identifier.

            For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).

            The maximum string length in characters is 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Required.
        The action that is being performed on an access binding.

         - ADD: Addition of an access binding.
         - REMOVE: Removal of an access binding.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Required.
        Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Required.
            ID of the [Role](/docs/iam/api-ref/Role#representation) that is assigned to the `subject`.

            The maximum string length in characters is 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    ApplicationTargetGroupSpec_in_ApplicationLoadBalancerSpec_targetGroupSpec:
      description: |-
        Required.
        Basic properties of the Application Load Balancer target group attributed to the instance group.
      type: object
      properties:
        name:
          description: Name of the target group.
          type: string
        description:
          description: Description of the target group.
          type: string
        labels:
          description: Resource labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
    AttachedDiskSpecMode_in_AttachedDiskSpec_mode:
      description: |-
        Required.
        Access mode to the Disk resource.

         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    AttachedDiskSpecDiskSpec_in_AttachedDiskSpec_diskSpec:
      description: |-
        Required.
        oneof disk_spec or disk_id
        Disk specification that is attached to the instance. For more information, see [Disks](/docs/compute/concepts/disk).
      type: object
      allOf:
      - type: object
        properties:
          description:
            description: |-
              Description of the disk.

              The maximum string length in characters is 256.
            type: string
          typeId:
            description: |-
              Required.
              ID of the disk type.
            type: string
          size:
            description: |-
              Size of the disk, specified in bytes.

              Acceptable values are 4194304 to 28587302322176, inclusive.
            type: string
            format: int64
          preserveAfterInstanceDelete:
            description: |-
              When set to true, disk will not be deleted even after managed instance is deleted.
              It will be a user's responsibility to delete such disks.
            type: boolean
            format: boolean
      - title: source_oneof
        type: object
        maxProperties: 1
        properties:
          imageId:
            description: |-
              ID of the image that will be used for disk creation.

              The maximum string length in characters is 50.
            type: string
          snapshotId:
            description: |-
              ID of the snapshot that will be used for disk creation.

              The maximum string length in characters is 50.
            type: string
    InstanceTemplate_in_CreateInstanceGroupRequest_instanceTemplate:
      description: |-
        Required.
        Instance template that the instance group belongs to.
      type: object
      properties:
        description:
          description: |-
            Description of the instance template.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 128.
          type: object
          additionalProperties:
            type: string
        platformId:
          description: |-
            Required.
            ID of the hardware platform configuration for the instance.
            Platforms allows you to create various types of instances: with a large amount of memory,
            with a large number of cores, with a burstable performance.
            For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_InstanceTemplate_resourcesSpec'
        metadata:
          description: |-
            The metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.

            Metadata values may contain one of the supported placeholders:
              {instance_group.id}
              {instance.short_id}
              {instance.index}
              {instance.index_in_zone}
              {instance.zone_id}
            InstanceGroup and Instance labels may be copied to metadata following way:
              {instance_group.labels.some_label_key}
              {instance.labels.another_label_key}
            These placeholders will be substituted for each created instance anywhere in the value text.
            In the rare case the value requires to contain this placeholder explicitly,
            it must be escaped with double brackets, in example {instance.index}.

            For example, you may use the metadata in order to provide your public SSH key to the instance.
            For more information, see [Metadata](/docs/compute/concepts/vm-metadata).

            No more than 128 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 262144.
          type: object
          additionalProperties:
            type: string
        bootDiskSpec:
          $ref: '#/components/schemas/AttachedDiskSpec_in_InstanceTemplate_bootDiskSpec'
        secondaryDiskSpecs:
          description: |-
            Array of secondary disks that will be attached to the instance.

            The maximum number of elements is 3.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDiskSpec'
        networkInterfaceSpecs:
          description: |-
            Required.
            Array of network interfaces that will be attached to the instance.

            Must contain exactly 1 element.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceSpec'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_InstanceTemplate_schedulingPolicy'
        serviceAccountId:
          description: Service account ID for the instance.
          type: string
        networkSettings:
          $ref: '#/components/schemas/NetworkSettings_in_InstanceTemplate_networkSettings'
        name:
          description: |-
            Name of the instance.
            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, default is used: {instance_group.id}-{instance.short_id}
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        hostname:
          description: |-
            Host name for the instance.
            This field is used to generate the [Instance.fqdn](/docs/compute/api-ref/Instance#representation) value.
            The host name must be unique within the network and region.
            If not specified, the host name will be equal to [Instance.id](/docs/compute/api-ref/Instance#representation) of the instance
            and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.

            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, `name` value will be used
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy_in_InstanceTemplate_placementPolicy'
    ScalePolicy_in_CreateInstanceGroupRequest_scalePolicy:
      description: |-
        Required.
        [Scaling policy](/docs/compute/concepts/instance-groups/scale) of the instance group.
      type: object
      allOf:
      - type: object
        properties:
          testAutoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: Test spec for [automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: '[Manual scaling policy](/docs/compute/concepts/instance-groups/scale#fixed-policy)
              of the instance group.'
          autoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: '[Automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.'
    DeployPolicy_in_CreateInstanceGroupRequest_deployPolicy:
      description: |-
        Required.
        Deployment policy of the instance group.
      type: object
      properties:
        maxUnavailable:
          description: |-
            The maximum number of running instances that can be taken offline (i.e., stopped or deleted) at the same time
            during the update process.
            If `maxExpansion` is not specified or set to zero, `maxUnavailable` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxDeleting:
          description: |-
            The maximum number of instances that can be deleted at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxCreating:
          description: |-
            The maximum number of instances that can be created at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxExpansion:
          description: |-
            The maximum number of instances that can be temporarily allocated above the group's target size
            during the update process.
            If `maxUnavailable` is not specified or set to zero, `maxExpansion` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        startupDuration:
          description: |-
            Instance startup duration.
            Instance will be considered up and running (and start receiving traffic) only after startup_duration
            has elapsed and all health checks are passed.
            See `ManagedInstanceStatus` for more information.

            Acceptable values are 0 seconds to 3600 seconds, inclusive.
          type: string
        strategy:
          $ref: '#/components/schemas/DeployPolicyStrategy_in_DeployPolicy_strategy'
    AllocationPolicy_in_CreateInstanceGroupRequest_allocationPolicy:
      description: |-
        Required.
        Allocation policy of the instance group by zones and regions.
      type: object
      properties:
        zones:
          description: |-
            Required.
            List of availability zones.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/AllocationPolicyZone'
    LoadBalancerSpec_in_CreateInstanceGroupRequest_loadBalancerSpec:
      description: |-
        Settings for balancing load between instances via [Network Load Balancer](/docs/network-load-balancer/concepts)
        (OSI model layer 3).

        If specified, a Network Load Balancer target group containing all instances from the instance group will be created
        and attributed to the instance group.
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/TargetGroupSpec_in_LoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    HealthChecksSpec_in_CreateInstanceGroupRequest_healthChecksSpec:
      description: Health checking specification. For more information, see [Health
        check](/docs/load-balancer/concepts/health-check).
      type: object
      properties:
        healthCheckSpecs:
          description: |-
            Required.
            Health checking specification. For more information, see [Health check](/docs/load-balancer/concepts/health-check).

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckSpec'
        maxCheckingHealthDuration:
          description: |-
            Timeout for waiting for the VM to become healthy. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    ApplicationLoadBalancerSpec_in_CreateInstanceGroupRequest_applicationLoadBalancerSpec:
      description: |-
        Settings for balancing load between instances via [Application Load Balancer](/docs/application-load-balancer/concepts)
        (OSI model layer 7).

        If specified, an Application Load Balancer target group containing all instances from the instance group will be created
        and attributed to the instance group.
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/ApplicationTargetGroupSpec_in_ApplicationLoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    DeployPolicyStrategy_in_DeployPolicy_strategy:
      description: |-
        Affects the lifecycle of the instance during deployment.

         - PROACTIVE: Instance Groups can forcefully stop a running instance. This is the default.
         - OPPORTUNISTIC: Instance Groups does not stop a running instance.
        Instead, it will wait until the instance stops itself or becomes unhealthy.
      type: string
      enum:
      - PROACTIVE
      - OPPORTUNISTIC
    InstanceTemplate_in_InstanceGroup_instanceTemplate:
      description: |-
        Instance template for creating the instance group.
        For more information, see [Instance Templates](/docs/compute/concepts/instance-groups/instance-template).
      type: object
      properties:
        description:
          description: |-
            Description of the instance template.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 128.
          type: object
          additionalProperties:
            type: string
        platformId:
          description: |-
            Required.
            ID of the hardware platform configuration for the instance.
            Platforms allows you to create various types of instances: with a large amount of memory,
            with a large number of cores, with a burstable performance.
            For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_InstanceTemplate_resourcesSpec'
        metadata:
          description: |-
            The metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.

            Metadata values may contain one of the supported placeholders:
              {instance_group.id}
              {instance.short_id}
              {instance.index}
              {instance.index_in_zone}
              {instance.zone_id}
            InstanceGroup and Instance labels may be copied to metadata following way:
              {instance_group.labels.some_label_key}
              {instance.labels.another_label_key}
            These placeholders will be substituted for each created instance anywhere in the value text.
            In the rare case the value requires to contain this placeholder explicitly,
            it must be escaped with double brackets, in example {instance.index}.

            For example, you may use the metadata in order to provide your public SSH key to the instance.
            For more information, see [Metadata](/docs/compute/concepts/vm-metadata).

            No more than 128 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 262144.
          type: object
          additionalProperties:
            type: string
        bootDiskSpec:
          $ref: '#/components/schemas/AttachedDiskSpec_in_InstanceTemplate_bootDiskSpec'
        secondaryDiskSpecs:
          description: |-
            Array of secondary disks that will be attached to the instance.

            The maximum number of elements is 3.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDiskSpec'
        networkInterfaceSpecs:
          description: |-
            Required.
            Array of network interfaces that will be attached to the instance.

            Must contain exactly 1 element.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceSpec'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_InstanceTemplate_schedulingPolicy'
        serviceAccountId:
          description: Service account ID for the instance.
          type: string
        networkSettings:
          $ref: '#/components/schemas/NetworkSettings_in_InstanceTemplate_networkSettings'
        name:
          description: |-
            Name of the instance.
            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, default is used: {instance_group.id}-{instance.short_id}
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        hostname:
          description: |-
            Host name for the instance.
            This field is used to generate the [Instance.fqdn](/docs/compute/api-ref/Instance#representation) value.
            The host name must be unique within the network and region.
            If not specified, the host name will be equal to [Instance.id](/docs/compute/api-ref/Instance#representation) of the instance
            and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.

            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, `name` value will be used
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy_in_InstanceTemplate_placementPolicy'
    ScalePolicy_in_InstanceGroup_scalePolicy:
      description: '[Scaling policy](/docs/compute/concepts/instance-groups/scale)
        of the instance group.'
      type: object
      allOf:
      - type: object
        properties:
          testAutoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: Test spec for [automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: '[Manual scaling policy](/docs/compute/concepts/instance-groups/scale#fixed-policy)
              of the instance group.'
          autoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: '[Automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.'
    DeployPolicy_in_InstanceGroup_deployPolicy:
      description: Deployment policy of the instance group.
      type: object
      properties:
        maxUnavailable:
          description: |-
            The maximum number of running instances that can be taken offline (i.e., stopped or deleted) at the same time
            during the update process.
            If `maxExpansion` is not specified or set to zero, `maxUnavailable` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxDeleting:
          description: |-
            The maximum number of instances that can be deleted at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxCreating:
          description: |-
            The maximum number of instances that can be created at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxExpansion:
          description: |-
            The maximum number of instances that can be temporarily allocated above the group's target size
            during the update process.
            If `maxUnavailable` is not specified or set to zero, `maxExpansion` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        startupDuration:
          description: |-
            Instance startup duration.
            Instance will be considered up and running (and start receiving traffic) only after startup_duration
            has elapsed and all health checks are passed.
            See `ManagedInstanceStatus` for more information.

            Acceptable values are 0 seconds to 3600 seconds, inclusive.
          type: string
        strategy:
          $ref: '#/components/schemas/DeployPolicyStrategy_in_DeployPolicy_strategy'
    AllocationPolicy_in_InstanceGroup_allocationPolicy:
      description: Allocation policy of the instance group by zones and regions.
      type: object
      properties:
        zones:
          description: |-
            Required.
            List of availability zones.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/AllocationPolicyZone'
    LoadBalancerState_in_InstanceGroup_loadBalancerState:
      description: Status of the Network Load Balancer target group attributed to
        the instance group.
      type: object
      properties:
        targetGroupId:
          description: ID of the Network Load Balancer target group attributed to
            the instance group.
          type: string
        statusMessage:
          description: Status message of the target group.
          type: string
    ManagedInstancesState_in_InstanceGroup_managedInstancesState:
      description: States of instances for this instance group.
      type: object
      properties:
        targetSize:
          description: Target number of instances for this instance group.
          type: string
          format: int64
        runningActualCount:
          description: The number of running instances that match the current instance
            template. For more information, see `RUNNING_ACTUAL`.
          type: string
          format: int64
        runningOutdatedCount:
          description: The number of running instances that does not match the current
            instance template. For more information, see `RUNNING_OUTDATED`.
          type: string
          format: int64
        processingCount:
          description: The number of instances in flight (for example, updating, starting,
            deleting). For more information, see `ManagedInstanceStatus`.
          type: string
          format: int64
    LoadBalancerSpec_in_InstanceGroup_loadBalancerSpec:
      description: |-
        Settings for balancing load between instances via [Network Load Balancer](/docs/network-load-balancer/concepts)
        (OSI model layer 3).
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/TargetGroupSpec_in_LoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    HealthChecksSpec_in_InstanceGroup_healthChecksSpec:
      description: Health checking specification. For more information, see [Health
        check](/docs/network-load-balancer/concepts/health-check).
      type: object
      properties:
        healthCheckSpecs:
          description: |-
            Required.
            Health checking specification. For more information, see [Health check](/docs/load-balancer/concepts/health-check).

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckSpec'
        maxCheckingHealthDuration:
          description: |-
            Timeout for waiting for the VM to become healthy. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    InstanceGroupStatus_in_InstanceGroup_status:
      description: |-
        Status of the instance group.

         - STARTING: Instance group is being started and will become active soon.
         - ACTIVE: Instance group is active.
        In this state the group manages its instances and monitors their health,
        creating, deleting, stopping, updating and starting instances as needed.

        To stop the instance group, call [stop](/docs/compute/api-ref/InstanceGroup/stop).
        To pause the processes in the instance group, i.e. scaling, checking instances' health,
        auto-healing and updating them, without stopping the instances,
        call [pauseProcesses](/docs/compute/api-ref/InstanceGroup/pauseProcesses).
         - STOPPING: Instance group is being stopped.
        Group's instances stop receiving traffic from the load balancer (if any) and are then stopped.
         - STOPPED: Instance group is stopped.
        In this state the group cannot be updated and does not react to any changes made to its instances.
        To start the instance group, call [start](/docs/compute/api-ref/InstanceGroup/start).
         - DELETING: Instance group is being deleted.
         - PAUSED: Instance group is paused.
        In this state all the processes regarding the group management, i.e. scaling, checking instances' health,
        auto-healing and updating them, are paused. The instances that were running prior to pausing the group, however,
        may still be running.

        To resume the processes in the instance group,
        call [resumeProcesses](/docs/compute/api-ref/InstanceGroup/resumeProcesses).
        The group status will change to `ACTIVE`.
      type: string
      enum:
      - STARTING
      - ACTIVE
      - STOPPING
      - STOPPED
      - DELETING
      - PAUSED
    ApplicationLoadBalancerSpec_in_InstanceGroup_applicationLoadBalancerSpec:
      description: |-
        Settings for balancing load between instances via [Application Load Balancer](/docs/application-load-balancer/concepts)
        (OSI model layer 7).
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/ApplicationTargetGroupSpec_in_ApplicationLoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    ApplicationLoadBalancerState_in_InstanceGroup_applicationLoadBalancerState:
      description: |-
        Status of the Application Load Balancer target group attributed to the instance group.

        Returned if there is a working load balancer that the target group is connected to.
      type: object
      properties:
        targetGroupId:
          description: ID of the Application Load Balancer target group attributed
            to the instance group.
          type: string
        statusMessage:
          description: Status message of the target group.
          type: string
    ResourcesSpec_in_InstanceTemplate_resourcesSpec:
      description: |-
        Required.
        Computing resources of the instance such as the amount of memory and number of cores.
      type: object
      properties:
        memory:
          description: |-
            The amount of memory available to the instance, specified in bytes.

            The maximum value is 824633720832.
          type: string
          format: int64
        cores:
          description: |-
            The number of cores available to the instance.

            Value must be one of 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76 or 80.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the ability to burst performance above that baseline level.
            This field sets baseline performance for each core.

            Value must be one of 0, 5, 20, 50 or 100.
          type: string
          format: int64
        gpus:
          description: |-
            The number of GPUs available to the instance.

            Value must be one of 0, 1, 2 or 4.
          type: string
          format: int64
    AttachedDiskSpec_in_InstanceTemplate_bootDiskSpec:
      description: |-
        Required.
        Boot disk specification that will be attached to the instance.
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AttachedDiskSpecMode_in_AttachedDiskSpec_mode'
        deviceName:
          description: |-
            Serial number that is reflected in the /dev/disk/by-id/ tree
            of a Linux operating system running within the instance.

            This value can be used to reference the device for mounting, resizing, and so on, from within the instance.

            Value must match the regular expression `` |[a-z][-_0-9a-z]{0,19} ``.
          type: string
        diskSpec:
          $ref: '#/components/schemas/AttachedDiskSpecDiskSpec_in_AttachedDiskSpec_diskSpec'
        diskId:
          description: |-
            Set to use an existing disk. To set use variables.

            The maximum string length in characters is 128.
            Value must match the regular expression `` [-a-zA-Z0-9._{}]* ``.
          type: string
    SchedulingPolicy_in_InstanceTemplate_schedulingPolicy:
      description: Scheduling policy for the instance.
      type: object
      properties:
        preemptible:
          description: |-
            Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    NetworkSettings_in_InstanceTemplate_networkSettings:
      description: Network settings for the instance.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkSettingsType_in_NetworkSettings_type'
    PlacementPolicy_in_InstanceTemplate_placementPolicy:
      description: Placement Group
      type: object
      properties:
        placementGroupId:
          description: Identifier of placement group
          type: string
        hostAffinityRules:
          description: List of affinity rules. Scheduler will attempt to allocate
            instances according to order of rules.
          type: array
          items:
            $ref: '#/components/schemas/PlacementPolicyHostAffinityRule'
    TargetGroupSpec_in_LoadBalancerSpec_targetGroupSpec:
      description: Specification of the target group that the instance group will
        be added to. For more information, see [Target groups and resources](/docs/load-balancer/concepts/target-resources).
      type: object
      properties:
        name:
          description: |-
            Name of the target group.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the target group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    ManagedInstanceStatus_in_ManagedInstance_status:
      description: |-
        Status of the managed instance.

         - CREATING_INSTANCE: Instance is being created.
         - UPDATING_INSTANCE: Instance is being updated.
         - DELETING_INSTANCE: Instance is being deleted.
         - STARTING_INSTANCE: Instance is being started.
         - STOPPING_INSTANCE: Instance is being stopped.
         - AWAITING_STARTUP_DURATION: Instance has been created successfully, but startup duration has not elapsed yet.
         - CHECKING_HEALTH: Instance has been created successfully and startup duration has elapsed, but health checks have not passed yet and the managed instance is not ready to receive traffic.
         - OPENING_TRAFFIC: Instance Groups is initiating health checks and routing traffic to the instances.
         - AWAITING_WARMUP_DURATION: Instance is now receiving traffic, but warmup duration has not elapsed yet.
         - CLOSING_TRAFFIC: Instance Groups has initiated the process of stopping routing traffic to the instances.
         - RUNNING_ACTUAL: Instance is running normally and its attributes match the current InstanceTemplate.
         - RUNNING_OUTDATED: Instance is running normally, but its attributes do not match the current InstanceTemplate.
        It will be updated, recreated or deleted shortly.
         - STOPPED: Instance was stopped.
         - DELETED: Instance was deleted.
         - PREPARING_RESOURCES: Instance Groups is preparing dependent resources.
      type: string
      enum:
      - CREATING_INSTANCE
      - UPDATING_INSTANCE
      - DELETING_INSTANCE
      - STARTING_INSTANCE
      - STOPPING_INSTANCE
      - AWAITING_STARTUP_DURATION
      - CHECKING_HEALTH
      - OPENING_TRAFFIC
      - AWAITING_WARMUP_DURATION
      - CLOSING_TRAFFIC
      - RUNNING_ACTUAL
      - RUNNING_OUTDATED
      - STOPPED
      - DELETED
      - PREPARING_RESOURCES
    PrimaryAddress_in_NetworkInterface_primaryV4Address:
      description: Primary IPv4 address that is assigned to the instance for this
        network interface.
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the managed instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNat:
          $ref: '#/components/schemas/OneToOneNat_in_PrimaryAddress_oneToOneNat'
        dnsRecords:
          description: Internal DNS configuration.
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    PrimaryAddress_in_NetworkInterface_primaryV6Address:
      description: Primary IPv6 address that is assigned to the instance for this
        network interface. IPv6 is not available yet.
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the managed instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNat:
          $ref: '#/components/schemas/OneToOneNat_in_PrimaryAddress_oneToOneNat'
        dnsRecords:
          description: Internal DNS configuration.
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV4AddressSpec:
      description: Primary IPv4 address that is assigned to the instance for this
        network interface.
      type: object
      properties:
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
        address:
          description: Optional. Manual set static internal IP. To set use variables.
          type: string
    PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV6AddressSpec:
      description: Primary IPv6 address that is assigned to the instance for this
        network interface. IPv6 not available yet.
      type: object
      properties:
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
        address:
          description: Optional. Manual set static internal IP. To set use variables.
          type: string
    NetworkSettingsType_in_NetworkSettings_type:
      description: Type of instance network.
      type: string
      enum:
      - STANDARD
      - SOFTWARE_ACCELERATED
      - HARDWARE_ACCELERATED
    IpVersion_in_OneToOneNat_ipVersion:
      description: |-
        External IP address version.

         - IPV4: IPv4 address, for example 192.168.0.0.
         - IPV6: IPv6 address, not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    IpVersion_in_OneToOneNatSpec_ipVersion:
      description: |-
        IP version for the public IP address.

         - IPV4: IPv4 address, for example 192.168.0.0.
         - IPV6: IPv6 address, not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    PlacementPolicyHostAffinityRuleOperator_in_PlacementPolicyHostAffinityRule_op:
      description: Include or exclude action
      type: string
      enum:
      - IN
      - NOT_IN
    OneToOneNat_in_PrimaryAddress_oneToOneNat:
      description: One-to-one NAT configuration. If missing, NAT has not been set
        up.
      type: object
      properties:
        address:
          description: An IPv4 external network address that is assigned to the managed
            instance for this network interface.
          type: string
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNat_ipVersion'
        dnsRecords:
          description: External DNS configuration.
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec:
      description: |-
        An external IP address configuration.
        If not specified, then this managed instance will have no external internet access.
      type: object
      properties:
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNatSpec_ipVersion'
        address:
          description: Manual set static public IP. To set use variables. (optional)
          type: string
        dnsRecordSpecs:
          description: External DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    ScalePolicyCpuUtilizationRule_in_ScalePolicyAutoScale_cpuUtilizationRule:
      description: |-
        Defines an autoscaling rule based on the average CPU utilization of the instance group.

        If more than one rule is specified, e.g. CPU utilization and one or more Monitoring metrics (`customRules`),
        the size of the instance group will be equal to the maximum of sizes calculated according to each metric.
      type: object
      properties:
        utilizationTarget:
          description: |-
            Target CPU utilization level. Instance Groups maintains this level for each availability zone.

            Acceptable values are 10 to 100, inclusive.
          type: number
          format: double
    ScalePolicyAutoScaleAutoScaleType_in_ScalePolicyAutoScale_autoScaleType:
      description: |-
        Autoscaling type.

         - ZONAL: Scale each zone independently. This is the default.
         - REGIONAL: Scale group as a whole.
      type: string
      enum:
      - ZONAL
      - REGIONAL
    ScalePolicyCustomRuleRuleType_in_ScalePolicyCustomRule_ruleType:
      description: |-
        Required.
        Custom metric rule type. This field affects which label from
        the custom metric should be used: `zone_id` or `instance_id`.

         - UTILIZATION: This type means that the metric applies to one instance.
        First, Instance Groups calculates the average metric value for each instance,
        then averages the values for instances in one availability zone or in whole group depends on autoscaling type.
        This type of metric must have the `instance_id` label.
         - WORKLOAD: This type means that the metric applies to instances in one availability zone or to whole group depends on autoscaling type.
        This type of metric must have the `zone_id` label if ZONAL autoscaling type is chosen.
      type: string
      enum:
      - UTILIZATION
      - WORKLOAD
    ScalePolicyCustomRuleMetricType_in_ScalePolicyCustomRule_metricType:
      description: |-
        Required.
        Type of custom metric. This field affects how Instance Groups calculates the average metric value.

         - GAUGE: This type is used for metrics that show the metric value at a certain point in time,
        such as requests per second to the server on an instance.

        Instance Groups calculates the average metric value for the period
        specified in the `measurementDuration` field.
         - COUNTER: This type is used for metrics that monotonically increase over time,
        such as the total number of requests to the server on an instance.

        Instance Groups calculates the average value increase for the period
        specified in the `measurementDuration` field.
      type: string
      enum:
      - GAUGE
      - COUNTER
    FieldMask_in_UpdateInstanceGroupRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the InstanceGroup resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    InstanceTemplate_in_UpdateInstanceGroupRequest_instanceTemplate:
      description: |-
        Required.
        Instance template that the instance group belongs to.
      type: object
      properties:
        description:
          description: |-
            Description of the instance template.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 128.
          type: object
          additionalProperties:
            type: string
        platformId:
          description: |-
            Required.
            ID of the hardware platform configuration for the instance.
            Platforms allows you to create various types of instances: with a large amount of memory,
            with a large number of cores, with a burstable performance.
            For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_InstanceTemplate_resourcesSpec'
        metadata:
          description: |-
            The metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.

            Metadata values may contain one of the supported placeholders:
              {instance_group.id}
              {instance.short_id}
              {instance.index}
              {instance.index_in_zone}
              {instance.zone_id}
            InstanceGroup and Instance labels may be copied to metadata following way:
              {instance_group.labels.some_label_key}
              {instance.labels.another_label_key}
            These placeholders will be substituted for each created instance anywhere in the value text.
            In the rare case the value requires to contain this placeholder explicitly,
            it must be escaped with double brackets, in example {instance.index}.

            For example, you may use the metadata in order to provide your public SSH key to the instance.
            For more information, see [Metadata](/docs/compute/concepts/vm-metadata).

            No more than 128 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 262144.
          type: object
          additionalProperties:
            type: string
        bootDiskSpec:
          $ref: '#/components/schemas/AttachedDiskSpec_in_InstanceTemplate_bootDiskSpec'
        secondaryDiskSpecs:
          description: |-
            Array of secondary disks that will be attached to the instance.

            The maximum number of elements is 3.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDiskSpec'
        networkInterfaceSpecs:
          description: |-
            Required.
            Array of network interfaces that will be attached to the instance.

            Must contain exactly 1 element.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceSpec'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_InstanceTemplate_schedulingPolicy'
        serviceAccountId:
          description: Service account ID for the instance.
          type: string
        networkSettings:
          $ref: '#/components/schemas/NetworkSettings_in_InstanceTemplate_networkSettings'
        name:
          description: |-
            Name of the instance.
            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, default is used: {instance_group.id}-{instance.short_id}
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        hostname:
          description: |-
            Host name for the instance.
            This field is used to generate the [Instance.fqdn](/docs/compute/api-ref/Instance#representation) value.
            The host name must be unique within the network and region.
            If not specified, the host name will be equal to [Instance.id](/docs/compute/api-ref/Instance#representation) of the instance
            and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.

            In order to be unique it must contain at least on of instance unique placeholders:
              {instance.short_id}
              {instance.index}
              combination of {instance.zone_id} and {instance.index_in_zone}
            Example: my-instance-{instance.index}
            If not set, `name` value will be used
            It may also contain another placeholders, see metadata doc for full list.

            The maximum string length in characters is 128.
          type: string
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy_in_InstanceTemplate_placementPolicy'
    ScalePolicy_in_UpdateInstanceGroupRequest_scalePolicy:
      description: |-
        Required.
        [Scaling policy](/docs/compute/concepts/instance-groups/scale) of the instance group.
      type: object
      allOf:
      - type: object
        properties:
          testAutoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: Test spec for [automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: '[Manual scaling policy](/docs/compute/concepts/instance-groups/scale#fixed-policy)
              of the instance group.'
          autoScale:
            $ref: '#/components/schemas/ScalePolicyAutoScale'
            description: '[Automatic scaling policy](/docs/compute/concepts/instance-groups/scale#auto-scale)
              of the instance group.'
    DeployPolicy_in_UpdateInstanceGroupRequest_deployPolicy:
      description: |-
        Required.
        Deployment policy of the instance group.
      type: object
      properties:
        maxUnavailable:
          description: |-
            The maximum number of running instances that can be taken offline (i.e., stopped or deleted) at the same time
            during the update process.
            If `maxExpansion` is not specified or set to zero, `maxUnavailable` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxDeleting:
          description: |-
            The maximum number of instances that can be deleted at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxCreating:
          description: |-
            The maximum number of instances that can be created at the same time.

            The value 0 is any number of virtual machines within the allowed values.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        maxExpansion:
          description: |-
            The maximum number of instances that can be temporarily allocated above the group's target size
            during the update process.
            If `maxUnavailable` is not specified or set to zero, `maxExpansion` must be set to a non-zero value.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
        startupDuration:
          description: |-
            Instance startup duration.
            Instance will be considered up and running (and start receiving traffic) only after startup_duration
            has elapsed and all health checks are passed.
            See `ManagedInstanceStatus` for more information.

            Acceptable values are 0 seconds to 3600 seconds, inclusive.
          type: string
        strategy:
          $ref: '#/components/schemas/DeployPolicyStrategy_in_DeployPolicy_strategy'
    AllocationPolicy_in_UpdateInstanceGroupRequest_allocationPolicy:
      description: |-
        Required.
        Allocation policy of the instance group by zones and regions.
      type: object
      properties:
        zones:
          description: |-
            Required.
            List of availability zones.

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/AllocationPolicyZone'
    HealthChecksSpec_in_UpdateInstanceGroupRequest_healthChecksSpec:
      description: Health checking specification. For more information, see [Health
        check](/docs/load-balancer/concepts/health-check).
      type: object
      properties:
        healthCheckSpecs:
          description: |-
            Required.
            Health checking specification. For more information, see [Health check](/docs/load-balancer/concepts/health-check).

            The minimum number of elements is 1.
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckSpec'
        maxCheckingHealthDuration:
          description: |-
            Timeout for waiting for the VM to become healthy. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    LoadBalancerSpec_in_UpdateInstanceGroupRequest_loadBalancerSpec:
      description: |-
        Settings for balancing load between instances via [Network Load Balancer](/docs/network-load-balancer/concepts)
        (OSI model layer 3).
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/TargetGroupSpec_in_LoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
    ApplicationLoadBalancerSpec_in_UpdateInstanceGroupRequest_applicationLoadBalancerSpec:
      description: |-
        Settings for balancing load between instances via [Application Load Balancer](/docs/application-load-balancer/concepts)
        (OSI model layer 7).
      type: object
      properties:
        targetGroupSpec:
          $ref: '#/components/schemas/ApplicationTargetGroupSpec_in_ApplicationLoadBalancerSpec_targetGroupSpec'
        maxOpeningTrafficDuration:
          description: |-
            Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded,
            the VM will be turned off based on the deployment policy. Specified in seconds.

            The minimum value is 1 seconds.
          type: string
tags:
- name: InstanceGroup
  description: A set of methods for managing InstanceGroup resources.
