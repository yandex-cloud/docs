openapi: 3.0.0
info:
  title: Compute Cloud API
  description: This API reference is organized by resource. Actions are performed
    by sending HTTP requests to resource URLs or making RPC calls. For more information
    about API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://compute.api.cloud.yandex.net
paths:
  /compute/v1/diskPlacementGroups/{diskPlacementGroupId}:
    get:
      tags:
      - DiskPlacementGroup
      summary: Returns the specified placement group.
      operationId: DiskPlacementGroupGet
      parameters:
      - name: diskPlacementGroupId
        in: path
        description: |-
          Required.
          ID of the placement group to return.
          To get the placement group ID, use [list](/docs/compute/api-ref/DiskPlacementGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskPlacementGroup'
      x-y-navtitle: get
    delete:
      tags:
      - DiskPlacementGroup
      summary: Deletes the specified placement group.
      operationId: DiskPlacementGroupDelete
      parameters:
      - name: diskPlacementGroupId
        in: path
        description: |-
          Required.
          ID of the placement group to delete.
          To get the placement group ID, use [list](/docs/compute/api-ref/DiskPlacementGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDiskPlacementGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - DiskPlacementGroup
      summary: Updates the specified placement group.
      operationId: DiskPlacementGroupUpdate
      parameters:
      - name: diskPlacementGroupId
        in: path
        description: |-
          Required.
          ID of the placement group to update.
          To get the placement group ID, use an [list](/docs/compute/api-ref/DiskPlacementGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiskPlacementGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateDiskPlacementGroupMetadata'
      x-y-operation-response: '[DiskPlacementGroup](/docs/compute/api-ref/DiskPlacementGroup#representation)'
  /compute/v1/diskPlacementGroups:
    get:
      tags:
      - DiskPlacementGroup
      summary: Retrieves the list of placement groups in the specified folder.
      operationId: DiskPlacementGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list placement groups in.
          To get the folder ID, use [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/DiskPlacementGroup/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/DiskPlacementGroup/list#query_params) to the [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the [DiskPlacementGroup.name](/docs/compute/api-ref/DiskPlacementGroup#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiskPlacementGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - DiskPlacementGroup
      summary: Creates a placement group in the specified folder.
      operationId: DiskPlacementGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiskPlacementGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDiskPlacementGroupMetadata'
      x-y-operation-response: '[DiskPlacementGroup](/docs/compute/api-ref/DiskPlacementGroup#representation)'
  /compute/v1/diskPlacementGroups/{diskPlacementGroupId}/disks:
    get:
      tags:
      - DiskPlacementGroup
      summary: Lists disks for the specified placement group.
      operationId: DiskPlacementGroupListDisks
      parameters:
      - name: diskPlacementGroupId
        in: path
        description: |-
          Required.
          ID of the placement group to list disks for.
          To get the placement group ID, use [list](/docs/compute/api-ref/DiskPlacementGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/DiskPlacementGroup/listDisks#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listDisks#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/DiskPlacementGroup/listDisks#query_params) to the [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listDisks#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiskPlacementGroupDisksResponse'
      x-y-navtitle: listDisks
  /compute/v1/diskPlacementGroups/{diskPlacementGroupId}/operations:
    get:
      tags:
      - DiskPlacementGroup
      summary: Lists operations for the specified placement group.
      operationId: DiskPlacementGroupListOperations
      parameters:
      - name: diskPlacementGroupId
        in: path
        description: |-
          Required.
          ID of the placement group to list operations for.
          To get the placement group ID, use [list](/docs/compute/api-ref/DiskPlacementGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/DiskPlacementGroup/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/DiskPlacementGroup/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiskPlacementGroupOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/disks/{diskId}:
    get:
      tags:
      - Disk
      summary: Returns the specified Disk resource.
      description: To get the list of available Disk resources, make a [list](/docs/compute/api-ref/Disk/list)
        request.
      operationId: DiskGet
      parameters:
      - name: diskId
        in: path
        description: |-
          Required.
          ID of the Disk resource to return.
          To get the disk ID use a [list](/docs/compute/api-ref/Disk/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
      x-y-navtitle: get
    delete:
      tags:
      - Disk
      summary: Deletes the specified disk.
      description: |-
        Deleting a disk removes its data permanently and is irreversible. However, deleting a disk does not delete
        any snapshots or images previously made from the disk. You must delete snapshots and images separately.

        It is not possible to delete a disk that is attached to an instance.
      operationId: DiskDelete
      parameters:
      - name: diskId
        in: path
        description: |-
          Required.
          ID of the disk to delete.
          To get the disk ID use a [list](/docs/compute/api-ref/Disk/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDiskMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Disk
      summary: Updates the specified disk.
      operationId: DiskUpdate
      parameters:
      - name: diskId
        in: path
        description: |-
          Required.
          ID of the Disk resource to update.
          To get the disk ID use a [list](/docs/compute/api-ref/Disk/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiskRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateDiskMetadata'
      x-y-operation-response: '[Disk](/docs/compute/api-ref/Disk#representation)'
  /compute/v1/disks:
    get:
      tags:
      - Disk
      summary: Retrieves the list of Disk resources in the specified folder.
      operationId: DiskList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list disks in.
          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Disk/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/Disk/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Disk/list#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Disk/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Disk.name](/docs/compute/api-ref/Disk#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDisksResponse'
      x-y-navtitle: list
    post:
      tags:
      - Disk
      summary: Creates a disk in the specified folder.
      description: |-
        You can create an empty disk or restore it from a snapshot or an image.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: DiskCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDiskRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDiskMetadata'
      x-y-operation-response: '[Disk](/docs/compute/api-ref/Disk#representation)'
  /compute/v1/disks/{diskId}/operations:
    get:
      tags:
      - Disk
      summary: Lists operations for the specified disk.
      operationId: DiskListOperations
      parameters:
      - name: diskId
        in: path
        description: |-
          Required.
          ID of the Disk resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Disk/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/Disk/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Disk/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Disk/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiskOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/disks/{diskId}:move:
    post:
      tags:
      - Disk
      summary: Moves the specified disk to another folder of the same cloud.
      operationId: DiskMove
      parameters:
      - name: diskId
        in: path
        description: |-
          Required.
          ID of the disk to move.

          To get the disk ID, make a [list](/docs/compute/api-ref/Disk/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveDiskRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveDiskMetadata'
      x-y-operation-response: '[Disk](/docs/compute/api-ref/Disk#representation)'
  /compute/v1/diskTypes/{diskTypeId}:
    get:
      tags:
      - DiskType
      summary: Returns the information about specified disk type.
      description: To get the list of available disk types, make a [list](/docs/compute/api-ref/DiskType/list)
        request.
      operationId: DiskTypeGet
      parameters:
      - name: diskTypeId
        in: path
        description: |-
          Required.
          ID of the disk type to return information about.
          To get the disk type ID use a [list](/docs/compute/api-ref/DiskType/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskType'
      x-y-navtitle: get
  /compute/v1/diskTypes:
    get:
      tags:
      - DiskType
      summary: Retrieves the list of disk types for the specified folder.
      operationId: DiskTypeList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/DiskType/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/DiskType/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/DiskType/list#query_params) to the
          [nextPageToken](/docs/compute/api-ref/DiskType/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDiskTypesResponse'
      x-y-navtitle: list
  /compute/v1/filesystems/{filesystemId}:
    get:
      tags:
      - Filesystem
      summary: Returns the specified filesystem.
      description: To get the list of available filesystems, make a [list](/docs/compute/api-ref/Filesystem/list)
        request.
      operationId: FilesystemGet
      parameters:
      - name: filesystemId
        in: path
        description: |-
          Required.
          ID of the filesystem to return.

          To get the filesystem ID, make a [list](/docs/compute/api-ref/Filesystem/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filesystem'
      x-y-navtitle: get
    delete:
      tags:
      - Filesystem
      summary: Deletes the specified filesystem.
      description: |-
        Deleting a filesystem removes its data permanently and is irreversible.

        It is not possible to delete a filesystem that is attached to an instance.
      operationId: FilesystemDelete
      parameters:
      - name: filesystemId
        in: path
        description: |-
          Required.
          ID of the filesystem to delete.

          To get the filesystem ID, make a [list](/docs/compute/api-ref/Filesystem/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteFilesystemMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Filesystem
      summary: Updates the specified filesystem.
      operationId: FilesystemUpdate
      parameters:
      - name: filesystemId
        in: path
        description: |-
          Required.
          ID of the filesystem to update.

          To get the filesystem ID, make a [list](/docs/compute/api-ref/Filesystem/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilesystemRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateFilesystemMetadata'
      x-y-operation-response: '[Filesystem](/docs/compute/api-ref/Filesystem#representation)'
  /compute/v1/filesystems:
    get:
      tags:
      - Filesystem
      summary: Lists filesystems in the specified folder.
      operationId: FilesystemList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list filesystems in.

          To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`,
          the service returns a [nextPageToken](/docs/compute/api-ref/Filesystem/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/compute/api-ref/Filesystem/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters filesystems listed in the response.

          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Filesystem.name](/docs/compute/api-ref/Filesystem#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.
          Example of a filter: `name=my-filesystem`.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesystemsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Filesystem
      summary: Creates a filesystem in the specified folder.
      operationId: FilesystemCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilesystemRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateFilesystemMetadata'
      x-y-operation-response: '[Filesystem](/docs/compute/api-ref/Filesystem#representation)'
  /compute/v1/filesystems/{filesystemId}/operations:
    get:
      tags:
      - Filesystem
      summary: Lists operations for the specified filesystem.
      operationId: FilesystemListOperations
      parameters:
      - name: filesystemId
        in: path
        description: |-
          Required.
          ID of the filesystem to list operations for.

          To get the filesystem ID, make a [list](/docs/compute/api-ref/Filesystem/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than `page_size`, the service returns a [nextPageToken](/docs/compute/api-ref/Filesystem/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set `page_token` to the
          [nextPageToken](/docs/compute/api-ref/Filesystem/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesystemOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/hostGroups/{hostGroupId}:
    get:
      tags:
      - HostGroup
      summary: Returns the specified host group.
      operationId: HostGroupGet
      parameters:
      - name: hostGroupId
        in: path
        description: |-
          Required.
          ID of the host group to return.
          To get the host group ID, use [list](/docs/compute/api-ref/HostGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroup'
      x-y-navtitle: get
    delete:
      tags:
      - HostGroup
      summary: Deletes the specified host group.
      operationId: HostGroupDelete
      parameters:
      - name: hostGroupId
        in: path
        description: |-
          Required.
          ID of the host group to delete.
          To get the host group ID, use [list](/docs/compute/api-ref/HostGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteHostGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - HostGroup
      summary: Updates the specified host group.
      operationId: HostGroupUpdate
      parameters:
      - name: hostGroupId
        in: path
        description: |-
          Required.
          ID of the host group to update.
          To get the host group ID, use an [list](/docs/compute/api-ref/HostGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHostGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateHostGroupMetadata'
      x-y-operation-response: '[HostGroup](/docs/compute/api-ref/HostGroup#representation)'
  /compute/v1/hostGroups:
    get:
      tags:
      - HostGroup
      summary: Retrieves the list of host groups in the specified folder.
      operationId: HostGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list host groups in.
          To get the folder ID, use [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/HostGroup/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/HostGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/HostGroup/list#query_params) to the [nextPageToken](/docs/compute/api-ref/HostGroup/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the [HostGroup.name](/docs/compute/api-ref/HostGroup#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - HostGroup
      summary: Creates a host group in the specified folder.
      operationId: HostGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHostGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateHostGroupMetadata'
      x-y-operation-response: '[HostGroup](/docs/compute/api-ref/HostGroup#representation)'
  /compute/v1/hostGroups/{hostGroupId}/operations:
    get:
      tags:
      - HostGroup
      summary: Lists operations for the specified host group.
      operationId: HostGroupListOperations
      parameters:
      - name: hostGroupId
        in: path
        description: |-
          Required.
          ID of the host group to list operations for.
          To get the host group ID, use [list](/docs/compute/api-ref/HostGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/HostGroup/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/HostGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/HostGroup/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/HostGroup/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostGroupOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/hostGroups/{hostGroupId}/instances:
    get:
      tags:
      - HostGroup
      summary: Lists instances that belongs to the specified host group.
      operationId: HostGroupListInstances
      parameters:
      - name: hostGroupId
        in: path
        description: |-
          Required.
          ID of the host group to list instances for.
          To get the host group ID, use [list](/docs/compute/api-ref/HostGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/HostGroup/listInstances#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/HostGroup/listInstances#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/HostGroup/listInstances#query_params) to the [nextPageToken](/docs/compute/api-ref/HostGroup/listInstances#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the `id` field.
          To get the host ID, use [listHosts](/docs/compute/api-ref/HostGroup/listHosts) request.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostGroupInstancesResponse'
      x-y-navtitle: listInstances
  /compute/v1/hostGroups/{hostGroupId}/hosts:
    get:
      tags:
      - HostGroup
      summary: Lists hosts that belongs to the specified host group.
      operationId: HostGroupListHosts
      parameters:
      - name: hostGroupId
        in: path
        description: |-
          Required.
          ID of the host group to list hosts for.
          To get the host group ID, use [list](/docs/compute/api-ref/HostGroup/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/HostGroup/listHosts#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/HostGroup/listHosts#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/HostGroup/listHosts#query_params) to the [nextPageToken](/docs/compute/api-ref/HostGroup/listHosts#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostGroupHostsResponse'
      x-y-navtitle: listHosts
  /compute/v1/hostTypes/{hostTypeId}:
    get:
      tags:
      - HostType
      summary: Returns information about specified host type.
      operationId: HostTypeGet
      parameters:
      - name: hostTypeId
        in: path
        description: |-
          Required.
          ID of the host type to return.

          To get a host type ID make a [list](/docs/compute/api-ref/HostType/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostType'
      x-y-navtitle: get
  /compute/v1/hostTypes:
    get:
      tags:
      - HostType
      summary: List avaliable host types.
      operationId: HostTypeList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/HostType/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/HostType/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/HostType/list#query_params) to the [nextPageToken](/docs/compute/api-ref/HostType/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHostTypesResponse'
      x-y-navtitle: list
  /compute/v1/images/{imageId}:
    get:
      tags:
      - Image
      summary: Returns the specified Image resource.
      description: To get the list of available Image resources, make a [list](/docs/compute/api-ref/Image/list)
        request.
      operationId: ImageGet
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the Image resource to return.
          To get the image ID, use a [list](/docs/compute/api-ref/Image/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
      x-y-navtitle: get
    delete:
      tags:
      - Image
      summary: Deletes the specified image.
      description: Deleting an image removes its data permanently and is irreversible.
      operationId: ImageDelete
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the image to delete.
          To get the image ID, use a [list](/docs/compute/api-ref/Image/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteImageMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Image
      summary: Updates the specified image.
      operationId: ImageUpdate
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the Image resource to update.
          To get the image ID, use a [list](/docs/compute/api-ref/Image/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateImageMetadata'
      x-y-operation-response: '[Image](/docs/compute/api-ref/Image#representation)'
  /compute/v1/images:latestByFamily:
    get:
      tags:
      - Image
      summary: Returns the latest image that is part of an image family.
      operationId: ImageGetLatestByFamily
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to get the image from.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: family
        in: query
        description: |-
          Name of the image family to search for.

          Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
      x-y-navtitle: getLatestByFamily
  /compute/v1/images:
    get:
      tags:
      - Image
      summary: Retrieves the list of Image resources in the specified folder.
      operationId: ImageList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list images in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Image/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/Image/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Image/list#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Image/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Image.name](/docs/compute/api-ref/Image#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImagesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Image
      summary: Creates an image in the specified folder.
      description: |-
        You can create an image from a disk, snapshot, other image or URI.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: ImageCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateImageMetadata'
      x-y-operation-response: '[Image](/docs/compute/api-ref/Image#representation)'
  /compute/v1/images/{imageId}/operations:
    get:
      tags:
      - Image
      summary: Lists operations for the specified image.
      operationId: ImageListOperations
      parameters:
      - name: imageId
        in: path
        description: |-
          Required.
          ID of the Image resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Image/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/Image/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Image/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Image/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImageOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/instances/{instanceId}:
    get:
      tags:
      - Instance
      summary: Returns the specified Instance resource.
      description: To get the list of available Instance resources, make a [list](/docs/compute/api-ref/Instance/list)
        request.
      operationId: InstanceGet
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the Instance resource to return.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: view
        in: query
        description: Defines which information about the Instance resource should
          be returned in the server response.
        schema:
          $ref: '#/components/schemas/InstanceView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
      x-y-navtitle: get
    delete:
      tags:
      - Instance
      summary: Deletes the specified instance.
      operationId: InstanceDelete
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to delete.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteInstanceMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Instance
      summary: Updates the specified instance.
      operationId: InstanceUpdate
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the Instance resource to update.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateInstanceMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances:
    get:
      tags:
      - Instance
      summary: Retrieves the list of Instance resources in the specified folder.
      operationId: InstanceList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the Folder to list instances in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Instance/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/Instance/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/Instance/list#query_params) to the [nextPageToken](/docs/compute/api-ref/Instance/list#responses)
          returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Instance.name](/docs/compute/api-ref/Instance#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstancesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Instance
      summary: |-
        Creates an instance in the specified folder.
        Method starts an asynchronous operation that can be cancelled while it is in progress.
      operationId: InstanceCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateInstanceMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}/updateMetadata:
    post:
      tags:
      - Instance
      summary: Updates the metadata of the specified instance.
      operationId: InstanceUpdateMetadata
      parameters:
      - name: instanceId
        in: path
        description: ID of the instance that is being updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceMetadataRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateMetadata
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateInstanceMetadataMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}:serialPortOutput:
    get:
      tags:
      - Instance
      summary: Returns the serial port output of the specified Instance resource.
      operationId: InstanceGetSerialPortOutput
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to return the serial port output for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: port
        in: query
        description: |-
          Serial port to retrieve data from. The default is 1.

          Value must be one of 1, 2, 3 or 4.
        schema:
          type: string
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstanceSerialPortOutputResponse'
      x-y-navtitle: getSerialPortOutput
  /compute/v1/instances/{instanceId}:stop:
    post:
      tags:
      - Instance
      summary: Stops the running instance.
      description: You can start the instance later using the [start](/docs/compute/api-ref/Instance/start)
        method.
      operationId: InstanceStop
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to stop.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopInstanceMetadata'
      x-y-operation-response: Empty
  /compute/v1/instances/{instanceId}:start:
    post:
      tags:
      - Instance
      summary: Starts the stopped instance.
      operationId: InstanceStart
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to start.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartInstanceMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}:restart:
    post:
      tags:
      - Instance
      summary: Restarts the running instance.
      operationId: InstanceRestart
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to restart.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restart
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestartInstanceMetadata'
      x-y-operation-response: Empty
  /compute/v1/instances/{instanceId}:attachDisk:
    post:
      tags:
      - Instance
      summary: Attaches the disk to the instance.
      operationId: InstanceAttachDisk
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to attach the disk to.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachInstanceDiskRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: attachDisk
      x-y-operation-metadata:
        $ref: '#/components/schemas/AttachInstanceDiskMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}:detachDisk:
    post:
      tags:
      - Instance
      summary: Detaches the disk from the instance.
      operationId: InstanceDetachDisk
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to detach the disk from.
          To get the instance ID, use a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachInstanceDiskRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: detachDisk
      x-y-operation-metadata:
        $ref: '#/components/schemas/DetachInstanceDiskMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}:attachFilesystem:
    post:
      tags:
      - Instance
      summary: Attaches the filesystem to the instance.
      description: |-
        The instance and the filesystem must reside in the same availability zone.

        To attach a filesystem, the instance must have a `STOPPED` status ([Instance.status](/docs/compute/api-ref/Instance#representation)).
        To check the instance status, make a [get](/docs/compute/api-ref/Instance/get) request.
        To stop the running instance, make a [stop](/docs/compute/api-ref/Instance/stop) request.

        To use the instance with an attached filesystem, the latter must be mounted.
        For details, see [documentation](/docs/compute/operations/filesystem/attach-to-vm).
      operationId: InstanceAttachFilesystem
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to attach the filesystem to.

          To get the instance ID, make a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachInstanceFilesystemRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: attachFilesystem
      x-y-operation-metadata:
        $ref: '#/components/schemas/AttachInstanceFilesystemMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}:detachFilesystem:
    post:
      tags:
      - Instance
      summary: Detaches the filesystem from the instance.
      description: |-
        To detach a filesystem, the instance must have a `STOPPED` status ([Instance.status](/docs/compute/api-ref/Instance#representation)).
        To check the instance status, make a [get](/docs/compute/api-ref/Instance/get) request.
        To stop the running instance, make a [stop](/docs/compute/api-ref/Instance/stop) request.
      operationId: InstanceDetachFilesystem
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to detach the filesystem from.

          To get the instance ID, make a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachInstanceFilesystemRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: detachFilesystem
      x-y-operation-metadata:
        $ref: '#/components/schemas/DetachInstanceFilesystemMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}/addOneToOneNat:
    post:
      tags:
      - Instance
      summary: Enables One-to-one NAT on the network interface.
      operationId: InstanceAddOneToOneNat
      parameters:
      - name: instanceId
        in: path
        description: ID of the instance to enable One-to-One NAT on.
        required: true
        schema:
          type: string
      requestBody:
        description: Enables One-to-one NAT on the network interface.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddInstanceOneToOneNatRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addOneToOneNat
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddInstanceOneToOneNatMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}/removeOneToOneNat:
    post:
      tags:
      - Instance
      summary: Removes One-to-one NAT from the network interface.
      operationId: InstanceRemoveOneToOneNat
      parameters:
      - name: instanceId
        in: path
        description: ID of the instance to remove One-to-one NAT.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveInstanceOneToOneNatRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeOneToOneNat
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveInstanceOneToOneNatMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}/updateNetworkInterface:
    patch:
      tags:
      - Instance
      summary: Updates the specified instance network interface.
      operationId: InstanceUpdateNetworkInterface
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the network interface that is being updated.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstanceNetworkInterfaceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateNetworkInterface
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateInstanceNetworkInterfaceMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/instances/{instanceId}/operations:
    get:
      tags:
      - Instance
      summary: Lists operations for the specified instance.
      operationId: InstanceListOperations
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the Instance resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Instance/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/Instance/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Instance/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Instance/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInstanceOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/instances/{instanceId}:move:
    post:
      tags:
      - Instance
      summary: Moves the specified instance to another folder of the same cloud.
      description: |-
        The instance must be stopped before moving. To stop the instance, make a [stop](/docs/compute/api-ref/Instance/stop) request.

        After moving, the instance will start recording its Monitoring default metrics to its new folder. Metrics
        that have been recorded to the source folder prior to moving will be retained.
      operationId: InstanceMove
      parameters:
      - name: instanceId
        in: path
        description: |-
          Required.
          ID of the instance to move.

          To get the instance ID, make a [list](/docs/compute/api-ref/Instance/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveInstanceRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveInstanceMetadata'
      x-y-operation-response: '[Instance](/docs/compute/api-ref/Instance#representation)'
  /compute/v1/placementGroups/{placementGroupId}:
    get:
      tags:
      - PlacementGroup
      summary: Returns the specified placement group.
      description: To get the list of all available placement groups, make a [list](/docs/compute/api-ref/PlacementGroup/list)
        request.
      operationId: PlacementGroupGet
      parameters:
      - name: placementGroupId
        in: path
        description: |-
          ID of the placement group to return.

          To get a placement group ID make a [list](/docs/compute/api-ref/PlacementGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementGroup'
      x-y-navtitle: get
    delete:
      tags:
      - PlacementGroup
      summary: Deletes the specified placement group.
      operationId: PlacementGroupDelete
      parameters:
      - name: placementGroupId
        in: path
        description: |-
          ID of the placement group to delete.

          To get the placement group ID, use [list](/docs/compute/api-ref/PlacementGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeletePlacementGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - PlacementGroup
      summary: Updates the specified placement group.
      operationId: PlacementGroupUpdate
      parameters:
      - name: placementGroupId
        in: path
        description: |-
          ID of the placement group to update.

          To get the placement group ID, use an [list](/docs/compute/api-ref/PlacementGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlacementGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdatePlacementGroupMetadata'
      x-y-operation-response: '[PlacementGroup](/docs/compute/api-ref/PlacementGroup#representation)'
  /compute/v1/placementGroups:
    get:
      tags:
      - PlacementGroup
      summary: Retrieves the list of placement groups in the specified folder.
      operationId: PlacementGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          ID of the folder to list placement groups in.

          To get the folder ID make a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/PlacementGroup/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/PlacementGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/PlacementGroup/list#query_params) to the [nextPageToken](/docs/compute/api-ref/PlacementGroup/list#responses)
          returned by a previous list request.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on the [PlacementGroup.name](/docs/compute/api-ref/PlacementGroup#representation) field.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlacementGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - PlacementGroup
      summary: Creates a placement group in the specified folder.
      operationId: PlacementGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlacementGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreatePlacementGroupMetadata'
      x-y-operation-response: '[PlacementGroup](/docs/compute/api-ref/PlacementGroup#representation)'
  /compute/v1/placementGroups/{placementGroupId}/instances:
    get:
      tags:
      - PlacementGroup
      summary: Lists instances for the specified placement group.
      operationId: PlacementGroupListInstances
      parameters:
      - name: placementGroupId
        in: path
        description: |-
          ID of the placement group to list instances for.

          To get the placement group ID, use [list](/docs/compute/api-ref/PlacementGroup/list) request.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/PlacementGroup/listInstances#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/PlacementGroup/listInstances#responses)
          that can be used to get the next page of results in subsequent list requests.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results,
          set [pageToken](/docs/compute/api-ref/PlacementGroup/listInstances#query_params) to the [nextPageToken](/docs/compute/api-ref/PlacementGroup/listInstances#responses)
          returned by a previous list request.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlacementGroupInstancesResponse'
      x-y-navtitle: listInstances
  /compute/v1/placementGroups/{placementGroupId}/operations:
    get:
      tags:
      - PlacementGroup
      summary: Lists operations for the specified placement group.
      operationId: PlacementGroupListOperations
      parameters:
      - name: placementGroupId
        in: path
        description: |-
          ID of the placement group to list operations for.

          To get the placement group ID, use [list](/docs/compute/api-ref/PlacementGroup/list) request.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/PlacementGroup/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/PlacementGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/PlacementGroup/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/PlacementGroup/listOperations#responses) returned by a previous list request.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPlacementGroupOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/snapshots/{snapshotId}:
    get:
      tags:
      - Snapshot
      summary: Returns the specified Snapshot resource.
      description: To get the list of available Snapshot resources, make a [list](/docs/compute/api-ref/Snapshot/list)
        request.
      operationId: SnapshotGet
      parameters:
      - name: snapshotId
        in: path
        description: |-
          Required.
          ID of the Snapshot resource to return.
          To get the snapshot ID, use a [list](/docs/compute/api-ref/Snapshot/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      x-y-navtitle: get
    delete:
      tags:
      - Snapshot
      summary: Deletes the specified snapshot.
      description: Deleting a snapshot removes its data permanently and is irreversible.
      operationId: SnapshotDelete
      parameters:
      - name: snapshotId
        in: path
        description: |-
          Required.
          ID of the snapshot to delete.
          To get the snapshot ID, use a [list](/docs/compute/api-ref/Snapshot/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteSnapshotMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Snapshot
      summary: Updates the specified snapshot.
      description: Values of omitted parameters are not changed.
      operationId: SnapshotUpdate
      parameters:
      - name: snapshotId
        in: path
        description: |-
          Required.
          ID of the Snapshot resource to update.
          To get the snapshot ID use a [list](/docs/compute/api-ref/Snapshot/list) request.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSnapshotRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateSnapshotMetadata'
      x-y-operation-response: '[Snapshot](/docs/compute/api-ref/Snapshot#representation)'
  /compute/v1/snapshots:
    get:
      tags:
      - Snapshot
      summary: Retrieves the list of Snapshot resources in the specified folder.
      operationId: SnapshotList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list snapshots in.
          To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

          The maximum string length in characters is 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Snapshot/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/Snapshot/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Snapshot/list#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Snapshot/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on the [Snapshot.name](/docs/compute/api-ref/Snapshot#representation) field.
          2. An `=` operator.
          3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z]([-a-z0-9]{,61}[a-z0-9])?`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Snapshot
      summary: Creates a snapshot of the specified disk.
      operationId: SnapshotCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSnapshotRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateSnapshotMetadata'
      x-y-operation-response: '[Snapshot](/docs/compute/api-ref/Snapshot#representation)'
  /compute/v1/snapshots/{snapshotId}/operations:
    get:
      tags:
      - Snapshot
      summary: Lists operations for the specified snapshot.
      operationId: SnapshotListOperations
      parameters:
      - name: snapshotId
        in: path
        description: |-
          Required.
          ID of the Snapshot resource to list operations for.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Snapshot/listOperations#query_params), the service returns a [nextPageToken](/docs/compute/api-ref/Snapshot/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Snapshot/listOperations#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Snapshot/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotOperationsResponse'
      x-y-navtitle: listOperations
  /compute/v1/zones/{zoneId}:
    get:
      tags:
      - Zone
      summary: Returns the information about the specified availability zone.
      description: To get the list of availability zones, make a [list](/docs/compute/api-ref/Zone/list)
        request.
      operationId: ZoneGet
      parameters:
      - name: zoneId
        in: path
        description: |-
          Required.
          ID of the availability zone to return information about.

          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
      x-y-navtitle: get
  /compute/v1/zones:
    get:
      tags:
      - Zone
      summary: Retrieves the list of availability zones.
      operationId: ZoneList
      parameters:
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/compute/api-ref/Zone/list#query_params),
          the service returns a [nextPageToken](/docs/compute/api-ref/Zone/list#responses)
          that can be used to get the next page of results in subsequent list requests.

          The maximum value is 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/compute/api-ref/Zone/list#query_params) to the
          [nextPageToken](/docs/compute/api-ref/Zone/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListZonesResponse'
      x-y-navtitle: list
components:
  schemas:
    AddInstanceOneToOneNatMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance.
          type: string
    AddInstanceOneToOneNatRequest:
      description: Enables One-to-one NAT on the network interface.
      type: object
      properties:
        networkInterfaceIndex:
          description: The index of the network interface to enable One-to-One NAT
            on.
          type: string
        internalAddress:
          description: The network address that is assigned to the instance for this
            network interface.
          type: string
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_AddInstanceOneToOneNatRequest_oneToOneNatSpec'
    AttachInstanceDiskMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance.
          type: string
        diskId:
          description: ID of the disk.
          type: string
    AttachInstanceDiskRequest:
      type: object
      properties:
        attachedDiskSpec:
          $ref: '#/components/schemas/AttachedDiskSpec_in_AttachInstanceDiskRequest_attachedDiskSpec'
    AttachInstanceFilesystemMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance that the filesystem is being attached to.
          type: string
        filesystemId:
          description: ID of the filesystem that is being attached to the instance.
          type: string
    AttachInstanceFilesystemRequest:
      type: object
      properties:
        attachedFilesystemSpec:
          $ref: '#/components/schemas/AttachedFilesystemSpec_in_AttachInstanceFilesystemRequest_attachedFilesystemSpec'
    AttachedDisk:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AttachedDiskMode_in_AttachedDisk_mode'
        deviceName:
          description: |-
            Serial number that is reflected into the /dev/disk/by-id/ tree
            of a Linux operating system running within the instance.

            This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
          type: string
        autoDelete:
          description: Specifies whether the disk will be auto-deleted when the instance
            is deleted.
          type: boolean
          format: boolean
        diskId:
          description: ID of the disk that is attached to the instance.
          type: string
    AttachedDiskMode:
      description: |2-
         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    AttachedDiskSpec:
      type: object
      allOf:
      - type: object
        properties:
          mode:
            $ref: '#/components/schemas/AttachedDiskSpecMode'
            description: The mode in which to attach this disk.
          deviceName:
            description: |-
              Specifies a unique serial number of your choice that is reflected into the /dev/disk/by-id/ tree
              of a Linux operating system running within the instance.

              This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
              If not specified, a random value will be generated.

              Value must match the regular expression `` [a-z][a-z0-9-_]{,19} ``.
            type: string
          autoDelete:
            description: Specifies whether the disk will be auto-deleted when the
              instance is deleted.
            type: boolean
            format: boolean
      - title: disk
        type: object
        maxProperties: 1
        properties:
          diskSpec:
            $ref: '#/components/schemas/AttachedDiskSpecDiskSpec'
            description: Disk specification.
          diskId:
            description: |-
              ID of the disk that should be attached.

              The maximum string length in characters is 50.
            type: string
    AttachedDiskSpecDiskSpec:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Name of the disk.

              Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          description:
            description: |-
              Description of the disk.

              The maximum string length in characters is 256.
            type: string
          typeId:
            description: |-
              ID of the disk type.
              To get a list of available disk types, use the [list](/docs/compute/api-ref/DiskType/list) request.

              The maximum string length in characters is 50.
            type: string
          size:
            description: |-
              Required.
              Size of the disk, specified in bytes.

              Acceptable values are 4194304 to 4398046511104, inclusive.
            type: string
            format: int64
          blockSize:
            description: Block size of the disk, specified in bytes. The default is
              4096.
            type: string
            format: int64
          diskPlacementPolicy:
            $ref: '#/components/schemas/DiskPlacementPolicy'
            description: Placement policy configuration.
      - title: source
        type: object
        maxProperties: 1
        properties:
          imageId:
            description: |-
              ID of the image to create the disk from.

              The maximum string length in characters is 50.
            type: string
          snapshotId:
            description: |-
              ID of the snapshot to restore the disk from.

              The maximum string length in characters is 50.
            type: string
    AttachedDiskSpecMode:
      description: |2-
         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access. Default value.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    AttachedFilesystem:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AttachedFilesystemMode_in_AttachedFilesystem_mode'
        deviceName:
          description: |-
            Name of the device representing the filesystem on the instance.

            The name should be used for referencing the filesystem from within the instance
            when it's being mounted, resized etc.
          type: string
        filesystemId:
          description: ID of the filesystem that is attached to the instance.
          type: string
    AttachedFilesystemMode:
      description: |2-
         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    AttachedFilesystemSpec:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AttachedFilesystemSpecMode_in_AttachedFilesystemSpec_mode'
        deviceName:
          description: |-
            Name of the device representing the filesystem on the instance.

            The name should be used for referencing the filesystem from within the instance
            when it's being mounted, resized etc.

            If not specified, a random value will be generated.

            Value must match the regular expression `` [a-z][a-z0-9-_]{,19} ``.
          type: string
        filesystemId:
          description: |-
            ID of the filesystem that should be attached.

            The maximum string length in characters is 50.
          type: string
    AttachedFilesystemSpecMode:
      description: |2-
         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access. Default value.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    AttachedLocalDisk:
      type: object
      properties:
        size:
          description: Size of the disk, specified in bytes.
          type: string
          format: int64
        deviceName:
          description: |-
            Serial number that is reflected into the /dev/disk/by-id/ tree
            of a Linux operating system running within the instance.

            This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
          type: string
    AttachedLocalDiskSpec:
      type: object
      properties:
        size:
          description: |-
            Required.
            Size of the disk, specified in bytes.
          type: string
          format: int64
    CreateDiskMetadata:
      type: object
      properties:
        diskId:
          description: ID of the disk that is being created.
          type: string
    CreateDiskPlacementGroupMetadata:
      type: object
      properties:
        diskPlacementGroupId:
          description: ID of the placement group that is being created.
          type: string
    CreateDiskPlacementGroupRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            description: |-
              Required.
              ID of the folder to create a placement group in.
              To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

              The maximum string length in characters is 50.
            type: string
          name:
            description: |-
              Name of the placement group.

              Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          description:
            description: |-
              Description of the placement group.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Resource labels as `key:value` pairs.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
          zoneId:
            description: |-
              Required.
              ID of the availability zone where the placement group resides.
              To get a list of available zones use the [list](/docs/compute/api-ref/Zone/list) request.

              The maximum string length in characters is 50.
            type: string
      - title: placement_strategy
        type: object
        maxProperties: 1
        properties:
          spreadPlacementStrategy:
            $ref: '#/components/schemas/DiskSpreadPlacementStrategy'
            description: Distribute disks over distinct failure domains.
    CreateDiskRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            description: |-
              Required.
              ID of the folder to create a disk in.
              To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

              The maximum string length in characters is 50.
            type: string
          name:
            description: |-
              Name of the disk.

              Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          description:
            description: |-
              Description of the disk.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Resource labels as `key:value` pairs.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
          typeId:
            description: |-
              ID of the disk type.
              To get a list of available disk types use the [list](/docs/compute/api-ref/DiskType/list) request.

              The maximum string length in characters is 50.
            type: string
          zoneId:
            description: |-
              Required.
              ID of the availability zone where the disk resides.
              To get a list of available zones use the [list](/docs/compute/api-ref/Zone/list) request.

              The maximum string length in characters is 50.
            type: string
          size:
            description: |-
              Required.
              Size of the disk, specified in bytes.
              If the disk was created from a image, this value should be more than the
              [Image.minDiskSize](/docs/compute/api-ref/Image#representation) value.

              Acceptable values are 4194304 to 28587302322176, inclusive.
            type: string
            format: int64
          blockSize:
            description: Block size used for disk, specified in bytes. The default
              is 4096.
            type: string
            format: int64
          diskPlacementPolicy:
            $ref: '#/components/schemas/DiskPlacementPolicy'
            description: Placement policy configuration.
      - title: source
        type: object
        maxProperties: 1
        properties:
          imageId:
            description: |-
              ID of the image to create the disk from.

              The maximum string length in characters is 50.
            type: string
          snapshotId:
            description: |-
              ID of the snapshot to restore the disk from.

              The maximum string length in characters is 50.
            type: string
    CreateFilesystemMetadata:
      type: object
      properties:
        filesystemId:
          description: ID of the filesystem that is being created.
          type: string
    CreateFilesystemRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a filesystem in.

            To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the filesystem. The name must be unique within the folder.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the filesystem.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Filesystem labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        typeId:
          description: |-
            ID of the filesystem type.

            To get a list of available filesystem types, make a [list](/docs/compute/api-ref/DiskType/list) request.

            The filesystem type cannot be updated after the filesystem creation.

            The maximum string length in characters is 50.
          type: string
        zoneId:
          description: |-
            Required.
            ID of the availability zone where the filesystem resides.

            To get a list of available zones, make a [list](/docs/compute/api-ref/Zone/list) request.

            A filesystem can be attached only to virtual machines residing in the same availability zone.
            The filesystem availability zone cannot be updated after the filesystem creation.

            The maximum string length in characters is 50.
          type: string
        size:
          description: |-
            Required.
            Size of the filesystem, specified in bytes.

            The size of the filesystem cannot be updated after the filesystem creation.
          type: string
          format: int64
        blockSize:
          description: |-
            Block size used for the filesystem, specified in bytes.

            The block size cannot be updated after the filesystem creation.

            Default value: 4096.
          type: string
          format: int64
    CreateHostGroupMetadata:
      type: object
      properties:
        hostGroupId:
          description: ID of the host group that is being created.
          type: string
    CreateHostGroupRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a host group in.
            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the group.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        zoneId:
          description: |-
            Required.
            Availability zone where all dedicated hosts will be allocated.

            The maximum string length in characters is 50.
          type: string
        typeId:
          description: |-
            Required.
            ID of host type. Resources provided by each host of the group.

            The maximum string length in characters is 50.
          type: string
        maintenancePolicy:
          $ref: '#/components/schemas/MaintenancePolicy_in_CreateHostGroupRequest_maintenancePolicy'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_CreateHostGroupRequest_scalePolicy'
    CreateImageMetadata:
      type: object
      properties:
        imageId:
          description: ID of the image that is being created.
          type: string
    CreateImageRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            description: |-
              Required.
              ID of the folder to create an image in.
              To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

              The maximum string length in characters is 50.
            type: string
          name:
            description: |-
              Name of the image.

              Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
            type: string
          description:
            description: |-
              Description of the image.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Resource labels as `key:value` pairs.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
          family:
            description: |-
              The name of the image family to which this image belongs. For more information, see [Image family](/docs/compute/concepts/image#family).

              To get an information about the most recent image from a family, use a [getLatestByFamily](/docs/compute/api-ref/Image/getLatestByFamily) request.

              Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
          minDiskSize:
            description: |-
              Minimum size of the disk that will be created from this image.
              Specified in bytes. Should be more than the volume of source data.

              Acceptable values are 4194304 to 4398046511104, inclusive.
            type: string
            format: int64
          productIds:
            description: |-
              License IDs that indicate which licenses are attached to this resource.
              License IDs are used to calculate additional charges for the use of the virtual machine.

              The correct license ID is generated by the platform. IDs are inherited by new resources created from this resource.

              If you know the license IDs, specify them when you create the image.
              For example, if you create a disk image using a third-party utility and load it into Object Storage, the license IDs will be lost.
              You can specify them in this request.

              The maximum string length in characters for each value is 50.
            type: array
            items:
              type: string
          os:
            $ref: '#/components/schemas/Os'
            description: |-
              Operating system that is contained in the image.

              If not specified and you used the `image_id` or `disk_id` field to set the source, then the value can be inherited from the source resource.
          pooled:
            description: When true, an image pool will be created for fast creation
              disks from the image.
            type: boolean
            format: boolean
      - title: source
        type: object
        maxProperties: 1
        properties:
          imageId:
            description: |-
              ID of the source image to create the new image from.

              The maximum string length in characters is 50.
            type: string
          diskId:
            description: |-
              ID of the disk to create the image from.

              The maximum string length in characters is 50.
            type: string
          snapshotId:
            description: |-
              ID of the snapshot to create the image from.

              The maximum string length in characters is 50.
            type: string
          uri:
            description: |-
              URI of the source image to create the new image from.
              Currently only supports links to images that are stored in Object Storage.
              Currently only supports Qcow2, VMDK, and VHD formats.
            type: string
    CreateInstanceMetadata:
      type: object
      properties:
        instanceId:
          description: |-
            ID of the instance that is being created.

            The maximum string length in characters is 50.
          type: string
    CreateInstanceRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create an instance in.
            To get the folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the instance.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the instance.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        zoneId:
          description: |-
            Required.
            ID of the availability zone where the instance resides.
            To get a list of available zones, use the [list](/docs/compute/api-ref/Zone/list) request

            The maximum string length in characters is 50.
          type: string
        platformId:
          description: |-
            Required.
            ID of the hardware platform configuration for the instance.
            This field affects the available values in [resourcesSpec](/docs/compute/api-ref/Instance/create#body_params) field.

            Platforms allows you to create various types of instances: with a large amount of memory,
            with a large number of cores, with a burstable performance.
            For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_CreateInstanceRequest_resourcesSpec'
        metadata:
          description: |-
            The metadata `key:value` pairs that will be assigned to this instance. This includes custom metadata and predefined keys.
            The total size of all keys and values must be less than 512 KB.

            Values are free-form strings, and only have meaning as interpreted by the programs which configure the instance.
            The values must be 256 KB or less.

            For example, you may use the metadata in order to provide your public SSH key to the instance.
            For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
          type: object
          additionalProperties:
            type: string
        metadataOptions:
          $ref: '#/components/schemas/MetadataOptions_in_CreateInstanceRequest_metadataOptions'
        bootDiskSpec:
          $ref: '#/components/schemas/AttachedDiskSpec_in_CreateInstanceRequest_bootDiskSpec'
        secondaryDiskSpecs:
          description: |-
            Array of secondary disks to attach to the instance.

            The maximum number of elements is 3.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDiskSpec'
        localDiskSpecs:
          description: Array of local disks to attach to the instance.
          type: array
          items:
            $ref: '#/components/schemas/AttachedLocalDiskSpec'
        filesystemSpecs:
          description: |-
            Array of filesystems to attach to the instance.

            The filesystems must reside in the same availability zone as the instance.

            To use the instance with an attached filesystem, the latter must be mounted.
            For details, see [documentation](/docs/compute/operations/filesystem/attach-to-vm).
          type: array
          items:
            $ref: '#/components/schemas/AttachedFilesystemSpec'
        networkInterfaceSpecs:
          description: |-
            Required.
            Network configuration for the instance. Specifies how the network interface is configured
            to interact with other services on the internal network and on the internet.
            Currently only one network interface is supported per instance.

            Must contain exactly 1 element.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceSpec'
        hostname:
          description: |-
            Host name for the instance.
            This field is used to generate the [Instance.fqdn](/docs/compute/api-ref/Instance#representation) value.
            The host name must be unique within the network and region.
            If not specified, the host name will be equal to [Instance.id](/docs/compute/api-ref/Instance#representation) of the instance
            and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_CreateInstanceRequest_schedulingPolicy'
        serviceAccountId:
          description: |-
            ID of the service account to use for [authentication inside the instance](/docs/compute/operations/vm-connect/auth-inside-vm).
            To get the service account ID, use a [list](/docs/iam/api-ref/ServiceAccount/list) request.
          type: string
        networkSettings:
          $ref: '#/components/schemas/NetworkSettings_in_CreateInstanceRequest_networkSettings'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy_in_CreateInstanceRequest_placementPolicy'
    CreatePlacementGroupMetadata:
      type: object
      properties:
        placementGroupId:
          description: ID of the placement group that is being created.
          type: string
    CreatePlacementGroupRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            description: |-
              ID of the folder to create a placement group in.

              To get a folder ID, use a [list](/docs/resource-manager/api-ref/Folder/list) request.
            type: string
          name:
            description: Name of the placement group.
            type: string
          description:
            description: Description of the placement group.
            type: string
          labels:
            description: Resource labels as `key:value` pairs.
            type: object
            additionalProperties:
              type: string
      - title: placement_strategy
        type: object
        maxProperties: 1
        properties:
          spreadPlacementStrategy:
            $ref: '#/components/schemas/SpreadPlacementStrategy'
            description: Anti-affinity placement strategy (`spread`). Instances are
              distributed over distinct failure domains.
    CreateSnapshotMetadata:
      type: object
      properties:
        snapshotId:
          description: ID of the snapshot that is being created.
          type: string
        diskId:
          description: ID of the source disk used to create this snapshot.
          type: string
    CreateSnapshotRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            ID of the folder to create a snapshot in.
            To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
        diskId:
          description: |-
            Required.
            ID of the disk to create the snapshot from.
            To get the disk ID use a [list](/docs/compute/api-ref/Disk/list) request.

            The maximum string length in characters is 50.
          type: string
        name:
          description: |-
            Name of the snapshot.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the snapshot.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    DeleteDiskMetadata:
      type: object
      properties:
        diskId:
          description: ID of the disk that is being deleted.
          type: string
    DeleteDiskPlacementGroupMetadata:
      type: object
      properties:
        diskPlacementGroupId:
          description: ID of the placement group that is being deleted.
          type: string
    DeleteFilesystemMetadata:
      type: object
      properties:
        filesystemId:
          description: ID of the filesystem that is being deleted.
          type: string
    DeleteHostGroupMetadata:
      type: object
      properties:
        hostGroupId:
          description: ID of the host group that is being deleted.
          type: string
    DeleteImageMetadata:
      type: object
      properties:
        imageId:
          description: ID of the image that is being deleted.
          type: string
    DeleteInstanceMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance that is being deleted.
          type: string
    DeletePlacementGroupMetadata:
      type: object
      properties:
        placementGroupId:
          description: ID of the placement group that is being deleted.
          type: string
    DeleteSnapshotMetadata:
      type: object
      properties:
        snapshotId:
          description: ID of the snapshot that is being deleted.
          type: string
    DetachInstanceDiskMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance.
          type: string
        diskId:
          description: ID of the disk.
          type: string
    DetachInstanceDiskRequest:
      type: object
      allOf:
      - title: disk
        type: object
        maxProperties: 1
        properties:
          diskId:
            description: |-
              ID of the disk that should be detached.

              The maximum string length in characters is 50.
            type: string
          deviceName:
            description: |-
              Serial number of the disk that should be detached. This value is reflected into the /dev/disk/by-id/ tree
              of a Linux operating system running within the instance.

              Value must match the regular expression `` [a-z][a-z0-9-_]{,19} ``.
            type: string
    DetachInstanceFilesystemMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance that the filesystem is being detached from.
          type: string
        filesystemId:
          description: ID of the filesystem that is being detached from the instance.
          type: string
    DetachInstanceFilesystemRequest:
      type: object
      allOf:
      - title: filesystem
        type: object
        maxProperties: 1
        properties:
          filesystemId:
            description: |-
              ID of the filesystem that should be detached.

              The maximum string length in characters is 50.
            type: string
          deviceName:
            description: |-
              Name of the device used for mounting the filesystem that should be detached.

              Value must match the regular expression `` [a-z][a-z0-9-_]{,19} ``.
            type: string
    Disk:
      description: A Disk resource. For more information, see [Disks](/docs/compute/concepts/disk).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the disk.
            type: string
          folderId:
            description: ID of the folder that the disk belongs to.
            type: string
          createdAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          name:
            description: Name of the disk. 1-63 characters long.
            type: string
          description:
            description: Description of the disk. 0-256 characters long.
            type: string
          labels:
            description: Resource labels as `key:value` pairs. Maximum of 64 per resource.
            type: object
            additionalProperties:
              type: string
          typeId:
            description: ID of the disk type.
            type: string
          zoneId:
            description: ID of the availability zone where the disk resides.
            type: string
          size:
            description: Size of the disk, specified in bytes.
            type: string
            format: int64
          blockSize:
            description: Block size of the disk, specified in bytes.
            type: string
            format: int64
          productIds:
            description: |-
              License IDs that indicate which licenses are attached to this resource.
              License IDs are used to calculate additional charges for the use of the virtual machine.

              The correct license ID is generated by the platform. IDs are inherited by new resources created from this resource.

              If you know the license IDs, specify them when you create the image.
              For example, if you create a disk image using a third-party utility and load it into Object Storage, the license IDs will be lost.
              You can specify them in the [create](/docs/compute/api-ref/Image/create) request.
            type: array
            items:
              type: string
          status:
            $ref: '#/components/schemas/DiskStatus'
            description: Current status of the disk.
          instanceIds:
            description: Array of instances to which the disk is attached.
            type: array
            items:
              type: string
          diskPlacementPolicy:
            $ref: '#/components/schemas/DiskPlacementPolicy'
            description: Placement policy configuration.
      - title: source
        type: object
        maxProperties: 1
        properties:
          sourceImageId:
            description: ID of the image that was used for disk creation.
            type: string
          sourceSnapshotId:
            description: ID of the snapshot that was used for disk creation.
            type: string
    DiskPlacementGroup:
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the placement group.
            type: string
          folderId:
            description: ID of the folder that the placement group belongs to.
            type: string
          createdAt:
            description: |-
              Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          name:
            description: |-
              Name of the placement group.
              The name is unique within the folder.
            type: string
          description:
            description: Description of the placement group.
            type: string
          labels:
            description: Resource labels as `key:value` pairs.
            type: object
            additionalProperties:
              type: string
          zoneId:
            description: ID of the availability zone where the placement group resides.
            type: string
          status:
            $ref: '#/components/schemas/DiskPlacementGroupStatus'
            description: Current status of the placement group
      - title: placement_strategy
        type: object
        maxProperties: 1
        properties:
          spreadPlacementStrategy:
            $ref: '#/components/schemas/DiskSpreadPlacementStrategy'
            description: Distribute instances over distinct failure domains.
    DiskPlacementGroupStatus:
      type: string
      enum:
      - CREATING
      - READY
      - DELETING
    DiskPlacementPolicy:
      type: object
      properties:
        placementGroupId:
          description: Placement group ID.
          type: string
    DiskSpreadPlacementStrategy:
      type: object
      properties: {}
    DiskStatus:
      description: |2-
         - CREATING: Disk is being created.
         - READY: Disk is ready to use.
         - ERROR: Disk encountered a problem and cannot operate.
         - DELETING: Disk is being deleted.
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - DELETING
    DiskType:
      type: object
      properties:
        id:
          description: ID of the disk type.
          type: string
        description:
          description: Description of the disk type. 0-256 characters long.
          type: string
        zoneIds:
          description: Array of availability zones where the disk type is available.
          type: array
          items:
            type: string
    DnsRecord:
      type: object
      properties:
        fqdn:
          description: |-
            Name of the A/AAAA record as specified when creating the instance.
            Note that if `fqdn' has no trailing '.', it is specified relative to the zone (@see dns_zone_id).
          type: string
        dnsZoneId:
          description: DNS zone id for the record (optional, if not set, some private
            zone is used).
          type: string
        ttl:
          description: DNS record ttl (optional, if not set, a reasonable default
            is used.)
          type: string
          format: int64
        ptr:
          description: When true, indicates there is a corresponding auto-created
            PTR DNS record.
          type: boolean
          format: boolean
    DnsRecordSpec:
      type: object
      properties:
        fqdn:
          description: |-
            Required.
            FQDN (required)
          type: string
        dnsZoneId:
          description: DNS zone id (optional, if not set, private zone used)
          type: string
        ttl:
          description: |-
            DNS record ttl, values in 0-86400 (optional)

            Acceptable values are 0 to 86400, inclusive.
          type: string
          format: int64
        ptr:
          description: When set to true, also create PTR DNS record (optional)
          type: boolean
          format: boolean
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    Filesystem:
      description: |-
        A filesystem resource.
        For details about the concept, see [documentation](/docs/compute/concepts/filesystem).
      type: object
      properties:
        id:
          description: ID of the filesystem. Generated at creation time.
          type: string
        folderId:
          description: ID of the folder that the filesystem belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the filesystem. The name is unique within the folder.
          type: string
        description:
          description: Description of the filesystem.
          type: string
        labels:
          description: |-
            Filesystem labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).
          type: object
          additionalProperties:
            type: string
        typeId:
          description: |-
            ID of the filesystem type.

            To get a list of available filesystem types, make a [list](/docs/compute/api-ref/DiskType/list) request.
          type: string
        zoneId:
          description: |-
            ID of the availability zone where the filesystem resides.

            A filesystem can be attached only to instances residing in the same availability zone.
          type: string
        size:
          description: Size of the filesystem, specified in bytes.
          type: string
          format: int64
        blockSize:
          description: Block size used for the filesystem, specified in bytes.
          type: string
          format: int64
        status:
          $ref: '#/components/schemas/FilesystemStatus_in_Filesystem_status'
    FilesystemStatus:
      description: |2-
         - CREATING: The filesystem is being created.
         - READY: The filesystem is ready to use.
         - ERROR: The filesystem encountered a problem and cannot operate.
         - DELETING: The filesystem is being deleted.
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - DELETING
    GetInstanceSerialPortOutputResponse:
      type: object
      properties:
        contents:
          description: |-
            The contents of the serial port output, starting from the time when the instance
            started to boot.
          type: string
    Host:
      description: Represents a dedicated host
      type: object
      properties:
        id:
          description: ID of the host.
          type: string
        status:
          $ref: '#/components/schemas/HostStatus_in_Host_status'
        serverId:
          description: ID of the physical server that the host belongs to.
          type: string
    HostGroup:
      description: Represents group of dedicated hosts
      type: object
      properties:
        id:
          description: ID of the group.
          type: string
        folderId:
          description: ID of the folder that the group belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: Name of the group. The name is unique within the folder.
          type: string
        description:
          description: Description of the group.
          type: string
        labels:
          description: Resource labels as `key:value` pairs.
          type: object
          additionalProperties:
            type: string
        zoneId:
          description: Availability zone where all dedicated hosts are allocated.
          type: string
        status:
          $ref: '#/components/schemas/HostGroupStatus_in_HostGroup_status'
        typeId:
          description: ID of host type. Resources provided by each host of the group.
          type: string
        maintenancePolicy:
          $ref: '#/components/schemas/MaintenancePolicy_in_HostGroup_maintenancePolicy'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_HostGroup_scalePolicy'
    HostGroupStatus:
      type: string
      enum:
      - CREATING
      - READY
      - UPDATING
      - DELETING
    HostStatus:
      type: string
      enum:
      - UP
      - DOWN
    HostType:
      description: |-
        Represents host resources.
        Note: Platform can use hosts with different number of memory and cores.
        TODO: Do we need sockets here?
      type: object
      properties:
        id:
          description: Unique type identifier.
          type: string
        cores:
          description: Total number of cores available for instances.
          type: string
          format: int64
        memory:
          description: Ammount of memory available for instances.
          type: string
          format: int64
        disks:
          description: Number of local disks available for instances
          type: string
          format: int64
        diskSize:
          description: Size of each local disk
          type: string
          format: int64
    Image:
      description: An Image resource.
      type: object
      properties:
        id:
          description: ID of the image.
          type: string
        folderId:
          description: ID of the folder that the image belongs to.
          type: string
        createdAt:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        name:
          description: Name of the image. 1-63 characters long.
          type: string
        description:
          description: Description of the image. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `key:value` pairs. Maximum of 64 per resource.
          type: object
          additionalProperties:
            type: string
        family:
          description: |-
            The name of the image family to which this image belongs.

            You can get the most recent image from a family by using
            the [getLatestByFamily](/docs/compute/api-ref/Image/getLatestByFamily) request
            and create the disk from this image.
          type: string
        storageSize:
          description: The size of the image, specified in bytes.
          type: string
          format: int64
        minDiskSize:
          description: Minimum size of the disk which will be created from this image.
          type: string
          format: int64
        productIds:
          description: |-
            License IDs that indicate which licenses are attached to this resource.
            License IDs are used to calculate additional charges for the use of the virtual machine.

            The correct license ID is generated by the platform. IDs are inherited by new resources created from this resource.

            If you know the license IDs, specify them when you create the image.
            For example, if you create a disk image using a third-party utility and load it into Object Storage, the license IDs will be lost.
            You can specify them in the [create](/docs/compute/api-ref/Image/create) request.
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/ImageStatus_in_Image_status'
        os:
          $ref: '#/components/schemas/Os_in_Image_os'
        pooled:
          description: When true, indicates there is an image pool for fast creation
            disks from the image.
          type: boolean
          format: boolean
    ImageStatus:
      description: |2-
         - CREATING: Image is being created.
         - READY: Image is ready to use.
         - ERROR: Image encountered a problem and cannot operate.
         - DELETING: Image is being deleted.
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - DELETING
    Instance:
      description: An Instance resource. For more information, see [Instances](/docs/compute/concepts/vm).
      type: object
      properties:
        id:
          description: ID of the instance.
          type: string
        folderId:
          description: ID of the folder that the instance belongs to.
          type: string
        createdAt:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        name:
          description: Name of the instance. 1-63 characters long.
          type: string
        description:
          description: Description of the instance. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `key:value` pairs. Maximum of 64 per resource.
          type: object
          additionalProperties:
            type: string
        zoneId:
          description: ID of the availability zone where the instance resides.
          type: string
        platformId:
          description: ID of the hardware platform configuration for the instance.
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_Instance_resources'
        status:
          $ref: '#/components/schemas/InstanceStatus_in_Instance_status'
        metadata:
          description: |-
            The metadata `key:value` pairs assigned to this instance. This includes custom metadata and predefined keys.

            For example, you may use the metadata in order to provide your public SSH key to the instance.
            For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
          type: object
          additionalProperties:
            type: string
        metadataOptions:
          $ref: '#/components/schemas/MetadataOptions_in_Instance_metadataOptions'
        bootDisk:
          $ref: '#/components/schemas/AttachedDisk_in_Instance_bootDisk'
        secondaryDisks:
          description: Array of secondary disks that are attached to the instance.
          type: array
          items:
            $ref: '#/components/schemas/AttachedDisk'
        localDisks:
          description: Array of local disks that are attached to the instance.
          type: array
          items:
            $ref: '#/components/schemas/AttachedLocalDisk'
        filesystems:
          description: Array of filesystems that are attached to the instance.
          type: array
          items:
            $ref: '#/components/schemas/AttachedFilesystem'
        networkInterfaces:
          description: Array of network interfaces that are attached to the instance.
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterface'
        fqdn:
          description: |-
            A domain name of the instance. FQDN is defined by the server
            in the format `<hostname>.<region_id>.internal` when the instance is created.
            If the hostname were not specified when the instance was created, FQDN would be `<id>.auto.internal`.
          type: string
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_Instance_schedulingPolicy'
        serviceAccountId:
          description: |-
            ID of the service account to use for [authentication inside the instance](/docs/compute/operations/vm-connect/auth-inside-vm).
            To get the service account ID, use a [list](/docs/iam/api-ref/ServiceAccount/list) request.
          type: string
        networkSettings:
          $ref: '#/components/schemas/NetworkSettings_in_Instance_networkSettings'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy_in_Instance_placementPolicy'
    InstanceStatus:
      description: |2-
         - PROVISIONING: Instance is waiting for resources to be allocated.
         - RUNNING: Instance is running normally.
         - STOPPING: Instance is being stopped.
         - STOPPED: Instance stopped.
         - STARTING: Instance is being started.
         - RESTARTING: Instance is being restarted.
         - UPDATING: Instance is being updated.
         - ERROR: Instance encountered a problem and cannot operate.
         - CRASHED: Instance crashed and will be restarted automatically.
         - DELETING: Instance is being deleted.
      type: string
      enum:
      - PROVISIONING
      - RUNNING
      - STOPPING
      - STOPPED
      - STARTING
      - RESTARTING
      - UPDATING
      - ERROR
      - CRASHED
      - DELETING
    InstanceView:
      description: |2-
         - BASIC: Doesn't include the metadata of the instance in the server response.
         - FULL: Returns the metadata of the instance in the server response.
      type: string
      enum:
      - BASIC
      - FULL
      default: BASIC
    IpVersion:
      description: |2-
         - IPV4: IPv4 address, for example 192.0.2.235.
         - IPV6: IPv6 address. Not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    ListDiskOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified disk.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Disk/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/Disk/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Disk/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/Disk/listOperations#responses) to continue paging through the results.
          type: string
    ListDiskPlacementGroupDisksResponse:
      type: object
      properties:
        disks:
          description: Lists disks for the specified placement group.
          type: array
          items:
            $ref: '#/components/schemas/Disk'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is more than [pageSize](/docs/compute/api-ref/DiskPlacementGroup/listDisks#query_params), use
            [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listDisks#responses) as the value
            for the [pageToken](/docs/compute/api-ref/DiskPlacementGroup/listDisks#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listDisks#responses) to continue paging through the results.
          type: string
    ListDiskPlacementGroupOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified placement group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/DiskPlacementGroup/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/DiskPlacementGroup/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/listOperations#responses) to continue paging through the results.
          type: string
    ListDiskPlacementGroupsResponse:
      type: object
      properties:
        diskPlacementGroups:
          description: Lists placement groups for the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/DiskPlacementGroup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/DiskPlacementGroup/list#query_params), use
            [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/DiskPlacementGroup/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/DiskPlacementGroup/list#responses) to continue paging through the results.
          type: string
    ListDiskTypesResponse:
      type: object
      properties:
        diskTypes:
          description: List of disk types.
          type: array
          items:
            $ref: '#/components/schemas/DiskType'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/DiskType/list#query_params), use
            the [nextPageToken](/docs/compute/api-ref/DiskType/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/DiskType/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/DiskType/list#responses) to continue paging through the results.
          type: string
    ListDisksResponse:
      type: object
      properties:
        disks:
          description: List of Disk resources.
          type: array
          items:
            $ref: '#/components/schemas/Disk'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Disk/list#query_params), use
            the [nextPageToken](/docs/compute/api-ref/Disk/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Disk/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/Disk/list#responses) to continue paging through the results.
          type: string
    ListFilesystemOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified filesystem.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/compute/api-ref/Filesystem/listOperations#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/compute/api-ref/Filesystem/listOperations#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListFilesystemsResponse:
      type: object
      properties:
        filesystems:
          description: List of filesystems in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/Filesystem'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/compute/api-ref/Filesystem/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/compute/api-ref/Filesystem/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListHostGroupHostsResponse:
      type: object
      properties:
        hosts:
          description: Lists hosts for the specified host group.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is more than [pageSize](/docs/compute/api-ref/HostGroup/listHosts#query_params), use
            [nextPageToken](/docs/compute/api-ref/HostGroup/listHosts#responses) as the value
            for the [pageToken](/docs/compute/api-ref/HostGroup/listHosts#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/HostGroup/listHosts#responses) to continue paging through the results.
          type: string
    ListHostGroupInstancesResponse:
      type: object
      properties:
        instances:
          description: Lists instances for the specified host group.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is more than [pageSize](/docs/compute/api-ref/HostGroup/listInstances#query_params), use
            [nextPageToken](/docs/compute/api-ref/HostGroup/listInstances#responses) as the value
            for the [pageToken](/docs/compute/api-ref/HostGroup/listInstances#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/HostGroup/listInstances#responses) to continue paging through the results.
          type: string
    ListHostGroupOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified host group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/HostGroup/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/HostGroup/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/HostGroup/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/HostGroup/listOperations#responses) to continue paging through the results.
          type: string
    ListHostGroupsResponse:
      type: object
      properties:
        hostGroups:
          description: Lists host groups for the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/HostGroup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/HostGroup/list#query_params), use
            [nextPageToken](/docs/compute/api-ref/HostGroup/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/HostGroup/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/HostGroup/list#responses) to continue paging through the results.
          type: string
    ListHostTypesResponse:
      type: object
      properties:
        hostTypes:
          description: Lists host types.
          type: array
          items:
            $ref: '#/components/schemas/HostType'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/compute/api-ref/HostType/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/compute/api-ref/HostType/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListImageOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified image.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Image/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/Image/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Image/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/Image/listOperations#responses) to continue paging through the results.
          type: string
    ListImagesResponse:
      type: object
      properties:
        images:
          description: List of images.
          type: array
          items:
            $ref: '#/components/schemas/Image'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Snapshot/list#query_params), use
            the [nextPageToken](/docs/compute/api-ref/Image/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Snapshot/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/Image/list#responses) to continue paging through the results.
          type: string
    ListInstanceOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified instance.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Instance/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/Instance/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Instance/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/Instance/listOperations#responses) to continue paging through the results.
          type: string
    ListInstancesResponse:
      type: object
      properties:
        instances:
          description: List of Instance resources.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Instance/list#query_params), use
            the [nextPageToken](/docs/compute/api-ref/Instance/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Instance/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/Instance/list#responses) to continue paging through the results.
          type: string
    ListPlacementGroupInstancesResponse:
      type: object
      properties:
        instances:
          description: Lists instances for the specified placement group.
          type: array
          items:
            $ref: '#/components/schemas/Instance'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is more than [pageSize](/docs/compute/api-ref/PlacementGroup/listInstances#query_params), use
            [nextPageToken](/docs/compute/api-ref/PlacementGroup/listInstances#responses) as the value
            for the [pageToken](/docs/compute/api-ref/PlacementGroup/listInstances#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/PlacementGroup/listInstances#responses) to continue paging through the results.
          type: string
    ListPlacementGroupOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified placement group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/PlacementGroup/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/PlacementGroup/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/PlacementGroup/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/PlacementGroup/listOperations#responses) to continue paging through the results.
          type: string
    ListPlacementGroupsResponse:
      type: object
      properties:
        placementGroups:
          description: Lists placement groups in the specified folder.
          type: array
          items:
            $ref: '#/components/schemas/PlacementGroup'
        nextPageToken:
          description: |-
            Token for getting the next page of the list. If the number of results is greater than
            the specified [pageSize](/docs/compute/api-ref/PlacementGroup/list#query_params), use `next_page_token` as the value
            for the [pageToken](/docs/compute/api-ref/PlacementGroup/list#query_params) parameter in the next list request.

            Each subsequent page will have its own `next_page_token` to continue paging through the results.
          type: string
    ListSnapshotOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified snapshot.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Snapshot/listOperations#query_params), use the [nextPageToken](/docs/compute/api-ref/Snapshot/listOperations#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Snapshot/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/compute/api-ref/Snapshot/listOperations#responses) to continue paging through the results.
          type: string
    ListSnapshotsResponse:
      type: object
      properties:
        snapshots:
          description: List of snapshots.
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Snapshot/list#query_params), use
            the [nextPageToken](/docs/compute/api-ref/Snapshot/list#responses) as the value
            for the [pageToken](/docs/compute/api-ref/Snapshot/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/compute/api-ref/Snapshot/list#responses) to continue paging through the results.
          type: string
    ListZonesResponse:
      type: object
      properties:
        zones:
          description: List of availability zones.
          type: array
          items:
            $ref: '#/components/schemas/Zone'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/compute/api-ref/Zone/list#query_params), use
            the [pageToken](/docs/compute/api-ref/Zone/list#query_params) as the value
            for the [pageToken](/docs/compute/api-ref/Zone/list#query_params) query parameter
            in the next list request. Subsequent list requests will have their own
            [pageToken](/docs/compute/api-ref/Zone/list#query_params) to continue paging through the results.
          type: string
    MaintenancePolicy:
      description: |2-
         - RESTART: Restart instances on the same host after maintenance event.
         - MIGRATE: Migrate instances to another host before maintenance event.
      type: string
      enum:
      - RESTART
      - MIGRATE
    MetadataOption:
      description: |2-
         - ENABLED: Option is enabled
         - DISABLED: Option is disabled
      type: string
      enum:
      - ENABLED
      - DISABLED
    MetadataOptions:
      type: object
      properties:
        gceHttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpEndpoint'
        awsV1HttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpEndpoint'
        gceHttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpToken'
        awsV1HttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpToken'
    MoveDiskMetadata:
      type: object
      properties:
        diskId:
          description: ID of the disk that is being moved.
          type: string
        sourceFolderId:
          description: ID of the folder that the disk is being moved from.
          type: string
        destinationFolderId:
          description: ID of the folder that the disk is being moved to.
          type: string
    MoveDiskRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the folder to move the disk to.

            To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
    MoveInstanceMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance that is being moved.
          type: string
        sourceFolderId:
          description: ID of the folder that the instance is being moved from.
          type: string
        destinationFolderId:
          description: ID of the folder that the instance is being moved to.
          type: string
    MoveInstanceRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Required.
            ID of the folder to move the instance to.

            To get the folder ID, make a [list](/docs/resource-manager/api-ref/Folder/list) request.

            The maximum string length in characters is 50.
          type: string
    NetworkInterface:
      type: object
      properties:
        index:
          description: |-
            The index of the network interface, generated by the server, 0,1,2... etc.
            Currently only one network interface is supported per instance.
          type: string
        macAddress:
          description: MAC address that is assigned to the network interface.
          type: string
        subnetId:
          description: ID of the subnet.
          type: string
        primaryV4Address:
          $ref: '#/components/schemas/PrimaryAddress_in_NetworkInterface_primaryV4Address'
        primaryV6Address:
          $ref: '#/components/schemas/PrimaryAddress_in_NetworkInterface_primaryV6Address'
        securityGroupIds:
          description: ID's of security groups attached to the interface
          type: array
          items:
            type: string
    NetworkInterfaceSpec:
      type: object
      properties:
        subnetId:
          description: |-
            Required.
            ID of the subnet.

            The maximum string length in characters is 50.
          type: string
        primaryV4AddressSpec:
          $ref: '#/components/schemas/PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV4AddressSpec'
        primaryV6AddressSpec:
          $ref: '#/components/schemas/PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV6AddressSpec'
        securityGroupIds:
          description: ID's of security groups attached to the interface
          type: array
          items:
            type: string
    NetworkSettings:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkSettingsType_in_NetworkSettings_type'
    NetworkSettingsType:
      description: |2-
         - STANDARD: Standard network.
         - SOFTWARE_ACCELERATED: Software accelerated network.
         - HARDWARE_ACCELERATED: Hardware accelerated network (not available yet, reserved for future use).
      type: string
      enum:
      - STANDARD
      - SOFTWARE_ACCELERATED
      - HARDWARE_ACCELERATED
    OneToOneNat:
      type: object
      properties:
        address:
          description: An external IP address associated with this instance.
          type: string
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNat_ipVersion'
        dnsRecords:
          description: External DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    OneToOneNatSpec:
      type: object
      properties:
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNatSpec_ipVersion'
        address:
          type: string
        dnsRecordSpecs:
          description: External DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    Os:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OsType_in_Os_type'
    OsType:
      description: |2-
         - LINUX: Linux operating system.
         - WINDOWS: Windows operating system.
      type: string
      enum:
      - LINUX
      - WINDOWS
    PlacementGroup:
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the placement group. Generated at creation time.
            type: string
          folderId:
            description: ID of the folder that the placement group belongs to.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          name:
            description: |-
              Name of the placement group.
              The name is unique within the folder.
            type: string
          description:
            description: Description of the placement group. 0-256 characters long.
            type: string
          labels:
            description: Placement group labels as `key:value` pairs.
            type: object
            additionalProperties:
              type: string
      - title: placement_strategy
        type: object
        maxProperties: 1
        properties:
          spreadPlacementStrategy:
            $ref: '#/components/schemas/SpreadPlacementStrategy'
            description: |-
              Anti-affinity placement strategy (`spread`). Instances are distributed
              over distinct failure domains.
    PlacementPolicy:
      type: object
      properties:
        placementGroupId:
          description: Placement group ID.
          type: string
        hostAffinityRules:
          description: List of affinity rules. Scheduler will attempt to allocate
            instances according to order of rules.
          type: array
          items:
            $ref: '#/components/schemas/PlacementPolicyHostAffinityRule'
    PlacementPolicyHostAffinityRule:
      description: Affinity definition
      type: object
      properties:
        key:
          description: Affinity label or one of reserved values - 'yc.hostId', 'yc.hostGroupId'
          type: string
        op:
          $ref: '#/components/schemas/PlacementPolicyHostAffinityRuleOperator_in_PlacementPolicyHostAffinityRule_op'
        values:
          description: Affinity value or host ID or host group ID
          type: array
          items:
            type: string
    PlacementPolicyHostAffinityRuleOperator:
      type: string
      enum:
      - IN
      - NOT_IN
    PrimaryAddress:
      type: object
      properties:
        address:
          description: An IPv4 internal network address that is assigned to the instance
            for this network interface.
          type: string
        oneToOneNat:
          $ref: '#/components/schemas/OneToOneNat_in_PrimaryAddress_oneToOneNat'
        dnsRecords:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    PrimaryAddressSpec:
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    RemoveInstanceOneToOneNatMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance.
          type: string
    RemoveInstanceOneToOneNatRequest:
      type: object
      properties:
        networkInterfaceIndex:
          description: The index of the network interface to remove One-to-One NAT
            from.
          type: string
        internalAddress:
          description: The network address that is assigned to the instance for this
            network interface.
          type: string
    Resources:
      type: object
      properties:
        memory:
          description: The amount of memory available to the instance, specified in
            bytes.
          type: string
          format: int64
        cores:
          description: The number of cores available to the instance.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the ability to burst performance above that baseline level.
            This field sets baseline performance for each core.
          type: string
          format: int64
        gpus:
          description: The number of GPUs available to the instance.
          type: string
          format: int64
    ResourcesSpec:
      type: object
      properties:
        memory:
          description: |-
            Required.
            The amount of memory available to the instance, specified in bytes.

            The maximum value is 274877906944.
          type: string
          format: int64
        cores:
          description: |-
            Required.
            The number of cores available to the instance.

            Value must be one of 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76 or 80.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the ability to burst performance above that baseline level.
            This field sets baseline performance for each core.

            For example, if you need only 5% of the CPU performance, you can set core_fraction=5.
            For more information, see [Levels of core performance](/docs/compute/concepts/performance-levels).

            Value must be one of 0, 5, 20, 50 or 100.
          type: string
          format: int64
        gpus:
          description: |-
            The number of GPUs available to the instance.

            Value must be one of 0, 1, 2 or 4.
          type: string
          format: int64
    RestartInstanceMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance.
          type: string
    ScalePolicy:
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
    ScalePolicyFixedScale:
      type: object
      properties:
        size:
          type: string
          format: int64
    SchedulingPolicy:
      type: object
      properties:
        preemptible:
          description: True for short-lived compute instances. For more information,
            see [Preemptible VMs](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    Snapshot:
      description: A Snapshot resource. For more information, see [Snapshots](/docs/compute/concepts/snapshot).
      type: object
      properties:
        id:
          description: ID of the snapshot.
          type: string
        folderId:
          description: ID of the folder that the snapshot belongs to.
          type: string
        createdAt:
          description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text
            format.
          type: string
          format: date-time
        name:
          description: Name of the snapshot. 1-63 characters long.
          type: string
        description:
          description: Description of the snapshot. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `key:value` pairs. Maximum of 64 per resource.
          type: object
          additionalProperties:
            type: string
        storageSize:
          description: Size of the snapshot, specified in bytes.
          type: string
          format: int64
        diskSize:
          description: Size of the disk when the snapshot was created, specified in
            bytes.
          type: string
          format: int64
        productIds:
          description: |-
            License IDs that indicate which licenses are attached to this resource.
            License IDs are used to calculate additional charges for the use of the virtual machine.

            The correct license ID is generated by the platform. IDs are inherited by new resources created from this resource.

            If you know the license IDs, specify them when you create the image.
            For example, if you create a disk image using a third-party utility and load it into Object Storage, the license IDs will be lost.
            You can specify them in the [create](/docs/compute/api-ref/Image/create) request.
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/SnapshotStatus_in_Snapshot_status'
        sourceDiskId:
          description: ID of the source disk used to create this snapshot.
          type: string
    SnapshotStatus:
      description: |2-
         - CREATING: Snapshot is being created.
         - READY: Snapshot is ready to use.
         - ERROR: Snapshot encountered a problem and cannot operate.
         - DELETING: Snapshot is being deleted.
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - DELETING
    SpreadPlacementStrategy:
      description: |-
        This is an empty structure that must be passed to explicitly
        specify the required placement strategy.
      type: object
      properties: {}
    StartInstanceMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance.
          type: string
    StopInstanceMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance that is being deleted.
          type: string
    UpdateDiskMetadata:
      type: object
      properties:
        diskId:
          description: ID of the Disk resource that is being updated.
          type: string
    UpdateDiskPlacementGroupMetadata:
      type: object
      properties:
        diskPlacementGroupId:
          description: ID of the placement group that is being updated.
          type: string
    UpdateDiskPlacementGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateDiskPlacementGroupRequest_updateMask'
        name:
          description: |-
            Name of the placement group.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the placement group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            The existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    UpdateDiskRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateDiskRequest_updateMask'
        name:
          description: |-
            Name of the disk.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the disk.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        size:
          description: |-
            Size of the disk, specified in bytes.

            Acceptable values are 4194304 to 4398046511104, inclusive.
          type: string
          format: int64
        diskPlacementPolicy:
          $ref: '#/components/schemas/DiskPlacementPolicy_in_UpdateDiskRequest_diskPlacementPolicy'
    UpdateFilesystemMetadata:
      type: object
      properties:
        filesystemId:
          description: ID of the filesystem that is being updated.
          type: string
    UpdateFilesystemRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateFilesystemRequest_updateMask'
        name:
          description: |-
            New name of the filesystem. The name must be unique within the folder.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            New description of the filesystem.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            New filesystem labels as `key:value` pairs.
            For details about the concept, see [documentation](/docs/overview/concepts/services#labels).

            Existing set of labels is completely replaced by the provided set, so if you just want
            to add or remove a label:
            1. Get the current set of labels with a [get](/docs/compute/api-ref/Filesystem/get) request.
            2. Add or remove a label in this set.
            3. Send the new set in this field.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        size:
          description: Size of the filesystem, specified in bytes.
          type: string
          format: int64
    UpdateHostGroupMetadata:
      type: object
      properties:
        hostGroupId:
          description: ID of the host group that is being updated.
          type: string
    UpdateHostGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateHostGroupRequest_updateMask'
        name:
          description: |-
            Name of the group.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            The existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        maintenancePolicy:
          $ref: '#/components/schemas/MaintenancePolicy_in_UpdateHostGroupRequest_maintenancePolicy'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_UpdateHostGroupRequest_scalePolicy'
    UpdateImageMetadata:
      type: object
      properties:
        imageId:
          description: ID of the Image resource that is being updated.
          type: string
    UpdateImageRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateImageRequest_updateMask'
        name:
          description: |-
            Name of the image.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the image.

            The maximum string length in characters is 256.
          type: string
        minDiskSize:
          description: |-
            Minimum size of the disk that can be created from this image.
            Specified in bytes. Should be more than the volume of source data and more than the virtual disk size.

            Acceptable values are 4194304 to 4398046511104, inclusive.
          type: string
          format: int64
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    UpdateInstanceMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the Instance resource that is being updated.
          type: string
    UpdateInstanceMetadataMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instance that is being updated.
          type: string
    UpdateInstanceMetadataRequest:
      type: object
      properties:
        delete:
          description: List of keys to be deleted.
          type: array
          items:
            type: string
        upsert:
          description: The metadata `key:value` pairs that will be added or updated
            to this instance.
          type: object
          additionalProperties:
            type: string
    UpdateInstanceNetworkInterfaceMetadata:
      type: object
      properties:
        instanceId:
          description: ID of the instant network interface that is being updated.
          type: string
        networkInterfaceIndex:
          description: The index of the network interface.
          type: string
    UpdateInstanceNetworkInterfaceRequest:
      type: object
      properties:
        networkInterfaceIndex:
          description: |-
            Required.
            The index of the network interface to be updated.
          type: string
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateInstanceNetworkInterfaceRequest_updateMask'
        subnetId:
          description: ID of the subnet.
          type: string
        primaryV4AddressSpec:
          $ref: '#/components/schemas/PrimaryAddressSpec_in_UpdateInstanceNetworkInterfaceRequest_primaryV4AddressSpec'
        primaryV6AddressSpec:
          $ref: '#/components/schemas/PrimaryAddressSpec_in_UpdateInstanceNetworkInterfaceRequest_primaryV6AddressSpec'
        securityGroupIds:
          description: ID's of security groups attached to the interface.
          type: array
          items:
            type: string
    UpdateInstanceRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateInstanceRequest_updateMask'
        name:
          description: |-
            Name of the instance.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the instance.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        platformId:
          description: |-
            ID of the hardware platform configuration for the instance.
            This field affects the available values in [resourcesSpec](/docs/compute/api-ref/Instance/update#body_params) field.

            Platforms allows you to create various types of instances: with a large amount of memory,
            with a large number of cores, with a burstable performance.
            For more information, see [Platforms](/docs/compute/concepts/vm-platforms).
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_UpdateInstanceRequest_resourcesSpec'
        metadata:
          description: |-
            The metadata `key:value` pairs that will be assigned to this instance. This includes custom metadata and predefined keys.
            The total size of all keys and values must be less than 512 KB.

            Existing set of `metadata` is completely replaced by the provided set.

            Values are free-form strings, and only have meaning as interpreted by the programs which configure the instance.
            The values must be 256 KB or less.

            For example, you may use the metadata in order to provide your public SSH key to the instance.
            For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
          type: object
          additionalProperties:
            type: string
        metadataOptions:
          $ref: '#/components/schemas/MetadataOptions_in_UpdateInstanceRequest_metadataOptions'
        serviceAccountId:
          description: |-
            ID of the service account to use for [authentication inside the instance](/docs/compute/operations/vm-connect/auth-inside-vm).
            To get the service account ID, use a [list](/docs/iam/api-ref/ServiceAccount/list) request.
          type: string
        networkSettings:
          $ref: '#/components/schemas/NetworkSettings_in_UpdateInstanceRequest_networkSettings'
        placementPolicy:
          $ref: '#/components/schemas/PlacementPolicy_in_UpdateInstanceRequest_placementPolicy'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_UpdateInstanceRequest_schedulingPolicy'
    UpdatePlacementGroupMetadata:
      type: object
      properties:
        placementGroupId:
          description: ID of the placement group that is being updated.
          type: string
    UpdatePlacementGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdatePlacementGroupRequest_updateMask'
        name:
          description: Name of the placement group.
          type: string
        description:
          description: Description of the placement group.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            The existing set of `labels` is completely replaced by the provided set.
          type: object
          additionalProperties:
            type: string
    UpdateSnapshotMetadata:
      type: object
      properties:
        snapshotId:
          description: ID of the Snapshot resource that is being updated.
          type: string
    UpdateSnapshotRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateSnapshotRequest_updateMask'
        name:
          description: |-
            Name of the snapshot.

            Value must match the regular expression `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Description of the snapshot.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_./\@0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_./\@0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    Zone:
      description: Availability zone. For more information, see [Availability zones](/docs/overview/concepts/geo-scope).
      type: object
      properties:
        id:
          description: ID of the zone.
          type: string
        regionId:
          description: ID of the region.
          type: string
        status:
          $ref: '#/components/schemas/ZoneStatus_in_Zone_status'
    ZoneStatus:
      description: |2-
         - UP: Zone is available. You can access the resources allocated in this zone.
         - DOWN: Zone is not available.
      type: string
      enum:
      - UP
      - DOWN
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    OneToOneNatSpec_in_AddInstanceOneToOneNatRequest_oneToOneNatSpec:
      description: |-
        An external IP address configuration.
        If not specified, then this instance will have no external internet access.
      type: object
      properties:
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNatSpec_ipVersion'
        address:
          type: string
        dnsRecordSpecs:
          description: External DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    AttachedDiskSpec_in_AttachInstanceDiskRequest_attachedDiskSpec:
      description: |-
        Required.
        Disk that should be attached.
      type: object
      allOf:
      - type: object
        properties:
          mode:
            $ref: '#/components/schemas/AttachedDiskSpecMode'
            description: The mode in which to attach this disk.
          deviceName:
            description: |-
              Specifies a unique serial number of your choice that is reflected into the /dev/disk/by-id/ tree
              of a Linux operating system running within the instance.

              This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
              If not specified, a random value will be generated.

              Value must match the regular expression `` [a-z][a-z0-9-_]{,19} ``.
            type: string
          autoDelete:
            description: Specifies whether the disk will be auto-deleted when the
              instance is deleted.
            type: boolean
            format: boolean
      - title: disk
        type: object
        maxProperties: 1
        properties:
          diskSpec:
            $ref: '#/components/schemas/AttachedDiskSpecDiskSpec'
            description: Disk specification.
          diskId:
            description: |-
              ID of the disk that should be attached.

              The maximum string length in characters is 50.
            type: string
    AttachedFilesystemSpec_in_AttachInstanceFilesystemRequest_attachedFilesystemSpec:
      description: |-
        Required.
        Filesystem to attach to the instance.
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AttachedFilesystemSpecMode_in_AttachedFilesystemSpec_mode'
        deviceName:
          description: |-
            Name of the device representing the filesystem on the instance.

            The name should be used for referencing the filesystem from within the instance
            when it's being mounted, resized etc.

            If not specified, a random value will be generated.

            Value must match the regular expression `` [a-z][a-z0-9-_]{,19} ``.
          type: string
        filesystemId:
          description: |-
            ID of the filesystem that should be attached.

            The maximum string length in characters is 50.
          type: string
    AttachedDiskMode_in_AttachedDisk_mode:
      description: |-
        Access mode to the Disk resource.

         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    AttachedFilesystemMode_in_AttachedFilesystem_mode:
      description: |-
        Access mode to the filesystem.

         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    AttachedFilesystemSpecMode_in_AttachedFilesystemSpec_mode:
      description: |-
        Mode of access to the filesystem that should be attached.

         - READ_ONLY: Read-only access.
         - READ_WRITE: Read/Write access. Default value.
      type: string
      enum:
      - READ_ONLY
      - READ_WRITE
    MaintenancePolicy_in_CreateHostGroupRequest_maintenancePolicy:
      description: |-
        Behaviour on maintenance events.

         - RESTART: Restart instances on the same host after maintenance event.
         - MIGRATE: Migrate instances to another host before maintenance event.
      type: string
      enum:
      - RESTART
      - MIGRATE
    ScalePolicy_in_CreateHostGroupRequest_scalePolicy:
      description: Scale policy. Only fixed number of hosts are supported at this
        moment.
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
    ResourcesSpec_in_CreateInstanceRequest_resourcesSpec:
      description: |-
        Required.
        Computing resources of the instance, such as the amount of memory and number of cores.
        To get a list of available values, see [Levels of core performance](/docs/compute/concepts/performance-levels).
      type: object
      properties:
        memory:
          description: |-
            Required.
            The amount of memory available to the instance, specified in bytes.

            The maximum value is 274877906944.
          type: string
          format: int64
        cores:
          description: |-
            Required.
            The number of cores available to the instance.

            Value must be one of 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76 or 80.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the ability to burst performance above that baseline level.
            This field sets baseline performance for each core.

            For example, if you need only 5% of the CPU performance, you can set core_fraction=5.
            For more information, see [Levels of core performance](/docs/compute/concepts/performance-levels).

            Value must be one of 0, 5, 20, 50 or 100.
          type: string
          format: int64
        gpus:
          description: |-
            The number of GPUs available to the instance.

            Value must be one of 0, 1, 2 or 4.
          type: string
          format: int64
    MetadataOptions_in_CreateInstanceRequest_metadataOptions:
      description: Options allow user to configure access to instance's metadata
      type: object
      properties:
        gceHttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpEndpoint'
        awsV1HttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpEndpoint'
        gceHttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpToken'
        awsV1HttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpToken'
    AttachedDiskSpec_in_CreateInstanceRequest_bootDiskSpec:
      description: |-
        Required.
        Boot disk to attach to the instance.
      type: object
      allOf:
      - type: object
        properties:
          mode:
            $ref: '#/components/schemas/AttachedDiskSpecMode'
            description: The mode in which to attach this disk.
          deviceName:
            description: |-
              Specifies a unique serial number of your choice that is reflected into the /dev/disk/by-id/ tree
              of a Linux operating system running within the instance.

              This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
              If not specified, a random value will be generated.

              Value must match the regular expression `` [a-z][a-z0-9-_]{,19} ``.
            type: string
          autoDelete:
            description: Specifies whether the disk will be auto-deleted when the
              instance is deleted.
            type: boolean
            format: boolean
      - title: disk
        type: object
        maxProperties: 1
        properties:
          diskSpec:
            $ref: '#/components/schemas/AttachedDiskSpecDiskSpec'
            description: Disk specification.
          diskId:
            description: |-
              ID of the disk that should be attached.

              The maximum string length in characters is 50.
            type: string
    SchedulingPolicy_in_CreateInstanceRequest_schedulingPolicy:
      description: Scheduling policy configuration.
      type: object
      properties:
        preemptible:
          description: True for short-lived compute instances. For more information,
            see [Preemptible VMs](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    NetworkSettings_in_CreateInstanceRequest_networkSettings:
      description: Network settings.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkSettingsType_in_NetworkSettings_type'
    PlacementPolicy_in_CreateInstanceRequest_placementPolicy:
      description: Placement policy configuration.
      type: object
      properties:
        placementGroupId:
          description: Placement group ID.
          type: string
        hostAffinityRules:
          description: List of affinity rules. Scheduler will attempt to allocate
            instances according to order of rules.
          type: array
          items:
            $ref: '#/components/schemas/PlacementPolicyHostAffinityRule'
    FilesystemStatus_in_Filesystem_status:
      description: |-
        Current status of the filesystem.

         - CREATING: The filesystem is being created.
         - READY: The filesystem is ready to use.
         - ERROR: The filesystem encountered a problem and cannot operate.
         - DELETING: The filesystem is being deleted.
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - DELETING
    HostStatus_in_Host_status:
      description: Current status of the host. New instances are unable to start on
        host in DOWN status.
      type: string
      enum:
      - UP
      - DOWN
    HostGroupStatus_in_HostGroup_status:
      description: Status of the group.
      type: string
      enum:
      - CREATING
      - READY
      - UPDATING
      - DELETING
    MaintenancePolicy_in_HostGroup_maintenancePolicy:
      description: |-
        Behaviour on maintenance events.

         - RESTART: Restart instances on the same host after maintenance event.
         - MIGRATE: Migrate instances to another host before maintenance event.
      type: string
      enum:
      - RESTART
      - MIGRATE
    ScalePolicy_in_HostGroup_scalePolicy:
      description: Scale policy. Only fixed number of hosts are supported at this
        moment.
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
    ImageStatus_in_Image_status:
      description: |-
        Current status of the image.

         - CREATING: Image is being created.
         - READY: Image is ready to use.
         - ERROR: Image encountered a problem and cannot operate.
         - DELETING: Image is being deleted.
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - DELETING
    Os_in_Image_os:
      description: Operating system that is contained in the image.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OsType_in_Os_type'
    Resources_in_Instance_resources:
      description: Computing resources of the instance such as the amount of memory
        and number of cores.
      type: object
      properties:
        memory:
          description: The amount of memory available to the instance, specified in
            bytes.
          type: string
          format: int64
        cores:
          description: The number of cores available to the instance.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the ability to burst performance above that baseline level.
            This field sets baseline performance for each core.
          type: string
          format: int64
        gpus:
          description: The number of GPUs available to the instance.
          type: string
          format: int64
    InstanceStatus_in_Instance_status:
      description: |-
        Status of the instance.

         - PROVISIONING: Instance is waiting for resources to be allocated.
         - RUNNING: Instance is running normally.
         - STOPPING: Instance is being stopped.
         - STOPPED: Instance stopped.
         - STARTING: Instance is being started.
         - RESTARTING: Instance is being restarted.
         - UPDATING: Instance is being updated.
         - ERROR: Instance encountered a problem and cannot operate.
         - CRASHED: Instance crashed and will be restarted automatically.
         - DELETING: Instance is being deleted.
      type: string
      enum:
      - PROVISIONING
      - RUNNING
      - STOPPING
      - STOPPED
      - STARTING
      - RESTARTING
      - UPDATING
      - ERROR
      - CRASHED
      - DELETING
    MetadataOptions_in_Instance_metadataOptions:
      description: Options allow user to configure access to instance's metadata
      type: object
      properties:
        gceHttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpEndpoint'
        awsV1HttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpEndpoint'
        gceHttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpToken'
        awsV1HttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpToken'
    AttachedDisk_in_Instance_bootDisk:
      description: Boot disk that is attached to the instance.
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/AttachedDiskMode_in_AttachedDisk_mode'
        deviceName:
          description: |-
            Serial number that is reflected into the /dev/disk/by-id/ tree
            of a Linux operating system running within the instance.

            This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
          type: string
        autoDelete:
          description: Specifies whether the disk will be auto-deleted when the instance
            is deleted.
          type: boolean
          format: boolean
        diskId:
          description: ID of the disk that is attached to the instance.
          type: string
    SchedulingPolicy_in_Instance_schedulingPolicy:
      description: Scheduling policy configuration.
      type: object
      properties:
        preemptible:
          description: True for short-lived compute instances. For more information,
            see [Preemptible VMs](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    NetworkSettings_in_Instance_networkSettings:
      description: Network Settings
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkSettingsType_in_NetworkSettings_type'
    PlacementPolicy_in_Instance_placementPolicy:
      description: Placement policy configuration.
      type: object
      properties:
        placementGroupId:
          description: Placement group ID.
          type: string
        hostAffinityRules:
          description: List of affinity rules. Scheduler will attempt to allocate
            instances according to order of rules.
          type: array
          items:
            $ref: '#/components/schemas/PlacementPolicyHostAffinityRule'
    MetadataOption_in_MetadataOptions_gceHttpEndpoint:
      description: |-
        Enabled access to GCE flavored metadata

         - ENABLED: Option is enabled
         - DISABLED: Option is disabled
      type: string
      enum:
      - ENABLED
      - DISABLED
    MetadataOption_in_MetadataOptions_awsV1HttpEndpoint:
      description: |-
        Enabled access to AWS flavored metadata (IMDSv1)

         - ENABLED: Option is enabled
         - DISABLED: Option is disabled
      type: string
      enum:
      - ENABLED
      - DISABLED
    MetadataOption_in_MetadataOptions_gceHttpToken:
      description: |-
        Enabled access to IAM credentials with GCE flavored metadata

         - ENABLED: Option is enabled
         - DISABLED: Option is disabled
      type: string
      enum:
      - ENABLED
      - DISABLED
    MetadataOption_in_MetadataOptions_awsV1HttpToken:
      description: |-
        Enabled access to IAM credentials with AWS flavored metadata (IMDSv1)

         - ENABLED: Option is enabled
         - DISABLED: Option is disabled
      type: string
      enum:
      - ENABLED
      - DISABLED
    PrimaryAddress_in_NetworkInterface_primaryV4Address:
      description: Primary IPv4 address that is assigned to the instance for this
        network interface.
      type: object
      properties:
        address:
          description: An IPv4 internal network address that is assigned to the instance
            for this network interface.
          type: string
        oneToOneNat:
          $ref: '#/components/schemas/OneToOneNat_in_PrimaryAddress_oneToOneNat'
        dnsRecords:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    PrimaryAddress_in_NetworkInterface_primaryV6Address:
      description: Primary IPv6 address that is assigned to the instance for this
        network interface. IPv6 not available yet.
      type: object
      properties:
        address:
          description: An IPv4 internal network address that is assigned to the instance
            for this network interface.
          type: string
        oneToOneNat:
          $ref: '#/components/schemas/OneToOneNat_in_PrimaryAddress_oneToOneNat'
        dnsRecords:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV4AddressSpec:
      description: Primary IPv4 address that will be assigned to the instance for
        this network interface.
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    PrimaryAddressSpec_in_NetworkInterfaceSpec_primaryV6AddressSpec:
      description: Primary IPv6 address that will be assigned to the instance for
        this network interface. IPv6 not available yet.
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    NetworkSettingsType_in_NetworkSettings_type:
      description: |-
        Network Type

         - STANDARD: Standard network.
         - SOFTWARE_ACCELERATED: Software accelerated network.
         - HARDWARE_ACCELERATED: Hardware accelerated network (not available yet, reserved for future use).
      type: string
      enum:
      - STANDARD
      - SOFTWARE_ACCELERATED
      - HARDWARE_ACCELERATED
    IpVersion_in_OneToOneNat_ipVersion:
      description: |-
        IP version for the external IP address.

         - IPV4: IPv4 address, for example 192.0.2.235.
         - IPV6: IPv6 address. Not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    IpVersion_in_OneToOneNatSpec_ipVersion:
      description: |-
        External IP address version.

         - IPV4: IPv4 address, for example 192.0.2.235.
         - IPV6: IPv6 address. Not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    OsType_in_Os_type:
      description: |-
        Operating system type. The default is `LINUX`.

        This field is used to correctly emulate a vCPU and calculate the cost of using an instance.

         - LINUX: Linux operating system.
         - WINDOWS: Windows operating system.
      type: string
      enum:
      - LINUX
      - WINDOWS
    PlacementPolicyHostAffinityRuleOperator_in_PlacementPolicyHostAffinityRule_op:
      description: Include or exclude action
      type: string
      enum:
      - IN
      - NOT_IN
    OneToOneNat_in_PrimaryAddress_oneToOneNat:
      description: One-to-one NAT configuration. If missing, NAT has not been set
        up.
      type: object
      properties:
        address:
          description: An external IP address associated with this instance.
          type: string
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNat_ipVersion'
        dnsRecords:
          description: External DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec:
      description: |-
        An external IP address configuration.
        If not specified, then this instance will have no external internet access.
      type: object
      properties:
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNatSpec_ipVersion'
        address:
          type: string
        dnsRecordSpecs:
          description: External DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    SnapshotStatus_in_Snapshot_status:
      description: |-
        Current status of the snapshot.

         - CREATING: Snapshot is being created.
         - READY: Snapshot is ready to use.
         - ERROR: Snapshot encountered a problem and cannot operate.
         - DELETING: Snapshot is being deleted.
      type: string
      enum:
      - CREATING
      - READY
      - ERROR
      - DELETING
    FieldMask_in_UpdateDiskPlacementGroupRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the DiskPlacementGroup resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateDiskRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Disk resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    DiskPlacementPolicy_in_UpdateDiskRequest_diskPlacementPolicy:
      description: Placement policy configuration.
      type: object
      properties:
        placementGroupId:
          description: Placement group ID.
          type: string
    FieldMask_in_UpdateFilesystemRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the filesystem should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateHostGroupRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the HostGroup resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    MaintenancePolicy_in_UpdateHostGroupRequest_maintenancePolicy:
      description: |-
        Behaviour on maintenance events

         - RESTART: Restart instances on the same host after maintenance event.
         - MIGRATE: Migrate instances to another host before maintenance event.
      type: string
      enum:
      - RESTART
      - MIGRATE
    ScalePolicy_in_UpdateHostGroupRequest_scalePolicy:
      description: Scale policy. Only fixed number of hosts are supported at this
        moment.
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
    FieldMask_in_UpdateImageRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Image resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateInstanceNetworkInterfaceRequest_updateMask:
      description: |-
        Field mask that specifies which attributes of the instance should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    PrimaryAddressSpec_in_UpdateInstanceNetworkInterfaceRequest_primaryV4AddressSpec:
      description: Primary IPv4 address that will be assigned to the instance for
        this network interface.
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    PrimaryAddressSpec_in_UpdateInstanceNetworkInterfaceRequest_primaryV6AddressSpec:
      description: Primary IPv6 address that will be assigned to the instance for
        this network interface. IPv6 not available yet.
      type: object
      properties:
        address:
          description: |-
            An IPv4 internal network address that is assigned to the instance for this network interface.
            If not specified by the user, an unused internal IP is assigned by the system.
          type: string
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_PrimaryAddressSpec_oneToOneNatSpec'
        dnsRecordSpecs:
          description: Internal DNS configuration
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSpec'
    FieldMask_in_UpdateInstanceRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Instance resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ResourcesSpec_in_UpdateInstanceRequest_resourcesSpec:
      description: |-
        Computing resources of the instance, such as the amount of memory and number of cores.
        To get a list of available values, see [Levels of core performance](/docs/compute/concepts/performance-levels).
      type: object
      properties:
        memory:
          description: |-
            Required.
            The amount of memory available to the instance, specified in bytes.

            The maximum value is 274877906944.
          type: string
          format: int64
        cores:
          description: |-
            Required.
            The number of cores available to the instance.

            Value must be one of 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76 or 80.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the ability to burst performance above that baseline level.
            This field sets baseline performance for each core.

            For example, if you need only 5% of the CPU performance, you can set core_fraction=5.
            For more information, see [Levels of core performance](/docs/compute/concepts/performance-levels).

            Value must be one of 0, 5, 20, 50 or 100.
          type: string
          format: int64
        gpus:
          description: |-
            The number of GPUs available to the instance.

            Value must be one of 0, 1, 2 or 4.
          type: string
          format: int64
    MetadataOptions_in_UpdateInstanceRequest_metadataOptions:
      description: Options allow user to configure access to instance's metadata
      type: object
      properties:
        gceHttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpEndpoint'
        awsV1HttpEndpoint:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpEndpoint'
        gceHttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_gceHttpToken'
        awsV1HttpToken:
          $ref: '#/components/schemas/MetadataOption_in_MetadataOptions_awsV1HttpToken'
    NetworkSettings_in_UpdateInstanceRequest_networkSettings:
      description: Network settings.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NetworkSettingsType_in_NetworkSettings_type'
    PlacementPolicy_in_UpdateInstanceRequest_placementPolicy:
      description: Placement policy configuration.
      type: object
      properties:
        placementGroupId:
          description: Placement group ID.
          type: string
        hostAffinityRules:
          description: List of affinity rules. Scheduler will attempt to allocate
            instances according to order of rules.
          type: array
          items:
            $ref: '#/components/schemas/PlacementPolicyHostAffinityRule'
    SchedulingPolicy_in_UpdateInstanceRequest_schedulingPolicy:
      description: Scheduling policy configuration.
      type: object
      properties:
        preemptible:
          description: True for short-lived compute instances. For more information,
            see [Preemptible VMs](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    FieldMask_in_UpdatePlacementGroupRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the PlacementGroup resource should be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    FieldMask_in_UpdateSnapshotRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the Snapshot resource are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ZoneStatus_in_Zone_status:
      description: |-
        Status of the zone.

         - UP: Zone is available. You can access the resources allocated in this zone.
         - DOWN: Zone is not available.
      type: string
      enum:
      - UP
      - DOWN
tags:
- name: DiskPlacementGroup
  description: A set of methods for managing DiskPlacementGroup resources.
- name: Disk
  description: A set of methods for managing Disk resources.
- name: DiskType
  description: A set of methods to retrieve information about disk types.
- name: Filesystem
  description: A set of methods for managing filesystems.
- name: HostGroup
  description: A set of methods for managing groups of dedicated hosts.
- name: HostType
  description: Set of methods to view possible host configurations.
- name: Image
  description: A set of methods for managing Image resources.
- name: Instance
  description: A set of methods for managing Instance resources.
- name: PlacementGroup
  description: A set of methods for managing placement groups.
- name: Snapshot
  description: A set of methods for managing Snapshot resources.
- name: Zone
  description: A set of methods to retrieve information about availability zones.
