openapi: 3.0.0
info:
  title: Title not set.
  description: Description not set.
  version: Version not set.
paths:
  /loadtesting/agent/v1/agents/register:
    post:
      tags:
      - AgentRegistration
      summary: Registers specified agent.
      operationId: AgentRegistrationRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
      x-y-navtitle: register
  /loadtesting/agent/v1/agents/externalAgentsRegister:
    post:
      tags:
      - AgentRegistration
      summary: Registers external agent.
      operationId: AgentRegistrationExternalAgentRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalAgentRegisterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: externalAgentRegister
      x-y-operation-metadata:
        $ref: '#/components/schemas/ExternalAgentRegisterMetadata'
      x-y-operation-response: '`AgentInstance`'
  /loadtesting/agent/v1/agents/{agentInstanceId}/claimStatus:
    post:
      tags:
      - Agent
      summary: Claims status for the specified agent.
      operationId: AgentClaimStatus
      parameters:
      - name: agentInstanceId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimAgentStatusRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimAgentStatusResponse'
      x-y-navtitle: claimStatus
  /loadtesting/agent/v1/tanks/{tankId}/sayHello:
    get:
      tags:
      - Greeter
      summary: Says hello from specified tank.
      operationId: GreeterSayHello
      parameters:
      - name: tankId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SayHelloResponse'
      x-y-navtitle: sayHello
  /loadtesting/agent/v1/jobs/{jobId}/claimStatus:
    post:
      tags:
      - Job
      summary: Claims status for the specified job.
      operationId: JobClaimStatus
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimJobStatusRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimJobStatusResponse'
      x-y-navtitle: claimStatus
  /loadtesting/agent/v1/agents/{agentInstanceId}/getJob:
    get:
      tags:
      - Job
      summary: Returns the job for the specified agent.
      operationId: JobGet
      parameters:
      - name: agentInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: computeInstanceId
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      x-y-navtitle: get
  /loadtesting/agent/v1/jobs/{jobId}/getSignal:
    get:
      tags:
      - Job
      summary: Returns the signal for the specified job.
      operationId: JobGetSignal
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSignalResponse'
      x-y-navtitle: getSignal
  /loadtesting/agent/v1/tanks/{computeInstanceId}/claimStatus:
    post:
      tags:
      - Tank
      summary: Claims specified tank's status.
      operationId: TankClaimStatus
      parameters:
      - name: computeInstanceId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimTankStatusRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimTankStatusResponse'
      x-y-navtitle: claimStatus
  /loadtesting/agent/v1/tests/{testId}:
    get:
      tags:
      - Test
      summary: Returns test by test id.
      operationId: TestGet
      parameters:
      - name: testId
        in: path
        description: |-
          Required.
          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
      x-y-navtitle: get
    patch:
      tags:
      - Test
      summary: Updates the specified test.
      operationId: TestUpdate
      parameters:
      - name: testId
        in: path
        description: |-
          Required.
          The maximum string length in characters is 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTestRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateTestMetadata'
      x-y-operation-response: '[Test](/Test#representation)'
  /loadtesting/agent/v1/tests:
    post:
      tags:
      - Test
      summary: Creates test for the specified folder.
      operationId: TestCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateTestMetadata'
      x-y-operation-response: '[Test](/Test#representation)'
  /loadtesting/agent/v1/trails:
    post:
      tags:
      - Trail
      summary: Creates trail for specified job.
      operationId: TrailCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrailRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTrailResponse'
      x-y-navtitle: create
components:
  schemas:
    AgentInstance:
      type: object
      properties:
        id:
          type: string
    AmmoType:
      description: |-
        Ammo type for generators: phantom.ammo_type,
        ammo.type in pandora.config_content.pool
      type: string
      enum:
      - HTTP_JSON
      - RAW
      - URI
      - URIPOST
      - PHANTOM
      - ACCESS
    ClaimAgentStatusRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ClaimAgentStatusRequestStatus_in_ClaimAgentStatusRequest_status'
    ClaimAgentStatusRequestStatus:
      type: string
      enum:
      - READY_FOR_TEST
      - PREPARING_TEST
      - TESTING
      - TANK_FAILED
    ClaimAgentStatusResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    ClaimJobStatusRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ClaimJobStatusRequestJobStatus_in_ClaimJobStatusRequest_status'
        error:
          type: string
    ClaimJobStatusRequestJobStatus:
      type: string
      enum:
      - POST_PROCESS
      - INITIATED
      - PREPARING
      - NOT_FOUND
      - RUNNING
      - FINISHING
      - FINISHED
      - STOPPED
      - FAILED
      - AUTOSTOPPED
    ClaimJobStatusResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    ClaimTankStatusRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ClaimTankStatusRequestStatus_in_ClaimTankStatusRequest_status'
    ClaimTankStatusRequestStatus:
      type: string
      enum:
      - READY_FOR_TEST
      - PREPARING_TEST
      - TESTING
      - TANK_FAILED
    ClaimTankStatusResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    CreateTestMetadata:
      type: object
      properties:
        testId:
          type: string
    CreateTestRequest:
      type: object
      properties:
        folderId:
          description: |-
            Required.
            The maximum string length in characters is 50.
          type: string
        name:
          description: Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9]
            ``.
          type: string
        description:
          description: The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        generator:
          $ref: '#/components/schemas/TestGenerator_in_CreateTestRequest_generator'
        agentInstanceId:
          description: |-
            Required.
            The maximum string length in characters is 50.
          type: string
        targetAddress:
          description: |-
            Required.
            Fields for TankConfig creation. These fields have the higher priority than yaml config.
            These fields are taken from Form

            The maximum string length in characters is 50.
          type: string
        targetPort:
          type: string
          format: int64
        targetVersion:
          description: The maximum string length in characters is 50.
          type: string
        instances:
          type: string
          format: int64
        loadSchedule:
          $ref: '#/components/schemas/Schedule_in_CreateTestRequest_loadSchedule'
        config:
          description: Required.
          type: string
        ammoId:
          description: The maximum string length in characters is 50.
          type: string
        ammoUrls:
          description: The maximum string length in characters for each value is 1024.
          type: array
          items:
            type: string
        ammoHeaders:
          type: array
          items:
            type: string
        ammoType:
          $ref: '#/components/schemas/AmmoType_in_CreateTestRequest_ammoType'
        ssl:
          type: boolean
          format: boolean
        imbalancePoint:
          type: string
          format: int64
        imbalanceTs:
          type: string
          format: int64
        loggingLogGroupId:
          type: string
    CreateTrailRequest:
      type: object
      properties:
        computeInstanceId:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trail'
        jobId:
          type: string
    CreateTrailResponse:
      type: object
      properties:
        trailId:
          type: string
        code:
          type: string
          format: int64
    ExternalAgentRegisterMetadata:
      type: object
      properties:
        agentInstanceId:
          type: string
    ExternalAgentRegisterRequest:
      type: object
      properties:
        folderId:
          type: string
        computeInstanceId:
          type: string
        name:
          type: string
        agentVersion:
          type: string
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    File:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
          format: byte
    Job:
      type: object
      properties:
        id:
          type: string
        config:
          type: string
        ammo:
          $ref: '#/components/schemas/File_in_Job_ammo'
        loggingLogGroupId:
          type: string
        testData:
          $ref: '#/components/schemas/StorageObject_in_Job_testData'
    JobSignalResponse:
      type: object
      properties:
        signal:
          $ref: '#/components/schemas/JobSignalResponseSignal_in_JobSignalResponse_signal'
    JobSignalResponseSignal:
      type: string
      enum:
      - STOP
    LoadSchedule:
      description: |-
        Load schedule string:
        {duration: 180s, type: line, from: 1, to: 10000} for pandora,
        step(25, 5, 5, 60) for phantom.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ScheduleType_in_LoadSchedule_type'
        instances:
          type: string
          format: int64
        duration:
          type: string
        rpsFrom:
          type: string
          format: int64
        rpsTo:
          type: string
          format: int64
        step:
          type: string
          format: int64
        ops:
          type: string
          format: int64
        stpdPath:
          type: string
    LoadType:
      description: 'Load type: phantom.load_profile.load_type,'
      type: string
      enum:
      - RPS
      - INSTANCES
      - STPD_FILE
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RegisterRequest:
      type: object
      properties:
        computeInstanceId:
          type: string
    RegisterResponse:
      type: object
      properties:
        agentInstanceId:
          type: string
    SayHelloResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    Schedule:
      description: 'Load profile in general: phantom.load_profile, pool schedule for
        pandora'
      type: object
      properties:
        loadType:
          $ref: '#/components/schemas/LoadType_in_Schedule_loadType'
        loadSchedule:
          type: array
          items:
            $ref: '#/components/schemas/LoadSchedule'
        loadProfile:
          type: array
          items:
            type: string
    ScheduleType:
      description: |-
        Schedule type: phantom.load_profile.schedule,
        rps.schedule.type in pandora.config_content.pool
      type: string
      enum:
      - ONCE
      - CONST
      - LINE
      - STEP
    StorageObject:
      type: object
      properties:
        objectStorageBucket:
          type: string
        objectStorageFilename:
          type: string
    Test:
      type: object
      allOf:
      - type: object
        properties:
          id:
            type: string
          folderId:
            type: string
          name:
            type: string
          description:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
          createdAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          startedAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          finishedAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          updatedAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          generator:
            $ref: '#/components/schemas/TestGenerator'
          agentInstanceId:
            description: AgentInstance ID where Test is running.
            type: string
          targetAddress:
            description: Target VM.
            type: string
          targetPort:
            type: string
            format: int64
          targetVersion:
            description: Version of object under test.
            type: string
          config:
            description: Test details
            type: string
          cases:
            type: array
            items:
              type: string
          status:
            $ref: '#/components/schemas/TestStatus'
          errors:
            type: array
            items:
              type: string
          favorite:
            type: boolean
            format: boolean
      - title: ammo
        type: object
        maxProperties: 1
        properties:
          ammoUrls:
            type: string
          ammoId:
            type: string
    TestGenerator:
      type: string
      enum:
      - PANDORA
      - PHANTOM
    TestStatus:
      type: string
      enum:
      - CREATED
      - INITIATED
      - PREPARING
      - RUNNING
      - FINISHING
      - DONE
      - POST_PROCESSING
      - FAILED
      - STOPPING
      - STOPPED
      - AUTOSTOPPED
    Trail:
      type: object
      properties:
        overall:
          type: string
          format: int64
        caseId:
          type: string
        time:
          type: string
        reqps:
          type: string
          format: int64
        resps:
          type: string
          format: int64
        expect:
          type: number
          format: double
        input:
          type: string
          format: int64
        output:
          type: string
          format: int64
        connectTime:
          type: number
          format: double
        sendTime:
          type: number
          format: double
        latency:
          type: number
          format: double
        receiveTime:
          type: number
          format: double
        threads:
          type: string
          format: int64
        q50:
          type: number
          format: double
        q75:
          type: number
          format: double
        q80:
          type: number
          format: double
        q85:
          type: number
          format: double
        q90:
          type: number
          format: double
        q95:
          type: number
          format: double
        q98:
          type: number
          format: double
        q99:
          type: number
          format: double
        q100:
          type: number
          format: double
        httpCodes:
          type: array
          items:
            $ref: '#/components/schemas/TrailCodes'
        netCodes:
          type: array
          items:
            $ref: '#/components/schemas/TrailCodes'
        timeIntervals:
          type: array
          items:
            $ref: '#/components/schemas/TrailIntervals'
    TrailCodes:
      type: object
      properties:
        code:
          type: string
          format: int64
        count:
          type: string
          format: int64
    TrailIntervals:
      type: object
      properties:
        to:
          type: number
          format: double
        count:
          type: string
          format: int64
    UpdateTestMetadata:
      type: object
      properties:
        testId:
          type: string
    UpdateTestRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateTestRequest_updateMask'
        name:
          description: Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9]
            ``.
          type: string
        description:
          description: The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        favorite:
          type: boolean
          format: boolean
        targetVersion:
          description: The maximum string length in characters is 50.
          type: string
        imbalancePoint:
          type: string
          format: int64
        imbalanceTs:
          type: string
          format: int64
        imbalanceComment:
          type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    ClaimAgentStatusRequestStatus_in_ClaimAgentStatusRequest_status:
      type: string
      enum:
      - READY_FOR_TEST
      - PREPARING_TEST
      - TESTING
      - TANK_FAILED
    ClaimJobStatusRequestJobStatus_in_ClaimJobStatusRequest_status:
      type: string
      enum:
      - POST_PROCESS
      - INITIATED
      - PREPARING
      - NOT_FOUND
      - RUNNING
      - FINISHING
      - FINISHED
      - STOPPED
      - FAILED
      - AUTOSTOPPED
    ClaimTankStatusRequestStatus_in_ClaimTankStatusRequest_status:
      type: string
      enum:
      - READY_FOR_TEST
      - PREPARING_TEST
      - TESTING
      - TANK_FAILED
    TestGenerator_in_CreateTestRequest_generator:
      type: string
      enum:
      - PANDORA
      - PHANTOM
    Schedule_in_CreateTestRequest_loadSchedule:
      description: 'Load profile in general: phantom.load_profile, pool schedule for
        pandora'
      type: object
      properties:
        loadType:
          $ref: '#/components/schemas/LoadType_in_Schedule_loadType'
        loadSchedule:
          type: array
          items:
            $ref: '#/components/schemas/LoadSchedule'
        loadProfile:
          type: array
          items:
            type: string
    AmmoType_in_CreateTestRequest_ammoType:
      description: |-
        Ammo type for generators: phantom.ammo_type,
        ammo.type in pandora.config_content.pool
      type: string
      enum:
      - HTTP_JSON
      - RAW
      - URI
      - URIPOST
      - PHANTOM
      - ACCESS
    File_in_Job_ammo:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
          format: byte
    StorageObject_in_Job_testData:
      type: object
      properties:
        objectStorageBucket:
          type: string
        objectStorageFilename:
          type: string
    JobSignalResponseSignal_in_JobSignalResponse_signal:
      type: string
      enum:
      - STOP
    ScheduleType_in_LoadSchedule_type:
      description: |-
        Schedule type: phantom.load_profile.schedule,
        rps.schedule.type in pandora.config_content.pool
      type: string
      enum:
      - ONCE
      - CONST
      - LINE
      - STEP
    LoadType_in_Schedule_loadType:
      description: 'Load type: phantom.load_profile.load_type,'
      type: string
      enum:
      - RPS
      - INSTANCES
      - STPD_FILE
    FieldMask_in_UpdateTestRequest_updateMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
tags:
- name: AgentRegistration
- name: Agent
- name: Greeter
- name: Job
- name: Tank
- name: Test
- name: Trail
