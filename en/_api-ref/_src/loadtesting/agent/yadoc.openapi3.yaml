openapi: 3.0.0
info:
  title: Title not set.
  description: Description not set.
  version: Version not set.
paths: {}
components:
  schemas:
    Agent:
      type: object
      properties:
        id:
          type: string
    AmmoType:
      description: |-
        Ammo type for generators: phantom.ammo_type,
        ammo.type in pandora.config_content.pool
      type: string
      enum:
      - HTTP_JSON
      - RAW
      - URI
      - URIPOST
      - PHANTOM
      - ACCESS
    ClaimAgentStatusRequestStatus:
      type: string
      enum:
      - READY_FOR_TEST
      - PREPARING_TEST
      - TESTING
      - TANK_FAILED
    ClaimAgentStatusResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    ClaimJobStatusRequestJobStatus:
      type: string
      enum:
      - POST_PROCESS
      - INITIATED
      - PREPARING
      - NOT_FOUND
      - RUNNING
      - FINISHING
      - FINISHED
      - STOPPED
      - FAILED
      - AUTOSTOPPED
    ClaimJobStatusResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    ClaimTankStatusRequestStatus:
      type: string
      enum:
      - READY_FOR_TEST
      - PREPARING_TEST
      - TESTING
      - TANK_FAILED
    ClaimTankStatusResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    CreateTestMetadata:
      type: object
      properties:
        testId:
          type: string
    CreateTrailResponse:
      type: object
      properties:
        trailId:
          type: string
        code:
          type: string
          format: int64
    ExternalAgentRegisterMetadata:
      type: object
      properties:
        agentId:
          type: string
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Ðžnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    File:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
          format: byte
    Job:
      type: object
      properties:
        id:
          type: string
        config:
          type: string
        ammo:
          $ref: '#/components/schemas/File_in_Job_ammo'
        loggingLogGroupId:
          type: string
        testData:
          $ref: '#/components/schemas/StorageObject_in_Job_testData'
    JobSignalResponse:
      type: object
      properties:
        signal:
          $ref: '#/components/schemas/JobSignalResponseSignal_in_JobSignalResponse_signal'
    JobSignalResponseSignal:
      type: string
      enum:
      - STOP
    LoadSchedule:
      description: |-
        Load schedule string:
        {duration: 180s, type: line, from: 1, to: 10000} for pandora,
        step(25, 5, 5, 60) for phantom.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ScheduleType_in_LoadSchedule_type'
        instances:
          type: string
          format: int64
        duration:
          type: string
        rpsFrom:
          type: string
          format: int64
        rpsTo:
          type: string
          format: int64
        step:
          type: string
          format: int64
        ops:
          type: string
          format: int64
        stpdPath:
          type: string
    LoadType:
      description: 'Load type: phantom.load_profile.load_type,'
      type: string
      enum:
      - RPS
      - INSTANCES
      - STPD_FILE
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    RegisterResponse:
      type: object
      properties:
        agentInstanceId:
          type: string
    SayHelloResponse:
      type: object
      properties:
        code:
          type: string
          format: int64
    Schedule:
      description: 'Load profile in general: phantom.load_profile, pool schedule for
        pandora'
      type: object
      properties:
        loadType:
          $ref: '#/components/schemas/LoadType_in_Schedule_loadType'
        loadSchedule:
          type: array
          items:
            $ref: '#/components/schemas/LoadSchedule'
        loadProfile:
          type: array
          items:
            type: string
    ScheduleType:
      description: |-
        Schedule type: phantom.load_profile.schedule,
        rps.schedule.type in pandora.config_content.pool
      type: string
      enum:
      - ONCE
      - CONST
      - LINE
      - STEP
    StorageObject:
      type: object
      properties:
        objectStorageBucket:
          type: string
        objectStorageFilename:
          type: string
    Test:
      type: object
      allOf:
      - type: object
        properties:
          id:
            type: string
          folderId:
            type: string
          name:
            type: string
          description:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string
          createdAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          startedAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          finishedAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          updatedAt:
            description: String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
              text format.
            type: string
            format: date-time
          generator:
            $ref: '#/components/schemas/TestGenerator'
          agentInstanceId:
            description: AgentInstance ID where Test is running.
            type: string
          targetAddress:
            description: Target VM.
            type: string
          targetPort:
            type: string
            format: int64
          targetVersion:
            description: Version of object under test.
            type: string
          config:
            description: Test details
            type: string
          cases:
            type: array
            items:
              type: string
          status:
            $ref: '#/components/schemas/TestStatus'
          errors:
            type: array
            items:
              type: string
          favorite:
            type: boolean
            format: boolean
      - title: ammo
        type: object
        maxProperties: 1
        properties:
          ammoUrls:
            type: string
          ammoId:
            type: string
    TestGenerator:
      type: string
      enum:
      - PANDORA
      - PHANTOM
    TestStatus:
      type: string
      enum:
      - CREATED
      - INITIATED
      - PREPARING
      - RUNNING
      - FINISHING
      - DONE
      - POST_PROCESSING
      - FAILED
      - STOPPING
      - STOPPED
      - AUTOSTOPPED
    Trail:
      type: object
      properties:
        overall:
          type: string
          format: int64
        caseId:
          type: string
        time:
          type: string
        reqps:
          type: string
          format: int64
        resps:
          type: string
          format: int64
        expect:
          type: number
          format: double
        input:
          type: string
          format: int64
        output:
          type: string
          format: int64
        connectTime:
          type: number
          format: double
        sendTime:
          type: number
          format: double
        latency:
          type: number
          format: double
        receiveTime:
          type: number
          format: double
        threads:
          type: string
          format: int64
        q50:
          type: number
          format: double
        q75:
          type: number
          format: double
        q80:
          type: number
          format: double
        q85:
          type: number
          format: double
        q90:
          type: number
          format: double
        q95:
          type: number
          format: double
        q98:
          type: number
          format: double
        q99:
          type: number
          format: double
        q100:
          type: number
          format: double
        httpCodes:
          type: array
          items:
            $ref: '#/components/schemas/TrailCodes'
        netCodes:
          type: array
          items:
            $ref: '#/components/schemas/TrailCodes'
        timeIntervals:
          type: array
          items:
            $ref: '#/components/schemas/TrailIntervals'
    TrailCodes:
      type: object
      properties:
        code:
          type: string
          format: int64
        count:
          type: string
          format: int64
    TrailIntervals:
      type: object
      properties:
        to:
          type: number
          format: double
        count:
          type: string
          format: int64
    UpdateTestMetadata:
      type: object
      properties:
        testId:
          type: string
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    File_in_Job_ammo:
      type: object
      properties:
        name:
          type: string
        content:
          type: string
          format: byte
    StorageObject_in_Job_testData:
      type: object
      properties:
        objectStorageBucket:
          type: string
        objectStorageFilename:
          type: string
    JobSignalResponseSignal_in_JobSignalResponse_signal:
      type: string
      enum:
      - STOP
    ScheduleType_in_LoadSchedule_type:
      description: |-
        Schedule type: phantom.load_profile.schedule,
        rps.schedule.type in pandora.config_content.pool
      type: string
      enum:
      - ONCE
      - CONST
      - LINE
      - STEP
    LoadType_in_Schedule_loadType:
      description: 'Load type: phantom.load_profile.load_type,'
      type: string
      enum:
      - RPS
      - INSTANCES
      - STPD_FILE
tags:
- name: AgentRegistration
- name: Agent
- name: Greeter
- name: Job
- name: Tank
- name: Test
- name: Trail
