openapi: "3.0"
info:
  title: Yandex Certificate Manager API
  description: Методы справочника API сгруппированы по ресурсам. Чтобы выполнить операцию
    над ресурсом, отправьте HTTP-запрос к соответствующему URL. Подробнее об архитектуре
    API Яндекс.Облака, см. [Концепции API Яндекс.Облака](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://certificate-manager.api.cloud.yandex.net
paths:
  /certificate-manager/v1/certificates/{certificateId}:getContent:
    get:
      tags:
      - CertificateContent
      summary: Возвращает цепочку сертификатов доверия и закрытый ключ указанного
        сертификата.
      operationId: CertificateContentGet
      parameters:
      - name: certificateId
        in: path
        description: Идентификатор сертификата для загрузки контента.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCertificateContentResponse'
      x-y-navtitle: get
  /certificate-manager/v1/certificates/{certificateId}:
    get:
      tags:
      - Certificate
      summary: Возвращает информацию об указанном сертификате.
      description: Чтобы получить список доступных сертификатов, используйте запрос
        [list](/docs/certificate-manager/api-ref/Certificate/list).
      operationId: CertificateGet
      parameters:
      - name: certificateId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемого сертификата.

          Чтобы получить идентификатор сертификата, используйте запрос [list](/docs/certificate-manager/api-ref/Certificate/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: view
        in: query
        description: Тип вывода сертификата.
        schema:
          $ref: '#/components/schemas/CertificateView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
      x-y-navtitle: get
    delete:
      tags:
      - Certificate
      summary: Удаляет указанный сертификат.
      operationId: CertificateDelete
      parameters:
      - name: certificateId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор сертификата, который следует удалить.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteCertificateMetadata'
      x-y-operation-response: '[Certificate](/docs/certificate-manager/api-ref/Certificate#representation)'
    patch:
      tags:
      - Certificate
      summary: Обновляет указанный сертификат.
      operationId: CertificateUpdate
      parameters:
      - name: certificateId
        in: path
        description: "Обязательное поле.\nИдентификатор сертификата для обновления.
          \nЧтобы получить идентификатор сертификата, используйте запрос [list](/docs/certificate-manager/api-ref/Certificate/list).\n\nМаксимальная
          длина строки в символах — 50."
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCertificateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateCertificateMetadata'
      x-y-operation-response: '[Certificate](/docs/certificate-manager/api-ref/Certificate#representation)'
  /certificate-manager/v1/certificates:
    get:
      tags:
      - Certificate
      summary: Возвращает список сертификатов в указанном каталоге.
      operationId: CertificateList
      parameters:
      - name: folderId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор каталога для получения списка сертификатов.

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество результатов
          больше чем `page_size`, сервис вернет значение [nextPageToken](/docs/certificate-manager/api-ref/Certificate/list#responses),
          которое можно использовать для получения следующей страницы.
          Значение по умолчанию: 100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `page_token` равным значению поля [nextPageToken](/docs/certificate-manager/api-ref/Certificate/list#responses)
          предыдущего запроса, чтобы получить следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: view
        in: query
        description: Тип вывода сертификата.
        schema:
          $ref: '#/components/schemas/CertificateView'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificatesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Certificate
      summary: Создает пользовательский сертификат в указанном каталоге.
      operationId: CertificateCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCertificateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateCertificateMetadata'
      x-y-operation-response: '[Certificate](/docs/certificate-manager/api-ref/Certificate#representation)'
  /certificate-manager/v1/certificates/requestNew:
    post:
      tags:
      - Certificate
      summary: Создает сертификат от Let's Encrypt.
      operationId: CertificateRequestNew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestNewCertificateRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: requestNew
      x-y-operation-metadata:
        $ref: '#/components/schemas/RequestNewCertificateMetadata'
      x-y-operation-response: '[Certificate](/docs/certificate-manager/api-ref/Certificate#representation)'
  /certificate-manager/v1/certificates/{certificateId}/operations:
    get:
      tags:
      - Certificate
      summary: Перечисляет операции для указанного сертификата.
      operationId: CertificateListOperations
      parameters:
      - name: certificateId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор сертификата для перечисления операций.

          Чтобы получить идентификатор сертификата, используйте запрос [list](/docs/certificate-manager/api-ref/Certificate/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: "Максимальное число возвращаемых результатов на странице. Если
          количество результатов\nбольше чем `page_size`, сервис вернет значение [nextPageToken](/docs/certificate-manager/api-ref/Certificate/listOperations#responses),
          \nкоторое можно использовать для получения следующей страницы. \nЗначение
          по умолчанию: 100.\n\nМаксимальное значение — 1000."
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/certificate-manager/api-ref/Certificate/listOperations#query_params) равным значению поля [nextPageToken](/docs/certificate-manager/api-ref/Certificate/listOperations#responses)
          предыдущего запроса, чтобы получить следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCertificateOperationsResponse'
      x-y-navtitle: listOperations
  /certificate-manager/v1/certificates/{resourceId}:listAccessBindings:
    get:
      tags:
      - Certificate
      summary: Возвращает список привязок прав доступа для указанного сертификата.
      operationId: CertificateListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого запрашивается список привязок прав доступа.

          Чтобы получить идентификатор ресурса, используйте соответствующий запрос List.
          Например, используйте запрос [list](/docs/resource-manager/api-ref/Cloud/list) для получения
          идентификатора ресурса Cloud.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное число возвращаемых результатов на странице. Если количество
          результатов больше чем pageSize , сервис вернет значение nextPageToken,
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение pageToken равным значению поля
          nextPageToken прошлого запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /certificate-manager/v1/certificates/{resourceId}:setAccessBindings:
    post:
      tags:
      - Certificate
      summary: Устанавливает привязки прав доступа для сертификата.
      operationId: CertificateSetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого задается список привязок прав доступа.

          Чтобы получить идентификатор ресурса, используйте соответствующий запрос List.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /certificate-manager/v1/certificates/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Certificate
      summary: Обновляет привязки прав доступа для указанного сертификата.
      operationId: CertificateUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого обновляется список привязок прав доступа.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Обязательное поле.
            Идентификатор ресурса [Role](/docs/iam/api-ref/Role#representation) который назначен для субъекта, указанного в
            параметре `subject`.

            Максимальная длина строки в символах — 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Добавление новой привязки прав доступа.
         - REMOVE: Удаление привязки прав доступа.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    Certificate:
      description: Сертификат. Подробнее об этом читайте в [документации](docs/certificate-manager/concepts/).
      type: object
      properties:
        id:
          description: Идентификатор сертификата. Генерируется при создании.
          type: string
        folderId:
          description: Идентификатор каталога, которому принадлежит сертификат.
          type: string
        createdAt:
          description: |-
            Время создания ресурса.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        name:
          description: Имя сертификата. Имя должно быть уникальным в каталоге.
          type: string
        description:
          description: Описание сертификата.
          type: string
        labels:
          description: Метки ресурса в формате `ключ:значение`.
          type: object
          additionalProperties:
            type: string
        type:
          $ref: '#/components/schemas/CertificateType_in_Certificate_type'
        domains:
          description: Полные доменные имена сертификата.
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/CertificateStatus_in_Certificate_status'
        issuer:
          description: Уникальное имя [Distinguished Name](https://tools.ietf.org/html/rfc1779)
            центра сертификации, выпустившего сертификат.
          type: string
        subject:
          description: Уникальное имя [Distinguished Name](https://tools.ietf.org/html/rfc1779)
            сущности, связанной с открытым ключом, содержащимся в сертификате.
          type: string
        serial:
          description: Серийный номер сертификата.
          type: string
        updatedAt:
          description: |-
            Время последнего изменения сертификата.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        issuedAt:
          description: |-
            Время выдачи сертификата.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        notAfter:
          description: |-
            Время, по истечении которого сертификат считается недействительным.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        notBefore:
          description: |-
            Время, после наступления которого сертификат считается действительным.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        challenges:
          description: Данные, используемые при прохождении процедуры проверки прав
            на владение доменами сертификата.
          type: array
          items:
            $ref: '#/components/schemas/Challenge'
    CertificateStatus:
      description: |2-
         - VALIDATING: Требуется проверка доменов сертификатов. Используется только для сертификатов от Let's Encrypt®.
         - INVALID: Выдача сертификата не удалась. Используется только для сертификатов от Let's Encrypt®.
         - ISSUED: Сертификат выдан.
         - REVOKED: Сертификат отозван или аннулирован.
         - RENEWING: Сертификат обновляется. Используется только для сертификатов от Let's Encrypt®.
         - RENEWAL_FAILED: Обновление сертификата не удалось. Используется только для сертификатов от Let's Encrypt®.
      type: string
      enum:
      - VALIDATING
      - INVALID
      - ISSUED
      - REVOKED
      - RENEWING
      - RENEWAL_FAILED
    CertificateType:
      description: |-
        Поддерживаемые типы сертификатов.

         - IMPORTED: Сертификат импортирован пользователем.
         - MANAGED: Сертификат создан сервисом.
      type: string
      enum:
      - IMPORTED
      - MANAGED
    CertificateView:
      description: |2-
         - BASIC: Вывод основной информации о сертификате.
         - FULL: Вывод полной информации о сертификате, включающей данные для прохождения процедуры проверки прав владения доменом.
      type: string
      enum:
      - BASIC
      - FULL
      default: BASIC
    Challenge:
      description: Процедура проверки домена.
      type: object
      allOf:
      - type: object
        properties:
          domain:
            description: Домен, права на владение которым проверяются.
            type: string
          type:
            $ref: '#/components/schemas/ChallengeType'
            description: Тип процедуры проверки.
          createdAt:
            description: |-
              Время, когда была начата процедура проверки.

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          updatedAt:
            description: |-
              Время последней проверки.

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          status:
            $ref: '#/components/schemas/ChallengeStatus'
            description: Статус процедуры проверки.
          message:
            description: Описание процедуры проверки.
            type: string
          error:
            description: Ошибка процедуры проверки.
            type: string
      - title: challenge
        type: object
        maxProperties: 1
        properties:
          dnsChallenge:
            $ref: '#/components/schemas/ChallengeDnsRecord'
            description: DNS-запись.
          httpChallenge:
            $ref: '#/components/schemas/ChallengeHttpFile'
            description: HTTP-файл.
    ChallengeDnsRecord:
      type: object
      properties:
        name:
          description: Имя DNS-записи.
          type: string
        type:
          description: Тип DNS-записи.
          type: string
        value:
          description: Значение DNS-записи.
          type: string
    ChallengeHttpFile:
      type: object
      properties:
        url:
          description: Расположение HTTP-файла.
          type: string
        content:
          description: Содержимое HTTP-файла.
          type: string
    ChallengeStatus:
      description: |2-
         - PENDING: Процедура проверки ждет, пока пользователь выполнит действия, необходимые для прохождения проверки.
         - PROCESSING: Процедура проверки ожидает одобрения от Let's Encrypt®.
         - VALID: Процедура проверки пройдена.
         - INVALID: Проверка прав для определенного домена завершилась неудачно или истек недельный период, выделенный для проверки.
      type: string
      enum:
      - PENDING
      - PROCESSING
      - VALID
      - INVALID
    ChallengeType:
      description: |-
        Поддерживаемые типы проверки домена.

         - DNS: Тип проверки домена, использующий DNS-записи.
         - HTTP: Тип проверки домена, использующий HTTP-файлы.
      type: string
      enum:
      - DNS
      - HTTP
    CreateCertificateMetadata:
      type: object
      properties:
        certificateId:
          description: Идентификатор создаваемого сертификата.
          type: string
    CreateCertificateRequest:
      type: object
      properties:
        folderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в котором создается сертификат.

            Максимальная длина строки в символах — 50.
          type: string
        name:
          description: |-
            Имя сертификата. Имя должно быть уникальным в каталоге.

            Значение должно соответствовать регулярному выражению `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Описание сертификата.

            Максимальная длина строки в символах — 1024.
          type: string
        labels:
          description: |-
            Метки сертификата в формате `ключ:значение`.

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        certificate:
          description: |-
            Содержимое сертификата в PEM-encoded формате. Можно пропустить, если сертификат включен в цепочку доверия.

            Максимальная длина строки в символах — 32768.
          type: string
        chain:
          description: |-
            Содержимое цепочки сертификатов доверия сертификата в PEM-encoded формате.

            Максимальная длина строки в символах — 2097152.
          type: string
        privateKey:
          description: |-
            Обязательное поле.
            Содержимое закрытого ключа сертификата в PEM-encoded формате.

            Длина строки в символах должна быть от 1 до 524288.
          type: string
    DeleteCertificateMetadata:
      type: object
      properties:
        certificateId:
          description: Идентификатор удаляемого сертификата.
          type: string
    Empty:
      description: Пустой JSON объект `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    GetCertificateContentResponse:
      type: object
      properties:
        certificateId:
          description: Идентификатор сертификата.
          type: string
        certificateChain:
          description: Содержимое цепочки сертификатов доверия сертификата в PEM-encoded
            формате.
          type: array
          items:
            type: string
        privateKey:
          description: Содержимое закрытого ключа сертификата в PEM-encoded формате.
          type: string
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: Список привязок прав доступа для указанного ресурса.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем pageSize, используйте nextPageToken в качестве
            значения параметра pageToken в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения nextPageToken для перебора страниц
            результатов.
          type: string
    ListCertificateOperationsResponse:
      type: object
      properties:
        operations:
          description: Список операций для указанного сертификата.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: "Токен для получения следующей страницы результатов в ответе.
            Если количество результатов\nбольше чем [pageSize](/docs/certificate-manager/api-ref/Certificate/listOperations#query_params),
            используйте `next_page_token` в качестве значения \nпараметра [pageToken](/docs/certificate-manager/api-ref/Certificate/listOperations#query_params)
            в следующем запросе списка ресурсов. \nКаждая следующий запрос будет иметь
            свой [nextPageToken](/docs/certificate-manager/api-ref/Certificate/listOperations#responses)
            для продолжения перебора страниц результатов."
          type: string
    ListCertificatesResponse:
      type: object
      properties:
        certificates:
          description: Список сертификатов в указанном каталоге.
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        nextPageToken:
          description: "Токен для получения следующей страницы результатов в ответе.
            Если количество результатов \nбольше чем [pageSize](/docs/certificate-manager/api-ref/Certificate/list#query_params),
            используйте \n`next_page_token` в качестве значения параметра [pageToken](/docs/certificate-manager/api-ref/Certificate/list#query_params)\nв
            следующем запросе списка ресурсов. Каждый следующий запрос списка будет
            иметь свой \n[nextPageToken](/docs/certificate-manager/api-ref/Certificate/list#responses)
            для продолжения перебора страниц результатов."
          type: string
    Operation:
      description: |-
        Ресурс Operation. Дополнительные сведения см. в разделе
        [Объект Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: Идентификатор операции.
            type: string
          description:
            description: |-
              Описание операции. Длина описания должна быть от 0 до 256
              символов.
            type: string
          createdAt:
            description: |-
              Время создания ресурса в формате в
              [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          createdBy:
            description: |-
              Идентификатор пользователя или сервисного
              аккаунта, инициировавшего операцию.
            type: string
          modifiedAt:
            description: |-
              Время, когда ресурс Operation последний раз
              обновлялся. Значение в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          done:
            description: |-
              Если значение равно `false` — операция еще
              выполняется. Если `true` — операция завершена, и задано значение
              одного из полей `error` или `response`.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Метаданные операции. Обычно в поле содержится
              идентификатор ресурса, над которым выполняется операция. Если
              метод возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `metadata`.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: Описание ошибки в случае сбоя или отмены операции.
          response:
            description: |-
              Результат операции в случае успешного завершения. Если
              исходный метод не возвращает никаких данных при успешном
              завершении, например метод Delete, поле содержит объект
              [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty). Если исходный метод — это стандартный метод Create
              / Update, поле содержит целевой ресурс операции. Если метод
              возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `response`.
            type: object
    RequestNewCertificateMetadata:
      type: object
      properties:
        certificateId:
          description: Идентификатор запрашиваемого сертификата.
          type: string
    RequestNewCertificateRequest:
      type: object
      properties:
        folderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в котором создается сертификат.

            Максимальная длина строки в символах — 50.
          type: string
        name:
          description: |-
            Имя сертификата.

            Значение должно соответствовать регулярному выражению `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Описание сертификата.

            Максимальная длина строки в символах — 1024.
          type: string
        labels:
          description: |-
            Метки сертификата в формате `ключ:значение`.

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        domains:
          description: Полные доменные имена сертификата.
          type: array
          items:
            type: string
        challengeType:
          $ref: '#/components/schemas/ChallengeType_in_RequestNewCertificateRequest_challengeType'
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: Идентификатор ресурса, для которого задается список привязок
            прав доступа.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Обязательное поле.
            Привязки прав доступа, которые будут установлены. Дополнительные сведения см. в
            разделе [Привязка прав доступа](/docs/iam/concepts/access-control/#access-bindings).
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    Subject:
      type: object
      properties:
        id:
          description: |-
            Обязательное поле.
            Идентификатор субъекта.

            Может иметь одно из значений:
            * `allAuthenticatedUsers`: Специальный системный идентификатор, представляющий любого пользователя, прошедшего аутентификацию. Его можно использовать только если в параметре `type` указано `system`.
            * `allUsers`: Специальный системный идентификатор, представляющий любого пользователя. Аутентификация не требуется. Например, при запросе через API не надо будет указывать IAM-токен.
            * `<идентификатор пользователя в облаке>`: Идентификатор, представляющий учетную запись пользователя. Его можно использовать только если в параметре `type` передано одно из следующих значений: `userAccount`, `federatedUser` или `serviceAccount`.

            Максимальная длина строки в символах — 50.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип субъекта.

            Может иметь одно из значений:
            * `userAccount` — аккаунт на Яндексе или Яндекс.Коннекте, добавленный в {{ yandex-cloud }}.
            * `serviceAccount` — сервисный аккаунт. Этот тип представляет ресурс [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation).
            * `federatedUser` — федеративный аккаунт. Этот тип представляет пользователя из федерации удостоверений, например Active Directory.
            * `system` — системная группа. Представляет набор аккаунтов, который описывается общим системным идентификатором.

            Дополнительные сведения см. в разделе [Субъект, которому назначается роль](/docs/iam/concepts/access-control/#subject).

            Максимальная длина строки в символах — 100.
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: Идентификатор ресурса, для которого обновляется список привязок
            прав доступа.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Обязательное поле.
            Изменения в список привязок прав доступа.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateCertificateMetadata:
      type: object
      properties:
        certificateId:
          description: Идентификатор обновляемого сертификата.
          type: string
    UpdateCertificateRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateCertificateRequest_updateMask'
        name:
          description: |-
            Новое имя сертификата.

            Значение должно соответствовать регулярному выражению `` |[a-z]([-a-z0-9]{0,61}[a-z0-9])? ``.
          type: string
        description:
          description: |-
            Новое описание сертификата.

            Максимальная длина строки в символах — 1024.
          type: string
        labels:
          description: |-
            Метки сертификата в формате `ключ:значение`.

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        certificate:
          description: |-
            Новое содержимое сертификата в PEM-encoded формате. Используется только для пользовательских сертификатов.

            Максимальная длина строки в символах — 32768.
          type: string
        chain:
          description: |-
            Новое содержимое цепочки сертификатов доверия сертификата в PEM-encoded формате. Используется только для пользовательских сертификатов.

            Максимальная длина строки в символах — 2097152.
          type: string
        privateKey:
          description: |-
            Новое содержимое закрытого ключа сертификата в PEM-encoded формате. Используется только для пользовательских сертификатов.

            Максимальная длина строки в символах — 524288.
          type: string
    rpcStatus:
      description: Описание ошибки в случае сбоя или отмены операции.
      type: object
      properties:
        code:
          description: Код ошибки. Значение из списка [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: Текст ошибки.
          type: string
        details:
          description: Список сообщений с подробными сведениями об ошибке.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Обязательное поле.
        Субъект, для которого создается привязка прав доступа. Может
        представлять собой аккаунт с уникальным идентификатором в облаке или системную
        группу с общим системным идентификатором.
      type: object
      properties:
        id:
          description: |-
            Обязательное поле.
            Идентификатор субъекта.

            Может иметь одно из значений:
            * `allAuthenticatedUsers`: Специальный системный идентификатор, представляющий любого пользователя, прошедшего аутентификацию. Его можно использовать только если в параметре `type` указано `system`.
            * `allUsers`: Специальный системный идентификатор, представляющий любого пользователя. Аутентификация не требуется. Например, при запросе через API не надо будет указывать IAM-токен.
            * `<идентификатор пользователя в облаке>`: Идентификатор, представляющий учетную запись пользователя. Его можно использовать только если в параметре `type` передано одно из следующих значений: `userAccount`, `federatedUser` или `serviceAccount`.

            Максимальная длина строки в символах — 50.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип субъекта.

            Может иметь одно из значений:
            * `userAccount` — аккаунт на Яндексе или Яндекс.Коннекте, добавленный в {{ yandex-cloud }}.
            * `serviceAccount` — сервисный аккаунт. Этот тип представляет ресурс [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation).
            * `federatedUser` — федеративный аккаунт. Этот тип представляет пользователя из федерации удостоверений, например Active Directory.
            * `system` — системная группа. Представляет набор аккаунтов, который описывается общим системным идентификатором.

            Дополнительные сведения см. в разделе [Субъект, которому назначается роль](/docs/iam/concepts/access-control/#subject).

            Максимальная длина строки в символах — 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Обязательное поле.
        Действие, которое надо выполнить с привязкой прав доступа.

         - ADD: Добавление новой привязки прав доступа.
         - REMOVE: Удаление привязки прав доступа.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Обязательное поле.
        Привязка прав доступа. Дополнительные сведения см. в разделе [Привязка прав доступа](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Обязательное поле.
            Идентификатор ресурса [Role](/docs/iam/api-ref/Role#representation) который назначен для субъекта, указанного в
            параметре `subject`.

            Максимальная длина строки в символах — 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    CertificateType_in_Certificate_type:
      description: |-
        Тип сертификата.

        Поддерживаемые типы сертификатов.

         - IMPORTED: Сертификат импортирован пользователем.
         - MANAGED: Сертификат создан сервисом.
      type: string
      enum:
      - IMPORTED
      - MANAGED
    CertificateStatus_in_Certificate_status:
      description: |-
        Статус сертификата.

         - VALIDATING: Требуется проверка доменов сертификатов. Используется только для сертификатов от Let's Encrypt®.
         - INVALID: Выдача сертификата не удалась. Используется только для сертификатов от Let's Encrypt®.
         - ISSUED: Сертификат выдан.
         - REVOKED: Сертификат отозван или аннулирован.
         - RENEWING: Сертификат обновляется. Используется только для сертификатов от Let's Encrypt®.
         - RENEWAL_FAILED: Обновление сертификата не удалось. Используется только для сертификатов от Let's Encrypt®.
      type: string
      enum:
      - VALIDATING
      - INVALID
      - ISSUED
      - REVOKED
      - RENEWING
      - RENEWAL_FAILED
    ChallengeType_in_RequestNewCertificateRequest_challengeType:
      description: |-
        Тип процедуры проверки домена.

        Поддерживаемые типы проверки домена.

         - DNS: Тип проверки домена, использующий DNS-записи.
         - HTTP: Тип проверки домена, использующий HTTP-файлы.
      type: string
      enum:
      - DNS
      - HTTP
    FieldMask_in_UpdateCertificateRequest_updateMask:
      description: |-
        Маска, определяющая, какие поля указанного сертификата будут обновлены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
tags:
- name: CertificateContent
  description: Набор методов для управления содержимым сертификата.
- name: Certificate
  description: Набор методов для управления сертификатами.
