openapi: "3.0"
info:
  title: Yandex Cloud Functions Service
  description: Методы справочника API сгруппированы по ресурсам. Чтобы выполнить операцию
    над ресурсом, отправьте HTTP-запрос к соответствующему URL. Подробнее об архитектуре
    API Яндекс.Облака, см. [Концепции API Яндекс.Облака](/docs/api-design-guide/).
  version: v1
  x-y-docUri: functions/api-ref
  x-y-baseUrl: https://serverless-functions.api.cloud.yandex.net
paths:
  /functions/v1/functions/{functionId}:
    get:
      tags:
      - Function
      summary: Возвращает указанную функцию.
      description: Чтобы получить список доступных функций, используйте запрос [list](/docs/functions/functions/api-ref/Function/list)
        .
      operationId: FunctionGet
      parameters:
      - name: functionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемой функции.

          Чтобы получить идентификатор функции, используйте запрос [list](/docs/functions/functions/api-ref/Function/list) .
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
      x-y-navtitle: get
    delete:
      tags:
      - Function
      summary: Удаляет указанную функцию.
      operationId: FunctionDelete
      parameters:
      - name: functionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор удаляемой функции. Чтобы получить идентификатор функции, используйте
          запрос [list](/docs/functions/functions/api-ref/Function/list) .
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteFunctionMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Function
      summary: Обновляет указанную функцию.
      operationId: FunctionUpdate
      parameters:
      - name: functionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор функции для обновления.

          Чтобы получить идентификатор функции, используйте запрос [list](/docs/functions/functions/api-ref/Function/list) .
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFunctionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateFunctionMetadata'
      x-y-operation-response: '[Function](/docs/functions/functions/api-ref/Function#representation)'
  /functions/v1/functions:
    get:
      tags:
      - Function
      summary: Возвращает список функций в указанном каталоге.
      operationId: FunctionList
      parameters:
      - name: folderId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор каталога для получения списка функций.

          Чтобы получить идентификатор каталога, используйте запрос
          [list](/docs/resource-manager/api-ref/Folder/list).
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем `pageSize` , сервис вернет значение [nextPageToken](/docs/functions/functions/api-ref/Function/list#responses), которое
          можно использовать для получения следующей страницы.

          Значение по умолчанию: 100.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `pageToken` равным значению поля
          [nextPageToken](/docs/functions/functions/api-ref/Function/list#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Выражение фильтра, для фильтрации списка функций в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Function.name](/docs/functions/functions/api-ref/Function#representation).
          2. Условный оператор. Операторы `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`. Пример фильтра: `name=my-function`.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Function
      summary: Создает функцию в указанном каталоге.
      operationId: FunctionCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFunctionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateFunctionMetadata'
      x-y-operation-response: '[Function](/docs/functions/functions/api-ref/Function#representation)'
  /functions/v1/versions/{functionVersionId}:
    get:
      tags:
      - Function
      summary: Возвращает указанную версию функции.
      description: Чтобы получить список доступных версий, используйте запрос [listVersions](/docs/functions/functions/api-ref/Function/listVersions)
        .
      operationId: FunctionGetVersion
      parameters:
      - name: functionVersionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемой версии.

          Чтобы получить идентификатор версии, используйте запрос [listVersions](/docs/functions/functions/api-ref/Function/listVersions) .
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      x-y-navtitle: getVersion
  /functions/v1/versions:byTag:
    get:
      tags:
      - Function
      summary: Возвращает все версии с указанным тегом.
      description: Чтобы получить список доступных версий, используйте запрос [listVersions](/docs/functions/functions/api-ref/Function/listVersions)
        .
      operationId: FunctionGetVersionByTag
      parameters:
      - name: functionId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор функции, для которой нужно вернуть список версий.

          Чтобы получить идентификатор функции, используйте запрос [list](/docs/functions/functions/api-ref/Function/list) .
        schema:
          type: string
      - name: tag
        in: query
        description: |-
          Тег версии.

          Чтобы получить историю тегов версий, используйте запрос [listTagHistory](/docs/functions/functions/api-ref/Function/listTagHistory) .

          Значение должно соответствовать регулярному выражению `` [a-z][-_0-9a-z]*|[$]latest ``.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      x-y-navtitle: getVersionByTag
  /functions/v1/versions:
    get:
      tags:
      - Function
      summary: |-
        Извлекает список версий для указанной функции или всех версий функции в указанном
        каталоге
      operationId: FunctionListVersions
      parameters:
      - name: folderId
        in: query
        description: |-
          Идентификатор каталога, для которого нужно вернуть список версий функции. Чтобы
          получить идентификатор каталога, используйте запрос [list](/docs/resource-manager/api-ref/Folder/list).
        schema:
          type: string
      - name: functionId
        in: query
        description: |-
          Идентификатор функции, для которой нужно вернуть список версий. Чтобы получить
          идентификатор функции, используйте запрос [list](/docs/functions/functions/api-ref/Function/list) .
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем `pageSize` , сервис вернет значение [nextPageToken](/docs/functions/functions/api-ref/Function/listVersions#responses),
          которое можно использовать для получения следующей страницы.

          Значение по умолчанию: 100.

          Допустимые значения — от 0 до 1000 включительно.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `pageToken` равным значению поля
          [nextPageToken](/docs/functions/functions/api-ref/Function/listVersions#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации ресурсов в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Function.name](/docs/functions/functions/api-ref/Function#representation).
          2. Условный оператор. Операторы `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`. Пример фильтра: `name=my-function`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionsVersionsResponse'
      x-y-navtitle: listVersions
    post:
      tags:
      - Function
      summary: Создает версию для указанной функции.
      operationId: FunctionCreateVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFunctionVersionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: createVersion
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateFunctionVersionMetadata'
      x-y-operation-response: '`Version`'
  /functions/v1/versions/{functionVersionId}:setTag:
    post:
      tags:
      - Function
      summary: Устанавливает тег для указанной версии функции.
      operationId: FunctionSetTag
      parameters:
      - name: functionVersionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор версии для установки тега.

          Чтобы получить идентификатор версии, используйте запрос [listVersions](/docs/functions/functions/api-ref/Function/listVersions) .
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFunctionTagRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setTag
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetFunctionTagMetadata'
      x-y-operation-response: '`Version`'
  /functions/v1/versions/{functionVersionId}:removeTag:
    post:
      tags:
      - Function
      summary: Удаляет тег из указанной версии функции.
      operationId: FunctionRemoveTag
      parameters:
      - name: functionVersionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор версии, из которой нужно удалить тег.

          Чтобы получить идентификатор версии, используйте запрос [listVersions](/docs/functions/functions/api-ref/Function/listVersions) .
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFunctionTagRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: removeTag
      x-y-operation-metadata:
        $ref: '#/components/schemas/RemoveFunctionTagMetadata'
      x-y-operation-response: '`Version`'
  /functions/v1/functions/{functionId}:tagHistory:
    get:
      tags:
      - Function
      summary: Возвращает журнал тегов, назначенных версиям указанной функции.
      operationId: FunctionListTagHistory
      parameters:
      - name: functionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор функции для получения истории тегов.

          Чтобы получить идентификатор функции, используйте запрос [list](/docs/functions/functions/api-ref/Function/list) .
        required: true
        schema:
          type: string
      - name: tag
        in: query
        description: |-
          Конкретный тег, которым должна быть ограничена история.

          Значение должно соответствовать регулярному выражению `` [a-z][-_0-9a-z]*|[$]latest ``.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное число возвращаемых результатов на странице. Если количество
          результатов больше чем `pageSize` , сервис вернет значение [nextPageToken](/docs/functions/functions/api-ref/Function/listOperations#responses),
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Допустимые значения — от 0 до 1000 включительно.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `pageToken` равным значению поля
          [nextPageToken](/docs/functions/functions/api-ref/Function/listOperations#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации ресурсов в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Function.name](/docs/functions/functions/api-ref/Function#representation).
          2. Условный оператор. Операторы `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`. Например, `name=my-function`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionTagHistoryResponse'
      x-y-navtitle: listTagHistory
  /functions/v1/runtimes:
    get:
      tags:
      - Function
      summary: Список доступных сред выполнения для указанной функции.
      operationId: FunctionListRuntimes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimesResponse'
      x-y-navtitle: listRuntimes
  /functions/v1/functions/{functionId}/operations:
    get:
      tags:
      - Function
      summary: Возвращает список операций для указанной функции.
      operationId: FunctionListOperations
      parameters:
      - name: functionId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор функции, для которой нужно вернуть список версий.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное число возвращаемых результатов на странице. Если количество
          результатов больше чем `pageSize` , сервис вернет значение [nextPageToken](/docs/functions/functions/api-ref/Function/listOperations#responses),
          которое можно использовать для получения следующей страницы.

          Значение по умолчанию: 100.

          Допустимые значения — от 0 до 1000 включительно.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `pageToken` равным значению поля
          [nextPageToken](/docs/functions/functions/api-ref/Function/listOperations#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации ресурсов в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Function.name](/docs/functions/functions/api-ref/Function#representation).
          2. Условный оператор. Операторы `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`. Пример фильтра: `name=my-function`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFunctionOperationsResponse'
      x-y-navtitle: listOperations
  /functions/v1/functions/{resourceId}:listAccessBindings:
    get:
      tags:
      - Function
      summary: Возвращает список привязок прав доступа для указанной функции.
      operationId: FunctionListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого запрашивается список привязок прав доступа.

          Чтобы получить идентификатор ресурса, используйте соответствующий запрос List.
          Например, используйте запрос [list](/docs/resource-manager/api-ref/Cloud/list) для получения
          идентификатора ресурса Cloud.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное число возвращаемых результатов на странице. Если количество
          результатов больше чем pageSize , сервис вернет значение nextPageToken,
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение pageToken равным значению поля
          nextPageToken прошлого запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /functions/v1/functions/{resourceId}:setAccessBindings:
    post:
      tags:
      - Function
      summary: Устанавливает привязки прав доступа для указанной функции.
      operationId: FunctionSetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого задается список привязок прав доступа.

          Чтобы получить идентификатор ресурса, используйте соответствующий запрос List.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /functions/v1/functions/{resourceId}:updateAccessBindings:
    post:
      tags:
      - Function
      summary: Обновляет привязки прав доступа для указанной функции.
      operationId: FunctionUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого обновляется список привязок прав доступа.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Обязательное поле.
            Идентификатор ресурса [Role](/docs/iam/api-ref/Role#representation) который назначен для субъекта, указанного в
            параметре `subject`.

            Максимальная длина строки в символах — 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Добавление новой привязки прав доступа.
         - REMOVE: Удаление привязки прав доступа.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    CreateFunctionMetadata:
      type: object
      properties:
        functionId:
          description: Идентификатор создаваемой функции.
          type: string
    CreateFunctionRequest:
      type: object
      properties:
        folderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в котором создается функция.

            Чтобы получить идентификатор каталога, используйте запрос
            [list](/docs/resource-manager/api-ref/Folder/list).
          type: string
        name:
          description: |-
            Имя функции. Имя должно быть уникальным в рамках каталога.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Описание функции.

            Максимальная длина строки в символах — 256.
          type: string
        labels:
          description: |-
            Метки ресурса в формате `key:value`.

            Не более 64 на ресурс.
            Длина строки в символах для каждого ключа должна быть от 1 до 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    CreateFunctionVersionMetadata:
      type: object
      properties:
        functionVersionId:
          description: Идентификатор создаваемой версии.
          type: string
    CreateFunctionVersionRequest:
      type: object
      allOf:
      - type: object
        properties:
          functionId:
            description: |-
              Обязательное поле.
              Идентификатор функции для создания версии.

              Чтобы получить идентификатор функции, используйте запрос [list](/docs/functions/functions/api-ref/Function/list) .
            type: string
          runtime:
            description: |-
              Обязательное поле.
              Среда выполнения для версии.
            type: string
          description:
            description: |-
              Описание версии.

              Длина строки в символах должна быть от 0 до 256.
            type: string
          entrypoint:
            description: |-
              Обязательное поле.
              Точка входа для версии.
            type: string
          resources:
            $ref: '#/components/schemas/Resources'
            description: |-
              Обязательное поле.
              Ресурсы, выделенные для версии.
          executionTimeout:
            description: |-
              Обязательное поле.
              Таймаут для выполнения версии.

              Если время ожидания будет превышено, Cloud Functions возвращает 504 HTTP-код.
            type: string
          serviceAccountId:
            description: Идентификатор сервисного аккаунта, который нужно связать
              с версией.
            type: string
          environment:
            description: |-
              Параметры среды выполнения для версии.

              Каждый ключ должен соответствовать регулярному выражению `` [a-zA-Z][a-zA-Z0-9_]* ``.
              Максимальная длина строки в символах для каждого значения — 4096.
            type: object
            additionalProperties:
              type: string
      - title: package_source
        type: object
        maxProperties: 1
        properties:
          package:
            $ref: '#/components/schemas/Package'
            description: Пакет развертывания функций.
          content:
            description: |-
              Содержимое пакета развертывания.

              Максимальная длина строки в символах — 52428800.
            type: string
            format: byte
    DeleteFunctionMetadata:
      type: object
      properties:
        functionId:
          description: Идентификатор удаляемой функции.
          type: string
    Empty:
      description: Пустой JSON объект `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    Function:
      description: |-
        Бессерверная функция. Дополнительные сведения о концепции см. в разделе
        [Функция](/docs/functions/concepts/function).
      type: object
      properties:
        id:
          description: Идентификатор функции. Генерируется во время создания.
          type: string
        folderId:
          description: Идентификатор каталога, к которому принадлежит функция.
          type: string
        createdAt:
          description: |-
            Время создания функции.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        name:
          description: |-
            Имя функции. Имя уникально в рамках каталога.

            Длина строки в символах должна быть от 3 до 63.
          type: string
        description:
          description: |-
            Описание функции.

            Длина строки в символах должна быть от 0 до 256.
          type: string
        labels:
          description: |-
            Метки функций в виде пар `key:value` .

            Не более 64 на ресурс.
          type: object
          additionalProperties:
            type: string
        logGroupId:
          description: Идентификатор группы журналов выполнения функции.
          type: string
        httpInvokeUrl:
          description: URL-адрес, который нужнозапросить для вызова функции.
          type: string
        status:
          $ref: '#/components/schemas/FunctionStatus_in_Function_status'
    FunctionStatus:
      description: |2-
         - CREATING: Функция создается.
         - ACTIVE: Функция готова к вызову.
         - DELETING: Функция удаляется.
         - ERROR: Сбой функции.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: Список привязок прав доступа для указанного ресурса.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем pageSize, используйте nextPageToken в качестве
            значения параметра pageToken в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения nextPageToken для перебора страниц
            результатов.
          type: string
    ListFunctionOperationsResponse:
      type: object
      properties:
        operations:
          description: Список операций для указанной функции.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/functions/functions/api-ref/Function/listOperations#query_params), используйте `nextPageToken` в качестве значения параметра
            [pageToken](/docs/functions/functions/api-ref/Function/listOperations#query_params) в следующем запросе списка ресурсов.

            Все последующие запросы будут получать свои значения `nextPageToken` для перебора страниц
            результатов.
          type: string
    ListFunctionTagHistoryResponse:
      type: object
      properties:
        functionTagHistoryRecord:
          description: Набор соответствующих записей истории тегов.
          type: array
          items:
            $ref: '#/components/schemas/ListFunctionTagHistoryResponseFunctionTagHistoryRecord'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/functions/functions/api-ref/Function/listTagHistory#query_params), используйте `nextPageToken` в качестве значения параметра
            [pageToken](/docs/functions/functions/api-ref/Function/listTagHistory#query_params) в следующем запросе списка ресурсов.

            Все последующие запросы будут получать свои значения `nextPageToken` для перебора страниц
            результатов.
          type: string
    ListFunctionTagHistoryResponseFunctionTagHistoryRecord:
      description: Запись в истории тегов.
      type: object
      properties:
        functionId:
          description: Идентификатор функции, для которой идет запись.
          type: string
        functionVersionId:
          description: Идентификатор версии функции, для которой идет запись.
          type: string
        tag:
          description: Тег, который был установлен для версии в какой-то момент.
          type: string
        effectiveFrom:
          description: |-
            Отметка времени, когда тег начал быть активным для функции.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        effectiveTo:
          description: |-
            Отметка времени, когда тег перестал быть активным для функции.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
    ListFunctionsResponse:
      type: object
      properties:
        functions:
          description: Возвращает список функций в указанном каталоге.
          type: array
          items:
            $ref: '#/components/schemas/Function'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/functions/functions/api-ref/Function/list#query_params), используйте `nextPageToken` в качестве значения параметра
            [pageToken](/docs/functions/functions/api-ref/Function/list#query_params) в следующем запросе списка ресурсов.

            Все последующие запросы будут получать свои значения `nextPageToken` для перебора страниц
            результатов.
          type: string
    ListFunctionsVersionsResponse:
      type: object
      properties:
        versions:
          description: Список версий для указанного каталога или функции.
          type: array
          items:
            $ref: '#/components/schemas/Version'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/functions/functions/api-ref/Function/listVersions#query_params), используйте `nextPageToken` в качестве значения параметра
            [pageToken](/docs/functions/functions/api-ref/Function/listVersions#query_params) в следующем запросе списка ресурсов.

            Все последующие запросы будут получать свои значения `nextPageToken` для перебора страниц
            результатов.
          type: string
    ListRuntimesResponse:
      type: object
      properties:
        runtimes:
          description: Среды выполнения, доступные для указанной функции.
          type: array
          items:
            type: string
    Operation:
      description: |-
        Ресурс Operation. Дополнительные сведения см. в разделе
        [Объект Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: Идентификатор операции.
            type: string
          description:
            description: |-
              Описание операции. Длина описания должна быть от 0 до 256
              символов.
            type: string
          createdAt:
            description: |-
              Время создания ресурса в формате в
              [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          createdBy:
            description: |-
              Идентификатор пользователя или сервисного
              аккаунта, инициировавшего операцию.
            type: string
          modifiedAt:
            description: |-
              Время, когда ресурс Operation последний раз
              обновлялся. Значение в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          done:
            description: |-
              Если значение равно `false` — операция еще
              выполняется. Если `true` — операция завершена, и задано значение
              одного из полей `error` или `response`.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Метаданные операции. Обычно в поле содержится
              идентификатор ресурса, над которым выполняется операция. Если
              метод возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `metadata`.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: Описание ошибки в случае сбоя или отмены операции.
          response:
            description: |-
              Результат операции в случае успешного завершения. Если
              исходный метод не возвращает никаких данных при успешном
              завершении, например метод Delete, поле содержит объект
              [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty). Если исходный метод — это стандартный метод Create
              / Update, поле содержит целевой ресурс операции. Если метод
              возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `response`.
            type: object
    Package:
      description: Пакет развертывания версий.
      type: object
      properties:
        bucketName:
          description: |-
            Обязательное поле.
            Имя бакета, в котором хранится код версии.
          type: string
        objectName:
          description: |-
            Обязательное поле.
            Имя объекта в корзине, в которой хранится код версии.
          type: string
        sha256:
          description: SHA256-хэш пакета развертывания для версии.
          type: string
    RemoveFunctionTagMetadata:
      type: object
      properties:
        functionVersionId:
          description: Идентификатор версии функции, для которой удаляется тег.
          type: string
    RemoveFunctionTagRequest:
      type: object
      properties:
        tag:
          description: |-
            Тег, который нужно удалить из указанной версии.

            Значение должно соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
          type: string
    Resources:
      description: Ресурсы, выделенные для версии.
      type: object
      properties:
        memory:
          description: |-
            Объем памяти в байтах, доступный для версии.

            Допустимые значения — от 33554432 до 1073741824 включительно.
          type: string
          format: int64
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: Идентификатор ресурса, для которого задается список привязок
            прав доступа.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Обязательное поле.
            Привязки прав доступа, которые будут установлены. Дополнительные сведения см. в
            разделе [Привязка прав доступа](/docs/iam/concepts/access-control/#access-bindings).
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    SetFunctionTagMetadata:
      type: object
      properties:
        functionVersionId:
          description: Идентификатор версии функции, для которой добавляется тег.
          type: string
    SetFunctionTagRequest:
      type: object
      properties:
        tag:
          description: |-
            Тег для установки версии.

            Значение должно соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
          type: string
    Subject:
      type: object
      properties:
        id:
          description: |-
            Обязательное поле.
            Идентификатор субъекта.

            Может иметь одно из значений:
            * `allAuthenticatedUsers`: Специальный системный идентификатор, представляющий любого пользователя, прошедшего аутентификацию. Его можно использовать только если в параметре `type` указано `system`.
            * `allUsers`: Специальный системный идентификатор, представляющий любого пользователя. Аутентификация не требуется. Например, при запросе через API не надо будет указывать IAM-токен.
            * `<идентификатор пользователя в облаке>`: Идентификатор, представляющий учетную запись пользователя. Его можно использовать только если в параметре `type` передано одно из следующих значений: `userAccount`, `federatedUser` или `serviceAccount`.

            Максимальная длина строки в символах — 50.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип субъекта.

            Может иметь одно из значений:
            * `userAccount` — аккаунт на Яндексе или Яндекс.Коннекте, добавленный в {{ yandex-cloud }}.
            * `serviceAccount` — сервисный аккаунт. Этот тип представляет ресурс [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation).
            * `federatedUser` — федеративный аккаунт. Этот тип представляет пользователя из федерации удостоверений, например Active Directory.
            * `system` — системная группа. Представляет набор аккаунтов, который описывается общим системным идентификатором.

            Дополнительные сведения см. в разделе [Субъект, которому назначается роль](/docs/iam/concepts/access-control/#subject).

            Максимальная длина строки в символах — 100.
          type: string
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: Идентификатор ресурса, для которого обновляется список привязок
            прав доступа.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Обязательное поле.
            Изменения в список привязок прав доступа.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateFunctionMetadata:
      type: object
      properties:
        functionId:
          description: Идентификатор обновляемой функции.
          type: string
    UpdateFunctionRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateFunctionRequest_updateMask'
        name:
          description: |-
            Новое имя функции. Имя должно быть уникальным в рамках каталога.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Новое описание функции.

            Максимальная длина строки в символах — 256.
          type: string
        labels:
          description: |-
            Метки функций в виде пар `key:value` .

            Существующий набор меток полностью заменяется предоставленным набором, поэтому,
            если вы просто хотите добавить или удалить метку, запросите текущий набор меток,
            используя запрос [get](/docs/functions/functions/api-ref/Function/get) .

            Не более 64 на ресурс.
            Длина строки в символах для каждого ключа должна быть от 1 до 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    Version:
      description: |-
        Версия функции. Дополнительные сведения о концепции см. в разделе
        [Версия функции](/docs/functions/concepts/function#version).
      type: object
      properties:
        id:
          description: Идентификатор версии.
          type: string
        functionId:
          description: Идентификатор функции, которой принадлежит версия.
          type: string
        description:
          description: |-
            Описание версии.

            Длина строки в символах должна быть от 0 до 256.
          type: string
        createdAt:
          description: |-
            Время создания версии.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        runtime:
          description: |-
            Идентификатор среды выполнения для функции.

            Поддерживаемые среды и их идентификаторы перечислены в списке
            [Среда выполнения](/docs/functions/concepts/runtime).
          type: string
        entrypoint:
          description: |-
            Точка входа для функции: имя функции, вызываемой в качестве обработчика.

            Указывается в формате `<function file name>.<handler name>`, например, `index.myFunction`.
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_Version_resources'
        executionTimeout:
          description: |-
            Таймаут для выполнения версии.

            Если время ожидания будет превышено, Cloud Functions возвращает 504 HTTP-код.
          type: string
        serviceAccountId:
          description: Идентификатор сервисного аккаунта, который связан с версией.
          type: string
        imageSize:
          description: Окончательный размер пакета развертывания после распаковки.
          type: string
          format: int64
        status:
          $ref: '#/components/schemas/VersionStatus_in_Version_status'
        tags:
          description: Теги версий. Подробнее см. в [Тег версии](/docs/functions/concepts/function#tag).
          type: array
          items:
            type: string
        logGroupId:
          description: Идентификатор группы журналов выполнения для версии.
          type: string
        environment:
          description: Параметры среды выполнения для версии.
          type: object
          additionalProperties:
            type: string
    VersionStatus:
      description: |2-
         - CREATING: Версия создается.
         - ACTIVE: Версия готова к использованию.
      type: string
      enum:
      - CREATING
      - ACTIVE
    rpcStatus:
      description: Описание ошибки в случае сбоя или отмены операции.
      type: object
      properties:
        code:
          description: Код ошибки. Значение из списка [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: Текст ошибки.
          type: string
        details:
          description: Список сообщений с подробными сведениями об ошибке.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Обязательное поле.
        Субъект, для которого создается привязка прав доступа. Может
        представлять собой аккаунт с уникальным идентификатором в облаке или системную
        группу с общим системным идентификатором.
      type: object
      properties:
        id:
          description: |-
            Обязательное поле.
            Идентификатор субъекта.

            Может иметь одно из значений:
            * `allAuthenticatedUsers`: Специальный системный идентификатор, представляющий любого пользователя, прошедшего аутентификацию. Его можно использовать только если в параметре `type` указано `system`.
            * `allUsers`: Специальный системный идентификатор, представляющий любого пользователя. Аутентификация не требуется. Например, при запросе через API не надо будет указывать IAM-токен.
            * `<идентификатор пользователя в облаке>`: Идентификатор, представляющий учетную запись пользователя. Его можно использовать только если в параметре `type` передано одно из следующих значений: `userAccount`, `federatedUser` или `serviceAccount`.

            Максимальная длина строки в символах — 50.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип субъекта.

            Может иметь одно из значений:
            * `userAccount` — аккаунт на Яндексе или Яндекс.Коннекте, добавленный в {{ yandex-cloud }}.
            * `serviceAccount` — сервисный аккаунт. Этот тип представляет ресурс [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation).
            * `federatedUser` — федеративный аккаунт. Этот тип представляет пользователя из федерации удостоверений, например Active Directory.
            * `system` — системная группа. Представляет набор аккаунтов, который описывается общим системным идентификатором.

            Дополнительные сведения см. в разделе [Субъект, которому назначается роль](/docs/iam/concepts/access-control/#subject).

            Максимальная длина строки в символах — 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Обязательное поле.
        Действие, которое надо выполнить с привязкой прав доступа.

         - ADD: Добавление новой привязки прав доступа.
         - REMOVE: Удаление привязки прав доступа.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Обязательное поле.
        Привязка прав доступа. Дополнительные сведения см. в разделе [Привязка прав доступа](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Обязательное поле.
            Идентификатор ресурса [Role](/docs/iam/api-ref/Role#representation) который назначен для субъекта, указанного в
            параметре `subject`.

            Максимальная длина строки в символах — 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    FunctionStatus_in_Function_status:
      description: |-
        Состояние функции.

         - CREATING: Функция создается.
         - ACTIVE: Функция готова к вызову.
         - DELETING: Функция удаляется.
         - ERROR: Сбой функции.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - ERROR
    FieldMask_in_UpdateFunctionRequest_updateMask:
      description: |-
        Маска поля, которая указывает, какие атрибуты функции должны быть обновлены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    Resources_in_Version_resources:
      description: |-
        Ресурсы, выделенные для версии.

        Ресурсы, выделенные для версии.
      type: object
      properties:
        memory:
          description: |-
            Объем памяти в байтах, доступный для версии.

            Допустимые значения — от 33554432 до 1073741824 включительно.
          type: string
          format: int64
    VersionStatus_in_Version_status:
      description: |-
        Состояние версии.

         - CREATING: Версия создается.
         - ACTIVE: Версия готова к использованию.
      type: string
      enum:
      - CREATING
      - ACTIVE
tags:
- name: Function
  description: Набор методов управления бессерверными функциями.
