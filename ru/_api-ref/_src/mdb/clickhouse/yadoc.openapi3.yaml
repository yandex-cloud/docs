openapi: "3.0"
info:
  title: Yandex Managed Service for ClickHouse API
  description: Методы справочника API сгруппированы по ресурсам. Чтобы выполнить операцию
    над ресурсом, отправьте HTTP-запрос к соответствующему URL или выполните RPC-вызов.
    Подробнее об архитектуре API Яндекс.Облака, см. [Концепции API Яндекс.Облака](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mdb.api.cloud.yandex.net
paths:
  /managed-clickhouse/v1/backups/{backupId}:
    get:
      tags:
      - Backup
      summary: Возвращает указанную резервную копию для ClickHouse.
      description: Чтобы получить список доступных ресурсов Backup для ClickHouse,
        отправьте запрос [list](/docs/managed-clickhouse/api-ref/Backup/list).
      operationId: BackupGet
      parameters:
      - name: backupId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор резервной копии, сведения о которой запрашиваются. Чтобы получить
          идентификатор резервной копии, используйте запрос [listBackups](/docs/managed-clickhouse/api-ref/Cluster/listBackups).
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      x-y-navtitle: get
  /managed-clickhouse/v1/backups:
    get:
      tags:
      - Backup
      summary: Получение списка резервных копий для указанного каталога.
      operationId: BackupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор каталога для вывода списка резервных копий. Чтобы получить
          идентификатор каталога, используйте запрос [list](/docs/resource-manager/api-ref/Folder/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Backup/list#query_params), сервис вернет значение [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses), которое
          можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Backup/list#query_params) равным значению поля
          [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
      x-y-navtitle: list
  /managed-clickhouse/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Возвращает указанный ClickHouse-кластер.
      description: Чтобы получить список доступных кластеров ClickHouse, выполните
        запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемого ресурса Cluster для ClickHouse. Чтобы получить идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Удаляет указанный кластер ClickHouse.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, который нужно удалить. Чтобы получить идентификатор кластера ClickHouse, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Изменяет указанный кластер ClickHouse.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса Cluster для ClickHouse, который следует обновить. Чтобы получить идентификатор кластера ClickHouse, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Получает список ClickHouse-кластеров, принадлежащих указанному каталогу.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор каталога для вывода списка кластеров ClickHouse. Чтобы получить идентификатор каталога, используйте запрос
          [list](/docs/resource-manager/api-ref/Folder/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на одной странице в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/list#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses), которое можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Cluster/list#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses) предыдущего запроса, чтобы получить следующую
          страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Выражение, позволяющее отфильтровать информацию о ресурсах в ответе, оставив только нужную. В этом выражении должны быть указаны:
          1. Имя поля. В настоящее время фильтрацию можно использовать только по полю [Cluster.name](/docs/managed-clickhouse/api-ref/Cluster#representation).
          2. Условный оператор. Поддерживаются операторы `=` и `!=` для одиночных значений, `IN` и `NOT IN` для списков значений.
          3. Значение. Должно содержать от 1 до 63 символов и соответствовать регулярному выражению `^[a-zA-Z0-9_-]+$`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Создает кластер ClickHouse в указанном каталоге.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Запускает указанный кластер ClickHouse.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, который следует запустить.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Останавливает указанный кластер ClickHouse.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, который следует остановить.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:move:
    post:
      tags:
      - Cluster
      summary: Перемещает кластер ClickHouse в указанный каталог.
      operationId: ClusterMove
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, который следует переместить.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: move
      x-y-operation-metadata:
        $ref: '#/components/schemas/MoveClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:addZookeeper:
    post:
      tags:
      - Cluster
      summary: Добавляет подкластер ZooKeeper в указанный кластер ClickHouse.
      operationId: ClusterAddZookeeper
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, который следует изменить.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterZookeeperRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addZookeeper
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterZookeeperMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:backup:
    post:
      tags:
      - Cluster
      summary: Создает резервную копию для указанного кластера ClickHouse.
      operationId: ClusterBackup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, для которого следует создать резервную копию. Чтобы получить идентификатор кластера ClickHouse, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: backup
      x-y-operation-metadata:
        $ref: '#/components/schemas/BackupClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters:restore:
    post:
      tags:
      - Cluster
      summary: Создает новый кластер ClickHouse с использованием указанной резервной
        копии.
      operationId: ClusterRestore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: restore
      x-y-operation-metadata:
        $ref: '#/components/schemas/RestoreClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:logs:
    get:
      tags:
      - Cluster
      summary: Получает логи для указанного кластера ClickHouse.
      operationId: ClusterListLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, для которого следует запросить логи. Чтобы получить идентификатор кластера ClickHouse, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: Столбцы из таблицы логов, которые нужно запросить. Если столбцы
          не указаны, записи логов возвращаются целиком.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        description: Тип сервиса, для которого следует запросить логи.
        schema:
          $ref: '#/components/schemas/ListClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Начало периода, для которого следует запросить логи, в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

          Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          Конец периода, для которого следует запросить логи, в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

          Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
        schema:
          type: string
          format: date-time
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на одной странице в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses), которое можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses) предыдущего запроса, чтобы получить
          следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterLogsResponse'
      x-y-navtitle: listLogs
  /managed-clickhouse/v1/clusters/{clusterId}:stream_logs:
    get:
      tags:
      - Cluster
      summary: |-
        То же самое, что ListLogs, с той разницей, что со стороны сервера передается поток логов. Допускается использовать семантику 'tail-f' при работе с потоком
        логов.
      operationId: ClusterStreamLogs
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Обязательное поле. Идентификатор кластера ClickHouse.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: columnFilter
        in: query
        description: Столбцы, которые нужно запросить из лога.
        schema:
          type: array
          items:
            type: string
      - name: serviceType
        in: query
        schema:
          $ref: '#/components/schemas/StreamClusterLogsRequestServiceType'
      - name: fromTime
        in: query
        description: |-
          Временная метка, начиная с которой следует запросить логи.

          Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
        schema:
          type: string
          format: date-time
      - name: toTime
        in: query
        description: |-
          Временная метка, до которой следует запросить логи. Если значение этого поля не задано, то будут отправлены все существующие записи в логе, а затем и новые
          по мере их появления. В сущности, это эквивалентно семантике `tail -f`.

          Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
        schema:
          type: string
          format: date-time
      - name: recordToken
        in: query
        description: |-
          Токен записи. Задайте значение [recordToken](/docs/managed-clickhouse/api-ref/Cluster/streamLogs#query_params) равным значению `nextRecordToken`, возвращенному предыдущим запросом StreamLogs, чтобы
          продолжить стриминг со следующей записи в логе.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamLogRecord'
      x-y-navtitle: streamLogs
  /managed-clickhouse/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Получает список ресурсов Operation для указанного кластера.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса Cluster для ClickHouse, для которого запрашивается список операций.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на одной странице в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses), которое можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses) предыдущего запроса, чтобы получить
          следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-clickhouse/v1/clusters/{clusterId}/backups:
    get:
      tags:
      - Cluster
      summary: Получает список доступных резервных копий для указанного кластера ClickHouse.
      operationId: ClusterListBackups
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse. Чтобы получить идентификатор кластера ClickHouse, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на одной странице в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses), которое можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses) предыдущего запроса, чтобы получить
          следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterBackupsResponse'
      x-y-navtitle: listBackups
  /managed-clickhouse/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Получает список хостов для указанного кластера.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse. Чтобы получить идентификатор кластера ClickHouse, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на одной странице в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses), которое можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses) предыдущего запроса, чтобы получить
          следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /managed-clickhouse/v1/clusters/{clusterId}/hosts:batchCreate:
    post:
      tags:
      - Cluster
      summary: Создает новые хосты для кластера.
      operationId: ClusterAddHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, для которого следует добавить хосты. Чтобы получить идентификатор кластера ClickHouse, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-clickhouse/v1/clusters/{clusterId}/hosts:batchDelete:
    post:
      tags:
      - Cluster
      summary: Удаляет указанные хосты кластера.
      operationId: ClusterDeleteHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse из которого следует удалить хосты. Чтобы получить идентификатор кластера ClickHouse, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterHostsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteHosts
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterHostsMetadata'
      x-y-operation-response: Empty
  /managed-clickhouse/v1/clusters/{clusterId}/shards/{shardName}:
    get:
      tags:
      - Cluster
      summary: Возвращает указанный шард.
      operationId: ClusterGetShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, к которому принадлежит шард. Чтобы получить идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list). Чтобы получить имя
          базы данных, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Обязательное поле.
          Имя шарда, информацию о котором нужно запросить. Чтобы получить имя шарда, используйте запрос [listShards](/docs/managed-clickhouse/api-ref/Cluster/listShards).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shard'
      x-y-navtitle: getShard
    delete:
      tags:
      - Cluster
      summary: Удаляет указанный шард.
      operationId: ClusterDeleteShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, которому принадлежит шард. Чтобы получить идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Обязательное поле.
          Имя удаляемого шарда. Чтобы получить имя шарда, используйте запрос [listShards](/docs/managed-clickhouse/api-ref/Cluster/listShards).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterShardMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Изменяет указанный шард.
      operationId: ClusterUpdateShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, которому принадлежит шард. Чтобы получить идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: shardName
        in: path
        description: |-
          Обязательное поле.
          Имя шарда, который следует изменить. Чтобы получить имя шарда, используйте запрос [listShards](/docs/managed-clickhouse/api-ref/Cluster/listShards).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterShardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterShardMetadata'
      x-y-operation-response: '`Shard`'
  /managed-clickhouse/v1/clusters/{clusterId}/shards:
    get:
      tags:
      - Cluster
      summary: Получает список шардов, принадлежащих указанному кластеру.
      operationId: ClusterListShards
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, для которого нужно вывести список шардов. Чтобы получить идентификатор кластера, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на одной странице в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses), которое можно использовать для получения следующей страницы.

          Допустимые значения — от 0 до 1000 включительно.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Номер страницы. Чтобы получить следующую страницу результатов, установите значение [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params) равным значению поля
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses) прошлого запроса.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterShardsResponse'
      x-y-navtitle: listShards
    post:
      tags:
      - Cluster
      summary: Создает новый шард в указанном кластере.
      operationId: ClusterAddShard
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому нужно добавить шард. Чтобы получить идентификатор кластера ClickHouse, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddClusterShardRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: addShard
      x-y-operation-metadata:
        $ref: '#/components/schemas/AddClusterShardMetadata'
      x-y-operation-response: '`Shard`'
  /managed-clickhouse/v1/clusters/{clusterId}/shardGroups/{shardGroupName}:
    get:
      tags:
      - Cluster
      summary: Возвращает указанную группу шардов.
      operationId: ClusterGetShardGroup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, к которому принадлежит группа шардов.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: shardGroupName
        in: path
        description: |-
          Обязательное поле.
          Имя группы шардов, информацию о которой нужно запросить. Чтобы получить имя группы шардов, используйте запрос [listShardGroups](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShardGroup'
      x-y-navtitle: getShardGroup
    delete:
      tags:
      - Cluster
      summary: Удаляет указанную группу шардов.
      operationId: ClusterDeleteShardGroup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, которому принадлежит группа шардов.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: shardGroupName
        in: path
        description: |-
          Обязательное поле.
          Имя группы шардов, которую следует удалить.

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteShardGroup
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterShardGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Изменяет указанную группу шардов.
      operationId: ClusterUpdateShardGroup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, содержащего обновляемую группу шардов.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: shardGroupName
        in: path
        description: |-
          Обязательное поле.
          Имя группы шардов, которую следует изменить.

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterShardGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateShardGroup
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterShardGroupMetadata'
      x-y-operation-response: '`ShardGroup`'
  /managed-clickhouse/v1/clusters/{clusterId}/shardGroups:
    get:
      tags:
      - Cluster
      summary: Получает список групп шардов, принадлежащих указанному кластеру.
      operationId: ClusterListShardGroups
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, к которому принадлежит группа шардов.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на одной странице в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#responses), которое можно использовать для получения следующей страницы.

          Допустимые значения — от 0 до 1000 включительно.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#responses) предыдущего запроса, чтобы получить
          следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterShardGroupsResponse'
      x-y-navtitle: listShardGroups
    post:
      tags:
      - Cluster
      summary: Создает новую группу шардов в указанном кластере.
      operationId: ClusterCreateShardGroup
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, в который нужно добавить группу шардов. Чтобы получить идентификатор кластера ClickHouse, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterShardGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: createShardGroup
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterShardGroupMetadata'
      x-y-operation-response: '`ShardGroup`'
  /managed-clickhouse/v1/clusters/{clusterId}:createExternalDictionary:
    post:
      tags:
      - Cluster
      summary: Создает внешний словарь для указанного кластера ClickHouse.
      operationId: ClusterCreateExternalDictionary
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, для которого следует создать внешний словарь. Чтобы получить идентификатор кластера, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterExternalDictionaryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: createExternalDictionary
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterExternalDictionaryMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}:deleteExternalDictionary:
    post:
      tags:
      - Cluster
      summary: Удаляет указанный внешний словарь.
      operationId: ClusterDeleteExternalDictionary
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, для которого следует удалить внешний словарь. Чтобы получить идентификатор кластера, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteClusterExternalDictionaryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: deleteExternalDictionary
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterExternalDictionaryMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-clickhouse/api-ref/Cluster#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/databases/{databaseName}:
    get:
      tags:
      - Database
      summary: Возвращает указанный ресурс Database для ClickHouse.
      description: Чтобы получить список доступных ресурсов Database для ClickHouse,
        отправьте запрос [list](/docs/managed-clickhouse/api-ref/Database/list).
      operationId: DatabaseGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому принадлежит база данных. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Обязательное поле.
          Имя возвращаемого ресурса Database для базы данных ClickHouse. Чтобы получить имя базы
          данных, используйте запрос [list](/docs/managed-clickhouse/api-ref/Database/list).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Database'
      x-y-navtitle: get
    delete:
      tags:
      - Database
      summary: Удаляет указанную базу данных ClickHouse.
      operationId: DatabaseDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, в котором следует удалить базу данных. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: databaseName
        in: path
        description: |-
          Обязательное поле.
          Имя удаляемой базы данных. Чтобы получить имя базы данных, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/Database/list).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteDatabaseMetadata'
      x-y-operation-response: Empty
  /managed-clickhouse/v1/clusters/{clusterId}/databases:
    get:
      tags:
      - Database
      summary: Получает список ресурсов Database для указанного кластера ClickHouse.
      operationId: DatabaseList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, для которого нужно вывести список баз данных. Чтобы
          получить идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Database/list#query_params) , сервис вернет значение [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses), которое
          можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Номер страницы. Чтобы получить следующую страницу результатов, установите значение
          [pageToken](/docs/managed-clickhouse/api-ref/Database/list#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses) прошлого запроса.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatabasesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Database
      summary: Создает новую базу данных ClickHouse в указанном кластере.
      operationId: DatabaseCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, в котором следует создать базу данных. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatabaseRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateDatabaseMetadata'
      x-y-operation-response: '[Database](/docs/managed-clickhouse/api-ref/Database#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/mlModels/{mlModelName}:
    get:
      tags:
      - MlModel
      summary: Возвращает указанную модель машинного обучения.
      description: Чтобы получить список доступных подкластеров Data Proc, выполните
        запрос "[list](/docs/managed-clickhouse/api-ref/MlModel/list)".
      operationId: MlModelGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому принадлежит модель.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: mlModelName
        in: path
        description: |-
          Обязательное поле.
          Имя возвращаемой модели.

          Чтобы получить имя модели, используйте запрос "[list](/docs/managed-clickhouse/api-ref/MlModel/list)".

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MlModel'
      x-y-navtitle: get
    delete:
      tags:
      - MlModel
      summary: Удаляет указанную модель машинного обучения.
      operationId: MlModelDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, в котором необходимо удалить модель.

          Чтобы получить идентификатор кластера, выполните запрос "[list](/docs/managed-clickhouse/api-ref/Cluster/list)".

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: mlModelName
        in: path
        description: |-
          Обязательное поле.
          Имя модели, которую нужно удалить.

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteMlModelMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - MlModel
      summary: Обновляет указанную модель машинного обучения.
      operationId: MlModelUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера для обновления модели.

          Чтобы получить идентификатор кластера, выполните запрос "[list](/docs/managed-clickhouse/api-ref/Cluster/list)".

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: mlModelName
        in: path
        description: |-
          Обязательное поле.
          Имя модели для обновления.

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMlModelRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateMlModelMetadata'
      x-y-operation-response: '[MlModel](/docs/managed-clickhouse/api-ref/MlModel#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/mlModels:
    get:
      tags:
      - MlModel
      summary: Возвращает список моделей машинного обучения в указанном кластере.
      operationId: MlModelList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, к которому принадлежат модели.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество результатов больше чем "page_size" , сервис вернет значение "[nextPageToken](/docs/managed-clickhouse/api-ref/MlModel/list#responses)", которое можно использовать для получения следующей страницы. Значение по умолчанию: 100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение "page_token" равным значению поля "[nextPageToken](/docs/managed-clickhouse/api-ref/MlModel/list#responses)" предыдущего запроса, чтобы получить следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMlModelsResponse'
      x-y-navtitle: list
    post:
      tags:
      - MlModel
      summary: Создает модель машинного обучения в указанном кластере.
      operationId: MlModelCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, в котором создается модель.

          Чтобы получить идентификатор кластера, выполните запрос "[list](/docs/managed-clickhouse/api-ref/Cluster/list)".

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMlModelRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateMlModelMetadata'
      x-y-operation-response: '[MlModel](/docs/managed-clickhouse/api-ref/MlModel#representation)'
  /managed-clickhouse/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Возвращает указанный ресурс ResourcePreset.
      description: Чтобы получить список доступных ресурсов ResourcePreset, используйте
        запрос [list](/docs/managed-clickhouse/api-ref/ResourcePreset/list).
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор набора ресурсов, данные о котором запрашиваются. Чтобы получить
          идентификатор набора ресурсов, используйте запрос [list](/docs/managed-clickhouse/api-ref/ResourcePreset/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /managed-clickhouse/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Получает список доступных ресурсов ResourcePreset.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params), сервис вернет значение [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses),
          которое можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params) равным значению поля
          [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /managed-clickhouse/v1/clusters/{clusterId}/users/{userName}:
    get:
      tags:
      - User
      summary: Возвращает указанный ресурс User для ClickHouse.
      description: Чтобы получить список доступных ресурсов User для ClickHouse, отправьте
        запрос [list](/docs/managed-clickhouse/api-ref/User/list).
      operationId: UserGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому принадлежит пользователь. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Обязательное поле.
          Имя запрашиваемого ресурса User для ClickHouse. Чтобы получить имя пользователя,
          используйте запрос [list](/docs/managed-clickhouse/api-ref/User/list).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-y-navtitle: get
    delete:
      tags:
      - User
      summary: Удаляет указанного пользователя ClickHouse.
      operationId: UserDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому принадлежит пользователь. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Обязательное поле.
          Имя удаляемого пользователя. Чтобы получить имя пользователя, используйте запрос
          [list](/docs/managed-clickhouse/api-ref/User/list).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteUserMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - User
      summary: Изменяет указанного пользователя ClickHouse.
      operationId: UserUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому принадлежит пользователь. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Обязательное поле.
          Имя пользователя, которого следует изменить. Чтобы получить имя пользователя,
          используйте запрос [list](/docs/managed-clickhouse/api-ref/User/list).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/users:
    get:
      tags:
      - User
      summary: Получает список ресурсов User для указанного кластера ClickHouse.
      operationId: UserList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера для вывода списка пользователей ClickHouse. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/User/list#query_params), сервис вернет значение [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses), которое
          можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/User/list#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses)
          предыдущего запроса, чтобы получить следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
      x-y-navtitle: list
    post:
      tags:
      - User
      summary: Создает пользователя ClickHouse в указанном кластере.
      operationId: UserCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, в котором следует создать пользователя. Чтобы
          получить идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateUserMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/users/{userName}:grantPermission:
    post:
      tags:
      - User
      summary: Предоставляет разрешение указанному пользователю ClickHouse.
      operationId: UserGrantPermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому принадлежит пользователь. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Обязательное поле.
          Имя пользователя, которому следует предоставить разрешение. Чтобы получить имя
          пользователя, используйте запрос [list](/docs/managed-clickhouse/api-ref/User/list).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: grantPermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/GrantUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
  /managed-clickhouse/v1/clusters/{clusterId}/users/{userName}:revokePermission:
    post:
      tags:
      - User
      summary: Отзывает разрешение у указанного пользователя ClickHouse.
      operationId: UserRevokePermission
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера ClickHouse, к которому принадлежит пользователь. Чтобы получить
          идентификатор кластера, используйте запрос [list](/docs/managed-clickhouse/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: userName
        in: path
        description: |-
          Обязательное поле.
          Имя пользователя, у которого следует отозвать разрешение. Чтобы получить имя
          пользователя, используйте запрос [list](/docs/managed-clickhouse/api-ref/User/list).

          Максимальная длина строки в символах — 63.
          Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_]* ``.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeUserPermissionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: revokePermission
      x-y-operation-metadata:
        $ref: '#/components/schemas/RevokeUserPermissionMetadata'
      x-y-operation-response: '[User](/docs/managed-clickhouse/api-ref/User#representation)'
  /managed-clickhouse/v1/versions:
    get:
      tags:
      - Versions
      summary: Возвращает список доступных версий ClickHouse.
      operationId: VersionsList
      parameters:
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Versions/list#query_params), сервис вернет значение
          [nextPageToken](/docs/managed-clickhouse/api-ref/Versions/list#responses), которое можно использовать для получения следующей страницы. Значение по умолчанию: 100.

          Допустимые значения — от 0 до 1000 включительно.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/managed-clickhouse/api-ref/Versions/list#query_params) равным значению поля [nextPageToken](/docs/managed-clickhouse/api-ref/Versions/list#responses) предыдущего запроса, чтобы получить следующую
          страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVersionsResponse'
      x-y-navtitle: list
components:
  schemas:
    Access:
      type: object
      properties:
        dataLens:
          description: Разрешить экспорт данных из кластера в Yandex DataLens.
          type: boolean
          format: boolean
        webSql:
          description: |-
            Разрешить SQL-запросы к базам данных кластера из консоли управления облаком.

            Подробнее см. в [SQL-запросы в консоли управления](/docs/managed-clickhouse/operations/web-sql-query).
          type: boolean
          format: boolean
        metrika:
          description: |-
            Разрешить импорт данных из Яндекс Метрики и AppMetrica в кластер.

            Подробнее см. в [Экспорт данных в {{ yandex-cloud }}](https://appmetrica.yandex.ru/docs/common/cloud/about.html).
          type: boolean
          format: boolean
        serverless:
          description: Разрешить доступ к кластеру для Serverless.
          type: boolean
          format: boolean
    AddClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, в который добавляются хосты.
          type: string
        hostNames:
          description: Имена хостов, добавляемых в кластер.
          type: array
          items:
            type: string
    AddClusterHostsRequest:
      type: object
      properties:
        hostSpecs:
          description: |-
            Обязательное поле.
            Конфигурации для хостов ClickHouse, которые должны быть добавлены в кластер.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    AddClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, в который добавляется шард.
          type: string
        shardName:
          description: Имя создаваемого шарда.
          type: string
    AddClusterShardRequest:
      type: object
      properties:
        shardName:
          description: |-
            Обязательное поле.
            Имя нового шарда.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
        configSpec:
          $ref: '#/components/schemas/ShardConfigSpec_in_AddClusterShardRequest_configSpec'
        hostSpecs:
          description: |-
            Обязательное поле.
            Конфигурации для хостов ClickHouse, которые должны быть созданы вместе с шардом.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    AddClusterZookeeperMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse.
          type: string
    AddClusterZookeeperRequest:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_AddClusterZookeeperRequest_resources'
        hostSpecs:
          description: Конфигурация хостов ZooKeeper.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
    Backup:
      description: Ресурс Backup для ClickHouse. Подробное описание см. в [документации](/docs/managed-clickhouse/concepts/backup).
      type: object
      properties:
        id:
          description: Идентификатор резервной копии.
          type: string
        folderId:
          description: Идентификатор каталога, которому принадлежит резервная копия.
          type: string
        createdAt:
          description: |-
            Время создания в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) (т. е. когда операция резервного
            копирования была завершена).

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        sourceClusterId:
          description: Идентификатор кластера ClickHouse, для которого была создана
            резервная копия.
          type: string
        sourceShardNames:
          description: Имена шардов, включенных в резервную копию.
          type: array
          items:
            type: string
        startedAt:
          description: |-
            Время запуска операции резервного копирования.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
    BackupClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, для которого выполняется
            резервное копирование.
          type: string
    ClickhouseConfig:
      description: |-
        Настройки конфигурации ClickHouse. Подробное описание для каждого набора настроек доступно в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Любые настройки, не перечисленные здесь, не поддерживаются.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: Параметры сжатия для кластера ClickHouse. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: Конфигурация внешних словарей для кластера ClickHouse. См.
            подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: Настройки для прореживания данных Graphite. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Максимальное количество входящих подключений.

            Минимальное значение — 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Максимальное количество одновременно обрабатываемых запросов.

            Минимальное значение — 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Количество миллисекунд, в течение которых ClickHouse ожидает
            входящие запросы прежде чем закрыть подключение.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: Размер кэша (в байтах) для несжатых данных, используемых таблицами
            MergeTree. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Примерный размер (в байтах) кэша «меток», используемых таблицами MergeTree. Подробнее в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#mark_cache_size).

            Значение должно быть больше 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: Максимальный размер таблицы, которую можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: Максимальный размер раздела, который можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: Параметр устарел и не имеет никакого эффекта.
          deprecated: true
          type: integer
          format: int64
        timezone:
          description: Часовой пояс сервера, используемый в преобразованиях полей
            DateTime. Указывается как идентификатор IANA. См. подробное описание в
            [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#timezone).
          type: string
        geobaseUri:
          type: string
    ClickhouseConfigCompression:
      type: object
      properties:
        method:
          $ref: '#/components/schemas/ClickhouseConfigCompressionMethod_in_ClickhouseConfigCompression_method'
        minPartSize:
          description: |-
            Минимальный размер части таблицы.

            Минимальное значение — 1.
          type: string
          format: int64
        minPartSizeRatio:
          description: Минимальное отношение части к размеру всех данных в таблице.
          type: number
          format: double
    ClickhouseConfigCompressionMethod:
      description: |2-
         - LZ4: [LZ4 compression algorithm](https://lz4.github.io/lz4/).
         - ZSTD: [Zstandard compression algorithm](https://facebook.github.io/zstd/).
      type: string
      enum:
      - LZ4
      - ZSTD
    ClickhouseConfigExternalDictionary:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Обязательное поле.
              Имя внешнего словаря.
            type: string
          structure:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructure'
            description: |-
              Обязательное поле.
              Набор атрибутов внешнего словаря. Подробное описание см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_structure/).
          layout:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryLayout'
            description: |-
              Обязательное поле.
              Макет для хранения словаря в памяти. Подробное описание см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_layout/).
      - title: lifetime
        type: object
        maxProperties: 1
        properties:
          fixedLifetime:
            description: Жесткий интервал между обновлениями словаря.
            type: string
            format: int64
          lifetimeRange:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryRange'
            description: Диапазон интервалов между обновлениями словаря, из которых
              может выбирать ClickHouse.
      - title: source
        type: object
        maxProperties: 1
        properties:
          httpSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryHttpSource'
            description: HTTP-источник для словаря.
          mysqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMysqlSource'
            description: MySQL-источник для словаря.
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryClickhouseSource'
            description: ClickHouse-источник для словаря.
          mongodbSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMongodbSource'
            description: MongoDB-источник для словаря.
          postgresqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryPostgresqlSource'
            description: PostgreSQL-источник для словаря.
    ClickhouseConfigExternalDictionaryClickhouseSource:
      type: object
      properties:
        db:
          description: |-
            Обязательное поле.
            Имя базы данных ClickHouse.
          type: string
        table:
          description: |-
            Обязательное поле.
            Имя таблицы в указанной базе данных, используемой в качестве источника словаря.
          type: string
        host:
          description: |-
            Обязательное поле.
            Хост ClickHouse для указанной базы данных.

            Максимальная длина строки в символах — 253.
          type: string
        port:
          description: |-
            Порт для подключения к хосту.

            Допустимые значения — от 0 до 65535 включительно.
          type: string
          format: int64
        user:
          description: |-
            Обязательное поле.
            Имя пользователя базы данных ClickHouse.
          type: string
        password:
          description: Пароль пользователя базы данных ClickHouse.
          type: string
        where:
          description: Критерии выбора данных в указанной таблице ClickHouse.
          type: string
    ClickhouseConfigExternalDictionaryHttpSource:
      type: object
      properties:
        url:
          description: |-
            Обязательное поле.
            URL внешнего словаря, доступного по HTTP.
          type: string
        format:
          description: |-
            Обязательное поле.
            Формат данных. Допустимые значения: все форматы, поддерживаемые диалектом ClickHouse SQL.
          type: string
    ClickhouseConfigExternalDictionaryLayout:
      description: Макет, определяющий способ хранения словаря в памяти.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryLayoutType_in_ClickhouseConfigExternalDictionaryLayout_type'
        sizeInCells:
          description: Количество ячеек в кэше. Округляется до степени двойки. Применимо
            только для типов макета CACHE и COMPLEX_KEY_CACHE.
          type: string
          format: int64
    ClickhouseConfigExternalDictionaryLayoutType:
      description: |2-
         - FLAT: Весь словарь хранится в памяти в виде плоских массивов. Доступно для любых источников словарей.
         - HASHED: Весь словарь хранится в памяти в виде хэш-таблицы. Доступно для любых источников словарей.
         - COMPLEX_KEY_HASHED: Аналогичен HASHED, для использования с составными ключами. Доступно для любых источников словарей.
         - RANGE_HASHED: Весь словарь хранится в памяти в виде хэш-таблицы, с упорядоченным массивом диапазонов и соответствующих им значений. Доступно для любых источников словарей.
         - CACHE: Словарь хранится в кэше с заданным количеством ячеек. Доступно для источников словарей MySQL, ClickHouse и HTTP.
         - COMPLEX_KEY_CACHE: Аналогичен CACHE, для использования с составными ключами. Доступно для источников словарей MySQL, ClickHouse и HTTP.
      type: string
      enum:
      - FLAT
      - HASHED
      - COMPLEX_KEY_HASHED
      - RANGE_HASHED
      - CACHE
      - COMPLEX_KEY_CACHE
    ClickhouseConfigExternalDictionaryMongodbSource:
      type: object
      properties:
        db:
          description: |-
            Обязательное поле.
            Имя базы данных MongoDB.
          type: string
        collection:
          description: |-
            Обязательное поле.
            Имя коллекции в указанной базе данных, которую следует использовать в качестве источника словаря.
          type: string
        host:
          description: |-
            Обязательное поле.
            Хост MongoDB для указанной базы данных.

            Максимальная длина строки в символах — 253.
          type: string
        port:
          description: |-
            Порт для подключения к хосту.

            Допустимые значения — от 0 до 65535 включительно.
          type: string
          format: int64
        user:
          description: |-
            Обязательное поле.
            Имя пользователя базы данных MongoDB.
          type: string
        password:
          description: Пароль пользователя базы данных MongoDB.
          type: string
    ClickhouseConfigExternalDictionaryMysqlSource:
      type: object
      properties:
        db:
          description: |-
            Обязательное поле.
            Имя базы данных MySQL, к которой нужно подключаться.
          type: string
        table:
          description: |-
            Обязательное поле.
            Имя таблицы базы данных, которую следует использовать в качестве словаря ClickHouse.
          type: string
        port:
          description: |-
            Порт по умолчанию, который нужно использовать при подключении к реплике источника словаря.

            Допустимые значения — от 0 до 65535 включительно.
          type: string
          format: int64
        user:
          description: Имя пользователя по умолчанию для реплик источника словаря.
          type: string
        password:
          description: Пароль пользователя по умолчанию для реплик источника словаря.
          type: string
        replicas:
          description: |-
            Обязательное поле.
            Список реплик базы данных MySQL, используемой в качестве источника словаря.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMysqlSourceReplica'
        where:
          description: Критерии выбора данных в указанной таблице MySQL.
          type: string
        invalidateQuery:
          description: Запрос на проверку состояния словаря, который позволит извлекать
            только обновленные данные. Дополнительные сведения см. в [документации
            ClickHouse on dictionaries](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_lifetime/).
          type: string
    ClickhouseConfigExternalDictionaryMysqlSourceReplica:
      type: object
      properties:
        host:
          description: |-
            Обязательное поле.
            Хост реплики MySQL.

            Максимальная длина строки в символах — 253.
          type: string
        priority:
          description: |-
            Обязательное поле.
            Приоритет реплики, который ClickHouse должен учитывать при подключении. Реплике с наивысшим приоритетом должно соответствовать наименьшее значение в этом поле.

            Значение должно быть больше 0.
          type: string
          format: int64
        port:
          description: |-
            Порт, который нужно использовать при подключении к реплике. Если для какой-либо реплики не указан порт, ClickHouse использует порт, указанный для источника.

            Допустимые значения — от 0 до 65535 включительно.
          type: string
          format: int64
        user:
          description: Имя пользователя базы данных MySQL.
          type: string
        password:
          description: Пароль пользователя базы данных MySQL.
          type: string
    ClickhouseConfigExternalDictionaryPostgresqlSource:
      type: object
      properties:
        db:
          description: |-
            Обязательное поле.
            Имя базы данных PostrgreSQL.
          type: string
        table:
          description: |-
            Обязательное поле.
            Имя таблицы в указанной базе данных, используемой в качестве источника словаря.
          type: string
        hosts:
          description: |-
            Обязательное поле.
            Имя хоста PostrgreSQL.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            type: string
        port:
          description: |-
            Порт для подключения к хосту.

            Допустимые значения — от 0 до 65535 включительно.
          type: string
          format: int64
        user:
          description: |-
            Обязательное поле.
            Имя пользователя базы данных PostrgreSQL.
          type: string
        password:
          description: Пароль пользователя базы данных PostrgreSQL.
          type: string
        invalidateQuery:
          description: Запрос на проверку состояния словаря, который позволит извлекать
            только обновленные данные. Дополнительные сведения см. в [документации
            ClickHouse on dictionaries](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_lifetime/).
          type: string
        sslMode:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryPostgresqlSourceSslMode_in_ClickhouseConfigExternalDictionaryPostgresqlSource_sslMode'
    ClickhouseConfigExternalDictionaryPostgresqlSourceSslMode:
      description: |2-
         - DISABLE: SSL-соединение не используется.
         - ALLOW: Сначала предпринимается попытка установить незашифрованное соединение. Если это не удается, устанавливается SSL-соединение.
         - PREFER: Сначала предпринимается попытка установить SSL-соединение. Если это не удается, устанавливается незашифрованное соединение.
         - VERIFY_CA: Устанавливается только SSL-соединение и только при условии, что сертификат выдан доверенным центром сертификации (CA).
         - VERIFY_FULL: Устанавливается только SSL-соединение и только при условии, что сертификат выдан доверенным центром сертификации и что имя хоста сервера совпадает с указанным в сертификате.
      type: string
      enum:
      - DISABLE
      - ALLOW
      - PREFER
      - VERIFY_CA
      - VERIFY_FULL
    ClickhouseConfigExternalDictionaryRange:
      type: object
      properties:
        min:
          description: Минимальное время жизни словаря.
          type: string
          format: int64
        max:
          description: Максимальное время жизни словаря.
          type: string
          format: int64
    ClickhouseConfigExternalDictionaryStructure:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureId_in_ClickhouseConfigExternalDictionaryStructure_id'
        key:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureKey_in_ClickhouseConfigExternalDictionaryStructure_key'
        rangeMin:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMin'
        rangeMax:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMax'
        attributes:
          description: |-
            Обязательное поле.
            Описание полей, доступных для запросов к базе данных. Подробнее см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_structure/#attributes).

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute'
    ClickhouseConfigExternalDictionaryStructureAttribute:
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя столбца.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип столбца.
          type: string
        nullValue:
          description: Значение по умолчанию для элемента без данных (например, пустая
            строка).
          type: string
        expression:
          description: Выражение, описывающее атрибут, если применимо.
          type: string
        hierarchical:
          description: Признак поддержки иерархии. Значение по умолчанию "false".
          type: boolean
          format: boolean
        injective:
          description: Признакт инъективного отображения "id -> атрибут". Значение
            по умолчанию "false".
          type: boolean
          format: boolean
    ClickhouseConfigExternalDictionaryStructureId:
      description: Числовой ключ.
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя числового ключа.
          type: string
    ClickhouseConfigExternalDictionaryStructureKey:
      description: Составной ключ.
      type: object
      properties:
        attributes:
          description: |-
            Обязательное поле.
            Поля составного ключа.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute'
    ClickhouseConfigGraphiteRollup:
      description: Параметры свертки для движка таблицы GraphiteMergeTree.
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя указанной комбинации параметров для свертки Graphite.
          type: string
        patterns:
          description: |-
            Обязательное поле.
            Шаблон, используемый для свертки.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollupPattern'
    ClickhouseConfigGraphiteRollupPattern:
      type: object
      properties:
        regexp:
          description: Шаблон для имен метрик.
          type: string
        function:
          description: |-
            Обязательное поле.
            Имя агрегирующей функции, которую следует применить к данным старше возраста, указанного в "`retention`".
          type: string
        retention:
          description: |-
            Обязательное поле.
            Возраст данных, которые следует использовать для прореживания.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollupPatternRetention'
    ClickhouseConfigGraphiteRollupPatternRetention:
      type: object
      properties:
        age:
          description: |-
            Минимальный возраст данных в секундах.

            Значение должно быть больше 0.
          type: string
          format: int64
        precision:
          description: |-
            Точность определения возраста данных, в секундах.

            Значение должно быть больше 0.
          type: string
          format: int64
    ClickhouseConfigLogLevel:
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    ClickhouseConfigMergeTree:
      description: Настройки движка таблицы MergeTree.
      type: object
      properties:
        replicatedDeduplicationWindow:
          description: Количество блоков хэшей, которые должен хранить ZooKeeper.
            Смотрите подробное описание в [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L59).
          type: integer
          format: int64
        replicatedDeduplicationWindowSeconds:
          description: Период времени, в течение которого следует хранить блоки хэшей.
            См. описание в [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L64).
          type: integer
          format: int64
        partsToDelayInsert:
          type: integer
          format: int64
        partsToThrowInsert:
          type: integer
          format: int64
        maxReplicatedMergesInQueue:
          type: integer
          format: int64
        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge:
          type: integer
          format: int64
        maxBytesToMergeAtMinSpaceInPool:
          type: integer
          format: int64
    ClickhouseConfigSet:
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig'
    Cluster:
      description: Ресурс Cluster для ClickHouse. Подробнее см. раздел [Cluster](/docs/managed-clickhouse/concepts)
        в руководстве разработчика.
      type: object
      properties:
        id:
          description: Идентификатор кластера ClickHouse. Этот идентификатор генерирует
            MDB при создании кластера.
          type: string
        folderId:
          description: Идентификатор каталога, которому принадлежит кластер ClickHouse.
          type: string
        createdAt:
          description: |-
            Время создания в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) .

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        name:
          description: Имя кластера ClickHouse. Имя уникально в рамках каталога. Длина
            1-63 символов.
          type: string
        description:
          description: Описание кластера ClickHouse. Длина описания должна быть от
            0 до 256 символов.
          type: string
        labels:
          description: Пользовательские метки для кластера ClickHouse в виде пар `key:value`.
            Максимум 64 на ресурс.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_Cluster_environment'
        monitoring:
          description: Описание систем мониторинга, относящихся к данному кластеру
            ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        networkId:
          description: Идентификатор сети, к которой принадлежит кластер.
          type: string
        health:
          $ref: '#/components/schemas/ClusterHealth_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        serviceAccountId:
          description: Идентификатор сервисного аккаунта, используемого для доступа
            к Yandex Object Storage.
          type: string
    ClusterConfig:
      type: object
      properties:
        version:
          description: Версия серверного программного обеспечения ClickHouse.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ClusterConfigClickhouse_in_ClusterConfig_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ClusterConfigZookeeper_in_ClusterConfig_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ClusterConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ClusterConfig_access'
    ClusterConfigClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ClusterConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigClickhouse_resources'
    ClusterConfigZookeeper:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigZookeeper_resources'
    ClusterEnvironment:
      description: |-
        Среда развертывания.

         - PRODUCTION: Стабильная среда с осторожной политикой обновления: во время регулярного обслуживания применяются только срочные исправления.
         - PRESTABLE: Среда с более агрессивной политикой обновления: новые версии развертываются независимо от обратной совместимости.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterHealth:
      description: |2-
         - HEALTH_UNKNOWN: Состояние кластера неизвестно (`health` для каждого хоста в кластере — UNKNOWN).
         - ALIVE: Кластер работает нормально (`health` для каждого хоста в кластере — ALIVE).
         - DEAD: Кластер не работает (`health` для каждого хоста в кластере — DEAD).
         - DEGRADED: Кластер работает неоптимально (`health` по крайней мере для одного хоста в кластере не ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Состояние кластера неизвестно.
         - CREATING: Кластер создается.
         - RUNNING: Кластер работает нормально.
         - ERROR: В кластере произошла ошибка, блокирующая работу.
         - UPDATING: Кластер изменяется.
         - STOPPING: Кластер останавливается.
         - STOPPED: Кластер остановлен.
         - STARTING: Кластер запускается.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ConfigSpec:
      type: object
      properties:
        version:
          description: Версия серверного программного обеспечения ClickHouse.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    ConfigSpecClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecClickhouse_resources'
    ConfigSpecZookeeper:
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecZookeeper_resources'
    CreateClusterExternalDictionaryMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, для которого создается внешний словарь.
          type: string
    CreateClusterExternalDictionaryRequest:
      type: object
      properties:
        externalDictionary:
          $ref: '#/components/schemas/ClickhouseConfigExternalDictionary_in_CreateClusterExternalDictionaryRequest_externalDictionary'
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор создаваемого кластера ClickHouse.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в котором нужно создать кластер ClickHouse.

            Максимальная длина строки в символах — 50.
          type: string
        name:
          description: |-
            Обязательное поле.
            Имя кластера ClickHouse. Имя должно быть уникальным в рамках каталога.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Описание кластера ClickHouse.

            Максимальная длина строки в символах — 256.
          type: string
        labels:
          description: |-
            Пользовательские метки для кластера ClickHouse в виде пар `key:value`. Максимум 64 на ресурс. Например, "project": "mvp" или "source": "dictionary".

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_CreateClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_CreateClusterRequest_configSpec'
        databaseSpecs:
          description: |-
            Обязательное поле.
            Описания баз данных, которые нужно создать в кластере ClickHouse.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/DatabaseSpec'
        userSpecs:
          description: |-
            Обязательное поле.
            Описания пользователей базы данных, которых нужно создать в кластере ClickHouse.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/UserSpec'
        hostSpecs:
          description: |-
            Обязательное поле.
            Конфигурации для отдельных хостов, которые должны быть созданы для кластера ClickHouse.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Обязательное поле.
            Идентификатор сети, в которой нужно создать кластер.

            Максимальная длина строки в символах — 50.
          type: string
        shardName:
          description: |-
            Имя первого шарда в кластере. Если параметр не указан, используется значение `shard1`.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
        serviceAccountId:
          description: Идентификатор сервисного аккаунта, используемого для доступа
            к Yandex Object Storage.
          type: string
    CreateClusterShardGroupMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, в который нужно добавить
            группу шардов.
          type: string
        shardGroupName:
          description: Имя для новой группы шардов.
          type: string
    CreateClusterShardGroupRequest:
      type: object
      properties:
        shardGroupName:
          description: |-
            Обязательное поле.
            Имя для новой группы шардов.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: Описание группы шардов кластера ClickHouse. Длина описания
            должна быть от 0 до 256 символов.
          type: string
        shardNames:
          description: Список имен шардов, принадлежащих к новой группе.
          type: array
          items:
            type: string
    CreateDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, в котором создается база
            данных.
          type: string
        databaseName:
          description: Имя создаваемой базы данных ClickHouse.
          type: string
    CreateDatabaseRequest:
      type: object
      properties:
        databaseSpec:
          $ref: '#/components/schemas/DatabaseSpec_in_CreateDatabaseRequest_databaseSpec'
    CreateMlModelMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, в который добавляется модель.
          type: string
        mlModelName:
          description: Имя создаваемой модели.
          type: string
    CreateMlModelRequest:
      type: object
      properties:
        mlModelName:
          description: |-
            Обязательное поле.
            Имя модели. Имя модели — один из аргументов функции modelEvaluate (), которая используется для вызова модели в ClickHouse.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
        type:
          $ref: '#/components/schemas/MlModelType_in_CreateMlModelRequest_type'
        uri:
          description: |-
            Обязательное поле.
            URL файла модели. Вы можете использовать только модели, хранящиеся в Yandex Object Storage.
          type: string
    CreateUserMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, в котором создается пользователь.
          type: string
        userName:
          description: Имя создаваемого пользователя.
          type: string
    CreateUserRequest:
      type: object
      properties:
        userSpec:
          $ref: '#/components/schemas/UserSpec_in_CreateUserRequest_userSpec'
    Database:
      description: Ресурс Database для ClickHouse. Подробнее см. в разделе [Developer's
        Guide](/docs/managed-clickhouse/concepts).
      type: object
      properties:
        name:
          description: Имя базы данных.
          type: string
        clusterId:
          description: Идентификатор кластера ClickHouse, к которому принадлежит база
            данных.
          type: string
    DatabaseSpec:
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя базы данных ClickHouse. Длина 1-63 символов.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
    DeleteClusterExternalDictionaryMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, для которого удаляется внешний словарь.
          type: string
    DeleteClusterExternalDictionaryRequest:
      type: object
      properties:
        externalDictionaryName:
          description: Имя удаляемого внешнего словаря.
          type: string
    DeleteClusterHostsMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse из которого следует удалить
            хосты.
          type: string
        hostNames:
          description: Имена удаляемых хостов.
          type: array
          items:
            type: string
    DeleteClusterHostsRequest:
      type: object
      properties:
        hostNames:
          description: |-
            Обязательное поле.
            Имена хостов, которые следует удалить.

            Должен содержать хотя бы один элемент.
            Максимальная длина строки в символах для каждого значения — 253.
          type: array
          items:
            type: string
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор удаляемого кластера ClickHouse.
          type: string
    DeleteClusterShardGroupMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, которому принадлежит группа
            шардов.
          type: string
        shardGroupName:
          description: Имя группы шардов, которую следует удалить.
          type: string
    DeleteClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, содержащего удаляемый шард.
          type: string
        shardName:
          description: Имя удаляемого шарда.
          type: string
    DeleteDatabaseMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, в котором удаляется база
            данных.
          type: string
        databaseName:
          description: Имя удаляемой базы данных ClickHouse.
          type: string
    DeleteMlModelMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, содержащего удаляемую модель.
          type: string
        mlModelName:
          description: Имя удаляемой модели.
          type: string
    DeleteUserMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, к которому принадлежит пользователь.
          type: string
        userName:
          description: Имя удаляемого пользователя.
          type: string
    Empty:
      description: Пустой JSON объект `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    GrantUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, к которому принадлежит пользователь.
          type: string
        userName:
          description: Имя пользователя, которому предоставляется разрешение.
          type: string
    GrantUserPermissionRequest:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/Permission_in_GrantUserPermissionRequest_permission'
    Host:
      type: object
      properties:
        name:
          description: |-
            Имя хоста ClickHouse. Имя хоста назначается MDB во время создания и не может быть изменено. Длина 1-63 символов.

            Имя уникально для всех существующих хостов MDB в Яндекс.Облаке, так как оно определяет полное доменное имя (FQDN) хоста.
          type: string
        clusterId:
          description: Идентификатор хоста ClickHouse. Этот идентификатор генерирует
            MDB при создании.
          type: string
        zoneId:
          description: Идентификатор зоны доступности, в которой находится хост ClickHouse.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_Host_type'
        resources:
          $ref: '#/components/schemas/Resources_in_Host_resources'
        health:
          $ref: '#/components/schemas/HostHealth_in_Host_health'
        services:
          description: Сервисы, предоставляемые хостом.
          type: array
          items:
            $ref: '#/components/schemas/Service'
        subnetId:
          description: Идентификатор подсети, к которой принадлежит хост.
          type: string
        assignPublicIp:
          description: Флаг, показывающий статус публичного IP-адреса для этого хоста.
          type: boolean
          format: boolean
        shardName:
          type: string
    HostHealth:
      description: |2-
         - UNKNOWN: Состояние хоста неизвестно.
         - ALIVE: Хост работает и выполняет все свои функции.
         - DEAD: Хост не работает и не может выполнять свои основные функции.
         - DEGRADED: Хост деградировал, и может выполнять только некоторые из своих основных функций.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostSpec:
      type: object
      properties:
        zoneId:
          description: |-
            Идентификатор зоны доступности, в которой находится хост. Чтобы получить список доступных зон, используйте запрос
            [list](/docs/compute/api-ref/Zone/list).

            Максимальная длина строки в символах — 50.
          type: string
        type:
          $ref: '#/components/schemas/HostType_in_HostSpec_type'
        subnetId:
          description: |-
            Идентификатор подсети, к которой должен принадлежать хост. Эта подсеть должна быть частью сети, к которой принадлежит кластер. Идентификатор сети задается
            в поле [Cluster.networkId](/docs/managed-clickhouse/api-ref/Cluster#representation).

            Максимальная длина строки в символах — 50.
          type: string
        assignPublicIp:
          description: |-
            Должен ли хост получить публичный IP-адрес при создании.

            После создания узла этот параметр изменить нельзя. Чтобы удалить назначенный публичный IP-адрес или назначить публичный IP уже созданному хосту,
            пересоздайте хост с нужным значением поля `assignPublicIp`.

            Возможные значения:
            * false — не назначать хосту публичный IP-адрес.
            * true — у хоста должен быть публичный IP-адрес.
          type: boolean
          format: boolean
        shardName:
          description: |-
            Имя шарда, которому принадлежит хост.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
    HostType:
      description: |2-
         - CLICKHOUSE: Хост ClickHouse.
         - ZOOKEEPER: Хост ZooKeeper.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    ListBackupsResponse:
      type: object
      properties:
        backups:
          description: Список резервных копий.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Backup/list#query_params), используйте [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses) в качестве значения
            параметра [pageToken](/docs/managed-clickhouse/api-ref/Backup/list#query_params) в следующем запросе списка ресурсов. Все последующие
            запросы будут получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/Backup/list#responses) для перебора страниц результатов.
          type: string
    ListClusterBackupsResponse:
      type: object
      properties:
        backups:
          description: Список ресурсов Backup для ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/Backup'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params), используйте
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses) в качестве значения параметра [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#query_params) в следующем запросе списка ресурсов. Все последующие запросы будут
            получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listBackups#responses) для перебора страниц результатов.
          type: string
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: Запрошенный список хостов для кластера.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params), используйте
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses) в качестве значения параметра [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#query_params) в следующем запросе списка ресурсов. Все последующие запросы будут
            получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listHosts#responses) для перебора страниц результатов.
          type: string
    ListClusterLogsRequestServiceType:
      description: ' - CLICKHOUSE: Логи работы ClickHouse.'
      type: string
      enum:
      - CLICKHOUSE
    ListClusterLogsResponse:
      type: object
      properties:
        logs:
          description: Запрошенные записи в логе.
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params), используйте
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses) в качестве значения параметра [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#query_params) в следующем запросе списка ресурсов. Все последующие запросы будут
            получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses) для перебора страниц результатов. Это значение взаимозаменяемо с `nextRecordToken` из метода
            StreamLogs.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: Список ресурсов Operation для указанного кластера ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params), используйте
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses) в качестве значения параметра [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#query_params) в следующем запросе списка ресурсов. Все последующие запросы
            будут получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listOperations#responses) для перебора страниц результатов.
          type: string
    ListClusterShardGroupsResponse:
      type: object
      properties:
        shardGroups:
          description: Список групп шардов кластера ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/ShardGroup'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#query_params), используйте
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#responses) в качестве значения параметра [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#query_params) в следующем запросе. Все последующие запросы будут получать свои
            значения [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShardGroups#responses) для перебора страниц результатов.
          type: string
    ListClusterShardsResponse:
      type: object
      properties:
        shards:
          description: Список шардов ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/Shard'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params), используйте
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses) в качестве значения параметра [pageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#query_params) в следующем запросе. Все последующие запросы будут получать свои
            значения [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listShards#responses) для перебора страниц результатов.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: Список ресурсов Cluster для ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Cluster/list#query_params), используйте
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses) в качестве значения параметра [pageToken](/docs/managed-clickhouse/api-ref/Cluster/list#query_params) в следующем запросе. Все последующие запросы будут получать свои значения
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/list#responses) для перебора страниц результатов.
          type: string
    ListDatabasesResponse:
      type: object
      properties:
        databases:
          description: Список баз данных ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/Database'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/Database/list#query_params), используйте [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses) в качестве значения
            параметра [pageToken](/docs/managed-clickhouse/api-ref/Database/list#query_params) в следующем запросе списка ресурсов. Все последующие
            запросы будут получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/Database/list#responses) для перебора страниц результатов.
          type: string
    ListMlModelsResponse:
      type: object
      properties:
        mlModels:
          description: Список моделей в указанном кластере.
          type: array
          items:
            $ref: '#/components/schemas/MlModel'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше чем "[pageSize](/docs/managed-clickhouse/api-ref/MlModel/list#query_params)", используйте "next_page_token" в качестве значения параметра "[pageToken](/docs/managed-clickhouse/api-ref/MlModel/list#query_params)" в следующем запросе списка ресурсов.

            Каждая следующая страница будет иметь свой "next_page_token" для продолжения перебора страниц результатов.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: Список ресурсов ResourcePreset.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params), используйте [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses) в качестве
            значения параметра [pageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#query_params) в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/ResourcePreset/list#responses) для перебора страниц
            результатов.
          type: string
    ListUsersResponse:
      type: object
      properties:
        users:
          description: Список ресурсов User для ClickHouse.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/managed-clickhouse/api-ref/User/list#query_params), используйте [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses) в качестве значения
            параметра [pageToken](/docs/managed-clickhouse/api-ref/User/list#query_params) в следующем запросе списка ресурсов. Все последующие
            запросы будут получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/User/list#responses) для перебора страниц результатов.
          type: string
    ListVersionsResponse:
      type: object
      properties:
        version:
          description: Список доступных версий.
          type: array
          items:
            $ref: '#/components/schemas/Version'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе, если количество результатов больше, чем [pageSize](/docs/managed-clickhouse/api-ref/Versions/list#query_params). Чтобы получить
            следующую страницу, укажите [nextPageToken](/docs/managed-clickhouse/api-ref/Versions/list#responses) в качестве значения для [pageToken](/docs/managed-clickhouse/api-ref/Versions/list#query_params) в следующем запросе. Все последующие запросы будут
            получать свои значения [nextPageToken](/docs/managed-clickhouse/api-ref/Versions/list#responses) для перебора страниц результатов.
          type: string
    LogRecord:
      type: object
      properties:
        timestamp:
          description: |-
            Отметка времени для записи журнала в [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) текстовом формате.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        message:
          description: Содержимое записи в логе.
          type: object
          additionalProperties:
            type: string
    MlModel:
      type: object
      properties:
        name:
          description: Имя модели.
          type: string
        clusterId:
          description: Идентификатор кластера ClickHouse, к которому принадлежит модель.
          type: string
        type:
          $ref: '#/components/schemas/MlModelType_in_MlModel_type'
        uri:
          description: URL файла модели. Вы можете использовать только модели, хранящиеся
            в Yandex Object Storage.
          type: string
    MlModelType:
      description: ' - ML_MODEL_TYPE_CATBOOST: Модель CatBoost.'
      type: string
      enum:
      - ML_MODEL_TYPE_CATBOOST
    Monitoring:
      description: Метаданные системы мониторинга.
      type: object
      properties:
        name:
          description: Название системы мониторинга.
          type: string
        description:
          description: Описание системы мониторинга.
          type: string
        link:
          description: Ссылка на графики системы мониторинга для данного кластера
            ClickHouse.
          type: string
    MoveClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор перемещаемого кластера ClickHouse.
          type: string
        sourceFolderId:
          description: Идентификатор исходного каталога.
          type: string
        destinationFolderId:
          description: Идентификатор каталога, в который следует переместить кластер.
          type: string
    MoveClusterRequest:
      type: object
      properties:
        destinationFolderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в который следует переместить кластер.

            Максимальная длина строки в символах — 50.
          type: string
    Operation:
      description: |-
        Ресурс Operation. Дополнительные сведения см. в разделе
        [Объект Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: Идентификатор операции.
            type: string
          description:
            description: |-
              Описание операции. Длина описания должна быть от 0 до 256
              символов.
            type: string
          createdAt:
            description: |-
              Время создания ресурса в формате в
              [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          createdBy:
            description: |-
              Идентификатор пользователя или сервисного
              аккаунта, инициировавшего операцию.
            type: string
          modifiedAt:
            description: |-
              Время, когда ресурс Operation последний раз
              обновлялся. Значение в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          done:
            description: |-
              Если значение равно `false` — операция еще
              выполняется. Если `true` — операция завершена, и задано значение
              одного из полей `error` или `response`.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Метаданные операции. Обычно в поле содержится
              идентификатор ресурса, над которым выполняется операция. Если
              метод возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `metadata`.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: Описание ошибки в случае сбоя или отмены операции.
          response:
            description: |-
              Результат операции в случае успешного завершения. Если
              исходный метод не возвращает никаких данных при успешном
              завершении, например метод Delete, поле содержит объект
              [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty). Если исходный метод — это стандартный метод Create
              / Update, поле содержит целевой ресурс операции. Если метод
              возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `response`.
            type: object
    Permission:
      type: object
      properties:
        databaseName:
          description: Имя базы данных, к которой предоставляет доступ разрешение.
          type: string
    ResourcePreset:
      description: Описание конфигурации ресурсов.
      type: object
      properties:
        id:
          description: Идентификатор конфигурации ресурсов.
          type: string
        zoneIds:
          description: Идентификаторы зон доступности, в которых доступен данный набор
            ресурсов.
          type: array
          items:
            type: string
        cores:
          description: Количество ядер CPU для хоста ClickHouse, созданного с данным
            набором ресурсов.
          type: string
          format: int64
        memory:
          description: |-
            Объем оперативной памяти для хоста ClickHouse, созданного с данным набором ресурсов, в
            байтах.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    RestoreClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор нового кластера ClickHouse, создаваемого из резервной
            копии.
          type: string
        backupId:
          description: Идентификатор резервной копии, используемой для создания кластера.
          type: string
    RestoreClusterRequest:
      type: object
      properties:
        backupId:
          description: |-
            Обязательное поле.
            Идентификатор резервной копии, из которой следует создать кластер. Чтобы получить идентификатор резервной копии, используйте запрос
            [listBackups](/docs/managed-clickhouse/api-ref/Cluster/listBackups).
          type: string
        name:
          description: |-
            Обязательное поле.
            Имя нового кластера ClickHouse. Имя должно быть уникальным в рамках каталога.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
        description:
          description: |-
            Описание нового кластера ClickHouse.

            Максимальная длина строки в символах — 256.
          type: string
        labels:
          description: |-
            Пользовательские метки для кластера ClickHouse в виде пар `key:value`. Максимум 64 на ресурс. Например, "project": "mvp" или "source": "dictionary".

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment_in_RestoreClusterRequest_environment'
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_RestoreClusterRequest_configSpec'
        hostSpecs:
          description: |-
            Обязательное поле.
            Конфигурации для хостов ClickHouse, которые должны быть созданы для кластера, создаваемого из резервной копии.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/HostSpec'
        networkId:
          description: |-
            Обязательное поле.
            Идентификатор сети, в которой нужно создать кластер.

            Максимальная длина строки в символах — 50.
          type: string
        folderId:
          description: |-
            Идентификатор каталога, в котором нужно создать кластер ClickHouse.

            Максимальная длина строки в символах — 50.
          type: string
        serviceAccountId:
          description: Идентификатор сервисного аккаунта, используемого для доступа
            к Yandex Object Storage.
          type: string
    RevokeUserPermissionMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, к которому принадлежит пользователь.
          type: string
        userName:
          description: Имя пользователя, чье разрешение отзывается.
          type: string
    RevokeUserPermissionRequest:
      type: object
      properties:
        databaseName:
          description: |-
            Имя базы данных, к которой пользователь должен потерять доступ.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
    Service:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ServiceType_in_Service_type'
        health:
          $ref: '#/components/schemas/ServiceHealth_in_Service_health'
    ServiceHealth:
      description: |2-
         - UNKNOWN: Работоспособность сервера неизвестна.
         - ALIVE: Сервер работает нормально.
         - DEAD: Сервер отключен или не отвечает.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    ServiceType:
      description: |2-
         - CLICKHOUSE: Хост — это сервер ClickHouse.
         - ZOOKEEPER: Хост — сервер ZooKeeper.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    Shard:
      type: object
      properties:
        name:
          description: Имя шарда.
          type: string
        clusterId:
          description: Идентификатор кластера, к которому принадлежит шард.
          type: string
        config:
          $ref: '#/components/schemas/ShardConfig_in_Shard_config'
    ShardConfig:
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigClickhouse_in_ShardConfig_clickhouse'
    ShardConfigClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ShardConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigClickhouse_resources'
        weight:
          description: |-
            Относительный вес шарда, который учитывается при записи данных в кластер.

            Подробнее см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/table_engines/distributed/).
          type: integer
          format: int64
    ShardConfigSpec:
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse'
    ShardConfigSpecClickhouse:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ShardConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigSpecClickhouse_resources'
        weight:
          description: |-
            Относительный вес шарда, который учитывается при записи данных в кластер.
            Подробнее см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/table_engines/distributed/).
          type: integer
          format: int64
    ShardGroup:
      type: object
      properties:
        name:
          description: Имя группы шардов.
          type: string
        clusterId:
          description: Идентификатор кластера, к которому принадлежит группа шардов.
          type: string
        description:
          description: Описание группы шардов кластера ClickHouse. Длина описания
            должна быть от 0 до 256 символов.
          type: string
        shardNames:
          description: Список имен шардов, содержащихся в группе шардов.
          type: array
          items:
            type: string
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор запускаемого кластера ClickHouse.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор останавливаемого кластера ClickHouse.
          type: string
    StreamClusterLogsRequestServiceType:
      description: ' - CLICKHOUSE: Логи работы ClickHouse.'
      type: string
      enum:
      - CLICKHOUSE
    StreamLogRecord:
      type: object
      properties:
        record:
          $ref: '#/components/schemas/LogRecord_in_StreamLogRecord_record'
        nextRecordToken:
          description: |-
            Этот токен позволяет продолжить работу с потоком логов, начиная с этой записи. Чтобы продолжить работу с потоком, укажите значение `nextRecordToken` в
            качестве значения параметра [recordToken](/docs/managed-clickhouse/api-ref/Cluster/streamLogs#query_params) в следующем запросе StreamLogs. Это значение взаимозаменяемо с
            [nextPageToken](/docs/managed-clickhouse/api-ref/Cluster/listLogs#responses) из метода ListLogs.
          type: string
    TimeOfDay:
      description: |-
        Время суток.
        Дата и часовой пояс либо не учитываются, либо задаются в других местах.

        API может разрешить использование високосной секунды.

        Связанные типы: [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) и [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Часы.
            Допустимые значения: от 0 до 23.

            API может разрешить использовать значение в формате "24:00:00" в требующих этого сценариях (например, для указания времени закрытия учреждения).
          type: integer
          format: int32
        minutes:
          description: |-
            Минуты.
            Допустимые значения: от 0 до 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Секунды.
            Стандартные допустимые значения: от 0 до 59.

            API может разрешить использовать значение 60, если также разрешено использование високосной секунды.
          type: integer
          format: int32
        nanos:
          description: |-
            Доли секунды (в наносекундах).
            Допустимые значения: от 0 до 999999999.
          type: integer
          format: int32
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор изменяемого ресурса Cluster для ClickHouse.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            Новое описание кластера ClickHouse.

            Максимальная длина строки в символах — 256.
          type: string
        labels:
          description: |-
            Пользовательские метки для кластера ClickHouse в виде пар `key:value`. Максимум 64 на ресурс. Например, "project": "mvp" или "source": "dictionary".

            Новый набор меток полностью заменит старый. Чтобы добавить метку, запросите текущий набор меток с помощью метода [get](/docs/managed-clickhouse/api-ref/Cluster/get), затем отправьте
            запрос [update](/docs/managed-clickhouse/api-ref/Cluster/update), добавив новую метку в этот набор.

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/ConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            Новое имя кластера.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
        serviceAccountId:
          description: Идентификатор сервисного аккаунта, используемого для доступа
            к Yandex Object Storage.
          type: string
    UpdateClusterShardGroupMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, содержащего обновляемую группу шардов.
          type: string
        shardGroupName:
          description: Имя группы шардов, которую следует изменить.
          type: string
    UpdateClusterShardGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterShardGroupRequest_updateMask'
        description:
          description: Описание группы шардов кластера ClickHouse. Длина описания
            должна быть от 0 до 256 символов.
          type: string
        shardNames:
          description: Обновленный список имен шардов, принадлежащих к новой группе.
          type: array
          items:
            type: string
    UpdateClusterShardMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, содержащего обновляемый шард.
          type: string
        shardName:
          description: Имя обновляемого шарда.
          type: string
    UpdateClusterShardRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterShardRequest_updateMask'
        configSpec:
          $ref: '#/components/schemas/ShardConfigSpec_in_UpdateClusterShardRequest_configSpec'
    UpdateMlModelMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, содержащего обновляемую модель.
          type: string
        mlModelName:
          description: Имя обновляемой модели.
          type: string
    UpdateMlModelRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateMlModelRequest_updateMask'
        uri:
          description: URL файла новой модели. Вы можете использовать только модели,
            хранящиеся в Yandex Object Storage.
          type: string
    UpdateUserMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера ClickHouse, к которому принадлежит пользователь.
          type: string
        userName:
          description: Имя изменяемого пользователя.
          type: string
    UpdateUserRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateUserRequest_updateMask'
        password:
          description: |-
            Новый пароль для пользователя.

            Длина строки в символах должна быть от 8 до 128.
          type: string
        permissions:
          description: Новый набор разрешений для пользователя.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_UpdateUserRequest_settings'
    User:
      description: Ресурс User для ClickHouse. Подробнее см. [документацию](/docs/managed-clickhouse/concepts).
      type: object
      properties:
        name:
          description: Имя пользователя базы данных ClickHouse.
          type: string
        clusterId:
          description: Идентификатор кластера ClickHouse, к которому принадлежит пользователь.
          type: string
        permissions:
          description: Набор разрешений, предоставленных пользователю.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_User_settings'
        quotas:
          description: Набор квот, назначенных пользователю.
          type: array
          items:
            $ref: '#/components/schemas/UserQuota'
    UserQuota:
      description: |-
        Представление квот ClickHouse. Каждая квота связана с пользователем и ограничивает использование ресурсов на определенный интервал. См. подробное описание в
        [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/quotas/).
      type: object
      properties:
        intervalDuration:
          description: |-
            Длительность интервала для квоты в миллисекундах. Минимальное значение — 1 секунда.

            Минимальное значение — 1000.
          type: integer
          format: int64
        queries:
          description: |-
            Общее количество запросов. 0-неограниченно.

            Минимальное значение — 0.
          type: integer
          format: int64
        errors:
          description: |-
            Количество запросов, которые вызвали исключение. 0-неограниченно.

            Минимальное значение — 0.
          type: integer
          format: int64
        resultRows:
          description: |-
            Общее число строк, приведенных в результате. 0-неограниченно.

            Минимальное значение — 0.
          type: integer
          format: int64
        readRows:
          description: |-
            Общее число исходных строк, считанных из таблиц для выполнения запроса, на всех удаленных серверах. 0-неограниченно.

            Минимальное значение — 0.
          type: integer
          format: int64
        executionTime:
          description: |-
            Общее время выполнения запроса, в миллисекундах. 0-неограниченно.

            Минимальное значение — 0.
          type: integer
          format: int64
    UserSettings:
      description: |-
        Пользовательские настройки ClickHouse.
        Поддерживаемые параметры входят в число параметров, описанных в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Ограничивает разрешения для запросов, не относящихся к DDL. Чтобы ограничить разрешения для DDL-запросов, используйте настройку `allowDdl`.

            - `0` (по умолчанию) — нет ограничений.
            - `1`— разрешено выполнять только запросы на чтение данных.
            - `2` — разрешено выполнять запросы на чтение данных и изменение настроек.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_readonly).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Определяет, разрешены ли DDL-запросы (например, `CREATE`, `ALTER`, `RENAME`, и т.д.).

            Значение по умолчанию: `true`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            Включает или выключает кворумную запись в кластере ClickHouse. Если значение меньше `2`, то кворумная запись выключена, в противном случае она включена.

            Кворумная запись позволяет гарантировать, что за время, не большее чем `insertQuorumTimeout`, ClickHouse смог без ошибок записать данные в кворум из
            `insert_quorum` реплик. Все реплики в кворуме консистентны, т.е. содержат данные всех более ранних запросов `INSERT`. Использование кворума при записи
            позволяет гарантировать, что данные не потеряются при выходе из строя одной или нескольких реплик.

            При чтении данных, записанных с помощью кворумной записи, можно использовать настройку `selectSequentialConsistency`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-insert_quorum).

            Минимальное значение — 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Время ожидания соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `10000`, 10 секунд).

            Значение должно быть больше 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Время ожидания приема данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Время ожидания отправки данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Время ожидания кворумной записи в миллисекундах.

            Если кворумная запись включена, время ожидания прошло, а запись в `insertQuorum` реплик так не состоялась, то ClickHouse прервет выполнение
            `INSERT`-запроса и вернет ошибку. В этом случае клиент должен повторить запрос на запись того же блока на эту же или любую другую реплику.

            Минимальное значение: `1000`, одна секунда (по умолчанию: `60000`, одна минута).

            Минимальное значение — 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: |-
            Определяет поведение `SELECT`-запросов для реплицированных таблиц: если эта настройка включена, ClickHouse прервет выполнение запроса и вернет сообщение об
            ошибке в случае, если в реплике нет фрагментов данных, записанных с помощью кворумной записи. Фрагменты данных, записанные без использования кворумной
            записи, прочитаны не будут.

            Значение по умолчанию: `false` (последовательная консистентность выключена).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Максимальная задержка реплики в миллисекундах. Если реплика отстает на значение больше установленного, она перестает использоваться и становится
            устаревшей.

            Минимальное значение: `1000`, 1 секунда (по умолчанию: `300000`, 300 секунд, 5 минут).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            Минимальное значение — 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: |-
            Включает или выключает форсирование запроса в устаревшую реплику в случае, если актуальные данные недоступны. Если этот параметр включен, то из устаревших
            реплик таблицы ClickHouse выбирает наиболее актуальную. Используется при выполнении `SELECT` из распределенной таблицы, которая указывает на
            реплицированные таблицы.

            Значение по умолчанию: `true` (форсирование запроса включено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            Условия ожидания завершения асинхронных действий на репликах для запросов `ALTER`:

            - `0` — не ждать.
            - `1` — ждать выполнения только у себя (значение по умолчанию).
            - `2` — ждать всех.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/alter/#synchronicity-of-alter-queries).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: |-
            Включает или выключает режим экономии памяти при распределенной агрегации.

            При распределённой обработке запроса внешняя агрегация производится на удалённых серверах. Для того чтобы на сервере-инициаторе запроса использовалось
            немного оперативной памяти, нужно включить эту настройку.

            Значение по умолчанию: `false` (режим экономии памяти выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Время ожидания выполнения DDL-запросов в миллисекундах.
          type: integer
          format: int64
        skipUnavailableShards:
          description: |-
            Включает или выключает тихий пропуск недоступных шардов.

            Шард считается недоступным, если все его реплики недоступны.

            Значение по умолчанию: `false` (тихий пропуск недоступных шардов выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-skip_unavailable_shards).
          type: boolean
          format: boolean
        compile:
          description: |-
            Включает или выключает компиляцию запросов. Если вы выполняете большое количество структурно идентичных запросов — включите эту настройку. При включенной
            компиляции такие запросы могут выполняться быстрее за счет использования скомпилированных частей запроса.

            Эта настройка используется совместно с `minCountToCompile`.

            Значение по умолчанию: `false` (компиляция выключена).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            После какого количества структурно идентичных запросов начать компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции перед продолжением выполнения. Рекомендуется использовать
            это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда часть запроса будет скомпилирована, она сразу же будет использована
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#min-count-to-compile).

            Минимальное значение — 0.
          type: integer
          format: int64
        compileExpressions:
          description: |-
            Включает или выключает компиляцию выражений. Если вы выполняете большое количество запросов, в которых используются идентичные выражения — включите эту
            настройку. При включенной компиляции выражений такие запросы могут выполняться быстрее за счет использования скомпилированных выражений.

            Эта настройка используется совместно с `minCountToCompileExpression`.

            Значение по умолчанию: `false` (компиляция выражений выключена).
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            После какого количества идентичных выражений начать их компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции выражения перед продолжением выполнения. Рекомендуется
            использовать это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда выражение будет скомпилировано, оно сразу же будет использовано
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            Максимальный размер блока для чтения.

            Данные в ClickHouse обрабатываются по блокам (наборам кусочков столбцов). Внутренние циклы обработки для одного блока достаточно эффективны, но есть
            заметные издержки на каждый блок.

            Эта настройка — рекомендация, какой размер блока (в количестве строк) загружать из таблиц.

            Значение должно быть больше `0` (по умолчанию: `65536`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-max_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Ограничивает минимальное количество строк в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `1048576`).

            Минимальное значение — 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Ограничивает минимальное количество байтов в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `‭268435456‬‬`, 256 МБ).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            Позволяет формировать блоки указанного размера (в байтах) при вставке в таблицу. Эта настройка действует только в тех случаях, когда сервер сам формирует
            такие блоки.

            Значение должно быть больше `0` (по умолчанию: `1048576`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_insert_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            минимальный объём данных в байтах, необходимый для прямого (небуферизованного) чтения (Direct I/O) на диск.

            По умолчанию ClickHouse читает данные не напрямую с диска, а полагается на файловую систему и её кэш. Такое чтение эффективно при небольших объемах данных.
            Если данные читаются в больших объемах, эффективнее читать с диска напрямую, минуя кэш файловой системы.

            Если общий объём хранения всех данных для чтения превышает заданное значение настройки, тогда ClickHouse читает данные с диска напрямую.

            Минимальное значение и значение по умолчанию: `0` (прямой ввод/вывод отключен).

            Минимальное значение — 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: |-
            Определяет, использовать ли кэш разжатых блоков. Использование кэша несжатых блоков может существенно сократить задержку и увеличить пропускную способность
            при работе с большим количеством коротких запросов. Включите эту настройку для пользователей, от которых идут частые короткие запросы.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (кэш не используется).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в строках для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `128x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в байтах для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `192x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            Ограничивает минимальное количество строк, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество строк, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `20x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            Ограничивает минимальное количество байт, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество байт, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `24x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          description: |-
            задает порог потребления оперативной памяти (в байтах), по достижению которого временные данные, накопленные при выполнении операции агрегации `GROUP BY`,
            сбрасываются на диск для экономии оперативной памяти.

            По умолчанию агрегирование выполняется в памяти с помощью хэш-таблицы. Запрос может привести к необходимости агрегации больших объемов данных, которые
            могут не поместиться в оперативную память и вызвать ошибку при выполнении запроса (см. настройку `maxMemoryUsage`). Для таких запросов используйте эту
            настройку, чтобы ClickHouse сбрасывал данные на диск и успешно выполнял агрегацию.

            Минимальное значение и значение по умолчанию: `0`, `GROUP BY` во внешней памяти отключен.

            При использовании агрегации во внешней памяти рекомендуется задать значение этой настройки в два раза меньше значения настройки `maxMemoryUsage` (по
            умолчанию максимальное использование памяти ограничено десятью гигабайтами).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).

            Смотрите также настройку `distributedAggregationMemoryEfficient`.
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          description: Настройка аналогична `maxBytesBeforeExternalGroupBy`, за исключением
            того, что она применяется для операции сортировки (`ORDER BY`).
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          description: |-
            Определяет порог количества ключей, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `10000‬‬`).
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          description: |-
            Определяет порог количества байт в агрегате, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `100000000‬‬`).
          type: integer
          format: int64
        priority:
          description: |-
            Определяет приоритет запроса.

            - `0` — приоритет не используется.
            - `1` — наивысший приоритет.
            - и так далее. Чем больше число, тем ниже приоритет.

            Эта настройка выставляется для каждого запроса по отдельности.

            Если ClickHouse в текущий момент времени выполняет запросы с более высокими приоритетами, чем приоритет поступившего запроса, то выполнение такого запроса
            приостанавливается до завершения выполнения более приоритетных запросов.

            Минимальное значение и значение по умолчанию: `0`, приоритет не используется.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            Ограничивает максимальное количество потоков обработки запроса (без учёта потоков для чтения данных с удалённых серверов).

            Этот параметр относится к потокам, которые выполняют параллельно одни стадии конвейера выполнения запроса.

            Минимальное значение и значение по умолчанию: `0` (значение вычисляется автоматически — это количество процессорных ядер без учёта Hyper-Threading).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_threads).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запроса на одном сервере. Настройка не учитывает объём свободной
            памяти или общий объём памяти на машине.

            Ограничение действует на один запрос, в пределах одного сервера.

            Минимальное значение: `0`, нет ограничения. В конфигурационном файле по умолчанию ограничение равно `10737418240` (10 ГБ).

            Если вы также используете настройки `maxBytesBeforeExternalGroupBy` или `maxBytesBeforeExternalSort`, рекомендуется, чтобы их значения были в два
            раза меньше значения `maxMemoryUsage`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#settings_max_memory_usage).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запросов пользователя на одном сервере. Настройка не учитывает объём
            свободной памяти или общий объём памяти на машине.

            Ограничение действует на все запросы пользователя, которые выполняются одновременно в пределах одного сервера.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду) при выполнении одного запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду). Эта настройка влияет на все одновременно выполняющиеся запросы пользователя.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        forceIndexByDate:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по дате невозможно. Этот настройка действует только для таблиц
            семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по дате).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по первичному ключу невозможно. Этот настройка действует только
            для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по первичному ключу).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_primary_key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            Ограничивает максимальное количество строк, которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-rows-to-read).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            Ограничивает максимальное количество уникальных ключей, получаемых в процессе агрегации. Эта настройка позволяет ограничить потребление оперативной памяти
            при агрегации.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            Ограничивает максимальное количество строк для сортировки. Эта настройка позволяет ограничить потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы до сортировки. Эта настройка позволяет ограничить
            потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            Ограничивает количество строк результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            Ограничивает количество байт результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            Ограничивает максимальное количество различных строк при использовании `DISTINCT`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), занимаемых хэш-таблицей, при использовании `DISTINCT`.

            Минимальное значение — 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            Ограничивает максимальное количество строк, которое можно передать на удалённый сервер или сохранить во временную таблицу при использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которых можно передать на удалённый сервер или сохранить во временную таблицу, при
            использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Ограничивает максимальное время выполнения запроса в миллисекундах. На данный момент это ограничение не проверяется при одной из стадий сортировки а также
            при слиянии и финализации агрегатных функций.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Ограничивает максимальное количество столбцов, которые можно читать из таблицы в одном запросе. Если запрос требует чтения большего количества столбцов —
            он будет завершен с ошибкой.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (с учетом
            постоянных столбцов)

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (без учета
            постоянных столбцов).

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            Ограничивает размер наибольшей части запроса (в байтах), которая может быть передана в оперативную память для разбора с помощью парсера SQL.

            Значение должно быть больше `0` (по умолчанию: `262144`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_query_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Ограничивает максимальную глубину вложенности синтаксического дерева.

            Для больших и сложных запросов может быть построено синтаксическое дерево очень большой глубины. При помощи этой настройки вы можете запретить выполнение
            излишне больших или неоптимальных запросов для больших таблиц.

            Например, запрос `SELECT *` в большинстве случаев породит более сложное и глубокое синтаксическое дерево, чем запрос `SELECT ... WHERE ...` с ограничениями
            и условиями. Наложение ограничения с помощью настройки может побудить пользователя оптимизировать излишне сложные запросы.

            Значение должно быть больше `0` (по умолчанию: `1000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-depth).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева).

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `50000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-elements).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева) после раскрытия псевдонимов и звездочки.

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `500000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            Значение должно быть больше 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: |-
            Включает или выключает парсер SQL, если потоковый парсер не может проанализировать данные.

            Используйте эту настройку, если значения, которые вы хотите вставить в таблицу, содержат в себе выражения SQL.

            Например, при вставке в таблицу значения, содержащего в себе выражение `now()`, потоковый парсер не сможет распознать это выражение; запрос `INSERT`
            завершится с ошибкой, и никакие данные не будут вставлены в таблицу. При включенном парсере SQL выражение будет распознано корректно и в качестве значения
            будет вставлен результат выполнения SQL-функции `now()` (текущая дата и время).

            Эта настройка действует только в том случае, если вы используете формат [Values](https://clickhouse.tech/docs/ru/interfaces/formats/#data-format-values)
            при вставке данных.

            Значение по умолчанию: `true` (парсер SQL включен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: |-
            Включает или выключает замену пропущенных полей значениями по умолчанию для типа данных столбца при вставке данных запросом `INSERT`.

            Значение по умолчанию: `true` (замена включена).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Определяет формат чисел в JSON-выводе.

            Если эта настройка включена, то при выводе в JSON 64-битные числа (`UInt64` и `Int64`) выводятся в кавычках (из соображений совместимости с большинством
            реализаций JavaScript). Иначе — без кавычек.

            Значение по умолчанию: `false` (вывод 64-битных целых чисел в кавычках выключен).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: |-
            Включает вывод специальных значений для чисел с плавающей запятой (`+nan`, `-nan`, `+inf` и `-inf`) при выводе в JSON.

            Значение по умолчанию: `false` (специальные значения не выводятся).
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          description: |-
            Определяет, использовать ли тип LowCardinality в Native-формате.

            - `true` (по умолчанию) — да, использовать.
            - `false`— конвертировать столбцы LowCardinality в обычные столбцы для запроса `SELECT`, и конвертировать обычные столбцы в требуемый LowCardinality-столбец для запроса `INSERT`.

            Столбцы этого типа, также известные как «разреженные столбцы», позволяют более эффективно хранить данные в виде хэш-таблиц. Если данные это позволяют,
            ClickHouse использует столбец типа LowCardinality.

            Если вы используете сторонний клиент для ClickHouse, который не умеет работать со столбцами типа LowCardinality, то такой клиент не сможет правильно
            интерпретировать результат запроса, если в запросе будет присутствовать столбец типа LowCardinality. Выключите эту настройку, чтобы включать в результат
            столбец в обычном формате и позволить сторонним клиентам обработать результат.

            Официальный клиент ClickHouse умеет работать со столбцами типа LowCardinality.

            Значение по умолчанию: `true` (столбцы LowCardinality используются в Native-формате).
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          description: |-
            Позволяет возвращать пустой результат при выполнении агрегации данных без ключей (без `GROUP BY`) для пустого множества (например, `SELECT count(*) FROM
            table WHERE 0`).

            - `true`— ClickHouse вернет пустой результат.
            - `false` (по умолчанию) — ClickHouse вернет результат, состоящий из одной строки со значениями `NULL` для агрегатных функций, в соответствии со стандартом SQL.
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: |-
            Время ожидания установления HTTP-соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1000`, 1 секунда).
          type: integer
          format: int64
        httpReceiveTimeout:
          description: |-
            Время ожидания приема данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        httpSendTimeout:
          description: |-
            Время ожидания отправки данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        enableHttpCompression:
          description: |-
            Включает или выключает сжатие данных в ответе на HTTP-запрос.

            По умолчанию ClickHouse хранит данные в сжатом виде. При выполнении запроса его результат представлен в несжатом виде. С помощью этой настройки вы можете
            указать ClickHouse сжимать результат запроса при отправке по HTTP.

            Чтобы ClickHouse сжал ответ при включенной настройке, добавьте в HTTP-запрос заголовок @b.

            ClickHouse поддерживает следующие методы сжатия: `gzip`, `br` и `deflate`.

            Значение по умолчанию: `false` (сжатие выключено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/interfaces/http/).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Включает отсылку уведомления о ходе выполнения с использованием HTTP-заголовков `X-ClickHouse-Progress`.

            Значение по умолчанию: `false` (отсылка уведомлений выключена).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: |-
            Задает минимальный интервал (в миллисекундах) между уведомлениями о ходе выполнения запроса с помощью HTTP-заголовка `X-ClickHouse-Progress`.

            Значение должно быть больше `0` (по умолчанию: `100`).
          type: integer
          format: int64
        addHttpCorsHeader:
          description: |-
            Включает заголовок CORS в HTTP-ответы.

            Значение по умолчанию: `false` (заголовок не включается в HTTP-ответы).
          type: boolean
          format: boolean
    UserSettingsDistributedProductMode:
      description: |2-
         - DISTRIBUTED_PRODUCT_MODE_DENY: Значение по умолчанию. Запрещает использование этих типов подзапросов (возвращает исключение "Double-distributed in/JOIN subqueries is denied").
         - DISTRIBUTED_PRODUCT_MODE_LOCAL: Заменяет базу данных и таблицу в подзапросе локальными для конечного сервера (шарда), оставляя обычный IN / JOIN.
         - DISTRIBUTED_PRODUCT_MODE_GLOBAL: Заменяет IN/JOIN запрос на GLOBAL IN/GLOBAL JOIN.
         - DISTRIBUTED_PRODUCT_MODE_ALLOW: Позволяет использовать эти типы подзапросов.
      type: string
      enum:
      - DISTRIBUTED_PRODUCT_MODE_DENY
      - DISTRIBUTED_PRODUCT_MODE_LOCAL
      - DISTRIBUTED_PRODUCT_MODE_GLOBAL
      - DISTRIBUTED_PRODUCT_MODE_ALLOW
    UserSettingsGroupByOverflowMode:
      type: string
      enum:
      - GROUP_BY_OVERFLOW_MODE_THROW
      - GROUP_BY_OVERFLOW_MODE_BREAK
      - GROUP_BY_OVERFLOW_MODE_ANY
    UserSettingsOverflowMode:
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSpec:
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя пользователя базы данных ClickHouse.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Обязательное поле.
            Пароль пользователя ClickHouse.

            Длина строки в символах должна быть от 8 до 128.
          type: string
        permissions:
          description: Набор разрешений, которые следует предоставить пользователю.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_UserSpec_settings'
        quotas:
          description: Набор квот, назначенных пользователю.
          type: array
          items:
            $ref: '#/components/schemas/UserQuota'
    Version:
      type: object
      properties:
        id:
          description: Идентификатор версии.
          type: string
        name:
          description: Название версии.
          type: string
        deprecated:
          description: Является ли версия устаревшей.
          type: boolean
          format: boolean
        updatableTo:
          description: Список версий, до которых можно обновить текущую.
          type: array
          items:
            type: string
    rpcStatus:
      description: Описание ошибки в случае сбоя или отмены операции.
      type: object
      properties:
        code:
          description: Код ошибки. Значение из списка [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: Текст ошибки.
          type: string
        details:
          description: Список сообщений с подробными сведениями об ошибке.
          type: array
          items:
            type: object
    ShardConfigSpec_in_AddClusterShardRequest_configSpec:
      description: Конфигурация нового шарда.
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse'
    Resources_in_AddClusterZookeeperRequest_resources:
      description: Ресурсы, выделенные хостам ZooKeeper.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel:
      description: 'Уровень логирования для кластера ClickHouse. Допустимые значения:
        "TRACE", "DEBUG", "INFORMATION", "WARNING", "ERROR". См. описание в [документации
        ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#server_settings-logger).'
      type: string
      enum:
      - TRACE
      - DEBUG
      - INFORMATION
      - WARNING
      - ERROR
    ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree:
      description: |-
        Параметры движка MergeTree. См. описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#merge_tree).

        Настройки движка таблицы MergeTree.
      type: object
      properties:
        replicatedDeduplicationWindow:
          description: Количество блоков хэшей, которые должен хранить ZooKeeper.
            Смотрите подробное описание в [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L59).
          type: integer
          format: int64
        replicatedDeduplicationWindowSeconds:
          description: Период времени, в течение которого следует хранить блоки хэшей.
            См. описание в [ClickHouse sources](https://github.com/yandex/ClickHouse/blob/v18.1.0-stable/dbms/src/Storages/MergeTree/MergeTreeSettings.h#L64).
          type: integer
          format: int64
        partsToDelayInsert:
          type: integer
          format: int64
        partsToThrowInsert:
          type: integer
          format: int64
        maxReplicatedMergesInQueue:
          type: integer
          format: int64
        numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge:
          type: integer
          format: int64
        maxBytesToMergeAtMinSpaceInPool:
          type: integer
          format: int64
    ClickhouseConfigCompressionMethod_in_ClickhouseConfigCompression_method:
      description: |-
        Метод сжатия, используемый для указанной комбинации "min_part_size" и "min_part_size_ratio".

         - LZ4: [LZ4 compression algorithm](https://lz4.github.io/lz4/).
         - ZSTD: [Zstandard compression algorithm](https://facebook.github.io/zstd/).
      type: string
      enum:
      - LZ4
      - ZSTD
    ClickhouseConfigExternalDictionaryLayoutType_in_ClickhouseConfigExternalDictionaryLayout_type:
      description: |-
        Обязательное поле.
        Тип макета для внешнего словаря.

         - FLAT: Весь словарь хранится в памяти в виде плоских массивов. Доступно для любых источников словарей.
         - HASHED: Весь словарь хранится в памяти в виде хэш-таблицы. Доступно для любых источников словарей.
         - COMPLEX_KEY_HASHED: Аналогичен HASHED, для использования с составными ключами. Доступно для любых источников словарей.
         - RANGE_HASHED: Весь словарь хранится в памяти в виде хэш-таблицы, с упорядоченным массивом диапазонов и соответствующих им значений. Доступно для любых источников словарей.
         - CACHE: Словарь хранится в кэше с заданным количеством ячеек. Доступно для источников словарей MySQL, ClickHouse и HTTP.
         - COMPLEX_KEY_CACHE: Аналогичен CACHE, для использования с составными ключами. Доступно для источников словарей MySQL, ClickHouse и HTTP.
      type: string
      enum:
      - FLAT
      - HASHED
      - COMPLEX_KEY_HASHED
      - RANGE_HASHED
      - CACHE
      - COMPLEX_KEY_CACHE
    ClickhouseConfigExternalDictionaryPostgresqlSourceSslMode_in_ClickhouseConfigExternalDictionaryPostgresqlSource_sslMode:
      description: |-
        Режим SSL TCP/IP соединения с хостом PostgreSQL. Дополнительные сведения см. в [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).

         - DISABLE: SSL-соединение не используется.
         - ALLOW: Сначала предпринимается попытка установить незашифрованное соединение. Если это не удается, устанавливается SSL-соединение.
         - PREFER: Сначала предпринимается попытка установить SSL-соединение. Если это не удается, устанавливается незашифрованное соединение.
         - VERIFY_CA: Устанавливается только SSL-соединение и только при условии, что сертификат выдан доверенным центром сертификации (CA).
         - VERIFY_FULL: Устанавливается только SSL-соединение и только при условии, что сертификат выдан доверенным центром сертификации и что имя хоста сервера совпадает с указанным в сертификате.
      type: string
      enum:
      - DISABLE
      - ALLOW
      - PREFER
      - VERIFY_CA
      - VERIFY_FULL
    ClickhouseConfigExternalDictionaryStructureId_in_ClickhouseConfigExternalDictionaryStructure_id:
      description: |-
        Один столбец с числовыми ключами для словаря.

        Числовой ключ.
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя числового ключа.
          type: string
    ClickhouseConfigExternalDictionaryStructureKey_in_ClickhouseConfigExternalDictionaryStructure_key:
      description: |-
        Составной ключ для словаря, содержащего один или несколько столбцов с ключами. Подробнее см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_structure/#composite-key).

        Составной ключ.
      type: object
      properties:
        attributes:
          description: |-
            Обязательное поле.
            Поля составного ключа.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructureAttribute'
    ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMin:
      description: Поле, содержащее начало диапазона для словарей, которые хранятся
        в памяти способом "RANGE_HASHED". Подробнее см.[документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_layout/#range-hashed)
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя столбца.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип столбца.
          type: string
        nullValue:
          description: Значение по умолчанию для элемента без данных (например, пустая
            строка).
          type: string
        expression:
          description: Выражение, описывающее атрибут, если применимо.
          type: string
        hierarchical:
          description: Признак поддержки иерархии. Значение по умолчанию "false".
          type: boolean
          format: boolean
        injective:
          description: Признакт инъективного отображения "id -> атрибут". Значение
            по умолчанию "false".
          type: boolean
          format: boolean
    ClickhouseConfigExternalDictionaryStructureAttribute_in_ClickhouseConfigExternalDictionaryStructure_rangeMax:
      description: Поле, содержащее конец диапазона для словарей, которые хранятся
        в памяти способом "RANGE_HASHED". Подробнее см.[документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_layout/#range-hashed)
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя столбца.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип столбца.
          type: string
        nullValue:
          description: Значение по умолчанию для элемента без данных (например, пустая
            строка).
          type: string
        expression:
          description: Выражение, описывающее атрибут, если применимо.
          type: string
        hierarchical:
          description: Признак поддержки иерархии. Значение по умолчанию "false".
          type: boolean
          format: boolean
        injective:
          description: Признакт инъективного отображения "id -> атрибут". Значение
            по умолчанию "false".
          type: boolean
          format: boolean
    ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig:
      description: |-
        Обязательное поле.
        Действующие параметры для кластера ClickHouse (сочетание параметров, определенных в "`userConfig`" и `defaultConfig`).

        Настройки конфигурации ClickHouse. Подробное описание для каждого набора настроек доступно в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Любые настройки, не перечисленные здесь, не поддерживаются.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: Параметры сжатия для кластера ClickHouse. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: Конфигурация внешних словарей для кластера ClickHouse. См.
            подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: Настройки для прореживания данных Graphite. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Максимальное количество входящих подключений.

            Минимальное значение — 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Максимальное количество одновременно обрабатываемых запросов.

            Минимальное значение — 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Количество миллисекунд, в течение которых ClickHouse ожидает
            входящие запросы прежде чем закрыть подключение.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: Размер кэша (в байтах) для несжатых данных, используемых таблицами
            MergeTree. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Примерный размер (в байтах) кэша «меток», используемых таблицами MergeTree. Подробнее в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#mark_cache_size).

            Значение должно быть больше 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: Максимальный размер таблицы, которую можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: Максимальный размер раздела, который можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: Параметр устарел и не имеет никакого эффекта.
          deprecated: true
          type: integer
          format: int64
        timezone:
          description: Часовой пояс сервера, используемый в преобразованиях полей
            DateTime. Указывается как идентификатор IANA. См. подробное описание в
            [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#timezone).
          type: string
        geobaseUri:
          type: string
    ClickhouseConfig_in_ClickhouseConfigSet_userConfig:
      description: |-
        Пользовательские настройки для кластера ClickHouse.

        Настройки конфигурации ClickHouse. Подробное описание для каждого набора настроек доступно в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Любые настройки, не перечисленные здесь, не поддерживаются.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: Параметры сжатия для кластера ClickHouse. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: Конфигурация внешних словарей для кластера ClickHouse. См.
            подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: Настройки для прореживания данных Graphite. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Максимальное количество входящих подключений.

            Минимальное значение — 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Максимальное количество одновременно обрабатываемых запросов.

            Минимальное значение — 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Количество миллисекунд, в течение которых ClickHouse ожидает
            входящие запросы прежде чем закрыть подключение.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: Размер кэша (в байтах) для несжатых данных, используемых таблицами
            MergeTree. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Примерный размер (в байтах) кэша «меток», используемых таблицами MergeTree. Подробнее в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#mark_cache_size).

            Значение должно быть больше 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: Максимальный размер таблицы, которую можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: Максимальный размер раздела, который можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: Параметр устарел и не имеет никакого эффекта.
          deprecated: true
          type: integer
          format: int64
        timezone:
          description: Часовой пояс сервера, используемый в преобразованиях полей
            DateTime. Указывается как идентификатор IANA. См. подробное описание в
            [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#timezone).
          type: string
        geobaseUri:
          type: string
    ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig:
      description: |-
        Конфигурация по умолчанию для кластера ClickHouse.

        Настройки конфигурации ClickHouse. Подробное описание для каждого набора настроек доступно в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Любые настройки, не перечисленные здесь, не поддерживаются.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: Параметры сжатия для кластера ClickHouse. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: Конфигурация внешних словарей для кластера ClickHouse. См.
            подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: Настройки для прореживания данных Graphite. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Максимальное количество входящих подключений.

            Минимальное значение — 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Максимальное количество одновременно обрабатываемых запросов.

            Минимальное значение — 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Количество миллисекунд, в течение которых ClickHouse ожидает
            входящие запросы прежде чем закрыть подключение.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: Размер кэша (в байтах) для несжатых данных, используемых таблицами
            MergeTree. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Примерный размер (в байтах) кэша «меток», используемых таблицами MergeTree. Подробнее в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#mark_cache_size).

            Значение должно быть больше 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: Максимальный размер таблицы, которую можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: Максимальный размер раздела, который можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: Параметр устарел и не имеет никакого эффекта.
          deprecated: true
          type: integer
          format: int64
        timezone:
          description: Часовой пояс сервера, используемый в преобразованиях полей
            DateTime. Указывается как идентификатор IANA. См. подробное описание в
            [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#timezone).
          type: string
        geobaseUri:
          type: string
    ClusterEnvironment_in_Cluster_environment:
      description: |-
        Среда развертывания кластера ClickHouse.

        Среда развертывания.

         - PRODUCTION: Стабильная среда с осторожной политикой обновления: во время регулярного обслуживания применяются только срочные исправления.
         - PRESTABLE: Среда с более агрессивной политикой обновления: новые версии развертываются независимо от обратной совместимости.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ClusterConfig_in_Cluster_config:
      description: Конфигурация кластера ClickHouse.
      type: object
      properties:
        version:
          description: Версия серверного программного обеспечения ClickHouse.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ClusterConfigClickhouse_in_ClusterConfig_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ClusterConfigZookeeper_in_ClusterConfig_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ClusterConfig_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ClusterConfig_access'
    ClusterHealth_in_Cluster_health:
      description: |-
        Здоровье кластера.

         - HEALTH_UNKNOWN: Состояние кластера неизвестно (`health` для каждого хоста в кластере — UNKNOWN).
         - ALIVE: Кластер работает нормально (`health` для каждого хоста в кластере — ALIVE).
         - DEAD: Кластер не работает (`health` для каждого хоста в кластере — DEAD).
         - DEGRADED: Кластер работает неоптимально (`health` по крайней мере для одного хоста в кластере не ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Текущее состояние кластера.

         - STATUS_UNKNOWN: Состояние кластера неизвестно.
         - CREATING: Кластер создается.
         - RUNNING: Кластер работает нормально.
         - ERROR: В кластере произошла ошибка, блокирующая работу.
         - UPDATING: Кластер изменяется.
         - STOPPING: Кластер останавливается.
         - STOPPED: Кластер остановлен.
         - STARTING: Кластер запускается.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - UPDATING
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    ClusterConfigClickhouse_in_ClusterConfig_clickhouse:
      description: Конфигурация и распределение ресурсов для хостов ClickHouse.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ClusterConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigClickhouse_resources'
    ClusterConfigZookeeper_in_ClusterConfig_zookeeper:
      description: Конфигурация и распределение ресурсов для хостов ZooKeeper.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ClusterConfigZookeeper_resources'
    TimeOfDay_in_ClusterConfig_backupWindowStart:
      description: |-
        Время запуска ежедневного резервного копирования, в часовом поясе UTC.

        Время суток.
        Дата и часовой пояс либо не учитываются, либо задаются в других местах.

        API может разрешить использование високосной секунды.

        Связанные типы: [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) и [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Часы.
            Допустимые значения: от 0 до 23.

            API может разрешить использовать значение в формате "24:00:00" в требующих этого сценариях (например, для указания времени закрытия учреждения).
          type: integer
          format: int32
        minutes:
          description: |-
            Минуты.
            Допустимые значения: от 0 до 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Секунды.
            Стандартные допустимые значения: от 0 до 59.

            API может разрешить использовать значение 60, если также разрешено использование високосной секунды.
          type: integer
          format: int32
        nanos:
          description: |-
            Доли секунды (в наносекундах).
            Допустимые значения: от 0 до 999999999.
          type: integer
          format: int32
    Access_in_ClusterConfig_access:
      description: Политика доступа для внешних сервисов.
      type: object
      properties:
        dataLens:
          description: Разрешить экспорт данных из кластера в Yandex DataLens.
          type: boolean
          format: boolean
        webSql:
          description: |-
            Разрешить SQL-запросы к базам данных кластера из консоли управления облаком.

            Подробнее см. в [SQL-запросы в консоли управления](/docs/managed-clickhouse/operations/web-sql-query).
          type: boolean
          format: boolean
        metrika:
          description: |-
            Разрешить импорт данных из Яндекс Метрики и AppMetrica в кластер.

            Подробнее см. в [Экспорт данных в {{ yandex-cloud }}](https://appmetrica.yandex.ru/docs/common/cloud/about.html).
          type: boolean
          format: boolean
        serverless:
          description: Разрешить доступ к кластеру для Serverless.
          type: boolean
          format: boolean
    ClickhouseConfigSet_in_ClusterConfigClickhouse_config:
      description: Параметры конфигурации сервера ClickHouse.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig'
    Resources_in_ClusterConfigClickhouse_resources:
      description: Ресурсы, выделенные хостам ClickHouse.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    Resources_in_ClusterConfigZookeeper_resources:
      description: Ресурсы, выделенные хостам ZooKeeper.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    ConfigSpecClickhouse_in_ConfigSpec_clickhouse:
      description: Конфигурация и ресурсы для сервера ClickHouse.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecClickhouse_resources'
    ConfigSpecZookeeper_in_ConfigSpec_zookeeper:
      description: Конфигурация и ресурсы для сервера ZooKeeper.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/Resources_in_ConfigSpecZookeeper_resources'
    TimeOfDay_in_ConfigSpec_backupWindowStart:
      description: |-
        Время запуска ежедневного резервного копирования, в часовом поясе UTC.

        Время суток.
        Дата и часовой пояс либо не учитываются, либо задаются в других местах.

        API может разрешить использование високосной секунды.

        Связанные типы: [google.type.Date](https://github.com/googleapis/googleapis/blob/master/google/type/date.proto) и [google.protobuf.Timestamp](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto).
      type: object
      properties:
        hours:
          description: |-
            Часы.
            Допустимые значения: от 0 до 23.

            API может разрешить использовать значение в формате "24:00:00" в требующих этого сценариях (например, для указания времени закрытия учреждения).
          type: integer
          format: int32
        minutes:
          description: |-
            Минуты.
            Допустимые значения: от 0 до 59.
          type: integer
          format: int32
        seconds:
          description: |-
            Секунды.
            Стандартные допустимые значения: от 0 до 59.

            API может разрешить использовать значение 60, если также разрешено использование високосной секунды.
          type: integer
          format: int32
        nanos:
          description: |-
            Доли секунды (в наносекундах).
            Допустимые значения: от 0 до 999999999.
          type: integer
          format: int32
    Access_in_ConfigSpec_access:
      description: |-
        Политика доступа для внешних сервисов.

        Если вы хотите, чтобы определенный сервис получил доступ к кластеру ClickHouse — задайте необходимые значения в этой политике.
      type: object
      properties:
        dataLens:
          description: Разрешить экспорт данных из кластера в Yandex DataLens.
          type: boolean
          format: boolean
        webSql:
          description: |-
            Разрешить SQL-запросы к базам данных кластера из консоли управления облаком.

            Подробнее см. в [SQL-запросы в консоли управления](/docs/managed-clickhouse/operations/web-sql-query).
          type: boolean
          format: boolean
        metrika:
          description: |-
            Разрешить импорт данных из Яндекс Метрики и AppMetrica в кластер.

            Подробнее см. в [Экспорт данных в {{ yandex-cloud }}](https://appmetrica.yandex.ru/docs/common/cloud/about.html).
          type: boolean
          format: boolean
        serverless:
          description: Разрешить доступ к кластеру для Serverless.
          type: boolean
          format: boolean
    ClickhouseConfig_in_ConfigSpecClickhouse_config:
      description: |-
        Конфигурация для сервера ClickHouse.

        Настройки конфигурации ClickHouse. Подробное описание для каждого набора настроек доступно в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Любые настройки, не перечисленные здесь, не поддерживаются.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: Параметры сжатия для кластера ClickHouse. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: Конфигурация внешних словарей для кластера ClickHouse. См.
            подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: Настройки для прореживания данных Graphite. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Максимальное количество входящих подключений.

            Минимальное значение — 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Максимальное количество одновременно обрабатываемых запросов.

            Минимальное значение — 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Количество миллисекунд, в течение которых ClickHouse ожидает
            входящие запросы прежде чем закрыть подключение.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: Размер кэша (в байтах) для несжатых данных, используемых таблицами
            MergeTree. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Примерный размер (в байтах) кэша «меток», используемых таблицами MergeTree. Подробнее в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#mark_cache_size).

            Значение должно быть больше 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: Максимальный размер таблицы, которую можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: Максимальный размер раздела, который можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: Параметр устарел и не имеет никакого эффекта.
          deprecated: true
          type: integer
          format: int64
        timezone:
          description: Часовой пояс сервера, используемый в преобразованиях полей
            DateTime. Указывается как идентификатор IANA. См. подробное описание в
            [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#timezone).
          type: string
        geobaseUri:
          type: string
    Resources_in_ConfigSpecClickhouse_resources:
      description: Ресурсы, выделенные хостам ClickHouse.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    Resources_in_ConfigSpecZookeeper_resources:
      description: |-
        Ресурсы, выделенные хостам ZooKeeper. Если не задано, будет использоваться минимальный доступный набор ресурсов. Все доступные наборы ресурсов можно
        получить с помощью запроса [list](/docs/managed-clickhouse/api-ref/ResourcePreset/list).
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    ClickhouseConfigExternalDictionary_in_CreateClusterExternalDictionaryRequest_externalDictionary:
      description: Конфигурация внешнего словаря.
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Обязательное поле.
              Имя внешнего словаря.
            type: string
          structure:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryStructure'
            description: |-
              Обязательное поле.
              Набор атрибутов внешнего словаря. Подробное описание см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_structure/).
          layout:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryLayout'
            description: |-
              Обязательное поле.
              Макет для хранения словаря в памяти. Подробное описание см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts_dict_layout/).
      - title: lifetime
        type: object
        maxProperties: 1
        properties:
          fixedLifetime:
            description: Жесткий интервал между обновлениями словаря.
            type: string
            format: int64
          lifetimeRange:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryRange'
            description: Диапазон интервалов между обновлениями словаря, из которых
              может выбирать ClickHouse.
      - title: source
        type: object
        maxProperties: 1
        properties:
          httpSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryHttpSource'
            description: HTTP-источник для словаря.
          mysqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMysqlSource'
            description: MySQL-источник для словаря.
          clickhouseSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryClickhouseSource'
            description: ClickHouse-источник для словаря.
          mongodbSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryMongodbSource'
            description: MongoDB-источник для словаря.
          postgresqlSource:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionaryPostgresqlSource'
            description: PostgreSQL-источник для словаря.
    ClusterEnvironment_in_CreateClusterRequest_environment:
      description: |-
        Обязательное поле.
        Среда развертывания кластера ClickHouse.

        Среда развертывания.

         - PRODUCTION: Стабильная среда с осторожной политикой обновления: во время регулярного обслуживания применяются только срочные исправления.
         - PRESTABLE: Среда с более агрессивной политикой обновления: новые версии развертываются независимо от обратной совместимости.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_CreateClusterRequest_configSpec:
      description: |-
        Обязательное поле.
        Конфигурация и ресурсы для хостов, которые должны быть созданы для кластера ClickHouse.
      type: object
      properties:
        version:
          description: Версия серверного программного обеспечения ClickHouse.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    DatabaseSpec_in_CreateDatabaseRequest_databaseSpec:
      description: |-
        Обязательное поле.
        Конфигурация создаваемой базы данных.
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя базы данных ClickHouse. Длина 1-63 символов.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_-]* ``.
          type: string
    MlModelType_in_CreateMlModelRequest_type:
      description: |-
        Обязательное поле.
        Тип модели.

         - ML_MODEL_TYPE_CATBOOST: Модель CatBoost.
      type: string
      enum:
      - ML_MODEL_TYPE_CATBOOST
    UserSpec_in_CreateUserRequest_userSpec:
      description: |-
        Обязательное поле.
        Свойства создаваемого пользователя.
      type: object
      properties:
        name:
          description: |-
            Обязательное поле.
            Имя пользователя базы данных ClickHouse.

            Максимальная длина строки в символах — 63.
            Значение должно соответствовать регулярному выражению `` [a-zA-Z0-9_]* ``.
          type: string
        password:
          description: |-
            Обязательное поле.
            Пароль пользователя ClickHouse.

            Длина строки в символах должна быть от 8 до 128.
          type: string
        permissions:
          description: Набор разрешений, которые следует предоставить пользователю.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        settings:
          $ref: '#/components/schemas/UserSettings_in_UserSpec_settings'
        quotas:
          description: Набор квот, назначенных пользователю.
          type: array
          items:
            $ref: '#/components/schemas/UserQuota'
    Permission_in_GrantUserPermissionRequest_permission:
      description: Разрешение, которое должно быть предоставлено указанному пользователю.
      type: object
      properties:
        databaseName:
          description: Имя базы данных, к которой предоставляет доступ разрешение.
          type: string
    HostType_in_Host_type:
      description: |-
        Тип хоста.

         - CLICKHOUSE: Хост ClickHouse.
         - ZOOKEEPER: Хост ZooKeeper.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    Resources_in_Host_resources:
      description: Ресурсы, выделенные хосту ClickHouse.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    HostHealth_in_Host_health:
      description: |-
        Код работоспособности хоста.

         - UNKNOWN: Состояние хоста неизвестно.
         - ALIVE: Хост работает и выполняет все свои функции.
         - DEAD: Хост не работает и не может выполнять свои основные функции.
         - DEGRADED: Хост деградировал, и может выполнять только некоторые из своих основных функций.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: UNKNOWN
    HostType_in_HostSpec_type:
      description: |-
        Обязательное поле.
        Тип развертываемого хоста.

         - CLICKHOUSE: Хост ClickHouse.
         - ZOOKEEPER: Хост ZooKeeper.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    MlModelType_in_MlModel_type:
      description: |-
        Тип модели.

         - ML_MODEL_TYPE_CATBOOST: Модель CatBoost.
      type: string
      enum:
      - ML_MODEL_TYPE_CATBOOST
    ClusterEnvironment_in_RestoreClusterRequest_environment:
      description: |-
        Обязательное поле.
        Среда развертывания для нового кластера ClickHouse.

        Среда развертывания.

         - PRODUCTION: Стабильная среда с осторожной политикой обновления: во время регулярного обслуживания применяются только срочные исправления.
         - PRESTABLE: Среда с более агрессивной политикой обновления: новые версии развертываются независимо от обратной совместимости.
      type: string
      enum:
      - PRODUCTION
      - PRESTABLE
    ConfigSpec_in_RestoreClusterRequest_configSpec:
      description: |-
        Обязательное поле.
        Конфигурация для создаваемого кластера ClickHouse.
      type: object
      properties:
        version:
          description: Версия серверного программного обеспечения ClickHouse.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    ServiceType_in_Service_type:
      description: |-
        Тип сервиса, предоставляемого хостом.

         - CLICKHOUSE: Хост — это сервер ClickHouse.
         - ZOOKEEPER: Хост — сервер ZooKeeper.
      type: string
      enum:
      - CLICKHOUSE
      - ZOOKEEPER
    ServiceHealth_in_Service_health:
      description: |-
        Код состояния доступности сервера.

         - UNKNOWN: Работоспособность сервера неизвестна.
         - ALIVE: Сервер работает нормально.
         - DEAD: Сервер отключен или не отвечает.
      type: string
      enum:
      - UNKNOWN
      - ALIVE
      - DEAD
      default: UNKNOWN
    ShardConfig_in_Shard_config:
      description: Конфигурация шарда.
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigClickhouse_in_ShardConfig_clickhouse'
    ShardConfigClickhouse_in_ShardConfig_clickhouse:
      description: Конфигурация ClickHouse для шарда.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfigSet_in_ShardConfigClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigClickhouse_resources'
        weight:
          description: |-
            Относительный вес шарда, который учитывается при записи данных в кластер.

            Подробнее см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/table_engines/distributed/).
          type: integer
          format: int64
    ClickhouseConfigSet_in_ShardConfigClickhouse_config:
      description: Настройки ClickHouse для шарда.
      type: object
      properties:
        effectiveConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_effectiveConfig'
        userConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_userConfig'
        defaultConfig:
          $ref: '#/components/schemas/ClickhouseConfig_in_ClickhouseConfigSet_defaultConfig'
    Resources_in_ShardConfigClickhouse_resources:
      description: Вычислительные ресурсы для шарда.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse:
      description: Конфигурация ClickHouse для шарда.
      type: object
      properties:
        config:
          $ref: '#/components/schemas/ClickhouseConfig_in_ShardConfigSpecClickhouse_config'
        resources:
          $ref: '#/components/schemas/Resources_in_ShardConfigSpecClickhouse_resources'
        weight:
          description: |-
            Относительный вес шарда, который учитывается при записи данных в кластер.
            Подробнее см. в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/table_engines/distributed/).
          type: integer
          format: int64
    ClickhouseConfig_in_ShardConfigSpecClickhouse_config:
      description: |-
        Настройки ClickHouse для шарда.

        Настройки конфигурации ClickHouse. Подробное описание для каждого набора настроек доступно в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/).

        Любые настройки, не перечисленные здесь, не поддерживаются.
      type: object
      properties:
        logLevel:
          $ref: '#/components/schemas/ClickhouseConfigLogLevel_in_ClickhouseConfig_logLevel'
        mergeTree:
          $ref: '#/components/schemas/ClickhouseConfigMergeTree_in_ClickhouseConfig_mergeTree'
        compression:
          description: Параметры сжатия для кластера ClickHouse. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#compression).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigCompression'
        dictionaries:
          description: Конфигурация внешних словарей для кластера ClickHouse. См.
            подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/query_language/dicts/external_dicts/).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigExternalDictionary'
        graphiteRollup:
          description: Настройки для прореживания данных Graphite. См. подробное описание
            в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#server_settings-graphite_rollup).
          type: array
          items:
            $ref: '#/components/schemas/ClickhouseConfigGraphiteRollup'
        maxConnections:
          description: |-
            Максимальное количество входящих подключений.

            Минимальное значение — 10.
          type: integer
          format: int64
        maxConcurrentQueries:
          description: |-
            Максимальное количество одновременно обрабатываемых запросов.

            Минимальное значение — 10.
          type: integer
          format: int64
        keepAliveTimeout:
          description: Количество миллисекунд, в течение которых ClickHouse ожидает
            входящие запросы прежде чем закрыть подключение.
          type: integer
          format: int64
        uncompressedCacheSize:
          description: Размер кэша (в байтах) для несжатых данных, используемых таблицами
            MergeTree. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#uncompressed_cache_size).
          type: integer
          format: int64
        markCacheSize:
          description: |-
            Примерный размер (в байтах) кэша «меток», используемых таблицами MergeTree. Подробнее в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#mark_cache_size).

            Значение должно быть больше 5368709120.
          type: integer
          format: int64
        maxTableSizeToDrop:
          description: Максимальный размер таблицы, которую можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_table_size_to_drop).
          type: integer
          format: int64
        maxPartitionSizeToDrop:
          description: Максимальный размер раздела, который можно удалить с помощью
            запроса DROP. См. подробное описание в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#max_partition_size_to_drop).
          type: integer
          format: int64
        builtinDictionariesReloadInterval:
          description: Параметр устарел и не имеет никакого эффекта.
          deprecated: true
          type: integer
          format: int64
        timezone:
          description: Часовой пояс сервера, используемый в преобразованиях полей
            DateTime. Указывается как идентификатор IANA. См. подробное описание в
            [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/server_settings/settings/#timezone).
          type: string
        geobaseUri:
          type: string
    Resources_in_ShardConfigSpecClickhouse_resources:
      description: Вычислительные ресурсы для шарда.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.). Все доступные наборы ресурсов перечислены в
            [документации](/docs/managed-clickhouse/concepts/instance-types).
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск;
            * local-ssd — локальное SSD-хранилище.
          type: string
    LogRecord_in_StreamLogRecord_record:
      description: Одна из запрошенных записей в логе.
      type: object
      properties:
        timestamp:
          description: |-
            Отметка времени для записи журнала в [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) текстовом формате.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        message:
          description: Содержимое записи в логе.
          type: object
          additionalProperties:
            type: string
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Маска, которая указывает, какие поля ресурса Cluster для ClickHouse должны быть изменены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    ConfigSpec_in_UpdateClusterRequest_configSpec:
      description: Новая конфигурация и ресурсы для хостов кластера.
      type: object
      properties:
        version:
          description: Версия серверного программного обеспечения ClickHouse.
          type: string
        clickhouse:
          $ref: '#/components/schemas/ConfigSpecClickhouse_in_ConfigSpec_clickhouse'
        zookeeper:
          $ref: '#/components/schemas/ConfigSpecZookeeper_in_ConfigSpec_zookeeper'
        backupWindowStart:
          $ref: '#/components/schemas/TimeOfDay_in_ConfigSpec_backupWindowStart'
        access:
          $ref: '#/components/schemas/Access_in_ConfigSpec_access'
    FieldMask_in_UpdateClusterShardGroupRequest_updateMask:
      description: |-
        Маска, которая указывает, какие атрибуты группы шардов должны быть изменены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    FieldMask_in_UpdateClusterShardRequest_updateMask:
      description: |-
        Маска, которая указывает, какие атрибуты шарда должны быть изменены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    ShardConfigSpec_in_UpdateClusterShardRequest_configSpec:
      description: Новая конфигурация для указанного шарда.
      type: object
      properties:
        clickhouse:
          $ref: '#/components/schemas/ShardConfigSpecClickhouse_in_ShardConfigSpec_clickhouse'
    FieldMask_in_UpdateMlModelRequest_updateMask:
      description: |-
        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    FieldMask_in_UpdateUserRequest_updateMask:
      description: |-
        Маска, которая указывает, какие атрибуты пользователя ClickHouse должны быть изменены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    UserSettings_in_UpdateUserRequest_settings:
      description: |-
        Пользовательские настройки ClickHouse.
        Поддерживаемые параметры входят в число параметров, описанных в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Ограничивает разрешения для запросов, не относящихся к DDL. Чтобы ограничить разрешения для DDL-запросов, используйте настройку `allowDdl`.

            - `0` (по умолчанию) — нет ограничений.
            - `1`— разрешено выполнять только запросы на чтение данных.
            - `2` — разрешено выполнять запросы на чтение данных и изменение настроек.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_readonly).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Определяет, разрешены ли DDL-запросы (например, `CREATE`, `ALTER`, `RENAME`, и т.д.).

            Значение по умолчанию: `true`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            Включает или выключает кворумную запись в кластере ClickHouse. Если значение меньше `2`, то кворумная запись выключена, в противном случае она включена.

            Кворумная запись позволяет гарантировать, что за время, не большее чем `insertQuorumTimeout`, ClickHouse смог без ошибок записать данные в кворум из
            `insert_quorum` реплик. Все реплики в кворуме консистентны, т.е. содержат данные всех более ранних запросов `INSERT`. Использование кворума при записи
            позволяет гарантировать, что данные не потеряются при выходе из строя одной или нескольких реплик.

            При чтении данных, записанных с помощью кворумной записи, можно использовать настройку `selectSequentialConsistency`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-insert_quorum).

            Минимальное значение — 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Время ожидания соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `10000`, 10 секунд).

            Значение должно быть больше 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Время ожидания приема данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Время ожидания отправки данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Время ожидания кворумной записи в миллисекундах.

            Если кворумная запись включена, время ожидания прошло, а запись в `insertQuorum` реплик так не состоялась, то ClickHouse прервет выполнение
            `INSERT`-запроса и вернет ошибку. В этом случае клиент должен повторить запрос на запись того же блока на эту же или любую другую реплику.

            Минимальное значение: `1000`, одна секунда (по умолчанию: `60000`, одна минута).

            Минимальное значение — 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: |-
            Определяет поведение `SELECT`-запросов для реплицированных таблиц: если эта настройка включена, ClickHouse прервет выполнение запроса и вернет сообщение об
            ошибке в случае, если в реплике нет фрагментов данных, записанных с помощью кворумной записи. Фрагменты данных, записанные без использования кворумной
            записи, прочитаны не будут.

            Значение по умолчанию: `false` (последовательная консистентность выключена).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Максимальная задержка реплики в миллисекундах. Если реплика отстает на значение больше установленного, она перестает использоваться и становится
            устаревшей.

            Минимальное значение: `1000`, 1 секунда (по умолчанию: `300000`, 300 секунд, 5 минут).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            Минимальное значение — 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: |-
            Включает или выключает форсирование запроса в устаревшую реплику в случае, если актуальные данные недоступны. Если этот параметр включен, то из устаревших
            реплик таблицы ClickHouse выбирает наиболее актуальную. Используется при выполнении `SELECT` из распределенной таблицы, которая указывает на
            реплицированные таблицы.

            Значение по умолчанию: `true` (форсирование запроса включено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            Условия ожидания завершения асинхронных действий на репликах для запросов `ALTER`:

            - `0` — не ждать.
            - `1` — ждать выполнения только у себя (значение по умолчанию).
            - `2` — ждать всех.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/alter/#synchronicity-of-alter-queries).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: |-
            Включает или выключает режим экономии памяти при распределенной агрегации.

            При распределённой обработке запроса внешняя агрегация производится на удалённых серверах. Для того чтобы на сервере-инициаторе запроса использовалось
            немного оперативной памяти, нужно включить эту настройку.

            Значение по умолчанию: `false` (режим экономии памяти выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Время ожидания выполнения DDL-запросов в миллисекундах.
          type: integer
          format: int64
        skipUnavailableShards:
          description: |-
            Включает или выключает тихий пропуск недоступных шардов.

            Шард считается недоступным, если все его реплики недоступны.

            Значение по умолчанию: `false` (тихий пропуск недоступных шардов выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-skip_unavailable_shards).
          type: boolean
          format: boolean
        compile:
          description: |-
            Включает или выключает компиляцию запросов. Если вы выполняете большое количество структурно идентичных запросов — включите эту настройку. При включенной
            компиляции такие запросы могут выполняться быстрее за счет использования скомпилированных частей запроса.

            Эта настройка используется совместно с `minCountToCompile`.

            Значение по умолчанию: `false` (компиляция выключена).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            После какого количества структурно идентичных запросов начать компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции перед продолжением выполнения. Рекомендуется использовать
            это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда часть запроса будет скомпилирована, она сразу же будет использована
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#min-count-to-compile).

            Минимальное значение — 0.
          type: integer
          format: int64
        compileExpressions:
          description: |-
            Включает или выключает компиляцию выражений. Если вы выполняете большое количество запросов, в которых используются идентичные выражения — включите эту
            настройку. При включенной компиляции выражений такие запросы могут выполняться быстрее за счет использования скомпилированных выражений.

            Эта настройка используется совместно с `minCountToCompileExpression`.

            Значение по умолчанию: `false` (компиляция выражений выключена).
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            После какого количества идентичных выражений начать их компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции выражения перед продолжением выполнения. Рекомендуется
            использовать это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда выражение будет скомпилировано, оно сразу же будет использовано
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            Максимальный размер блока для чтения.

            Данные в ClickHouse обрабатываются по блокам (наборам кусочков столбцов). Внутренние циклы обработки для одного блока достаточно эффективны, но есть
            заметные издержки на каждый блок.

            Эта настройка — рекомендация, какой размер блока (в количестве строк) загружать из таблиц.

            Значение должно быть больше `0` (по умолчанию: `65536`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-max_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Ограничивает минимальное количество строк в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `1048576`).

            Минимальное значение — 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Ограничивает минимальное количество байтов в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `‭268435456‬‬`, 256 МБ).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            Позволяет формировать блоки указанного размера (в байтах) при вставке в таблицу. Эта настройка действует только в тех случаях, когда сервер сам формирует
            такие блоки.

            Значение должно быть больше `0` (по умолчанию: `1048576`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_insert_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            минимальный объём данных в байтах, необходимый для прямого (небуферизованного) чтения (Direct I/O) на диск.

            По умолчанию ClickHouse читает данные не напрямую с диска, а полагается на файловую систему и её кэш. Такое чтение эффективно при небольших объемах данных.
            Если данные читаются в больших объемах, эффективнее читать с диска напрямую, минуя кэш файловой системы.

            Если общий объём хранения всех данных для чтения превышает заданное значение настройки, тогда ClickHouse читает данные с диска напрямую.

            Минимальное значение и значение по умолчанию: `0` (прямой ввод/вывод отключен).

            Минимальное значение — 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: |-
            Определяет, использовать ли кэш разжатых блоков. Использование кэша несжатых блоков может существенно сократить задержку и увеличить пропускную способность
            при работе с большим количеством коротких запросов. Включите эту настройку для пользователей, от которых идут частые короткие запросы.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (кэш не используется).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в строках для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `128x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в байтах для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `192x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            Ограничивает минимальное количество строк, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество строк, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `20x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            Ограничивает минимальное количество байт, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество байт, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `24x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          description: |-
            задает порог потребления оперативной памяти (в байтах), по достижению которого временные данные, накопленные при выполнении операции агрегации `GROUP BY`,
            сбрасываются на диск для экономии оперативной памяти.

            По умолчанию агрегирование выполняется в памяти с помощью хэш-таблицы. Запрос может привести к необходимости агрегации больших объемов данных, которые
            могут не поместиться в оперативную память и вызвать ошибку при выполнении запроса (см. настройку `maxMemoryUsage`). Для таких запросов используйте эту
            настройку, чтобы ClickHouse сбрасывал данные на диск и успешно выполнял агрегацию.

            Минимальное значение и значение по умолчанию: `0`, `GROUP BY` во внешней памяти отключен.

            При использовании агрегации во внешней памяти рекомендуется задать значение этой настройки в два раза меньше значения настройки `maxMemoryUsage` (по
            умолчанию максимальное использование памяти ограничено десятью гигабайтами).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).

            Смотрите также настройку `distributedAggregationMemoryEfficient`.
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          description: Настройка аналогична `maxBytesBeforeExternalGroupBy`, за исключением
            того, что она применяется для операции сортировки (`ORDER BY`).
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          description: |-
            Определяет порог количества ключей, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `10000‬‬`).
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          description: |-
            Определяет порог количества байт в агрегате, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `100000000‬‬`).
          type: integer
          format: int64
        priority:
          description: |-
            Определяет приоритет запроса.

            - `0` — приоритет не используется.
            - `1` — наивысший приоритет.
            - и так далее. Чем больше число, тем ниже приоритет.

            Эта настройка выставляется для каждого запроса по отдельности.

            Если ClickHouse в текущий момент времени выполняет запросы с более высокими приоритетами, чем приоритет поступившего запроса, то выполнение такого запроса
            приостанавливается до завершения выполнения более приоритетных запросов.

            Минимальное значение и значение по умолчанию: `0`, приоритет не используется.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            Ограничивает максимальное количество потоков обработки запроса (без учёта потоков для чтения данных с удалённых серверов).

            Этот параметр относится к потокам, которые выполняют параллельно одни стадии конвейера выполнения запроса.

            Минимальное значение и значение по умолчанию: `0` (значение вычисляется автоматически — это количество процессорных ядер без учёта Hyper-Threading).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_threads).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запроса на одном сервере. Настройка не учитывает объём свободной
            памяти или общий объём памяти на машине.

            Ограничение действует на один запрос, в пределах одного сервера.

            Минимальное значение: `0`, нет ограничения. В конфигурационном файле по умолчанию ограничение равно `10737418240` (10 ГБ).

            Если вы также используете настройки `maxBytesBeforeExternalGroupBy` или `maxBytesBeforeExternalSort`, рекомендуется, чтобы их значения были в два
            раза меньше значения `maxMemoryUsage`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#settings_max_memory_usage).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запросов пользователя на одном сервере. Настройка не учитывает объём
            свободной памяти или общий объём памяти на машине.

            Ограничение действует на все запросы пользователя, которые выполняются одновременно в пределах одного сервера.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду) при выполнении одного запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду). Эта настройка влияет на все одновременно выполняющиеся запросы пользователя.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        forceIndexByDate:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по дате невозможно. Этот настройка действует только для таблиц
            семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по дате).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по первичному ключу невозможно. Этот настройка действует только
            для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по первичному ключу).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_primary_key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            Ограничивает максимальное количество строк, которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-rows-to-read).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            Ограничивает максимальное количество уникальных ключей, получаемых в процессе агрегации. Эта настройка позволяет ограничить потребление оперативной памяти
            при агрегации.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            Ограничивает максимальное количество строк для сортировки. Эта настройка позволяет ограничить потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы до сортировки. Эта настройка позволяет ограничить
            потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            Ограничивает количество строк результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            Ограничивает количество байт результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            Ограничивает максимальное количество различных строк при использовании `DISTINCT`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), занимаемых хэш-таблицей, при использовании `DISTINCT`.

            Минимальное значение — 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            Ограничивает максимальное количество строк, которое можно передать на удалённый сервер или сохранить во временную таблицу при использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которых можно передать на удалённый сервер или сохранить во временную таблицу, при
            использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Ограничивает максимальное время выполнения запроса в миллисекундах. На данный момент это ограничение не проверяется при одной из стадий сортировки а также
            при слиянии и финализации агрегатных функций.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Ограничивает максимальное количество столбцов, которые можно читать из таблицы в одном запросе. Если запрос требует чтения большего количества столбцов —
            он будет завершен с ошибкой.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (с учетом
            постоянных столбцов)

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (без учета
            постоянных столбцов).

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            Ограничивает размер наибольшей части запроса (в байтах), которая может быть передана в оперативную память для разбора с помощью парсера SQL.

            Значение должно быть больше `0` (по умолчанию: `262144`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_query_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Ограничивает максимальную глубину вложенности синтаксического дерева.

            Для больших и сложных запросов может быть построено синтаксическое дерево очень большой глубины. При помощи этой настройки вы можете запретить выполнение
            излишне больших или неоптимальных запросов для больших таблиц.

            Например, запрос `SELECT *` в большинстве случаев породит более сложное и глубокое синтаксическое дерево, чем запрос `SELECT ... WHERE ...` с ограничениями
            и условиями. Наложение ограничения с помощью настройки может побудить пользователя оптимизировать излишне сложные запросы.

            Значение должно быть больше `0` (по умолчанию: `1000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-depth).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева).

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `50000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-elements).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева) после раскрытия псевдонимов и звездочки.

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `500000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            Значение должно быть больше 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: |-
            Включает или выключает парсер SQL, если потоковый парсер не может проанализировать данные.

            Используйте эту настройку, если значения, которые вы хотите вставить в таблицу, содержат в себе выражения SQL.

            Например, при вставке в таблицу значения, содержащего в себе выражение `now()`, потоковый парсер не сможет распознать это выражение; запрос `INSERT`
            завершится с ошибкой, и никакие данные не будут вставлены в таблицу. При включенном парсере SQL выражение будет распознано корректно и в качестве значения
            будет вставлен результат выполнения SQL-функции `now()` (текущая дата и время).

            Эта настройка действует только в том случае, если вы используете формат [Values](https://clickhouse.tech/docs/ru/interfaces/formats/#data-format-values)
            при вставке данных.

            Значение по умолчанию: `true` (парсер SQL включен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: |-
            Включает или выключает замену пропущенных полей значениями по умолчанию для типа данных столбца при вставке данных запросом `INSERT`.

            Значение по умолчанию: `true` (замена включена).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Определяет формат чисел в JSON-выводе.

            Если эта настройка включена, то при выводе в JSON 64-битные числа (`UInt64` и `Int64`) выводятся в кавычках (из соображений совместимости с большинством
            реализаций JavaScript). Иначе — без кавычек.

            Значение по умолчанию: `false` (вывод 64-битных целых чисел в кавычках выключен).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: |-
            Включает вывод специальных значений для чисел с плавающей запятой (`+nan`, `-nan`, `+inf` и `-inf`) при выводе в JSON.

            Значение по умолчанию: `false` (специальные значения не выводятся).
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          description: |-
            Определяет, использовать ли тип LowCardinality в Native-формате.

            - `true` (по умолчанию) — да, использовать.
            - `false`— конвертировать столбцы LowCardinality в обычные столбцы для запроса `SELECT`, и конвертировать обычные столбцы в требуемый LowCardinality-столбец для запроса `INSERT`.

            Столбцы этого типа, также известные как «разреженные столбцы», позволяют более эффективно хранить данные в виде хэш-таблиц. Если данные это позволяют,
            ClickHouse использует столбец типа LowCardinality.

            Если вы используете сторонний клиент для ClickHouse, который не умеет работать со столбцами типа LowCardinality, то такой клиент не сможет правильно
            интерпретировать результат запроса, если в запросе будет присутствовать столбец типа LowCardinality. Выключите эту настройку, чтобы включать в результат
            столбец в обычном формате и позволить сторонним клиентам обработать результат.

            Официальный клиент ClickHouse умеет работать со столбцами типа LowCardinality.

            Значение по умолчанию: `true` (столбцы LowCardinality используются в Native-формате).
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          description: |-
            Позволяет возвращать пустой результат при выполнении агрегации данных без ключей (без `GROUP BY`) для пустого множества (например, `SELECT count(*) FROM
            table WHERE 0`).

            - `true`— ClickHouse вернет пустой результат.
            - `false` (по умолчанию) — ClickHouse вернет результат, состоящий из одной строки со значениями `NULL` для агрегатных функций, в соответствии со стандартом SQL.
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: |-
            Время ожидания установления HTTP-соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1000`, 1 секунда).
          type: integer
          format: int64
        httpReceiveTimeout:
          description: |-
            Время ожидания приема данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        httpSendTimeout:
          description: |-
            Время ожидания отправки данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        enableHttpCompression:
          description: |-
            Включает или выключает сжатие данных в ответе на HTTP-запрос.

            По умолчанию ClickHouse хранит данные в сжатом виде. При выполнении запроса его результат представлен в несжатом виде. С помощью этой настройки вы можете
            указать ClickHouse сжимать результат запроса при отправке по HTTP.

            Чтобы ClickHouse сжал ответ при включенной настройке, добавьте в HTTP-запрос заголовок @b.

            ClickHouse поддерживает следующие методы сжатия: `gzip`, `br` и `deflate`.

            Значение по умолчанию: `false` (сжатие выключено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/interfaces/http/).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Включает отсылку уведомления о ходе выполнения с использованием HTTP-заголовков `X-ClickHouse-Progress`.

            Значение по умолчанию: `false` (отсылка уведомлений выключена).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: |-
            Задает минимальный интервал (в миллисекундах) между уведомлениями о ходе выполнения запроса с помощью HTTP-заголовка `X-ClickHouse-Progress`.

            Значение должно быть больше `0` (по умолчанию: `100`).
          type: integer
          format: int64
        addHttpCorsHeader:
          description: |-
            Включает заголовок CORS в HTTP-ответы.

            Значение по умолчанию: `false` (заголовок не включается в HTTP-ответы).
          type: boolean
          format: boolean
    UserSettings_in_User_settings:
      description: |-
        Пользовательские настройки ClickHouse.
        Поддерживаемые параметры входят в число параметров, описанных в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Ограничивает разрешения для запросов, не относящихся к DDL. Чтобы ограничить разрешения для DDL-запросов, используйте настройку `allowDdl`.

            - `0` (по умолчанию) — нет ограничений.
            - `1`— разрешено выполнять только запросы на чтение данных.
            - `2` — разрешено выполнять запросы на чтение данных и изменение настроек.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_readonly).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Определяет, разрешены ли DDL-запросы (например, `CREATE`, `ALTER`, `RENAME`, и т.д.).

            Значение по умолчанию: `true`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            Включает или выключает кворумную запись в кластере ClickHouse. Если значение меньше `2`, то кворумная запись выключена, в противном случае она включена.

            Кворумная запись позволяет гарантировать, что за время, не большее чем `insertQuorumTimeout`, ClickHouse смог без ошибок записать данные в кворум из
            `insert_quorum` реплик. Все реплики в кворуме консистентны, т.е. содержат данные всех более ранних запросов `INSERT`. Использование кворума при записи
            позволяет гарантировать, что данные не потеряются при выходе из строя одной или нескольких реплик.

            При чтении данных, записанных с помощью кворумной записи, можно использовать настройку `selectSequentialConsistency`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-insert_quorum).

            Минимальное значение — 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Время ожидания соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `10000`, 10 секунд).

            Значение должно быть больше 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Время ожидания приема данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Время ожидания отправки данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Время ожидания кворумной записи в миллисекундах.

            Если кворумная запись включена, время ожидания прошло, а запись в `insertQuorum` реплик так не состоялась, то ClickHouse прервет выполнение
            `INSERT`-запроса и вернет ошибку. В этом случае клиент должен повторить запрос на запись того же блока на эту же или любую другую реплику.

            Минимальное значение: `1000`, одна секунда (по умолчанию: `60000`, одна минута).

            Минимальное значение — 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: |-
            Определяет поведение `SELECT`-запросов для реплицированных таблиц: если эта настройка включена, ClickHouse прервет выполнение запроса и вернет сообщение об
            ошибке в случае, если в реплике нет фрагментов данных, записанных с помощью кворумной записи. Фрагменты данных, записанные без использования кворумной
            записи, прочитаны не будут.

            Значение по умолчанию: `false` (последовательная консистентность выключена).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Максимальная задержка реплики в миллисекундах. Если реплика отстает на значение больше установленного, она перестает использоваться и становится
            устаревшей.

            Минимальное значение: `1000`, 1 секунда (по умолчанию: `300000`, 300 секунд, 5 минут).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            Минимальное значение — 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: |-
            Включает или выключает форсирование запроса в устаревшую реплику в случае, если актуальные данные недоступны. Если этот параметр включен, то из устаревших
            реплик таблицы ClickHouse выбирает наиболее актуальную. Используется при выполнении `SELECT` из распределенной таблицы, которая указывает на
            реплицированные таблицы.

            Значение по умолчанию: `true` (форсирование запроса включено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            Условия ожидания завершения асинхронных действий на репликах для запросов `ALTER`:

            - `0` — не ждать.
            - `1` — ждать выполнения только у себя (значение по умолчанию).
            - `2` — ждать всех.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/alter/#synchronicity-of-alter-queries).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: |-
            Включает или выключает режим экономии памяти при распределенной агрегации.

            При распределённой обработке запроса внешняя агрегация производится на удалённых серверах. Для того чтобы на сервере-инициаторе запроса использовалось
            немного оперативной памяти, нужно включить эту настройку.

            Значение по умолчанию: `false` (режим экономии памяти выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Время ожидания выполнения DDL-запросов в миллисекундах.
          type: integer
          format: int64
        skipUnavailableShards:
          description: |-
            Включает или выключает тихий пропуск недоступных шардов.

            Шард считается недоступным, если все его реплики недоступны.

            Значение по умолчанию: `false` (тихий пропуск недоступных шардов выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-skip_unavailable_shards).
          type: boolean
          format: boolean
        compile:
          description: |-
            Включает или выключает компиляцию запросов. Если вы выполняете большое количество структурно идентичных запросов — включите эту настройку. При включенной
            компиляции такие запросы могут выполняться быстрее за счет использования скомпилированных частей запроса.

            Эта настройка используется совместно с `minCountToCompile`.

            Значение по умолчанию: `false` (компиляция выключена).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            После какого количества структурно идентичных запросов начать компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции перед продолжением выполнения. Рекомендуется использовать
            это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда часть запроса будет скомпилирована, она сразу же будет использована
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#min-count-to-compile).

            Минимальное значение — 0.
          type: integer
          format: int64
        compileExpressions:
          description: |-
            Включает или выключает компиляцию выражений. Если вы выполняете большое количество запросов, в которых используются идентичные выражения — включите эту
            настройку. При включенной компиляции выражений такие запросы могут выполняться быстрее за счет использования скомпилированных выражений.

            Эта настройка используется совместно с `minCountToCompileExpression`.

            Значение по умолчанию: `false` (компиляция выражений выключена).
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            После какого количества идентичных выражений начать их компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции выражения перед продолжением выполнения. Рекомендуется
            использовать это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда выражение будет скомпилировано, оно сразу же будет использовано
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            Максимальный размер блока для чтения.

            Данные в ClickHouse обрабатываются по блокам (наборам кусочков столбцов). Внутренние циклы обработки для одного блока достаточно эффективны, но есть
            заметные издержки на каждый блок.

            Эта настройка — рекомендация, какой размер блока (в количестве строк) загружать из таблиц.

            Значение должно быть больше `0` (по умолчанию: `65536`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-max_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Ограничивает минимальное количество строк в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `1048576`).

            Минимальное значение — 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Ограничивает минимальное количество байтов в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `‭268435456‬‬`, 256 МБ).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            Позволяет формировать блоки указанного размера (в байтах) при вставке в таблицу. Эта настройка действует только в тех случаях, когда сервер сам формирует
            такие блоки.

            Значение должно быть больше `0` (по умолчанию: `1048576`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_insert_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            минимальный объём данных в байтах, необходимый для прямого (небуферизованного) чтения (Direct I/O) на диск.

            По умолчанию ClickHouse читает данные не напрямую с диска, а полагается на файловую систему и её кэш. Такое чтение эффективно при небольших объемах данных.
            Если данные читаются в больших объемах, эффективнее читать с диска напрямую, минуя кэш файловой системы.

            Если общий объём хранения всех данных для чтения превышает заданное значение настройки, тогда ClickHouse читает данные с диска напрямую.

            Минимальное значение и значение по умолчанию: `0` (прямой ввод/вывод отключен).

            Минимальное значение — 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: |-
            Определяет, использовать ли кэш разжатых блоков. Использование кэша несжатых блоков может существенно сократить задержку и увеличить пропускную способность
            при работе с большим количеством коротких запросов. Включите эту настройку для пользователей, от которых идут частые короткие запросы.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (кэш не используется).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в строках для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `128x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в байтах для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `192x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            Ограничивает минимальное количество строк, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество строк, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `20x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            Ограничивает минимальное количество байт, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество байт, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `24x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          description: |-
            задает порог потребления оперативной памяти (в байтах), по достижению которого временные данные, накопленные при выполнении операции агрегации `GROUP BY`,
            сбрасываются на диск для экономии оперативной памяти.

            По умолчанию агрегирование выполняется в памяти с помощью хэш-таблицы. Запрос может привести к необходимости агрегации больших объемов данных, которые
            могут не поместиться в оперативную память и вызвать ошибку при выполнении запроса (см. настройку `maxMemoryUsage`). Для таких запросов используйте эту
            настройку, чтобы ClickHouse сбрасывал данные на диск и успешно выполнял агрегацию.

            Минимальное значение и значение по умолчанию: `0`, `GROUP BY` во внешней памяти отключен.

            При использовании агрегации во внешней памяти рекомендуется задать значение этой настройки в два раза меньше значения настройки `maxMemoryUsage` (по
            умолчанию максимальное использование памяти ограничено десятью гигабайтами).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).

            Смотрите также настройку `distributedAggregationMemoryEfficient`.
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          description: Настройка аналогична `maxBytesBeforeExternalGroupBy`, за исключением
            того, что она применяется для операции сортировки (`ORDER BY`).
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          description: |-
            Определяет порог количества ключей, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `10000‬‬`).
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          description: |-
            Определяет порог количества байт в агрегате, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `100000000‬‬`).
          type: integer
          format: int64
        priority:
          description: |-
            Определяет приоритет запроса.

            - `0` — приоритет не используется.
            - `1` — наивысший приоритет.
            - и так далее. Чем больше число, тем ниже приоритет.

            Эта настройка выставляется для каждого запроса по отдельности.

            Если ClickHouse в текущий момент времени выполняет запросы с более высокими приоритетами, чем приоритет поступившего запроса, то выполнение такого запроса
            приостанавливается до завершения выполнения более приоритетных запросов.

            Минимальное значение и значение по умолчанию: `0`, приоритет не используется.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            Ограничивает максимальное количество потоков обработки запроса (без учёта потоков для чтения данных с удалённых серверов).

            Этот параметр относится к потокам, которые выполняют параллельно одни стадии конвейера выполнения запроса.

            Минимальное значение и значение по умолчанию: `0` (значение вычисляется автоматически — это количество процессорных ядер без учёта Hyper-Threading).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_threads).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запроса на одном сервере. Настройка не учитывает объём свободной
            памяти или общий объём памяти на машине.

            Ограничение действует на один запрос, в пределах одного сервера.

            Минимальное значение: `0`, нет ограничения. В конфигурационном файле по умолчанию ограничение равно `10737418240` (10 ГБ).

            Если вы также используете настройки `maxBytesBeforeExternalGroupBy` или `maxBytesBeforeExternalSort`, рекомендуется, чтобы их значения были в два
            раза меньше значения `maxMemoryUsage`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#settings_max_memory_usage).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запросов пользователя на одном сервере. Настройка не учитывает объём
            свободной памяти или общий объём памяти на машине.

            Ограничение действует на все запросы пользователя, которые выполняются одновременно в пределах одного сервера.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду) при выполнении одного запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду). Эта настройка влияет на все одновременно выполняющиеся запросы пользователя.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        forceIndexByDate:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по дате невозможно. Этот настройка действует только для таблиц
            семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по дате).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по первичному ключу невозможно. Этот настройка действует только
            для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по первичному ключу).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_primary_key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            Ограничивает максимальное количество строк, которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-rows-to-read).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            Ограничивает максимальное количество уникальных ключей, получаемых в процессе агрегации. Эта настройка позволяет ограничить потребление оперативной памяти
            при агрегации.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            Ограничивает максимальное количество строк для сортировки. Эта настройка позволяет ограничить потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы до сортировки. Эта настройка позволяет ограничить
            потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            Ограничивает количество строк результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            Ограничивает количество байт результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            Ограничивает максимальное количество различных строк при использовании `DISTINCT`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), занимаемых хэш-таблицей, при использовании `DISTINCT`.

            Минимальное значение — 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            Ограничивает максимальное количество строк, которое можно передать на удалённый сервер или сохранить во временную таблицу при использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которых можно передать на удалённый сервер или сохранить во временную таблицу, при
            использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Ограничивает максимальное время выполнения запроса в миллисекундах. На данный момент это ограничение не проверяется при одной из стадий сортировки а также
            при слиянии и финализации агрегатных функций.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Ограничивает максимальное количество столбцов, которые можно читать из таблицы в одном запросе. Если запрос требует чтения большего количества столбцов —
            он будет завершен с ошибкой.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (с учетом
            постоянных столбцов)

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (без учета
            постоянных столбцов).

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            Ограничивает размер наибольшей части запроса (в байтах), которая может быть передана в оперативную память для разбора с помощью парсера SQL.

            Значение должно быть больше `0` (по умолчанию: `262144`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_query_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Ограничивает максимальную глубину вложенности синтаксического дерева.

            Для больших и сложных запросов может быть построено синтаксическое дерево очень большой глубины. При помощи этой настройки вы можете запретить выполнение
            излишне больших или неоптимальных запросов для больших таблиц.

            Например, запрос `SELECT *` в большинстве случаев породит более сложное и глубокое синтаксическое дерево, чем запрос `SELECT ... WHERE ...` с ограничениями
            и условиями. Наложение ограничения с помощью настройки может побудить пользователя оптимизировать излишне сложные запросы.

            Значение должно быть больше `0` (по умолчанию: `1000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-depth).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева).

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `50000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-elements).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева) после раскрытия псевдонимов и звездочки.

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `500000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            Значение должно быть больше 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: |-
            Включает или выключает парсер SQL, если потоковый парсер не может проанализировать данные.

            Используйте эту настройку, если значения, которые вы хотите вставить в таблицу, содержат в себе выражения SQL.

            Например, при вставке в таблицу значения, содержащего в себе выражение `now()`, потоковый парсер не сможет распознать это выражение; запрос `INSERT`
            завершится с ошибкой, и никакие данные не будут вставлены в таблицу. При включенном парсере SQL выражение будет распознано корректно и в качестве значения
            будет вставлен результат выполнения SQL-функции `now()` (текущая дата и время).

            Эта настройка действует только в том случае, если вы используете формат [Values](https://clickhouse.tech/docs/ru/interfaces/formats/#data-format-values)
            при вставке данных.

            Значение по умолчанию: `true` (парсер SQL включен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: |-
            Включает или выключает замену пропущенных полей значениями по умолчанию для типа данных столбца при вставке данных запросом `INSERT`.

            Значение по умолчанию: `true` (замена включена).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Определяет формат чисел в JSON-выводе.

            Если эта настройка включена, то при выводе в JSON 64-битные числа (`UInt64` и `Int64`) выводятся в кавычках (из соображений совместимости с большинством
            реализаций JavaScript). Иначе — без кавычек.

            Значение по умолчанию: `false` (вывод 64-битных целых чисел в кавычках выключен).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: |-
            Включает вывод специальных значений для чисел с плавающей запятой (`+nan`, `-nan`, `+inf` и `-inf`) при выводе в JSON.

            Значение по умолчанию: `false` (специальные значения не выводятся).
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          description: |-
            Определяет, использовать ли тип LowCardinality в Native-формате.

            - `true` (по умолчанию) — да, использовать.
            - `false`— конвертировать столбцы LowCardinality в обычные столбцы для запроса `SELECT`, и конвертировать обычные столбцы в требуемый LowCardinality-столбец для запроса `INSERT`.

            Столбцы этого типа, также известные как «разреженные столбцы», позволяют более эффективно хранить данные в виде хэш-таблиц. Если данные это позволяют,
            ClickHouse использует столбец типа LowCardinality.

            Если вы используете сторонний клиент для ClickHouse, который не умеет работать со столбцами типа LowCardinality, то такой клиент не сможет правильно
            интерпретировать результат запроса, если в запросе будет присутствовать столбец типа LowCardinality. Выключите эту настройку, чтобы включать в результат
            столбец в обычном формате и позволить сторонним клиентам обработать результат.

            Официальный клиент ClickHouse умеет работать со столбцами типа LowCardinality.

            Значение по умолчанию: `true` (столбцы LowCardinality используются в Native-формате).
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          description: |-
            Позволяет возвращать пустой результат при выполнении агрегации данных без ключей (без `GROUP BY`) для пустого множества (например, `SELECT count(*) FROM
            table WHERE 0`).

            - `true`— ClickHouse вернет пустой результат.
            - `false` (по умолчанию) — ClickHouse вернет результат, состоящий из одной строки со значениями `NULL` для агрегатных функций, в соответствии со стандартом SQL.
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: |-
            Время ожидания установления HTTP-соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1000`, 1 секунда).
          type: integer
          format: int64
        httpReceiveTimeout:
          description: |-
            Время ожидания приема данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        httpSendTimeout:
          description: |-
            Время ожидания отправки данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        enableHttpCompression:
          description: |-
            Включает или выключает сжатие данных в ответе на HTTP-запрос.

            По умолчанию ClickHouse хранит данные в сжатом виде. При выполнении запроса его результат представлен в несжатом виде. С помощью этой настройки вы можете
            указать ClickHouse сжимать результат запроса при отправке по HTTP.

            Чтобы ClickHouse сжал ответ при включенной настройке, добавьте в HTTP-запрос заголовок @b.

            ClickHouse поддерживает следующие методы сжатия: `gzip`, `br` и `deflate`.

            Значение по умолчанию: `false` (сжатие выключено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/interfaces/http/).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Включает отсылку уведомления о ходе выполнения с использованием HTTP-заголовков `X-ClickHouse-Progress`.

            Значение по умолчанию: `false` (отсылка уведомлений выключена).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: |-
            Задает минимальный интервал (в миллисекундах) между уведомлениями о ходе выполнения запроса с помощью HTTP-заголовка `X-ClickHouse-Progress`.

            Значение должно быть больше `0` (по умолчанию: `100`).
          type: integer
          format: int64
        addHttpCorsHeader:
          description: |-
            Включает заголовок CORS в HTTP-ответы.

            Значение по умолчанию: `false` (заголовок не включается в HTTP-ответы).
          type: boolean
          format: boolean
    UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode:
      description: |-
        Определяет поведение распределенных подзапросов.

        См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#distributed-product-mode).

         - DISTRIBUTED_PRODUCT_MODE_DENY: Значение по умолчанию. Запрещает использование этих типов подзапросов (возвращает исключение "Double-distributed in/JOIN subqueries is denied").
         - DISTRIBUTED_PRODUCT_MODE_LOCAL: Заменяет базу данных и таблицу в подзапросе локальными для конечного сервера (шарда), оставляя обычный IN / JOIN.
         - DISTRIBUTED_PRODUCT_MODE_GLOBAL: Заменяет IN/JOIN запрос на GLOBAL IN/GLOBAL JOIN.
         - DISTRIBUTED_PRODUCT_MODE_ALLOW: Позволяет использовать эти типы подзапросов.
      type: string
      enum:
      - DISTRIBUTED_PRODUCT_MODE_DENY
      - DISTRIBUTED_PRODUCT_MODE_LOCAL
      - DISTRIBUTED_PRODUCT_MODE_GLOBAL
      - DISTRIBUTED_PRODUCT_MODE_ALLOW
    UserSettingsOverflowMode_in_UserSettings_readOverflowMode:
      description: |-
        Определяет поведение ClickHouse в ситуации, когда количество прочитанных данных
        [превысило ограничения](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#restrictions-on-query-complexity).

        - `throw` — прервать выполнение запроса, вернуть ошибку.
        - `break` — прервать выполнение запроса, вернуть неполный результат.
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode:
      description: |-
        Определяет поведение ClickHouse в ситуации, когда количество уникальных ключей при агрегации
        [превысило ограничения](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#restrictions-on-query-complexity).

        - `throw` — прервать выполнение запроса, вернуть ошибку.
        - `break` — прервать выполнение запроса, вернуть неполный результат.
        - `any` — выполнить `GROUP BY` приближённо, продолжая агрегацию для ключей, которые попали в набор, без добавления новых ключей в набор.
      type: string
      enum:
      - GROUP_BY_OVERFLOW_MODE_THROW
      - GROUP_BY_OVERFLOW_MODE_BREAK
      - GROUP_BY_OVERFLOW_MODE_ANY
    UserSettingsOverflowMode_in_UserSettings_sortOverflowMode:
      description: |-
        Определяет поведение ClickHouse в ситуации, когда количество строк, полученных перед сортировкой,
        [превысило ограничения](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#restrictions-on-query-complexity).

        - `throw` — прервать выполнение запроса, вернуть ошибку.
        - `break` — прервать выполнение запроса, вернуть неполный результат.
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_resultOverflowMode:
      description: |-
        определяет поведение ClickHouse в ситуации, когда объём результата
        [превысил ограничения](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#restrictions-on-query-complexity).

        - `throw` — прервать выполнение запроса, вернуть ошибку.
        - `break` — прервать выполнение запроса, вернуть неполный результат.
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode:
      description: |-
        Определяет поведение ClickHouse в ситуации, когда количество данных при выполнении запроса `DISTINCT`
        [превысило ограничения](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#restrictions-on-query-complexity).

        - `throw` — прервать выполнение запроса, вернуть ошибку.
        - `break` — прервать выполнение запроса, вернуть неполный результат.
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_transferOverflowMode:
      description: |-
        Определяет поведение ClickHouse в ситуации, когда количество данных для передачи на другой сервер
        [превысило ограничения](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#restrictions-on-query-complexity).

        - `throw` — прервать выполнение запроса, вернуть ошибку.
        - `break` — прервать выполнение запроса, вернуть неполный результат.
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode:
      description: |-
        Определяет поведение ClickHouse в ситуации, когда запрос [превысил
        ограничения](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#restrictions-on-query-complexity) на время исполнения.

        - `throw` — прервать выполнение запроса, вернуть ошибку.
        - `break` — прервать выполнение запроса, вернуть неполный результат.
      type: string
      enum:
      - OVERFLOW_MODE_THROW
      - OVERFLOW_MODE_BREAK
    UserSettings_in_UserSpec_settings:
      description: |-
        Пользовательские настройки ClickHouse.
        Поддерживаемые параметры входят в число параметров, описанных в [документации ClickHouse](https://clickhouse.yandex/docs/ru/operations/settings/).
      type: object
      properties:
        readonly:
          description: |-
            Ограничивает разрешения для запросов, не относящихся к DDL. Чтобы ограничить разрешения для DDL-запросов, используйте настройку `allowDdl`.

            - `0` (по умолчанию) — нет ограничений.
            - `1`— разрешено выполнять только запросы на чтение данных.
            - `2` — разрешено выполнять запросы на чтение данных и изменение настроек.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_readonly).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        allowDdl:
          description: |-
            Определяет, разрешены ли DDL-запросы (например, `CREATE`, `ALTER`, `RENAME`, и т.д.).

            Значение по умолчанию: `true`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/permissions-for-queries/#settings_allow_ddl).
          type: boolean
          format: boolean
        insertQuorum:
          description: |-
            Включает или выключает кворумную запись в кластере ClickHouse. Если значение меньше `2`, то кворумная запись выключена, в противном случае она включена.

            Кворумная запись позволяет гарантировать, что за время, не большее чем `insertQuorumTimeout`, ClickHouse смог без ошибок записать данные в кворум из
            `insert_quorum` реплик. Все реплики в кворуме консистентны, т.е. содержат данные всех более ранних запросов `INSERT`. Использование кворума при записи
            позволяет гарантировать, что данные не потеряются при выходе из строя одной или нескольких реплик.

            При чтении данных, записанных с помощью кворумной записи, можно использовать настройку `selectSequentialConsistency`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-insert_quorum).

            Минимальное значение — 0.
          type: integer
          format: int64
        connectTimeout:
          description: |-
            Время ожидания соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `10000`, 10 секунд).

            Значение должно быть больше 0.
          type: integer
          format: int64
        receiveTimeout:
          description: |-
            Время ожидания приема данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        sendTimeout:
          description: |-
            Время ожидания отправки данных в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `300000`, 300 секунд, 5 минут).

            Значение должно быть больше 0.
          type: integer
          format: int64
        insertQuorumTimeout:
          description: |-
            Время ожидания кворумной записи в миллисекундах.

            Если кворумная запись включена, время ожидания прошло, а запись в `insertQuorum` реплик так не состоялась, то ClickHouse прервет выполнение
            `INSERT`-запроса и вернет ошибку. В этом случае клиент должен повторить запрос на запись того же блока на эту же или любую другую реплику.

            Минимальное значение: `1000`, одна секунда (по умолчанию: `60000`, одна минута).

            Минимальное значение — 1000.
          type: integer
          format: int64
        selectSequentialConsistency:
          description: |-
            Определяет поведение `SELECT`-запросов для реплицированных таблиц: если эта настройка включена, ClickHouse прервет выполнение запроса и вернет сообщение об
            ошибке в случае, если в реплике нет фрагментов данных, записанных с помощью кворумной записи. Фрагменты данных, записанные без использования кворумной
            записи, прочитаны не будут.

            Значение по умолчанию: `false` (последовательная консистентность выключена).
          type: boolean
          format: boolean
        maxReplicaDelayForDistributedQueries:
          description: |-
            Максимальная задержка реплики в миллисекундах. Если реплика отстает на значение больше установленного, она перестает использоваться и становится
            устаревшей.

            Минимальное значение: `1000`, 1 секунда (по умолчанию: `300000`, 300 секунд, 5 минут).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_replica_delay_for_distributed_queries).

            Минимальное значение — 1000.
          type: integer
          format: int64
        fallbackToStaleReplicasForDistributedQueries:
          description: |-
            Включает или выключает форсирование запроса в устаревшую реплику в случае, если актуальные данные недоступны. Если этот параметр включен, то из устаревших
            реплик таблицы ClickHouse выбирает наиболее актуальную. Используется при выполнении `SELECT` из распределенной таблицы, которая указывает на
            реплицированные таблицы.

            Значение по умолчанию: `true` (форсирование запроса включено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-fallback_to_stale_replicas_for_distributed_queries).
          type: boolean
          format: boolean
        replicationAlterPartitionsSync:
          description: |-
            Условия ожидания завершения асинхронных действий на репликах для запросов `ALTER`:

            - `0` — не ждать.
            - `1` — ждать выполнения только у себя (значение по умолчанию).
            - `2` — ждать всех.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/alter/#synchronicity-of-alter-queries).

            Допустимые значения — от 0 до 2 включительно.
          type: integer
          format: int64
        distributedProductMode:
          $ref: '#/components/schemas/UserSettingsDistributedProductMode_in_UserSettings_distributedProductMode'
        distributedAggregationMemoryEfficient:
          description: |-
            Включает или выключает режим экономии памяти при распределенной агрегации.

            При распределённой обработке запроса внешняя агрегация производится на удалённых серверах. Для того чтобы на сервере-инициаторе запроса использовалось
            немного оперативной памяти, нужно включить эту настройку.

            Значение по умолчанию: `false` (режим экономии памяти выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).
          type: boolean
          format: boolean
        distributedDdlTaskTimeout:
          description: Время ожидания выполнения DDL-запросов в миллисекундах.
          type: integer
          format: int64
        skipUnavailableShards:
          description: |-
            Включает или выключает тихий пропуск недоступных шардов.

            Шард считается недоступным, если все его реплики недоступны.

            Значение по умолчанию: `false` (тихий пропуск недоступных шардов выключен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-skip_unavailable_shards).
          type: boolean
          format: boolean
        compile:
          description: |-
            Включает или выключает компиляцию запросов. Если вы выполняете большое количество структурно идентичных запросов — включите эту настройку. При включенной
            компиляции такие запросы могут выполняться быстрее за счет использования скомпилированных частей запроса.

            Эта настройка используется совместно с `minCountToCompile`.

            Значение по умолчанию: `false` (компиляция выключена).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#compile).
          type: boolean
          format: boolean
        minCountToCompile:
          description: |-
            После какого количества структурно идентичных запросов начать компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции перед продолжением выполнения. Рекомендуется использовать
            это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда часть запроса будет скомпилирована, она сразу же будет использована
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#min-count-to-compile).

            Минимальное значение — 0.
          type: integer
          format: int64
        compileExpressions:
          description: |-
            Включает или выключает компиляцию выражений. Если вы выполняете большое количество запросов, в которых используются идентичные выражения — включите эту
            настройку. При включенной компиляции выражений такие запросы могут выполняться быстрее за счет использования скомпилированных выражений.

            Эта настройка используется совместно с `minCountToCompileExpression`.

            Значение по умолчанию: `false` (компиляция выражений выключена).
          type: boolean
          format: boolean
        minCountToCompileExpression:
          description: |-
            После какого количества идентичных выражений начать их компиляцию.

            Минимальное значение: `0` (по умолчанию: `3`).

            Для значения `0` компиляция выполняется синхронно: запрос ожидает окончания процесса компиляции выражения перед продолжением выполнения. Рекомендуется
            использовать это значение только в целях тестирования.

            Для всех других значений компиляция выполняется асинхронно, в отдельном потоке. Когда выражение будет скомпилировано, оно сразу же будет использовано
            ClickHouse для подходящих запросов (включая те, которые выполняются в данный момент).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBlockSize:
          description: |-
            Максимальный размер блока для чтения.

            Данные в ClickHouse обрабатываются по блокам (наборам кусочков столбцов). Внутренние циклы обработки для одного блока достаточно эффективны, но есть
            заметные издержки на каждый блок.

            Эта настройка — рекомендация, какой размер блока (в количестве строк) загружать из таблиц.

            Значение должно быть больше `0` (по умолчанию: `65536`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-max_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minInsertBlockSizeRows:
          description: |-
            Ограничивает минимальное количество строк в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `1048576`).

            Минимальное значение — 0.
          type: integer
          format: int64
        minInsertBlockSizeBytes:
          description: |-
            Ограничивает минимальное количество байтов в блоке, который может быть вставлен в таблицу запросом `INSERT`. Блоки меньшего размера склеиваются в блоки
            большего размера.

            Минимальное значение: `0`, склейка блоков выключена (по умолчанию: `‭268435456‬‬`, 256 МБ).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxInsertBlockSize:
          description: |-
            Позволяет формировать блоки указанного размера (в байтах) при вставке в таблицу. Эта настройка действует только в тех случаях, когда сервер сам формирует
            такие блоки.

            Значение должно быть больше `0` (по умолчанию: `1048576`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_insert_block_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        minBytesToUseDirectIo:
          description: |-
            минимальный объём данных в байтах, необходимый для прямого (небуферизованного) чтения (Direct I/O) на диск.

            По умолчанию ClickHouse читает данные не напрямую с диска, а полагается на файловую систему и её кэш. Такое чтение эффективно при небольших объемах данных.
            Если данные читаются в больших объемах, эффективнее читать с диска напрямую, минуя кэш файловой системы.

            Если общий объём хранения всех данных для чтения превышает заданное значение настройки, тогда ClickHouse читает данные с диска напрямую.

            Минимальное значение и значение по умолчанию: `0` (прямой ввод/вывод отключен).

            Минимальное значение — 0.
          type: integer
          format: int64
        useUncompressedCache:
          description: |-
            Определяет, использовать ли кэш разжатых блоков. Использование кэша несжатых блоков может существенно сократить задержку и увеличить пропускную способность
            при работе с большим количеством коротких запросов. Включите эту настройку для пользователей, от которых идут частые короткие запросы.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (кэш не используется).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#setting-use_uncompressed_cache).
          type: boolean
          format: boolean
        mergeTreeMaxRowsToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в строках для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `128x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMaxBytesToUseCache:
          description: |-
            Ограничивает максимальный размер запроса в байтах для использования кэша несжатых данных. Кэш не используется для запросов, превышающих указанный размер.

            Эта настройка используется совместно с `useUncompressedCache`.

            Значение должно быть больше `0` (по умолчанию: `192x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinRowsForConcurrentRead:
          description: |-
            Ограничивает минимальное количество строк, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество строк, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `20x8192`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        mergeTreeMinBytesForConcurrentRead:
          description: |-
            Ограничивает минимальное количество байт, которое надо прочитать из файла, чтобы использовать одновременное чтение. Если количество байт, прочитанных из
            файла, превышает заданное значение, то ClickHouse пытается выполнить одновременное чтение из этого файла в несколько потоков.

            Этот настройка действует только для таблиц семейства MergeTree.

            Значение должно быть больше `0` (по умолчанию: `24x10x1024x1024`).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxBytesBeforeExternalGroupBy:
          description: |-
            задает порог потребления оперативной памяти (в байтах), по достижению которого временные данные, накопленные при выполнении операции агрегации `GROUP BY`,
            сбрасываются на диск для экономии оперативной памяти.

            По умолчанию агрегирование выполняется в памяти с помощью хэш-таблицы. Запрос может привести к необходимости агрегации больших объемов данных, которые
            могут не поместиться в оперативную память и вызвать ошибку при выполнении запроса (см. настройку `maxMemoryUsage`). Для таких запросов используйте эту
            настройку, чтобы ClickHouse сбрасывал данные на диск и успешно выполнял агрегацию.

            Минимальное значение и значение по умолчанию: `0`, `GROUP BY` во внешней памяти отключен.

            При использовании агрегации во внешней памяти рекомендуется задать значение этой настройки в два раза меньше значения настройки `maxMemoryUsage` (по
            умолчанию максимальное использование памяти ограничено десятью гигабайтами).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/sql-reference/statements/select/group-by/#select-group-by-in-external-memory).

            Смотрите также настройку `distributedAggregationMemoryEfficient`.
          type: integer
          format: int64
        maxBytesBeforeExternalSort:
          description: Настройка аналогична `maxBytesBeforeExternalGroupBy`, за исключением
            того, что она применяется для операции сортировки (`ORDER BY`).
          type: integer
          format: int64
        groupByTwoLevelThreshold:
          description: |-
            Определяет порог количества ключей, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `10000‬‬`).
          type: integer
          format: int64
        groupByTwoLevelThresholdBytes:
          description: |-
            Определяет порог количества байт в агрегате, при достижении которого начинается двухуровневая агрегация.

            Минимальное значение: `0`, порог не установлен (по умолчанию: `100000000‬‬`).
          type: integer
          format: int64
        priority:
          description: |-
            Определяет приоритет запроса.

            - `0` — приоритет не используется.
            - `1` — наивысший приоритет.
            - и так далее. Чем больше число, тем ниже приоритет.

            Эта настройка выставляется для каждого запроса по отдельности.

            Если ClickHouse в текущий момент времени выполняет запросы с более высокими приоритетами, чем приоритет поступившего запроса, то выполнение такого запроса
            приостанавливается до завершения выполнения более приоритетных запросов.

            Минимальное значение и значение по умолчанию: `0`, приоритет не используется.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxThreads:
          description: |-
            Ограничивает максимальное количество потоков обработки запроса (без учёта потоков для чтения данных с удалённых серверов).

            Этот параметр относится к потокам, которые выполняют параллельно одни стадии конвейера выполнения запроса.

            Минимальное значение и значение по умолчанию: `0` (значение вычисляется автоматически — это количество процессорных ядер без учёта Hyper-Threading).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_threads).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxMemoryUsage:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запроса на одном сервере. Настройка не учитывает объём свободной
            памяти или общий объём памяти на машине.

            Ограничение действует на один запрос, в пределах одного сервера.

            Минимальное значение: `0`, нет ограничения. В конфигурационном файле по умолчанию ограничение равно `10737418240` (10 ГБ).

            Если вы также используете настройки `maxBytesBeforeExternalGroupBy` или `maxBytesBeforeExternalSort`, рекомендуется, чтобы их значения были в два
            раза меньше значения `maxMemoryUsage`.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#settings_max_memory_usage).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxMemoryUsageForUser:
          description: |-
            Ограничивает максимально возможный объём оперативной памяти (в байтах) для выполнения запросов пользователя на одном сервере. Настройка не учитывает объём
            свободной памяти или общий объём памяти на машине.

            Ограничение действует на все запросы пользователя, которые выполняются одновременно в пределах одного сервера.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxNetworkBandwidth:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду) при выполнении одного запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        maxNetworkBandwidthForUser:
          description: |-
            Ограничивает скорость обмена данными по сети (байт в секунду). Эта настройка влияет на все одновременно выполняющиеся запросы пользователя.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.
          type: integer
          format: int64
        forceIndexByDate:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по дате невозможно. Этот настройка действует только для таблиц
            семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по дате).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_index_by_date).
          type: boolean
          format: boolean
        forcePrimaryKey:
          description: |-
            Если эта настройка включена, то запрос не выполняется при условии, что использовать индекс по первичному ключу невозможно. Этот настройка действует только
            для таблиц семейства MergeTree.

            Значение по умолчанию: `false` (настройка отключена, запрос выполняется, даже если ClickHouse не может использовать индекс по первичному ключу).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-force_primary_key).
          type: boolean
          format: boolean
        maxRowsToRead:
          description: |-
            Ограничивает максимальное количество строк, которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-rows-to-read).

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToRead:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы при выполнении запроса.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        readOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_readOverflowMode'
        maxRowsToGroupBy:
          description: |-
            Ограничивает максимальное количество уникальных ключей, получаемых в процессе агрегации. Эта настройка позволяет ограничить потребление оперативной памяти
            при агрегации.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        groupByOverflowMode:
          $ref: '#/components/schemas/UserSettingsGroupByOverflowMode_in_UserSettings_groupByOverflowMode'
        maxRowsToSort:
          description: |-
            Ограничивает максимальное количество строк для сортировки. Эта настройка позволяет ограничить потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToSort:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которое можно прочитать из таблицы до сортировки. Эта настройка позволяет ограничить
            потребление оперативной памяти при сортировке.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        sortOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_sortOverflowMode'
        maxResultRows:
          description: |-
            Ограничивает количество строк результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxResultBytes:
          description: |-
            Ограничивает количество байт результата. Это ограничение также проверяется для подзапросов и частей распределенных запросов, выполняемых на удаленных
            серверах.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        resultOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_resultOverflowMode'
        maxRowsInDistinct:
          description: |-
            Ограничивает максимальное количество различных строк при использовании `DISTINCT`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesInDistinct:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), занимаемых хэш-таблицей, при использовании `DISTINCT`.

            Минимальное значение — 0.
          type: integer
          format: int64
        distinctOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_distinctOverflowMode'
        maxRowsToTransfer:
          description: |-
            Ограничивает максимальное количество строк, которое можно передать на удалённый сервер или сохранить во временную таблицу при использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxBytesToTransfer:
          description: |-
            Ограничивает максимальное количество байт (несжатых данных), которых можно передать на удалённый сервер или сохранить во временную таблицу, при
            использовании `GLOBAL IN`.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        transferOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_transferOverflowMode'
        maxExecutionTime:
          description: |-
            Ограничивает максимальное время выполнения запроса в миллисекундах. На данный момент это ограничение не проверяется при одной из стадий сортировки а также
            при слиянии и финализации агрегатных функций.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        timeoutOverflowMode:
          $ref: '#/components/schemas/UserSettingsOverflowMode_in_UserSettings_timeoutOverflowMode'
        maxColumnsToRead:
          description: |-
            Ограничивает максимальное количество столбцов, которые можно читать из таблицы в одном запросе. Если запрос требует чтения большего количества столбцов —
            он будет завершен с ошибкой.

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (с учетом
            постоянных столбцов)

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxTemporaryNonConstColumns:
          description: |-
            Ограничивает максимальное количество временных столбцов, которое должно храниться в оперативной памяти одновременно при выполнении запроса (без учета
            постоянных столбцов).

            Минимальное значение и значение по умолчанию: `0`, нет ограничения.

            Минимальное значение — 0.
          type: integer
          format: int64
        maxQuerySize:
          description: |-
            Ограничивает размер наибольшей части запроса (в байтах), которая может быть передана в оперативную память для разбора с помощью парсера SQL.

            Значение должно быть больше `0` (по умолчанию: `262144`).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-max_query_size).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstDepth:
          description: |-
            Ограничивает максимальную глубину вложенности синтаксического дерева.

            Для больших и сложных запросов может быть построено синтаксическое дерево очень большой глубины. При помощи этой настройки вы можете запретить выполнение
            излишне больших или неоптимальных запросов для больших таблиц.

            Например, запрос `SELECT *` в большинстве случаев породит более сложное и глубокое синтаксическое дерево, чем запрос `SELECT ... WHERE ...` с ограничениями
            и условиями. Наложение ограничения с помощью настройки может побудить пользователя оптимизировать излишне сложные запросы.

            Значение должно быть больше `0` (по умолчанию: `1000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-depth).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева).

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `50000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/query-complexity/#max-ast-elements).

            Значение должно быть больше 0.
          type: integer
          format: int64
        maxExpandedAstElements:
          description: |-
            Ограничивает максимальное количество элементов синтаксического дерева запроса (количество узлов дерева) после раскрытия псевдонимов и звездочки.

            Для больших и сложных запросов может быть построено синтаксическое дерево c очень большим количеством элементов. При помощи этой настройки вы можете
            запретить выполнение излишне больших или неоптимальных запросов для больших таблиц.

            Значение должно быть больше `0` (по умолчанию: `500000`). Слишком маленькое значение может привести к невозможности выполнения большинства запросов.

            Значение должно быть больше 0.
          type: integer
          format: int64
        inputFormatValuesInterpretExpressions:
          description: |-
            Включает или выключает парсер SQL, если потоковый парсер не может проанализировать данные.

            Используйте эту настройку, если значения, которые вы хотите вставить в таблицу, содержат в себе выражения SQL.

            Например, при вставке в таблицу значения, содержащего в себе выражение `now()`, потоковый парсер не сможет распознать это выражение; запрос `INSERT`
            завершится с ошибкой, и никакие данные не будут вставлены в таблицу. При включенном парсере SQL выражение будет распознано корректно и в качестве значения
            будет вставлен результат выполнения SQL-функции `now()` (текущая дата и время).

            Эта настройка действует только в том случае, если вы используете формат [Values](https://clickhouse.tech/docs/ru/interfaces/formats/#data-format-values)
            при вставке данных.

            Значение по умолчанию: `true` (парсер SQL включен).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/operations/settings/settings/#settings-input_format_values_interpret_expressions).
          type: boolean
          format: boolean
        inputFormatDefaultsForOmittedFields:
          description: |-
            Включает или выключает замену пропущенных полей значениями по умолчанию для типа данных столбца при вставке данных запросом `INSERT`.

            Значение по умолчанию: `true` (замена включена).
          type: boolean
          format: boolean
        outputFormatJsonQuote_64BitIntegers:
          description: |-
            Определяет формат чисел в JSON-выводе.

            Если эта настройка включена, то при выводе в JSON 64-битные числа (`UInt64` и `Int64`) выводятся в кавычках (из соображений совместимости с большинством
            реализаций JavaScript). Иначе — без кавычек.

            Значение по умолчанию: `false` (вывод 64-битных целых чисел в кавычках выключен).
          type: boolean
          format: boolean
        outputFormatJsonQuoteDenormals:
          description: |-
            Включает вывод специальных значений для чисел с плавающей запятой (`+nan`, `-nan`, `+inf` и `-inf`) при выводе в JSON.

            Значение по умолчанию: `false` (специальные значения не выводятся).
          type: boolean
          format: boolean
        lowCardinalityAllowInNativeFormat:
          description: |-
            Определяет, использовать ли тип LowCardinality в Native-формате.

            - `true` (по умолчанию) — да, использовать.
            - `false`— конвертировать столбцы LowCardinality в обычные столбцы для запроса `SELECT`, и конвертировать обычные столбцы в требуемый LowCardinality-столбец для запроса `INSERT`.

            Столбцы этого типа, также известные как «разреженные столбцы», позволяют более эффективно хранить данные в виде хэш-таблиц. Если данные это позволяют,
            ClickHouse использует столбец типа LowCardinality.

            Если вы используете сторонний клиент для ClickHouse, который не умеет работать со столбцами типа LowCardinality, то такой клиент не сможет правильно
            интерпретировать результат запроса, если в запросе будет присутствовать столбец типа LowCardinality. Выключите эту настройку, чтобы включать в результат
            столбец в обычном формате и позволить сторонним клиентам обработать результат.

            Официальный клиент ClickHouse умеет работать со столбцами типа LowCardinality.

            Значение по умолчанию: `true` (столбцы LowCardinality используются в Native-формате).
          type: boolean
          format: boolean
        emptyResultForAggregationByEmptySet:
          description: |-
            Позволяет возвращать пустой результат при выполнении агрегации данных без ключей (без `GROUP BY`) для пустого множества (например, `SELECT count(*) FROM
            table WHERE 0`).

            - `true`— ClickHouse вернет пустой результат.
            - `false` (по умолчанию) — ClickHouse вернет результат, состоящий из одной строки со значениями `NULL` для агрегатных функций, в соответствии со стандартом SQL.
          type: boolean
          format: boolean
        httpConnectionTimeout:
          description: |-
            Время ожидания установления HTTP-соединения в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1000`, 1 секунда).
          type: integer
          format: int64
        httpReceiveTimeout:
          description: |-
            Время ожидания приема данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        httpSendTimeout:
          description: |-
            Время ожидания отправки данных через HTTP-соединение в миллисекундах.

            Значение должно быть больше `0` (по умолчанию: `1800000`, 1800 секунд, 30 минут).
          type: integer
          format: int64
        enableHttpCompression:
          description: |-
            Включает или выключает сжатие данных в ответе на HTTP-запрос.

            По умолчанию ClickHouse хранит данные в сжатом виде. При выполнении запроса его результат представлен в несжатом виде. С помощью этой настройки вы можете
            указать ClickHouse сжимать результат запроса при отправке по HTTP.

            Чтобы ClickHouse сжал ответ при включенной настройке, добавьте в HTTP-запрос заголовок @b.

            ClickHouse поддерживает следующие методы сжатия: `gzip`, `br` и `deflate`.

            Значение по умолчанию: `false` (сжатие выключено).

            См. подробное описание в [документации ClickHouse](https://clickhouse.tech/docs/ru/interfaces/http/).
          type: boolean
          format: boolean
        sendProgressInHttpHeaders:
          description: |-
            Включает отсылку уведомления о ходе выполнения с использованием HTTP-заголовков `X-ClickHouse-Progress`.

            Значение по умолчанию: `false` (отсылка уведомлений выключена).
          type: boolean
          format: boolean
        httpHeadersProgressInterval:
          description: |-
            Задает минимальный интервал (в миллисекундах) между уведомлениями о ходе выполнения запроса с помощью HTTP-заголовка `X-ClickHouse-Progress`.

            Значение должно быть больше `0` (по умолчанию: `100`).
          type: integer
          format: int64
        addHttpCorsHeader:
          description: |-
            Включает заголовок CORS в HTTP-ответы.

            Значение по умолчанию: `false` (заголовок не включается в HTTP-ответы).
          type: boolean
          format: boolean
tags:
- name: Backup
  description: Набор методов для управления резервными копиями для ClickHouse.
- name: Cluster
  description: Набор методов для управления кластерами ClickHouse.
- name: Database
  description: Набор методов для управления ресурсами Database для ClickHouse.
- name: MlModel
  description: Набор методов управления моделями машинного обучения.
- name: ResourcePreset
  description: Набор методов для управления ресурсами ResourcePreset.
- name: User
  description: Набор методов для управления ресурсами User для ClickHouse.
- name: Versions
  description: Набор методов для управления версиями ClickHouse.
