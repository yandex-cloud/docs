openapi: "3.0"
info:
  title: Yandex KMS API
  description: Методы справочника API сгруппированы по ресурсам. Чтобы выполнить операцию
    над ресурсом, отправьте HTTP-запрос к соответствующему URL. Подробнее об архитектуре
    API Яндекс.Облака, см. [Концепции API Яндекс.Облака](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://kms.api.cloud.yandex.net
paths:
  /kms/v1/keys/{keyId}:encrypt:
    post:
      tags:
      - SymmetricCrypto
      summary: Шифрует заданный текст с помощью указанного ключа.
      operationId: SymmetricCryptoEncrypt
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор симметричного ключа KMS, который следует использовать для шифрования.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymmetricEncryptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricEncryptResponse'
      x-y-navtitle: encrypt
  /kms/v1/keys/{keyId}:decrypt:
    post:
      tags:
      - SymmetricCrypto
      summary: Расшифровывает указанный шифртекст с помощью указанного ключа.
      operationId: SymmetricCryptoDecrypt
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор симметричного ключа KMS, который следует использовать для
          дешифрования.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymmetricDecryptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricDecryptResponse'
      x-y-navtitle: decrypt
  /kms/v1/keys/{keyId}:reEncrypt:
    post:
      tags:
      - SymmetricCrypto
      summary: Заново шифрует заданный зашифрованный текст с указанным ключом KMS.
      operationId: SymmetricCryptoReEncrypt
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор нового ключа, который следует использовать для шифрования.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymmetricReEncryptRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricReEncryptResponse'
      x-y-navtitle: reEncrypt
  /kms/v1/keys/{keyId}:generateDataKey:
    post:
      tags:
      - SymmetricCrypto
      summary: |-
        Создает новый симметричный ключ шифрования данных (не ключ KMS) и возвращает
        сгенерированный ключ в виде открытого текста и текста, зашифрованного указанным
        симметричным ключом KMS.
      operationId: SymmetricCryptoGenerateDataKey
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор симметричного ключа KMS, с помощью которого должен быть зашифрован
          сгенерированный ключ шифрования данных.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateDataKeyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateDataKeyResponse'
      x-y-navtitle: generateDataKey
  /kms/v1/keys:
    get:
      tags:
      - SymmetricKey
      summary: Возвращает список симметричных ключей KMS в указанном каталоге.
      operationId: SymmetricKeyList
      parameters:
      - name: folderId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор каталога для получения списка симметричных ключей KMS.

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем [pageSize](/docs/kms/api-ref/SymmetricKey/list#query_params) , сервис вернет значение [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses),
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/kms/api-ref/SymmetricKey/list#query_params) равным значению поля
          [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSymmetricKeysResponse'
      x-y-navtitle: list
    post:
      tags:
      - SymmetricKey
      summary: Создает симметричный ключ KMS в указанном каталоге.
      operationId: SymmetricKeyCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSymmetricKeyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}:
    get:
      tags:
      - SymmetricKey
      summary: Возвращает указанный симметричный ключ KMS.
      description: |-
        Чтобы получить список доступных симметричных ключей KMS, используйте запрос
        [list](/docs/kms/api-ref/SymmetricKey/list).
      operationId: SymmetricKeyGet
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемого симметричного ключа KMS. Чтобы получить идентификатор
          симметричного ключа используйте запрос [list](/docs/kms/api-ref/SymmetricKey/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymmetricKey'
      x-y-navtitle: get
    delete:
      tags:
      - SymmetricKey
      summary: |-
        Удаляет указанный симметричный ключ KMS. Это действие также автоматически планирует
        уничтожение всех версий ключа через 72 часа.
      description: |-
        Ключ и его версии отсутствуют в ответах на запросы [get](/docs/kms/api-ref/SymmetricKey/get) и [list](/docs/kms/api-ref/SymmetricKey/list), но
        могут быть восстановлены в течение 72 часов запросом в техподдержку.
      operationId: SymmetricKeyDelete
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ключа, который следует удалить.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
    patch:
      tags:
      - SymmetricKey
      summary: Изменяет указанный симметричный ключ KMS.
      operationId: SymmetricKeyUpdate
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор симметричного ключа KMS, который следует изменить. Чтобы получить
          идентификатор симметричного ключа используйте запрос [list](/docs/kms/api-ref/SymmetricKey/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSymmetricKeyRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}/versions:
    get:
      tags:
      - SymmetricKey
      summary: Возвращает список версий указанного симметричного ключа KMS.
      operationId: SymmetricKeyListVersions
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор симметричного ключа KMS, для которого нужно вернуть список версий.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем [pageSize](/docs/kms/api-ref/SymmetricKey/listVersions#query_params) , сервис вернет значение [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses),
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/kms/api-ref/SymmetricKey/listVersions#query_params) равным значению поля
          [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSymmetricKeyVersionsResponse'
      x-y-navtitle: listVersions
  /kms/v1/keys/{keyId}:setPrimaryVersion:
    post:
      tags:
      - SymmetricKey
      summary: |-
        Задает основную версию для указанного ключа. Основная версия используется по
        умолчанию для всех операций шифрования / дешифрования, в которых не указан
        идентификатор версии.
      operationId: SymmetricKeySetPrimaryVersion
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ключа, для которого нужно установить основную версию.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPrimarySymmetricKeyVersionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setPrimaryVersion
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetPrimarySymmetricKeyVersionMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}:scheduleVersionDestruction:
    post:
      tags:
      - SymmetricKey
      summary: Планирует уничтожение указанной версии ключа.
      description: |-
        Запланированное уничтожение может быть отменено с помощью метода
        [cancelVersionDestruction](/docs/kms/api-ref/SymmetricKey/cancelVersionDestruction).
      operationId: SymmetricKeyScheduleVersionDestruction
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ключа, для которого следует запланировать уничтожение версии.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleSymmetricKeyVersionDestructionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: scheduleVersionDestruction
      x-y-operation-metadata:
        $ref: '#/components/schemas/ScheduleSymmetricKeyVersionDestructionMetadata'
      x-y-operation-response: '`SymmetricKeyVersion`'
  /kms/v1/keys/{keyId}:cancelVersionDestruction:
    post:
      tags:
      - SymmetricKey
      summary: |-
        Отменяет ранее запланированное уничтожение версии, если версия еще не была
        уничтожена.
      operationId: SymmetricKeyCancelVersionDestruction
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ключа, для которого следует отменить уничтожение версии.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSymmetricKeyVersionDestructionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: cancelVersionDestruction
      x-y-operation-metadata:
        $ref: '#/components/schemas/CancelSymmetricKeyVersionDestructionMetadata'
      x-y-operation-response: '`SymmetricKeyVersion`'
  /kms/v1/keys/{keyId}:rotate:
    post:
      tags:
      - SymmetricKey
      summary: |-
        Ротирует указанный ключ: создает новую версию ключа и делает ее основной. Старая
        версия остается доступной для расшифровки зашифрованных с ее помощью данных.
      operationId: SymmetricKeyRotate
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ключа, который следует ротировать.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: rotate
      x-y-operation-metadata:
        $ref: '#/components/schemas/RotateSymmetricKeyMetadata'
      x-y-operation-response: '[SymmetricKey](/docs/kms/api-ref/SymmetricKey#representation)'
  /kms/v1/keys/{keyId}/operations:
    get:
      tags:
      - SymmetricKey
      summary: Возвращет список операций для указанного симметричного ключа KMS.
      operationId: SymmetricKeyListOperations
      parameters:
      - name: keyId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор симметричного ключа KMS, для которого нужно вернуть список операций.

          Чтобы получить идентификатор ключа, используйте запрос [list](/docs/kms/api-ref/SymmetricKey/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное число возвращаемых результатов на странице. Если количество
          результатов больше чем [pageSize](/docs/kms/api-ref/SymmetricKey/listOperations#query_params) , сервис вернет значение [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses),
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/kms/api-ref/SymmetricKey/listOperations#query_params) равным значению поля
          [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSymmetricKeyOperationsResponse'
      x-y-navtitle: listOperations
  /kms/v1/keys/{resourceId}:listAccessBindings:
    get:
      tags:
      - SymmetricKey
      summary: Возвращает список привязок прав доступа для указанного симметричного
        ключа KMS.
      operationId: SymmetricKeyListAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого запрашивается список привязок прав доступа.

          Чтобы получить идентификатор ресурса, используйте соответствующий запрос List.
          Например, используйте запрос [list](/docs/resource-manager/api-ref/Cloud/list) для получения
          идентификатора ресурса Cloud.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное число возвращаемых результатов на странице. Если количество
          результатов больше чем pageSize , сервис вернет значение nextPageToken,
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение pageToken равным значению поля
          nextPageToken прошлого запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessBindingsResponse'
      x-y-navtitle: listAccessBindings
  /kms/v1/keys/{resourceId}:setAccessBindings:
    post:
      tags:
      - SymmetricKey
      summary: Устанавливает привязки прав доступа для указанного симметричного ключа
        KMS.
      operationId: SymmetricKeySetAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого задается список привязок прав доступа.

          Чтобы получить идентификатор ресурса, используйте соответствующий запрос List.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: setAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/SetAccessBindingsMetadata'
      x-y-operation-response: Empty
  /kms/v1/keys/{resourceId}:updateAccessBindings:
    post:
      tags:
      - SymmetricKey
      summary: Обновляет привязки прав доступа для указанного симметричного ключа
        KMS.
      operationId: SymmetricKeyUpdateAccessBindings
      parameters:
      - name: resourceId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор ресурса, для которого обновляется список привязок прав доступа.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessBindingsRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: updateAccessBindings
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateAccessBindingsMetadata'
      x-y-operation-response: Empty
components:
  schemas:
    AccessBinding:
      type: object
      properties:
        roleId:
          description: |-
            Обязательное поле.
            Идентификатор ресурса [Role](/docs/iam/api-ref/Role#representation) который назначен для субъекта, указанного в
            параметре `subject`.

            Максимальная длина строки в символах — 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    AccessBindingAction:
      description: |2-
         - ADD: Добавление новой привязки прав доступа.
         - REMOVE: Удаление привязки прав доступа.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBindingDelta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/AccessBindingAction_in_AccessBindingDelta_action'
        accessBinding:
          $ref: '#/components/schemas/AccessBinding_in_AccessBindingDelta_accessBinding'
    CancelSymmetricKeyVersionDestructionMetadata:
      type: object
      properties:
        keyId:
          description: Идентификатор ключа, уничтожение версии которого отменяется.
          type: string
        versionId:
          description: Идентификатор версии, запланированное уничтожение которой отменяется.
          type: string
    CancelSymmetricKeyVersionDestructionRequest:
      type: object
      properties:
        versionId:
          description: |-
            Обязательное поле.
            Идентификатор версии, запланированное уничтожение которой должно быть отменено.

            Максимальная длина строки в символах — 50.
          type: string
    CreateSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: Идентификатор создаваемого ключа.
          type: string
        primaryVersionId:
          description: Идентификатор основной версии создаваемого ключа.
          type: string
    CreateSymmetricKeyRequest:
      type: object
      properties:
        folderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в котором создается симметричный ключ KMS.

            Максимальная длина строки в символах — 50.
          type: string
        name:
          description: |-
            Имя симметричного ключа.

            Максимальная длина строки в символах — 100.
          type: string
        description:
          description: |-
            Описание симметричного ключа.

            Максимальная длина строки в символах — 1024.
          type: string
        labels:
          description: |-
            Пользовательские метки для ключа в виде пар `key:value`. Максимум 64 на ключ. Например, @b ""
            project": "mvp"` или @b "" source": "dictionary"`.

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        defaultAlgorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_CreateSymmetricKeyRequest_defaultAlgorithm'
        rotationPeriod:
          description: |-
            Интервал между автоматическими ротациями. Чтобы отключить автоматическую ротацию,
            не включайте это поле в запрос на создание.
          type: string
        deletionProtection:
          description: Флаг, запрещающий удаление симметричного ключа
          type: boolean
          format: boolean
    DeleteSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: Идентификатор удаляемого ключа.
          type: string
    Empty:
      description: Пустой JSON объект `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    GenerateDataKeyRequest:
      type: object
      properties:
        versionId:
          description: |-
            Идентификатор версии ключа, с которой следует зашифровать сгенерированный ключ
            шифрования данных. По умолчанию используется основная версия, если версия не
            указана явно.

            Максимальная длина строки в символах — 50.
          type: string
        aadContext:
          description: |-
            Дополнительные аутентифицированные данные (контекст AAD), необязательное поле. Если
            данные указаны, то их потребуется передать для расшифровки с помощью `SymmetricDecryptRequest`.
            Необходимо закодировать в формате base64.

            Максимальная длина строки в символах — 8192.
          type: string
          format: byte
        dataKeySpec:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_GenerateDataKeyRequest_dataKeySpec'
        skipPlaintext:
          description: |-
            Если `true`, метод не возвращает ключ щифрования данных в виде открытого текста.
            Значение по умолчанию `false`.
          type: boolean
          format: boolean
    GenerateDataKeyResponse:
      type: object
      properties:
        keyId:
          description: |-
            Идентификатор симметричного ключа KMS, с помощью которого был зашифрован
            сгенерированный ключ шифрования данных.
          type: string
        versionId:
          description: Идентификатор версии ключа, которая использовалась для шифрования.
          type: string
        dataKeyPlaintext:
          description: |-
            Сгенерированный ключ шифрования данных в виде открытого текста. Это поле пусто, если
            параметр [skipPlaintext](/docs/kms/api-ref/SymmetricCrypto/generateDataKey#body_params) был установлен в `true`.
          type: string
          format: byte
        dataKeyCiphertext:
          description: Зашифрованный ключ шифрования данных.
          type: string
          format: byte
    ListAccessBindingsResponse:
      type: object
      properties:
        accessBindings:
          description: Список привязок прав доступа для указанного ресурса.
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем pageSize, используйте nextPageToken в качестве
            значения параметра pageToken в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения nextPageToken для перебора страниц
            результатов.
          type: string
    ListSymmetricKeyOperationsResponse:
      type: object
      properties:
        operations:
          description: Список операций для указанного ключа.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/kms/api-ref/SymmetricKey/listOperations#query_params), используйте [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses) в качестве
            значения параметра [pageToken](/docs/kms/api-ref/SymmetricKey/listOperations#query_params) в следующем запросе списка ресурсов.
            Все последующие запросы будут получать свои значения [nextPageToken](/docs/kms/api-ref/SymmetricKey/listOperations#responses) для перебора страниц
            результатов.
          type: string
    ListSymmetricKeyVersionsResponse:
      type: object
      properties:
        keyVersions:
          description: Список версий для указанного симметричного ключа KMS.
          type: array
          items:
            $ref: '#/components/schemas/SymmetricKeyVersion'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/kms/api-ref/SymmetricKey/listVersions#query_params), используйте [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses) в качестве
            значения параметра [pageToken](/docs/kms/api-ref/SymmetricKey/listVersions#query_params) в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения [nextPageToken](/docs/kms/api-ref/SymmetricKey/listVersions#responses) для перебора страниц
            результатов.
          type: string
    ListSymmetricKeysResponse:
      type: object
      properties:
        keys:
          description: Список симметричных ключей KMS в указанном каталоге.
          type: array
          items:
            $ref: '#/components/schemas/SymmetricKey'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/kms/api-ref/SymmetricKey/list#query_params), используйте [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses) в качестве
            значения параметра [pageToken](/docs/kms/api-ref/SymmetricKey/list#query_params) в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения [nextPageToken](/docs/kms/api-ref/SymmetricKey/list#responses) для перебора страниц
            результатов.
          type: string
    Operation:
      description: |-
        Ресурс Operation. Дополнительные сведения см. в разделе
        [Объект Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: Идентификатор операции.
            type: string
          description:
            description: |-
              Описание операции. Длина описания должна быть от 0 до 256
              символов.
            type: string
          createdAt:
            description: |-
              Время создания ресурса в формате в
              [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          createdBy:
            description: |-
              Идентификатор пользователя или сервисного
              аккаунта, инициировавшего операцию.
            type: string
          modifiedAt:
            description: |-
              Время, когда ресурс Operation последний раз
              обновлялся. Значение в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          done:
            description: |-
              Если значение равно `false` — операция еще
              выполняется. Если `true` — операция завершена, и задано значение
              одного из полей `error` или `response`.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Метаданные операции. Обычно в поле содержится
              идентификатор ресурса, над которым выполняется операция. Если
              метод возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `metadata`.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: Описание ошибки в случае сбоя или отмены операции.
          response:
            description: |-
              Результат операции в случае успешного завершения. Если
              исходный метод не возвращает никаких данных при успешном
              завершении, например метод Delete, поле содержит объект
              [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty). Если исходный метод — это стандартный метод Create
              / Update, поле содержит целевой ресурс операции. Если метод
              возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `response`.
            type: object
    RotateSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: Идентификатор ротируемого ключа.
          type: string
        newPrimaryVersionId:
          description: Идентификатор версии, сгенерированной в результате ротации
            ключа.
          type: string
    ScheduleSymmetricKeyVersionDestructionMetadata:
      type: object
      properties:
        keyId:
          description: Идентификатор ключа, версия которого планируется к уничтожению.
          type: string
        versionId:
          description: Идентификатор версии, которую планируется уничтожить.
          type: string
        destroyAt:
          description: |-
            Время, когда версия будет уничтожена.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
    ScheduleSymmetricKeyVersionDestructionRequest:
      type: object
      properties:
        versionId:
          description: |-
            Обязательное поле.
            Идентификатор версии, которую следует уничтожить.

            Максимальная длина строки в символах — 50.
          type: string
        pendingPeriod:
          description: |-
            Интервал времени между запросом на уничтожение версии и ее фактическим
            уничтожением. Значение по умолчанию: 7 дней.
          type: string
    SetAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: Идентификатор ресурса, для которого задается список привязок
            прав доступа.
          type: string
    SetAccessBindingsRequest:
      type: object
      properties:
        accessBindings:
          description: |-
            Обязательное поле.
            Привязки прав доступа, которые будут установлены. Дополнительные сведения см. в
            разделе [Привязка прав доступа](/docs/iam/concepts/access-control/#access-bindings).
          type: array
          items:
            $ref: '#/components/schemas/AccessBinding'
    SetPrimarySymmetricKeyVersionMetadata:
      type: object
      properties:
        keyId:
          description: Идентификатор ключа, для которого изменяется основная версия.
          type: string
        versionId:
          description: Идентификатор версии, которая становится основной для ключа.
          type: string
    SetPrimarySymmetricKeyVersionRequest:
      type: object
      properties:
        versionId:
          description: |-
            Обязательное поле.
            Идентификатор версии, которая должна стать основной для указанного ключа.

            Максимальная длина строки в символах — 50.
          type: string
    Subject:
      type: object
      properties:
        id:
          description: |-
            Обязательное поле.
            Идентификатор субъекта.

            Может иметь одно из значений:
            * `allAuthenticatedUsers`: Специальный системный идентификатор, представляющий любого пользователя, прошедшего аутентификацию. Его можно использовать только если в параметре `type` указано `system`.
            * `allUsers`: Специальный системный идентификатор, представляющий любого пользователя. Аутентификация не требуется. Например, при запросе через API не надо будет указывать IAM-токен.
            * `<идентификатор пользователя в облаке>`: Идентификатор, представляющий учетную запись пользователя. Его можно использовать только если в параметре `type` передано одно из следующих значений: `userAccount`, `federatedUser` или `serviceAccount`.

            Максимальная длина строки в символах — 50.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип субъекта.

            Может иметь одно из значений:
            * `userAccount` — аккаунт на Яндексе или Яндекс.Коннекте, добавленный в {{ yandex-cloud }}.
            * `serviceAccount` — сервисный аккаунт. Этот тип представляет ресурс [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation).
            * `federatedUser` — федеративный аккаунт. Этот тип представляет пользователя из федерации удостоверений, например Active Directory.
            * `system` — системная группа. Представляет набор аккаунтов, который описывается общим системным идентификатором.

            Дополнительные сведения см. в разделе [Субъект, которому назначается роль](/docs/iam/concepts/access-control/#subject).

            Максимальная длина строки в символах — 100.
          type: string
    SymmetricAlgorithm:
      description: |-
        Поддерживаемые алгоритмы симметричного шифрования.

         - AES_128: Алгоритм AES со 128-битными ключами.
         - AES_192: Алгоритм AES с 192-битными ключами.
         - AES_256: Алгоритм AES с 256-битными ключами.
         - AES_256_HSM: Алгоритм AES с 256-битными ключами на базе HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricDecryptRequest:
      type: object
      properties:
        aadContext:
          description: |-
            Дополнительные аутентификационные данные (AAD-контекст), должны быть такими же, как
            они были переданы в соответствующем запросе `SymmetricEncryptRequest`. Должен быть в кодировке
            base64.

            Максимальная длина строки в символах — 8192.
          type: string
          format: byte
        ciphertext:
          description: |-
            Обязательное поле.
            Шифртекст для расшифровки. Должен быть в кодировке base64.
          type: string
          format: byte
    SymmetricDecryptResponse:
      type: object
      properties:
        keyId:
          description: Идентификатор симметричного ключа KMS, который использовался
            для дешифрования.
          type: string
        versionId:
          description: Идентификатор версии ключа, которая использовалась для дешифрования.
          type: string
        plaintext:
          description: Расшифрованный открытый текст.
          type: string
          format: byte
    SymmetricEncryptRequest:
      type: object
      properties:
        versionId:
          description: |-
            Идентификатор версии ключа, которую следует использовать для шифрования текста. По
            умолчанию используется основная версия, если версия не указана явно.

            Максимальная длина строки в символах — 50.
          type: string
        aadContext:
          description: |-
            Дополнительные аутентифицированные данные (контекст AAD), необязательное поле. Если
            данные указаны, то их потребуется передать для расшифровки с помощью `SymmetricDecryptRequest`.
            Необходимо закодировать в формате base64.

            Максимальная длина строки в символах — 8192.
          type: string
          format: byte
        plaintext:
          description: |-
            Обязательное поле.
            Открытый текст, который следует зашифровать. Должен быть в кодировке base64.

            Максимальная длина строки в символах — 32768.
          type: string
          format: byte
    SymmetricEncryptResponse:
      type: object
      properties:
        keyId:
          description: |-
            Обязательное поле.
            Идентификатор симметричного ключа KMS, который использовался для шифрования.

            Максимальная длина строки в символах — 50.
          type: string
        versionId:
          description: |-
            Идентификатор версии ключа, которая использовалась для шифрования.

            Максимальная длина строки в символах — 50.
          type: string
        ciphertext:
          description: Полученный шифртекст.
          type: string
          format: byte
    SymmetricKey:
      description: |-
        Симметричный ключ KMS, который может содержать несколько версий криптографического
        материала.
      type: object
      properties:
        id:
          description: Идентификатор ключа.
          type: string
        folderId:
          description: Идентификатор каталога, которому принадлежит ключ.
          type: string
        createdAt:
          description: |-
            Время создания ключа.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        name:
          description: Имя симметричного ключа.
          type: string
        description:
          description: Описание симметричного ключа.
          type: string
        labels:
          description: Пользовательские метки для ключа в виде пар `key:value`. Максимум
            64 на ключ.
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyStatus_in_SymmetricKey_status'
        primaryVersion:
          $ref: '#/components/schemas/SymmetricKeyVersion_in_SymmetricKey_primaryVersion'
        defaultAlgorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_SymmetricKey_defaultAlgorithm'
        rotatedAt:
          description: |-
            Время последней ротации ключа (время, когда была создана последняя версия). Пустое,
            если у ключа еще нет версий.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        rotationPeriod:
          description: Период времени между автоматическими ротациями ключа.
          type: string
        deletionProtection:
          description: Флаг, запрещающий удаление ключа
          type: boolean
          format: boolean
    SymmetricKeyStatus:
      description: |2-
         - CREATING: Ключ создается.
         - ACTIVE: Ключ активен и может использоваться для шифрования и дешифрования. Можно
        установить в INACTIVE с помощью метода [update](/docs/kms/api-ref/SymmetricKey/update).
         - INACTIVE: Ключ неактивен и не может быть использован. Можно установить в ACTIVE с помощью метода
        [update](/docs/kms/api-ref/SymmetricKey/update).
      type: string
      enum:
      - CREATING
      - ACTIVE
      - INACTIVE
    SymmetricKeyVersion:
      description: 'Версия симметричного ключа KMS: метаданные криптографического
        материала.'
      type: object
      properties:
        id:
          description: Идентификатор версии ключа.
          type: string
        keyId:
          description: Идентификатор симметричного ключа KMS, которому принадлежит
            версия.
          type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyVersionStatus_in_SymmetricKeyVersion_status'
        algorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_SymmetricKeyVersion_algorithm'
        createdAt:
          description: |-
            Время создания версии ключа.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        primary:
          description: |-
            Признак основной версии, которая должна использоваться по умолчанию для всех
            криптографических операций, для которых явно не указана версия ключа.
          type: boolean
          format: boolean
        destroyAt:
          description: |-
            Время, когда версия ключа будет уничтожена. Пустой, если статус не `SCHEDULED_FOR_DESTRUCTION`.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        hostedByHsm:
          description: Признак версии, которая была создана на базе HSM.
          type: boolean
          format: boolean
    SymmetricKeyVersionStatus:
      description: |-
        Возможные статусы версии.

         - ACTIVE: Версия активна и может использоваться для шифрования и дешифрования.
         - SCHEDULED_FOR_DESTRUCTION: Версия запланирована к уничтожению, время, когда она будет уничтожена, указано в
        поле `destroyAt`.
         - DESTROYED: Версия уничтожена и не может быть восстановлена.
      type: string
      enum:
      - ACTIVE
      - SCHEDULED_FOR_DESTRUCTION
      - DESTROYED
    SymmetricReEncryptRequest:
      type: object
      properties:
        versionId:
          description: |-
            Идентификатор версии нового ключа, которую следует использовать для шифрования. По
            умолчанию используется основная версия, если версия не указана явно.

            Максимальная длина строки в символах — 50.
          type: string
        aadContext:
          description: |-
            Дополнительные аутентифицированные данные (AAD-контекст), которые потребуются для
            расшифровки. Должен быть в кодировке base64.

            Максимальная длина строки в символах — 8192.
          type: string
          format: byte
        sourceKeyId:
          description: |-
            Обязательное поле.
            Идентификатор ключа, которым на текущий момент зашифрован текст. Может быть таким
            же, как и новый ключ.

            Максимальная длина строки в символах — 50.
          type: string
        sourceAadContext:
          description: |-
            Дополнительные аутентификационные данные, переданные с первоначальным запросом
            шифрования. Должен быть в кодировке base64.

            Максимальная длина строки в символах — 8192.
          type: string
          format: byte
        ciphertext:
          description: |-
            Обязательное поле.
            Шифртекст, который следует расшифровать и зашифровать повторно. Должен быть в
            кодировке base64.
          type: string
          format: byte
    SymmetricReEncryptResponse:
      type: object
      properties:
        keyId:
          description: Идентификатор ключа, которым в данный момент зашифрован текст.
          type: string
        versionId:
          description: Идентификатор версии ключа, которая использовалась для шифрования.
          type: string
        sourceKeyId:
          description: Идентификатор ключа, с помощью которого шифртекст был зашифрован
            ранее.
          type: string
        sourceVersionId:
          description: |-
            Идентификатор версии ключа, которая использовалась для расшифровки перешифруемых
            данных.
          type: string
        ciphertext:
          description: Заново зашифрованный шифртекст.
          type: string
          format: byte
    UpdateAccessBindingsMetadata:
      type: object
      properties:
        resourceId:
          description: Идентификатор ресурса, для которого обновляется список привязок
            прав доступа.
          type: string
    UpdateAccessBindingsRequest:
      type: object
      properties:
        accessBindingDeltas:
          description: |-
            Обязательное поле.
            Изменения в список привязок прав доступа.

            Должен содержать хотя бы один элемент.
          type: array
          items:
            $ref: '#/components/schemas/AccessBindingDelta'
    UpdateSymmetricKeyMetadata:
      type: object
      properties:
        keyId:
          description: Идентификатор изменяемого ключа.
          type: string
    UpdateSymmetricKeyRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateSymmetricKeyRequest_updateMask'
        name:
          description: |-
            Новое имя симметричного ключа KMS.

            Максимальная длина строки в символах — 100.
          type: string
        description:
          description: |-
            Новое описание симметричного ключа KMS.

            Максимальная длина строки в символах — 1024.
          type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyStatus_in_UpdateSymmetricKeyRequest_status'
        labels:
          description: |-
            Пользовательские метки для ключа в виде пар `key:value`. Максимум 64 на ключ.

            Не более 64 на ресурс.
            Максимальная длина строки в символах для каждого ключа — 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        defaultAlgorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_UpdateSymmetricKeyRequest_defaultAlgorithm'
        rotationPeriod:
          description: Период времени между автоматическими ротациями симметричного
            ключа KMS.
          type: string
        deletionProtection:
          description: Флаг, запрещающий удаление симметричного ключа KMS
          type: boolean
          format: boolean
    rpcStatus:
      description: Описание ошибки в случае сбоя или отмены операции.
      type: object
      properties:
        code:
          description: Код ошибки. Значение из списка [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: Текст ошибки.
          type: string
        details:
          description: Список сообщений с подробными сведениями об ошибке.
          type: array
          items:
            type: object
    Subject_in_AccessBinding_subject:
      description: |-
        Обязательное поле.
        Субъект, для которого создается привязка прав доступа. Может
        представлять собой аккаунт с уникальным идентификатором в облаке или системную
        группу с общим системным идентификатором.
      type: object
      properties:
        id:
          description: |-
            Обязательное поле.
            Идентификатор субъекта.

            Может иметь одно из значений:
            * `allAuthenticatedUsers`: Специальный системный идентификатор, представляющий любого пользователя, прошедшего аутентификацию. Его можно использовать только если в параметре `type` указано `system`.
            * `allUsers`: Специальный системный идентификатор, представляющий любого пользователя. Аутентификация не требуется. Например, при запросе через API не надо будет указывать IAM-токен.
            * `<идентификатор пользователя в облаке>`: Идентификатор, представляющий учетную запись пользователя. Его можно использовать только если в параметре `type` передано одно из следующих значений: `userAccount`, `federatedUser` или `serviceAccount`.

            Максимальная длина строки в символах — 50.
          type: string
        type:
          description: |-
            Обязательное поле.
            Тип субъекта.

            Может иметь одно из значений:
            * `userAccount` — аккаунт на Яндексе или Яндекс.Коннекте, добавленный в {{ yandex-cloud }}.
            * `serviceAccount` — сервисный аккаунт. Этот тип представляет ресурс [ServiceAccount](/docs/iam/api-ref/ServiceAccount#representation).
            * `federatedUser` — федеративный аккаунт. Этот тип представляет пользователя из федерации удостоверений, например Active Directory.
            * `system` — системная группа. Представляет набор аккаунтов, который описывается общим системным идентификатором.

            Дополнительные сведения см. в разделе [Субъект, которому назначается роль](/docs/iam/concepts/access-control/#subject).

            Максимальная длина строки в символах — 100.
          type: string
    AccessBindingAction_in_AccessBindingDelta_action:
      description: |-
        Обязательное поле.
        Действие, которое надо выполнить с привязкой прав доступа.

         - ADD: Добавление новой привязки прав доступа.
         - REMOVE: Удаление привязки прав доступа.
      type: string
      enum:
      - ADD
      - REMOVE
    AccessBinding_in_AccessBindingDelta_accessBinding:
      description: |-
        Обязательное поле.
        Привязка прав доступа. Дополнительные сведения см. в разделе [Привязка прав доступа](/docs/iam/concepts/access-control/#access-bindings).
      type: object
      properties:
        roleId:
          description: |-
            Обязательное поле.
            Идентификатор ресурса [Role](/docs/iam/api-ref/Role#representation) который назначен для субъекта, указанного в
            параметре `subject`.

            Максимальная длина строки в символах — 50.
          type: string
        subject:
          $ref: '#/components/schemas/Subject_in_AccessBinding_subject'
    SymmetricAlgorithm_in_CreateSymmetricKeyRequest_defaultAlgorithm:
      description: |-
        Алгоритм шифрования, который будет использоваться с версией ключа, которая будет
        сгенерирована при следующей ротации.

        Поддерживаемые алгоритмы симметричного шифрования.

         - AES_128: Алгоритм AES со 128-битными ключами.
         - AES_192: Алгоритм AES с 192-битными ключами.
         - AES_256: Алгоритм AES с 256-битными ключами.
         - AES_256_HSM: Алгоритм AES с 256-битными ключами на базе HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricAlgorithm_in_GenerateDataKeyRequest_dataKeySpec:
      description: |-
        Алгоритм шифрования и длина для сгенерированного ключа шифрования данных.

        Поддерживаемые алгоритмы симметричного шифрования.

         - AES_128: Алгоритм AES со 128-битными ключами.
         - AES_192: Алгоритм AES с 192-битными ключами.
         - AES_256: Алгоритм AES с 256-битными ключами.
         - AES_256_HSM: Алгоритм AES с 256-битными ключами на базе HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricKeyStatus_in_SymmetricKey_status:
      description: |-
        Текущий статус ключа.

         - CREATING: Ключ создается.
         - ACTIVE: Ключ активен и может использоваться для шифрования и дешифрования. Можно
        установить в INACTIVE с помощью метода [update](/docs/kms/api-ref/SymmetricKey/update).
         - INACTIVE: Ключ неактивен и не может быть использован. Можно установить в ACTIVE с помощью метода
        [update](/docs/kms/api-ref/SymmetricKey/update).
      type: string
      enum:
      - CREATING
      - ACTIVE
      - INACTIVE
    SymmetricKeyVersion_in_SymmetricKey_primaryVersion:
      description: |-
        Основная версия ключа, используемая по умолчанию для всех операций шифрования,
        когда идентификатор версии не указан явно.

        Версия симметричного ключа KMS: метаданные криптографического материала.
      type: object
      properties:
        id:
          description: Идентификатор версии ключа.
          type: string
        keyId:
          description: Идентификатор симметричного ключа KMS, которому принадлежит
            версия.
          type: string
        status:
          $ref: '#/components/schemas/SymmetricKeyVersionStatus_in_SymmetricKeyVersion_status'
        algorithm:
          $ref: '#/components/schemas/SymmetricAlgorithm_in_SymmetricKeyVersion_algorithm'
        createdAt:
          description: |-
            Время создания версии ключа.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        primary:
          description: |-
            Признак основной версии, которая должна использоваться по умолчанию для всех
            криптографических операций, для которых явно не указана версия ключа.
          type: boolean
          format: boolean
        destroyAt:
          description: |-
            Время, когда версия ключа будет уничтожена. Пустой, если статус не `SCHEDULED_FOR_DESTRUCTION`.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        hostedByHsm:
          description: Признак версии, которая была создана на базе HSM.
          type: boolean
          format: boolean
    SymmetricAlgorithm_in_SymmetricKey_defaultAlgorithm:
      description: |-
        Алгоритм шифрования по умолчанию, который следует использовать с новыми версиями
        ключа.

        Поддерживаемые алгоритмы симметричного шифрования.

         - AES_128: Алгоритм AES со 128-битными ключами.
         - AES_192: Алгоритм AES с 192-битными ключами.
         - AES_256: Алгоритм AES с 256-битными ключами.
         - AES_256_HSM: Алгоритм AES с 256-битными ключами на базе HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    SymmetricKeyVersionStatus_in_SymmetricKeyVersion_status:
      description: |-
        Состояние версии ключа.

        Возможные статусы версии.

         - ACTIVE: Версия активна и может использоваться для шифрования и дешифрования.
         - SCHEDULED_FOR_DESTRUCTION: Версия запланирована к уничтожению, время, когда она будет уничтожена, указано в
        поле `destroyAt`.
         - DESTROYED: Версия уничтожена и не может быть восстановлена.
      type: string
      enum:
      - ACTIVE
      - SCHEDULED_FOR_DESTRUCTION
      - DESTROYED
    SymmetricAlgorithm_in_SymmetricKeyVersion_algorithm:
      description: |-
        Алгоритм шифрования, который следует использовать при использовании этой версии
        ключа для шифрования.

        Поддерживаемые алгоритмы симметричного шифрования.

         - AES_128: Алгоритм AES со 128-битными ключами.
         - AES_192: Алгоритм AES с 192-битными ключами.
         - AES_256: Алгоритм AES с 256-битными ключами.
         - AES_256_HSM: Алгоритм AES с 256-битными ключами на базе HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
    FieldMask_in_UpdateSymmetricKeyRequest_updateMask:
      description: |-
        Обязательное поле.
        Маска, определяющая, какие атрибуты указанного симметричного ключа KMS будут
        обновлены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    SymmetricKeyStatus_in_UpdateSymmetricKeyRequest_status:
      description: |-
        Новый статус для симметричного ключа KMS. С помощью метода [update](/docs/kms/api-ref/SymmetricKey/update) вы можете
        установить только статус ACTIVE или INACTIVE.

         - CREATING: Ключ создается.
         - ACTIVE: Ключ активен и может использоваться для шифрования и дешифрования. Можно
        установить в INACTIVE с помощью метода [update](/docs/kms/api-ref/SymmetricKey/update).
         - INACTIVE: Ключ неактивен и не может быть использован. Можно установить в ACTIVE с помощью метода
        [update](/docs/kms/api-ref/SymmetricKey/update).
      type: string
      enum:
      - CREATING
      - ACTIVE
      - INACTIVE
    SymmetricAlgorithm_in_UpdateSymmetricKeyRequest_defaultAlgorithm:
      description: |-
        Алгоритм шифрования по умолчанию, который следует использовать с новыми версиями
        симметричного ключа KMS.

        Поддерживаемые алгоритмы симметричного шифрования.

         - AES_128: Алгоритм AES со 128-битными ключами.
         - AES_192: Алгоритм AES с 192-битными ключами.
         - AES_256: Алгоритм AES с 256-битными ключами.
         - AES_256_HSM: Алгоритм AES с 256-битными ключами на базе HSM
      type: string
      enum:
      - AES_128
      - AES_192
      - AES_256
      - AES_256_HSM
tags:
- name: SymmetricCrypto
  description: Набор методов, выполняющих симметричное шифрование и дешифрование.
- name: SymmetricKey
  description: Набор методов для управления симметричными ключами KMS.
