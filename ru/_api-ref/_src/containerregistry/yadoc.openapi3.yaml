openapi: "3.0"
info:
  title: Yandex Container Registry API
  description: Методы справочника API сгруппированы по ресурсам. Чтобы выполнить операцию
    над ресурсом, отправьте HTTP-запрос к соответствующему URL или выполните RPC-вызов.
    Подробнее об архитектуре API Яндекс.Облака, см. [Концепции API Яндекс.Облака](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://container-registry.api.cloud.yandex.net
paths:
  /container-registry/v1/images:
    get:
      tags:
      - Image
      summary: |-
        Получает список ресурсов Image в указанном реестре или
        репозитории.
      operationId: ImageList
      parameters:
      - name: registryId
        in: query
        description: |-
          Идентификатор реестра для получения списка Docker-образов. [registryId](/docs/container-registry/api-ref/Image/list#query_params) игнорируется, если в запросе указан [repositoryName](/docs/container-registry/api-ref/Image/list#query_params).

          Чтобы получить идентификатор реестра, используйте запрос [list](/docs/container-registry/api-ref/Registry/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: repositoryName
        in: query
        description: |-
          Имя репозитория для получения списка Docker-образов.

          Чтобы получить имя репозитория, используйте [list](/docs/container-registry/api-ref/Repository/list) запрос.

          Значение должно соответствовать регулярному выражению `` |[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))* ``.
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          Идентификатор каталога, для которого запрашивается список Docker-образов. [folderId](/docs/container-registry/api-ref/Image/list#query_params) игнорируется, если в запросе есть [repositoryName](/docs/container-registry/api-ref/Image/list#query_params)
          или [registryId](/docs/container-registry/api-ref/Image/list#query_params).

          Чтобы получить идентификатор каталога, используйте запрос [list](/docs/resource-manager/api-ref/Folder/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на
          запрос. Если количество результатов больше чем [pageSize](/docs/container-registry/api-ref/Image/list#query_params), сервис
          вернет значение [nextPageToken](/docs/container-registry/api-ref/Image/list#responses), которое можно
          использовать для получения следующей страницы. Значение по
          умолчанию: 100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/container-registry/api-ref/Image/list#query_params) равным значению
          поля [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) предыдущего запроса, чтобы получить
          следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации ресурсов в ответе. В параметрах
          фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Image.name](/docs/container-registry/api-ref/Image#representation).
          2. Оператор. Может быть `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Должно быть не более 256 символов и соответствовать регулярному выражению `[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImagesResponse'
      x-y-navtitle: list
  /container-registry/v1/images/{imageId}:
    get:
      tags:
      - Image
      summary: Возвращает указанный ресурс Image.
      description: Чтобы получить список доступных ресурсов Image, используйте запрос
        [list](/docs/container-registry/api-ref/Image/list).
      operationId: ImageGet
      parameters:
      - name: imageId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемого Docker-образа.

          Чтобы получить идентификатор Docker-образа, используйте запрос [list](/docs/container-registry/api-ref/Image/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
      x-y-navtitle: get
    delete:
      tags:
      - Image
      summary: Удаляет указанный Docker-образ.
      operationId: ImageDelete
      parameters:
      - name: imageId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор удаляемого Docker-образа.

          Чтобы получить идентификатор Docker-образа, используйте запрос [list](/docs/container-registry/api-ref/Image/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteImageMetadata'
      x-y-operation-response: Empty
  /container-registry/v1/registries/{registryId}:
    get:
      tags:
      - Registry
      summary: Возвращает указанный ресурс Registry.
      description: Чтобы получить список доступных ресурсов Registry, используйте
        запрос [list](/docs/container-registry/api-ref/Registry/list).
      operationId: RegistryGet
      parameters:
      - name: registryId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемого ресурса Registry.

          Чтобы получить идентификатор реестра, используйте запрос [list](/docs/container-registry/api-ref/Registry/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registry'
      x-y-navtitle: get
    delete:
      tags:
      - Registry
      summary: Удаляет указанный реестр.
      operationId: RegistryDelete
      parameters:
      - name: registryId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор удаляемого реестра.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteRegistryMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Registry
      summary: Обновляет указанный реестр.
      operationId: RegistryUpdate
      parameters:
      - name: registryId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор изменяемого ресурса Registry.

          Чтобы получить идентификатор реестра, используйте запрос [list](/docs/container-registry/api-ref/Registry/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/container-registry/api-ref/Registry#representation)'
  /container-registry/v1/registries:
    get:
      tags:
      - Registry
      summary: Возвращает список доступных ресурсов Registry в указанном каталоге.
      operationId: RegistryList
      parameters:
      - name: folderId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор каталога для получения списка реестров.

          Чтобы получить идентификатор каталога, используйте запрос
          [list](/docs/resource-manager/api-ref/Folder/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на
          запрос. Если количество результатов больше чем [pageSize](/docs/container-registry/api-ref/Registry/list#query_params), сервис
          вернет значение [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses), которое можно
          использовать для получения следующей страницы. Значение по
          умолчанию: 100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/container-registry/api-ref/Registry/list#query_params) равным значению
          поля [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) предыдущего запроса, чтобы
          получить следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации ресурсов в ответе. В параметрах
          фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Registry.name](/docs/container-registry/api-ref/Registry#representation).
          2. Оператор. Может быть `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение или список значений для сравнения со значениями фильтра.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegistriesResponse'
      x-y-navtitle: list
    post:
      tags:
      - Registry
      summary: Создает реестр в указанном каталоге.
      operationId: RegistryCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateRegistryMetadata'
      x-y-operation-response: '[Registry](/docs/container-registry/api-ref/Registry#representation)'
  /container-registry/v1/repositories:
    get:
      tags:
      - Repository
      summary: Получает список ресурсов Repository в указанном реестре.
      operationId: RepositoryList
      parameters:
      - name: registryId
        in: query
        description: |-
          Идентификатор реестра для получения списка репозиториев.

          Чтобы получить идентификатор реестра, используйте запрос [list](/docs/container-registry/api-ref/Registry/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: folderId
        in: query
        description: |-
          Идентификатор каталога, для которого запрашивается список реестров. [folderId](/docs/container-registry/api-ref/Repository/list#query_params) игнорируется, если в запросе указан [registryId](/docs/container-registry/api-ref/Image/list#query_params).

          Чтобы получить идентификатор каталога, используйте запрос [list](/docs/resource-manager/api-ref/Folder/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на
          запрос. Если количество результатов больше чем [pageSize](/docs/container-registry/api-ref/Repository/list#query_params), сервис
          вернет значение [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses), которое можно
          использовать для получения следующей страницы. Значение по
          умолчанию: 100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/container-registry/api-ref/Repository/list#query_params) равным значению
          поля [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) предыдущего запроса, чтобы
          получить следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации ресурсов в ответе. В параметрах
          фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Repository.name](/docs/container-registry/api-ref/Repository#representation).
          2. Оператор. Может быть `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение или список значений для сравнения со значениями фильтра.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      - name: orderBy
        in: query
        description: Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRepositoriesResponse'
      x-y-navtitle: list
components:
  schemas:
    Blob:
      description: Ресурс Blob.
      type: object
      properties:
        id:
          description: Только для вывода. Идентификатор блоба.
          type: string
        digest:
          description: Контентный адрес блоба.
          type: string
        size:
          description: Размер блоба, указанный в байтах.
          type: string
          format: int64
    CreateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: Идентификатор создаваемого реестра.
          type: string
    CreateRegistryRequest:
      type: object
      properties:
        folderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в котором создается реестр.

            Чтобы получить идентификатор каталога, используйте запрос [list](/docs/resource-manager/api-ref/Folder/list).

            Максимальная длина строки в символах — 50.
          type: string
        name:
          description: |-
            Название реестра.

            Может быть только один реестр в каталоге.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        labels:
          description: |-
            Метки ресурса в формате `key:value`.

            Не более 64 на ресурс.
            Длина строки в символах для каждого ключа должна быть от 1 до 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    DeleteImageMetadata:
      type: object
      properties:
        imageId:
          description: Идентификатор удаляемого Docker-образа.
          type: string
    DeleteRegistryMetadata:
      type: object
      properties:
        registryId:
          description: Идентификатор удаляемого реестра.
          type: string
    Empty:
      description: Пустой JSON объект `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    Image:
      description: Ресурс Image. Подробнее смотрите в разделе [Docker-образ](docs/container-registry/concepts/docker-image).
      type: object
      properties:
        id:
          description: Только для вывода. Идентификатор Docker-образа.
          type: string
        name:
          description: Имя Docker-образа. Уникально в рамках реестра.
          type: string
        digest:
          description: Контентный адрес Docker-образа.
          type: string
        compressedSize:
          description: Размер сжатого Docker-образа, в байтах.
          type: string
          format: int64
        config:
          $ref: '#/components/schemas/Blob_in_Image_config'
        layers:
          description: Слои Docker-образа.
          type: array
          items:
            $ref: '#/components/schemas/Blob'
        tags:
          description: |-
            Теги Docker-образа.

            Каждый тег уникален в пределах репозитория.
          type: array
          items:
            type: string
        createdAt:
          description: |-
            Только для вывода. Время создания ресурса в формате
            [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
    ListImagesResponse:
      type: object
      properties:
        images:
          description: Список ресурсов Image.
          type: array
          items:
            $ref: '#/components/schemas/Image'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе.
            Если количество результатов больше чем [pageSize](/docs/container-registry/api-ref/Image/list#query_params),
            используйте [nextPageToken](/docs/container-registry/api-ref/Image/list#responses) в качестве значения параметра
            [pageToken](/docs/container-registry/api-ref/Image/list#query_params) в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения [nextPageToken](/docs/container-registry/api-ref/Image/list#responses)
            для перебора страниц результатов.
          type: string
    ListRegistriesResponse:
      type: object
      properties:
        registries:
          description: Список ресурсов Registry.
          type: array
          items:
            $ref: '#/components/schemas/Registry'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе.
            Если количество результатов больше чем [pageSize](/docs/container-registry/api-ref/Registry/list#query_params),
            используйте [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses) в качестве значения параметра
            [pageToken](/docs/container-registry/api-ref/Registry/list#query_params) в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения [nextPageToken](/docs/container-registry/api-ref/Registry/list#responses)
            для перебора страниц результатов.
          type: string
    ListRepositoriesResponse:
      type: object
      properties:
        repositories:
          description: Список ресурсов Repository.
          type: array
          items:
            $ref: '#/components/schemas/Repository'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе.
            Если количество результатов больше чем [pageSize](/docs/container-registry/api-ref/Repository/list#query_params),
            используйте [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses) в качестве значения параметра
            [pageToken](/docs/container-registry/api-ref/Repository/list#query_params) в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения [nextPageToken](/docs/container-registry/api-ref/Repository/list#responses)
            для перебора страниц результатов.
          type: string
    Operation:
      description: |-
        Ресурс Operation. Дополнительные сведения см. в разделе
        [Объект Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: Идентификатор операции.
            type: string
          description:
            description: |-
              Описание операции. Длина описания должна быть от 0 до 256
              символов.
            type: string
          createdAt:
            description: |-
              Время создания ресурса в формате в
              [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          createdBy:
            description: |-
              Идентификатор пользователя или сервисного
              аккаунта, инициировавшего операцию.
            type: string
          modifiedAt:
            description: |-
              Время, когда ресурс Operation последний раз
              обновлялся. Значение в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          done:
            description: |-
              Если значение равно `false` — операция еще
              выполняется. Если `true` — операция завершена, и задано значение
              одного из полей `error` или `response`.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Метаданные операции. Обычно в поле содержится
              идентификатор ресурса, над которым выполняется операция. Если
              метод возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `metadata`.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: Описание ошибки в случае сбоя или отмены операции.
          response:
            description: |-
              Результат операции в случае успешного завершения. Если
              исходный метод не возвращает никаких данных при успешном
              завершении, например метод Delete, поле содержит объект
              [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty). Если исходный метод — это стандартный метод Create
              / Update, поле содержит целевой ресурс операции. Если метод
              возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `response`.
            type: object
    Registry:
      description: Ресурс Registry. Подробнее смотрите в разделе [Реестр](/docs/container-registry/concepts/registry).
      type: object
      properties:
        id:
          description: Только для вывода. Идентификатор реестра.
          type: string
        folderId:
          description: Идентификатор каталога, которому принадлежит реестр.
          type: string
        name:
          description: Название реестра.
          type: string
        status:
          $ref: '#/components/schemas/RegistryStatus_in_Registry_status'
        createdAt:
          description: |-
            Только для вывода. Время создания ресурса в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        labels:
          description: Метки ресурса в формате `key:value`. Максимум 64 метки на ресурс.
          type: object
          additionalProperties:
            type: string
    RegistryStatus:
      description: |2-
         - CREATING: Реестр создается.
         - ACTIVE: Реестр готов к использованию.
         - DELETING: Реестр удаляется.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    Repository:
      description: Ресурс Repository. Подробнее смотрите в разделе [Репозиторий](/docs/container-registry/concepts/repository).
      type: object
      properties:
        name:
          description: Имя репозитория. Уникально в рамках реестра.
          type: string
    UpdateRegistryMetadata:
      type: object
      properties:
        registryId:
          description: Идентификатор изменяемого ресурса Registry.
          type: string
    UpdateRegistryRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateRegistryRequest_updateMask'
        name:
          description: |-
            Название реестра.

            Может быть только один реестр в каталоге.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        labels:
          description: |-
            Метки ресурса в формате `key:value`.

            Существующий набор `labels` полностью перезаписывается набором, переданным в запросе.

            Не более 64 на ресурс.
            Длина строки в символах для каждого ключа должна быть от 1 до 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
    rpcStatus:
      description: Описание ошибки в случае сбоя или отмены операции.
      type: object
      properties:
        code:
          description: Код ошибки. Значение из списка [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: Текст ошибки.
          type: string
        details:
          description: Список сообщений с подробными сведениями об ошибке.
          type: array
          items:
            type: object
    Blob_in_Image_config:
      description: |-
        Конфигурация Docker-образа.

        Ресурс Blob.
      type: object
      properties:
        id:
          description: Только для вывода. Идентификатор блоба.
          type: string
        digest:
          description: Контентный адрес блоба.
          type: string
        size:
          description: Размер блоба, указанный в байтах.
          type: string
          format: int64
    RegistryStatus_in_Registry_status:
      description: |-
        Только для вывода. Статус реестра.

         - CREATING: Реестр создается.
         - ACTIVE: Реестр готов к использованию.
         - DELETING: Реестр удаляется.
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
    FieldMask_in_UpdateRegistryRequest_updateMask:
      description: |-
        Маска, определяющая, какие поля ресурса Registry будут обновлены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
tags:
- name: Image
  description: Набор методов для управления ресурсами Image.
- name: Registry
  description: Набор методов для управления ресурсами Registry.
- name: Repository
  description: Набор методов для управления ресурсами Repository.
