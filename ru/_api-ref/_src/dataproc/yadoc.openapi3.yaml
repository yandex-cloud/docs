openapi: "3.0"
info:
  title: Yandex Data Proc API
  description: Методы справочника API сгруппированы по ресурсам. Чтобы выполнить операцию
    над ресурсом, отправьте HTTP-запрос к соответствующему URL. Подробнее об архитектуре
    API Яндекс.Облака, см. [Концепции API Яндекс.Облака](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://dataproc.api.cloud.yandex.net
paths:
  /dataproc/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Возвращает указанный кластер Data Proc.
      description: Чтобы получить список доступных кластеров Data Proc, выполните
        запрос [list](/docs/data-proc/api-ref/Cluster/list).
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера Data Proc.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Удаляет указанный кластер.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор удаляемого кластера.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Обновляет конфигурацию указанного кластера.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Идентификатор кластера, который следует изменить.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Возвращает список кластеров в указанном каталоге.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Обязательное поле.
          Идентификатор каталога, для которого нужно получить список кластеров.

          Чтобы получить идентификатор каталога, используйте запрос [list](/docs/resource-manager/api-ref/Folder/list).

          Максимальная длина строки в символах — 50.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем `page_size`, сервис вернет значение [nextPageToken](/docs/data-proc/api-ref/Cluster/list#responses), которое
          можно использовать для получения следующей страницы. Значение по умолчанию: 100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `page_token` равным значению поля
          [nextPageToken](/docs/data-proc/api-ref/Cluster/list#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации кластеров в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Cluster.name](/docs/data-proc/api-ref/Cluster#representation).
          2. Оператор. Операторы `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]`. Пример фильтра: `name=my-cluster`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Создает кластер в указанном каталоге.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters/{clusterId}:start:
    post:
      tags:
      - Cluster
      summary: Запускает указанный кластер.
      operationId: ClusterStart
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, который следует запустить.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: start
      x-y-operation-metadata:
        $ref: '#/components/schemas/StartClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters/{clusterId}:stop:
    post:
      tags:
      - Cluster
      summary: Останавливает указанный кластер.
      operationId: ClusterStop
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, который следует остановить.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: stop
      x-y-operation-metadata:
        $ref: '#/components/schemas/StopClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/data-proc/api-ref/Cluster#representation)'
  /dataproc/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Список операций для указанного кластера.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, для которого запрашивается список операций.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем `page_size`, сервис вернет значение [nextPageToken](/docs/data-proc/api-ref/Cluster/listOperations#responses),
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `page_token` равным значению поля
          [nextPageToken](/docs/data-proc/api-ref/Cluster/listOperations#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /dataproc/v1/clusters/{clusterId}/hosts:
    get:
      tags:
      - Cluster
      summary: Получает список хостов для указанного кластера.
      operationId: ClusterListHosts
      parameters:
      - name: clusterId
        in: path
        description: |-
          Идентификатор кластера, для которого запрашивается список хостов.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем `page_size`, сервис вернет значение [nextPageToken](/docs/data-proc/api-ref/Cluster/listHosts#responses),
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `page_token` равным значению поля
          [nextPageToken](/docs/data-proc/api-ref/Cluster/listHosts#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации хостов в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Cluster.name](/docs/data-proc/api-ref/Cluster#representation).
          2. Оператор. Может быть `=` или `!=` для отдельных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]`. Пример фильтра: `name=my-host`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterHostsResponse'
      x-y-navtitle: listHosts
  /dataproc/v1/clusters/{clusterId}/jobs:
    get:
      tags:
      - Job
      summary: Получает список задач для указанного кластера.
      operationId: JobList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, для которого запрашивается список задач.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем `page_size` , сервис вернет значение [nextPageToken](/docs/data-proc/api-ref/Job/list#responses), которое
          можно использовать для получения следующей страницы. Значение по умолчанию: 100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `page_token` равным значению поля [nextPageToken](/docs/data-proc/api-ref/Job/list#responses)
          предыдущего запроса, чтобы получить следующую страницу результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации задач в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Job.name](/docs/data-proc/api-ref/Job#representation).
          2. Оператор. Операторы `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]`. Пример фильтра: `name=my-job`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
      x-y-navtitle: list
    post:
      tags:
      - Job
      summary: Создает задачу для кластера.
      operationId: JobCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, для которого следует создать задачу.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateJobMetadata'
      x-y-operation-response: '[Job](/docs/data-proc/api-ref/Job#representation)'
  /dataproc/v1/clusters/{clusterId}/jobs/{jobId}:
    get:
      tags:
      - Job
      summary: Возвращает указанную задачу.
      operationId: JobGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, для которого запрашивается задача.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: jobId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемой задачи.

          Чтобы получить идентификатор задачи, выполните запрос [list](/docs/data-proc/api-ref/Job/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      x-y-navtitle: get
  /dataproc/v1/resourcePresets/{resourcePresetId}:
    get:
      tags:
      - ResourcePreset
      summary: Возвращает указанный ресурс ResourcePreset.
      description: Чтобы получить список доступных ресурсов ResourcePreset, используйте
        запрос [list](/docs/data-proc/api-ref/ResourcePreset/list).
      operationId: ResourcePresetGet
      parameters:
      - name: resourcePresetId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор набора ресурсов, данные о котором запрашиваются. Чтобы получить
          идентификатор набора ресурсов, используйте запрос [list](/docs/data-proc/api-ref/ResourcePreset/list).
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePreset'
      x-y-navtitle: get
  /dataproc/v1/resourcePresets:
    get:
      tags:
      - ResourcePreset
      summary: Получает список доступных ресурсов ResourcePreset.
      operationId: ResourcePresetList
      parameters:
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем [pageSize](/docs/data-proc/api-ref/ResourcePreset/list#query_params), сервис вернет значение [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses),
          которое можно использовать для получения следующей страницы.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение [pageToken](/docs/data-proc/api-ref/ResourcePreset/list#query_params) равным значению поля
          [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePresetsResponse'
      x-y-navtitle: list
  /dataproc/v1/clusters/{clusterId}/subclusters/{subclusterId}:
    get:
      tags:
      - Subcluster
      summary: Возвращает указанный подкластер.
      description: Чтобы получить список доступных подкластеров Data Proc, выполните
        запрос [list](/docs/data-proc/api-ref/Subcluster/list).
      operationId: SubclusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера Data Proc, которому принадлежит подкластер.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: subclusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор возвращаемого подкластера.

          Чтобы получить идентификатор подкластера, используйте запрос [list](/docs/data-proc/api-ref/Subcluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcluster'
      x-y-navtitle: get
    delete:
      tags:
      - Subcluster
      summary: Удаляет указанный подкластер.
      operationId: SubclusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, из которого следует удалить подкластер.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: subclusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор подкластера, который следует удалить.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteSubclusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Subcluster
      summary: Изменяет указанный подкластер.
      operationId: SubclusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, в котором следует изменить подкластер.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: subclusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор подкластера, который следует изменить.

          Чтобы получить идентификатор подкластера, используйте запрос [list](/docs/data-proc/api-ref/Subcluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubclusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateSubclusterMetadata'
      x-y-operation-response: '[Subcluster](/docs/data-proc/api-ref/Subcluster#representation)'
  /dataproc/v1/clusters/{clusterId}/subclusters:
    get:
      tags:
      - Subcluster
      summary: Получает список подкластеров для указанного кластера.
      operationId: SubclusterList
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера, для которого нужно получить список подкластеров.

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          Максимальное количество результатов на странице ответа на запрос. Если количество
          результатов больше чем `page_size`, сервис вернет значение [nextPageToken](/docs/data-proc/api-ref/Subcluster/list#responses),
          которое можно использовать для получения следующей страницы. Значение по умолчанию:
          100.

          Максимальное значение — 1000.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Токен страницы. Установите значение `page_token` равным значению поля
          [nextPageToken](/docs/data-proc/api-ref/Subcluster/list#responses) предыдущего запроса, чтобы получить следующую страницу
          результатов.

          Максимальная длина строки в символах — 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          Параметры фильтрации подкластеров в ответе.

          В параметрах фильтрации указываются:
          1. Имя поля. В настоящее время фильтрация осуществляется только по полю [Subcluster.name](/docs/data-proc/api-ref/Subcluster#representation).
          2. Оператор. Операторы `=` или `!=` для одиночных значений, `IN` или `NOT IN` для списков значений.
          3. Значение. Значение длиной от 3 до 63 символов, совпадающее с регулярным выражением `^[a-z][-a-z0-9]{1,61}[a-z0-9]`. Пример фильтра: `name=dataproc123_subcluster456`.

          Максимальная длина строки в символах — 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubclustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Subcluster
      summary: Создает новый подкластер в указанном кластере.
      operationId: SubclusterCreate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Обязательное поле.
          Идентификатор кластера Data Proc, в котором следует создать подкластер.

          Чтобы получить идентификатор кластера, выполните запрос [list](/docs/data-proc/api-ref/Cluster/list).

          Максимальная длина строки в символах — 50.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubclusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateSubclusterMetadata'
      x-y-operation-response: '[Subcluster](/docs/data-proc/api-ref/Subcluster#representation)'
components:
  schemas:
    Cluster:
      description: Кластер Data Proc. Дополнительные сведения о концепции см. в [документации](/docs/data-proc/concepts/).
      type: object
      properties:
        id:
          description: Идентификатор кластера. Генерируется во время создания.
          type: string
        folderId:
          description: Идентификатор каталога, которому принадлежит кластер.
          type: string
        createdAt:
          description: |-
            Время создания.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        name:
          description: |-
            Имя кластера. Имя уникально в рамках каталога.

            Длина строки в символах должна быть от 1 до 63.
          type: string
        description:
          description: |-
            Описание кластера.

            Длина строки в символах должна быть от 0 до 256.
          type: string
        labels:
          description: |-
            Метки кластера как пары `key:value`.

            Не более 64 на ресурс.
          type: object
          additionalProperties:
            type: string
        monitoring:
          description: Описание систем мониторинга, относящихся к кластеру.
          type: array
          items:
            $ref: '#/components/schemas/Monitoring'
        config:
          $ref: '#/components/schemas/ClusterConfig_in_Cluster_config'
        health:
          $ref: '#/components/schemas/Health_in_Cluster_health'
        status:
          $ref: '#/components/schemas/ClusterStatus_in_Cluster_status'
        zoneId:
          description: Идентификатор зоны доступности, в которой находится кластер.
          type: string
        serviceAccountId:
          description: |-
            Идентификатор сервисного аккаунта, которым пользуется агент Data Proc для управления
            задачами.
          type: string
        bucket:
          description: Имя бакета Object Storage, который используется для задач Data
            Proc.
          type: string
    ClusterConfig:
      type: object
      properties:
        versionId:
          description: |-
            Версия образа, которая используется при подготовке кластера. Все доступные версии
            перечислены в [документации](/docs/managed-hadoop/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_ClusterConfig_hadoop'
    ClusterStatus:
      description: |2-
         - STATUS_UNKNOWN: Состояние кластера неизвестно.
         - CREATING: Кластер создается.
         - RUNNING: Кластер работает нормально.
         - ERROR: На кластере произошла ошибка, блокирующая работу.
         - STOPPING: Кластер останавливается.
         - STOPPED: Кластер остановлен.
         - STARTING: Кластер запускается.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    CreateClusterConfigSpec:
      type: object
      properties:
        versionId:
          description: |-
            Версия образа, которая используется при подготовке кластера.

            Все доступные версии перечислены в [документации](/docs/data-proc/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_CreateClusterConfigSpec_hadoop'
        subclustersSpec:
          description: Спецификация создания подкластеров.
          type: array
          items:
            $ref: '#/components/schemas/CreateSubclusterConfigSpec'
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор создаваемого кластера.
          type: string
    CreateClusterRequest:
      type: object
      properties:
        folderId:
          description: |-
            Обязательное поле.
            Идентификатор каталога, в котором нужно создать кластер.

            Чтобы получить идентификатор каталога, используйте запрос [list](/docs/resource-manager/api-ref/Folder/list).

            Максимальная длина строки в символах — 50.
          type: string
        name:
          description: |-
            Имя кластера. Имя должно быть уникальным в рамках каталога. Имя не может быть
            изменено после того, как кластер Data Proc был создан.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Описание кластера.

            Максимальная длина строки в символах — 256.
          type: string
        labels:
          description: |-
            Метки кластера как пары `ключ: значение`.

            Не более 64 на ресурс.
            Длина строки в символах для каждого ключа должна быть от 1 до 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/CreateClusterConfigSpec_in_CreateClusterRequest_configSpec'
        zoneId:
          description: |-
            Обязательное поле.
            Идентификатор зоны доступности, в которой должен быть размещен кластер.

            Чтобы получить список доступных зон, отправьте запрос [list](/docs/compute/api-ref/Zone/list).

            Максимальная длина строки в символах — 50.
          type: string
        serviceAccountId:
          description: |-
            Обязательное поле.
            Идентификатор сервисного аккаунта, которым должен пользоваться агент Data Proc для
            управления задачами.
          type: string
        bucket:
          description: Имя бакета Object Storage, который следует использовать для
            задач Data Proc.
          type: string
    CreateJobMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Обязательное поле.
            Идентификатор кластера, для которого создается задача.

            Максимальная длина строки в символах — 50.
          type: string
        jobId:
          description: |-
            Идентификатор создаваемой задачи.

            Максимальная длина строки в символах — 50.
          type: string
    CreateJobRequest:
      type: object
      allOf:
      - type: object
        properties:
          name:
            description: |-
              Имя задачи.

              Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
      - title: job_spec
        type: object
        maxProperties: 1
        properties:
          mapreduceJob:
            $ref: '#/components/schemas/MapreduceJob'
            description: Спецификация задачи для MapReduce.
          sparkJob:
            $ref: '#/components/schemas/SparkJob'
            description: Спецификация задачи для Spark.
          pysparkJob:
            $ref: '#/components/schemas/PysparkJob'
            description: Спецификация задачи для PySpark.
          hiveJob:
            $ref: '#/components/schemas/HiveJob'
            description: Спецификация задачи для Hive.
    CreateSubclusterConfigSpec:
      type: object
      properties:
        name:
          description: |-
            Имя подкластера.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_CreateSubclusterConfigSpec_role'
        resources:
          $ref: '#/components/schemas/Resources_in_CreateSubclusterConfigSpec_resources'
        subnetId:
          description: |-
            Обязательное поле.
            Идентификатор подсети VPC, используемой для хостов подкластера.

            Максимальная длина строки в символах — 50.
          type: string
        hostsCount:
          description: |-
            Обязательное поле.
            Количество хостов в подкластере.

            Минимальное значение — 1.
          type: string
          format: int64
    CreateSubclusterMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Идентификатор кластера, в который добавляется подкластер.

            Максимальная длина строки в символах — 50.
          type: string
        subclusterId:
          description: |-
            Идентификатор создаваемого подкластера.

            Максимальная длина строки в символах — 50.
          type: string
    CreateSubclusterRequest:
      type: object
      properties:
        name:
          description: |-
            Имя подкластера. Имя должно быть уникальным в пределах кластера. Имя не может быть
            изменено после того, как подкластер был создан.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_CreateSubclusterRequest_role'
        resources:
          $ref: '#/components/schemas/Resources_in_CreateSubclusterRequest_resources'
        subnetId:
          description: |-
            Обязательное поле.
            Идентификатор подсети VPC, используемой для хостов подкластера.

            Максимальная длина строки в символах — 50.
          type: string
        hostsCount:
          description: |-
            Обязательное поле.
            Количество хостов в подкластере.

            Минимальное значение — 1.
          type: string
          format: int64
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор удаляемого кластера Data Proc.
          type: string
    DeleteSubclusterMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Идентификатор кластера, которому принадлежит удаляемый подкластер.

            Максимальная длина строки в символах — 50.
          type: string
        subclusterId:
          description: |-
            Идентификатор удаляемого подкластера.

            Максимальная длина строки в символах — 50.
          type: string
    Empty:
      description: Пустой JSON объект `` {} ``.
      type: object
      maxProperties: 0
    FieldMask:
      description: |-
        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    HadoopConfig:
      description: |-
        Конфигурация Hadoop, описывающая компоненты, установленные в кластере, их свойства и
        параметры.
      type: object
      properties:
        services:
          description: |-
            Набор компонентов, используемых в кластере (если список пуст, используется набор по
            умолчанию).
          type: array
          items:
            $ref: '#/components/schemas/HadoopConfigService'
        properties:
          description: |-
            Свойства, установленные для всех хостов в конфигурациях `*-site.xml`. В ключе должны быть
            указаны компонент и свойство.

            Например, используйте ключ 'hdfs:dfs.replication', чтобы установить свойство `dfs.replication` в файле
            `/etc/hadoop/conf/hdfs-site.xml`.
          type: object
          additionalProperties:
            type: string
        sshPublicKeys:
          description: Список публичных ключей SSH для доступа к хостам кластера.
          type: array
          items:
            type: string
    HadoopConfigService:
      type: string
      enum:
      - HDFS
      - YARN
      - MAPREDUCE
      - HIVE
      - TEZ
      - ZOOKEEPER
      - HBASE
      - SQOOP
      - FLUME
      - SPARK
      - ZEPPELIN
      - OOZIE
    Health:
      description: |2-
         - HEALTH_UNKNOWN: Состояние кластера неизвестно (`health` для каждого хоста в кластере — UNKNOWN).
         - ALIVE: Кластер работает нормально (`health` для каждого хоста в кластере — ALIVE).
         - DEAD: Кластер не работает (`health` для каждого хоста в кластере — DEAD).
         - DEGRADED: Кластер работает неоптимально (`health` по крайней мере для одного хоста в кластере не
        ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    HiveJob:
      type: object
      allOf:
      - type: object
        properties:
          properties:
            description: Имена и значения свойств, которые используются для настройки
              Data Proc и Hive.
            type: object
            additionalProperties:
              type: string
          continueOnFailure:
            description: |-
              Флаг, указывающий на то, что задачу следует продолжать даже если запрос выполнить не
              удалось.
            type: boolean
            format: boolean
          scriptVariables:
            description: Переменные запросов и их значения.
            type: object
            additionalProperties:
              type: string
          jarFileUris:
            description: |-
              URI JAR-файлов, которые добавляются в CLASSPATH драйвера Hive и каждого задания в рамках
              задачи.
            type: array
            items:
              type: string
      - title: query_type
        type: object
        maxProperties: 1
        properties:
          queryFileUri:
            description: URI скрипта со всеми необходимыми Hive-запросами.
            type: string
          queryList:
            $ref: '#/components/schemas/QueryList'
            description: Список запросов Hive, которые используются в задаче.
    Host:
      description: Хост Data Proc. Дополнительные сведения о концепции см. в [документации](/docs/data-proc/concepts/).
      type: object
      properties:
        name:
          description: |-
            Имя хоста Data Proc. Data Proc генерирует имя хоста при его создании, после этого имя
            невозможно изменить. Имя уникально для всех существующих хостов Data Proc в
            Яндекс.Облаке, так как оно определяет полное доменное имя (FQDN) хоста.
          type: string
        subclusterId:
          description: Идентификатор подкластера Data Proc, которому принадлежит хост.
          type: string
        health:
          $ref: '#/components/schemas/Health_in_Host_health'
        computeInstanceId:
          description: Идентификатор виртуальной машины Cloud Compute, используемой
            в качестве хоста Data Proc.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_Host_role'
    Job:
      description: Задача Data Proc. Дополнительные сведения о концепции см. в [документации](/docs/dataproc/concepts/jobs).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: Идентификатор задачи. Генерируется во время создания.
            type: string
          clusterId:
            description: Идентификатор кластера Data Proc, которому принадлежит задача.
            type: string
          createdAt:
            description: |-
              Время создания.

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          startedAt:
            description: |-
              Время запуска задачи.

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          finishedAt:
            description: |-
              Время завершения задачи.

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          name:
            description: Имя задачи, указанное в запросе [create](/docs/data-proc/api-ref/Job/create).
            type: string
          createdBy:
            description: Идентификатор пользователя, создавшего задачу.
            type: string
          status:
            $ref: '#/components/schemas/JobStatus'
            description: Статус задачи.
      - title: job_spec
        type: object
        maxProperties: 1
        properties:
          mapreduceJob:
            $ref: '#/components/schemas/MapreduceJob'
            description: Спецификация задачи для MapReduce.
          sparkJob:
            $ref: '#/components/schemas/SparkJob'
            description: Спецификация задачи для Spark.
          pysparkJob:
            $ref: '#/components/schemas/PysparkJob'
            description: Спецификация задачи для PySpark.
          hiveJob:
            $ref: '#/components/schemas/HiveJob'
            description: Спецификация задачи для Hive.
    JobStatus:
      description: |2-
         - PROVISIONING: Задача зарегистрирована в базе данных и ожидает, пока агент запустит ее.
         - PENDING: Задача получена агентом и находится в очереди на выполнение.
         - RUNNING: Задача выполняется в кластере.
         - ERROR: Задача не смогла завершиться должным образом.
         - DONE: Задача выполнена.
      type: string
      enum:
      - PROVISIONING
      - PENDING
      - RUNNING
      - ERROR
      - DONE
    ListClusterHostsResponse:
      type: object
      properties:
        hosts:
          description: Запрошенный список хостов.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/data-proc/api-ref/Cluster/listHosts#query_params), используйте `next_page_token` в качестве значения параметра
            [pageToken](/docs/data-proc/api-ref/Cluster/listHosts#query_params) в следующем запросе списка ресурсов.

            Все последующие запросы будут получать свои значения `next_page_token` для перебора страниц
            результатов.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: Список операций для указанного кластера.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/data-proc/api-ref/Cluster/listOperations#query_params), используйте `next_page_token` в качестве значения параметра
            [pageToken](/docs/data-proc/api-ref/Cluster/listOperations#query_params) в следующем запросе списка ресурсов.

            У каждой последующей страницы будет собственный `next_page_token`, чтобы можно было
            продолжать просматривать результаты.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: Возвращает список кластеров в указанном каталоге.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/data-proc/api-ref/Cluster/list#query_params), используйте `next_page_token` в качестве значения параметра [pageToken](/docs/data-proc/api-ref/Cluster/list#query_params)
            в следующем запросе списка ресурсов.

            У каждой последующей страницы будет собственный `next_page_token`, чтобы можно было
            продолжать просматривать результаты.
          type: string
    ListJobsResponse:
      type: object
      properties:
        jobs:
          description: Список задач для указанного кластера.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/data-proc/api-ref/Job/list#query_params), используйте `next_page_token` в качестве значения параметра [pageToken](/docs/data-proc/api-ref/Job/list#query_params) в
            следующем запросе списка ресурсов.

            У каждой последующей страницы будет собственный `next_page_token`, чтобы можно было
            продолжать просматривать результаты.
          type: string
    ListResourcePresetsResponse:
      type: object
      properties:
        resourcePresets:
          description: Список ресурсов ResourcePreset.
          type: array
          items:
            $ref: '#/components/schemas/ResourcePreset'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы результатов в ответе. Если количество
            результатов больше чем [pageSize](/docs/data-proc/api-ref/ResourcePreset/list#query_params), используйте [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses) в качестве
            значения параметра [pageToken](/docs/data-proc/api-ref/ResourcePreset/list#query_params) в следующем запросе списка ресурсов. Все
            последующие запросы будут получать свои значения [nextPageToken](/docs/data-proc/api-ref/ResourcePreset/list#responses) для перебора страниц
            результатов.

            Максимальная длина строки в символах — 100.
          type: string
    ListSubclustersResponse:
      type: object
      properties:
        subclusters:
          description: Список подкластеров для указанного кластера.
          type: array
          items:
            $ref: '#/components/schemas/Subcluster'
        nextPageToken:
          description: |-
            Токен для получения следующей страницы списка. Если количество результатов больше
            чем [pageSize](/docs/data-proc/api-ref/Subcluster/list#query_params), используйте `next_page_token` в качестве значения параметра
            [pageToken](/docs/data-proc/api-ref/Subcluster/list#query_params) в следующем запросе списка ресурсов.

            У каждой последующей страницы будет собственный `next_page_token`, чтобы можно было
            продолжать просматривать результаты.
          type: string
    MapreduceJob:
      type: object
      allOf:
      - type: object
        properties:
          args:
            description: Необязательные аргументы, которые передаются драйверу.
            type: array
            items:
              type: string
          jarFileUris:
            description: |-
              URI JAR-файлов, которые добавляются в CLASSPATH драйвера Data Proc и каждого задания в рамках
              задачи.
            type: array
            items:
              type: string
          fileUris:
            description: |-
              URI ресурсных файлов, которые копируются в рабочий каталог драйверов Data Proc и
              распределенных заданий Hadoop.
            type: array
            items:
              type: string
          archiveUris:
            description: |-
              URI архивов, содержимое которых извлекается в рабочий каталог драйверов и каждого
              задания в рамках задачи.
            type: array
            items:
              type: string
          properties:
            description: Имена и значения свойств, которые используются для настройки
              Data Proc и MapReduce.
            type: object
            additionalProperties:
              type: string
      - title: driver
        type: object
        maxProperties: 1
        properties:
          mainJarFileUri:
            description: HCFS URI JAR-файла, который содержит класс драйвера.
            type: string
          mainClass:
            description: Имя класса драйвера.
            type: string
    Monitoring:
      description: Метаданные системы мониторинга для кластера Data Proc.
      type: object
      properties:
        name:
          description: Название системы мониторинга.
          type: string
        description:
          description: Описание системы мониторинга.
          type: string
        link:
          description: Ссылка на систему мониторинга.
          type: string
    Operation:
      description: |-
        Ресурс Operation. Дополнительные сведения см. в разделе
        [Объект Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: Идентификатор операции.
            type: string
          description:
            description: |-
              Описание операции. Длина описания должна быть от 0 до 256
              символов.
            type: string
          createdAt:
            description: |-
              Время создания ресурса в формате в
              [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          createdBy:
            description: |-
              Идентификатор пользователя или сервисного
              аккаунта, инициировавшего операцию.
            type: string
          modifiedAt:
            description: |-
              Время, когда ресурс Operation последний раз
              обновлялся. Значение в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).

              Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
            type: string
            format: date-time
          done:
            description: |-
              Если значение равно `false` — операция еще
              выполняется. Если `true` — операция завершена, и задано значение
              одного из полей `error` или `response`.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Метаданные операции. Обычно в поле содержится
              идентификатор ресурса, над которым выполняется операция. Если
              метод возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `metadata`.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: Описание ошибки в случае сбоя или отмены операции.
          response:
            description: |-
              Результат операции в случае успешного завершения. Если
              исходный метод не возвращает никаких данных при успешном
              завершении, например метод Delete, поле содержит объект
              [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty). Если исходный метод — это стандартный метод Create
              / Update, поле содержит целевой ресурс операции. Если метод
              возвращает ресурс Operation, в описании метода приведена
              структура соответствующего ему поля `response`.
            type: object
    PysparkJob:
      type: object
      properties:
        args:
          description: Необязательные аргументы, которые передаются драйверу.
          type: array
          items:
            type: string
        jarFileUris:
          description: |-
            URI JAR-файлов, которые добавляются в CLASSPATH драйвера Data Proc и каждого задания в рамках
            задачи.
          type: array
          items:
            type: string
        fileUris:
          description: |-
            URI ресурсных файлов, которые копируются в рабочий каталог драйверов Data Proc и
            распределенных заданий Hadoop.
          type: array
          items:
            type: string
        archiveUris:
          description: |-
            URI архивов, содержимое которых извлекается в рабочий каталог драйверов и каждого
            задания в рамках задачи.
          type: array
          items:
            type: string
        properties:
          description: Имена и значения свойств, которые используются для настройки
            Data Proc и PySpark.
          type: object
          additionalProperties:
            type: string
        mainPythonFileUri:
          description: URI файла с кодом драйвера. Должен быть .py-файлом.
          type: string
        pythonFileUris:
          description: URI Python-файлов, которые передаются PySpark.
          type: array
          items:
            type: string
    QueryList:
      type: object
      properties:
        queries:
          description: Список Hive-запросов.
          type: array
          items:
            type: string
    ResourcePreset:
      description: Описание конфигурации ресурсов.
      type: object
      properties:
        id:
          description: Идентификатор конфигурации ресурсов.
          type: string
        zoneIds:
          description: Идентификаторы зон доступности, в которых доступен данный набор
            ресурсов.
          type: array
          items:
            type: string
        cores:
          description: Количество ядер CPU для хоста Data Proc, созданного с данным
            набором ресурсов.
          type: string
          format: int64
        memory:
          description: |-
            Объем оперативной памяти для хоста Data Proc, созданного с данным набором ресурсов, в
            байтах.
          type: string
          format: int64
    Resources:
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.).
            Все доступные наборы ресурсов перечислены в [документации](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск.
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
    Role:
      description: |2-
         - MASTERNODE: Подкластер выполняет роль мастера.

        Мастер может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: Подкластер выполняет роль DATANODE в кластере Data Proc.

        DATANODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * библиотеки Spark
         - COMPUTENODE: Подкластер выполняет роль COMPUTENODE в кластере Data Proc.

        COMPUTENODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * YARN NodeManager
        * библиотеки Spark
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    SparkJob:
      type: object
      properties:
        args:
          description: Необязательные аргументы, которые передаются драйверу.
          type: array
          items:
            type: string
        jarFileUris:
          description: |-
            URI JAR-файлов, которые добавляются в CLASSPATH драйвера Data Proc и каждого задания в рамках
            задачи.
          type: array
          items:
            type: string
        fileUris:
          description: |-
            URI ресурсных файлов, которые копируются в рабочий каталог драйверов Data Proc и
            распределенных заданий Hadoop.
          type: array
          items:
            type: string
        archiveUris:
          description: |-
            URI архивов, содержимое которых извлекается в рабочий каталог драйверов и каждого
            задания в рамках задачи.
          type: array
          items:
            type: string
        properties:
          description: Имена и значения свойств, которые используются для настройки
            Data Proc и Spark.
          type: object
          additionalProperties:
            type: string
        mainJarFileUri:
          description: URI HCFS JAR-файла, содержащего класс `main` для задачи.
          type: string
        mainClass:
          description: Имя класса драйвера.
          type: string
    StartClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор запускаемого кластера Data Proc.
          type: string
    StopClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор останавливаемого кластера Data Proc.
          type: string
    Subcluster:
      description: Подкластер Data Proc. Дополнительные сведения о концепции см. в
        [документации](/docs/data-proc/concepts/).
      type: object
      properties:
        id:
          description: Идентификатор подкластера. Генерируется во время создания.
          type: string
        clusterId:
          description: Идентификатор кластера Data Proc, которому принадлежит подкластер.
          type: string
        createdAt:
          description: |-
            Время создания.

            Строка в формате [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).
          type: string
          format: date-time
        name:
          description: |-
            Имя подкластера. Имя должно быть уникальным в кластере.

            Длина строки в символах должна быть от 1 до 63.
          type: string
        role:
          $ref: '#/components/schemas/Role_in_Subcluster_role'
        resources:
          $ref: '#/components/schemas/Resources_in_Subcluster_resources'
        subnetId:
          description: Идентификатор подсети VPC, используемой для хостов подкластера.
          type: string
        hostsCount:
          description: Количество хостов в подкластере.
          type: string
          format: int64
    UpdateClusterConfigSpec:
      type: object
      properties:
        subclustersSpec:
          description: Новая конфигурация для подкластеров в кластере.
          type: array
          items:
            $ref: '#/components/schemas/UpdateSubclusterConfigSpec'
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: Идентификатор кластера, который изменяется.
          type: string
    UpdateClusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateClusterRequest_updateMask'
        description:
          description: |-
            Новое описание кластера.

            Максимальная длина строки в символах — 256.
          type: string
        labels:
          description: |-
            Новый набор меток кластера в виде пар `ключ: значение`.

            Не более 64 на ресурс.
            Длина строки в символах для каждого ключа должна быть от 1 до 63.
            Каждый ключ должен соответствовать регулярному выражению `` [a-z][-_0-9a-z]* ``.
            Максимальная длина строки в символах для каждого значения — 63.
            Каждое значение должно соответствовать регулярному выражению `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        configSpec:
          $ref: '#/components/schemas/UpdateClusterConfigSpec_in_UpdateClusterRequest_configSpec'
        name:
          description: |-
            Новое имя кластера Data Proc. Имя должно быть уникальным в рамках каталога.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        serviceAccountId:
          description: |-
            Идентификатор сервисного аккаунта, которым должен пользоваться агент Data Proc для
            управления задачами.
          type: string
        bucket:
          description: Имя нового бакета Object Storage, который следует использовать
            для задач Data Proc.
          type: string
    UpdateSubclusterConfigSpec:
      type: object
      properties:
        id:
          description: |-
            Идентификатор подкластера, который следует изменить.

            Чтобы получить идентификатор подкластера, используйте запрос [list](/docs/data-proc/api-ref/Subcluster/list).
          type: string
        name:
          description: |-
            Имя подкластера.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        resources:
          $ref: '#/components/schemas/Resources_in_UpdateSubclusterConfigSpec_resources'
        hostsCount:
          description: |-
            Количество хостов в подкластере.

            Минимальное значение — 1.
          type: string
          format: int64
    UpdateSubclusterMetadata:
      type: object
      properties:
        clusterId:
          description: |-
            Идентификатор кластера, которому принадлежит изменяемый подкластер.

            Максимальная длина строки в символах — 50.
          type: string
        subclusterId:
          description: |-
            Идентификатор изменяемого подкластера.

            Максимальная длина строки в символах — 50.
          type: string
    UpdateSubclusterRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateSubclusterRequest_updateMask'
        resources:
          $ref: '#/components/schemas/Resources_in_UpdateSubclusterRequest_resources'
        name:
          description: |-
            Новое имя подкластера. Имя должно быть уникальным в пределах кластера.

            Значение должно соответствовать регулярному выражению `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        hostsCount:
          description: |-
            Обязательное поле.
            Новое количество хостов в подкластере.

            Минимальное значение — 1.
          type: string
          format: int64
    rpcStatus:
      description: Описание ошибки в случае сбоя или отмены операции.
      type: object
      properties:
        code:
          description: Код ошибки. Значение из списка [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: Текст ошибки.
          type: string
        details:
          description: Список сообщений с подробными сведениями об ошибке.
          type: array
          items:
            type: object
    ClusterConfig_in_Cluster_config:
      description: Конфигурация кластера.
      type: object
      properties:
        versionId:
          description: |-
            Версия образа, которая используется при подготовке кластера. Все доступные версии
            перечислены в [документации](/docs/managed-hadoop/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_ClusterConfig_hadoop'
    Health_in_Cluster_health:
      description: |-
        Агрегированная работоспособность кластера.

         - HEALTH_UNKNOWN: Состояние кластера неизвестно (`health` для каждого хоста в кластере — UNKNOWN).
         - ALIVE: Кластер работает нормально (`health` для каждого хоста в кластере — ALIVE).
         - DEAD: Кластер не работает (`health` для каждого хоста в кластере — DEAD).
         - DEGRADED: Кластер работает неоптимально (`health` по крайней мере для одного хоста в кластере не
        ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    ClusterStatus_in_Cluster_status:
      description: |-
        Состояние кластера.

         - STATUS_UNKNOWN: Состояние кластера неизвестно.
         - CREATING: Кластер создается.
         - RUNNING: Кластер работает нормально.
         - ERROR: На кластере произошла ошибка, блокирующая работу.
         - STOPPING: Кластер останавливается.
         - STOPPED: Кластер остановлен.
         - STARTING: Кластер запускается.
      type: string
      enum:
      - STATUS_UNKNOWN
      - CREATING
      - RUNNING
      - ERROR
      - STOPPING
      - STOPPED
      - STARTING
      default: STATUS_UNKNOWN
    HadoopConfig_in_ClusterConfig_hadoop:
      description: |-
        Настройки конфигурации, специфические для Data Proc.

        Конфигурация Hadoop, описывающая компоненты, установленные в кластере, их свойства и
        параметры.
      type: object
      properties:
        services:
          description: |-
            Набор компонентов, используемых в кластере (если список пуст, используется набор по
            умолчанию).
          type: array
          items:
            $ref: '#/components/schemas/HadoopConfigService'
        properties:
          description: |-
            Свойства, установленные для всех хостов в конфигурациях `*-site.xml`. В ключе должны быть
            указаны компонент и свойство.

            Например, используйте ключ 'hdfs:dfs.replication', чтобы установить свойство `dfs.replication` в файле
            `/etc/hadoop/conf/hdfs-site.xml`.
          type: object
          additionalProperties:
            type: string
        sshPublicKeys:
          description: Список публичных ключей SSH для доступа к хостам кластера.
          type: array
          items:
            type: string
    HadoopConfig_in_CreateClusterConfigSpec_hadoop:
      description: |-
        Настройки, специфические для Data Proc.

        Конфигурация Hadoop, описывающая компоненты, установленные в кластере, их свойства и
        параметры.
      type: object
      properties:
        services:
          description: |-
            Набор компонентов, используемых в кластере (если список пуст, используется набор по
            умолчанию).
          type: array
          items:
            $ref: '#/components/schemas/HadoopConfigService'
        properties:
          description: |-
            Свойства, установленные для всех хостов в конфигурациях `*-site.xml`. В ключе должны быть
            указаны компонент и свойство.

            Например, используйте ключ 'hdfs:dfs.replication', чтобы установить свойство `dfs.replication` в файле
            `/etc/hadoop/conf/hdfs-site.xml`.
          type: object
          additionalProperties:
            type: string
        sshPublicKeys:
          description: Список публичных ключей SSH для доступа к хостам кластера.
          type: array
          items:
            type: string
    CreateClusterConfigSpec_in_CreateClusterRequest_configSpec:
      description: |-
        Обязательное поле.
        Конфигурация и ресурсы хостов, которые должны быть созданы для кластера Data Proc.
      type: object
      properties:
        versionId:
          description: |-
            Версия образа, которая используется при подготовке кластера.

            Все доступные версии перечислены в [документации](/docs/data-proc/concepts/image-versions).
          type: string
        hadoop:
          $ref: '#/components/schemas/HadoopConfig_in_CreateClusterConfigSpec_hadoop'
        subclustersSpec:
          description: Спецификация создания подкластеров.
          type: array
          items:
            $ref: '#/components/schemas/CreateSubclusterConfigSpec'
    Role_in_CreateSubclusterConfigSpec_role:
      description: |-
        Обязательное поле.
        Роль подкластера в кластере Data Proc.

         - MASTERNODE: Подкластер выполняет роль мастера.

        Мастер может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: Подкластер выполняет роль DATANODE в кластере Data Proc.

        DATANODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * библиотеки Spark
         - COMPUTENODE: Подкластер выполняет роль COMPUTENODE в кластере Data Proc.

        COMPUTENODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * YARN NodeManager
        * библиотеки Spark
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Resources_in_CreateSubclusterConfigSpec_resources:
      description: |-
        Обязательное поле.
        Конфигурация ресурсов для хостов в подкластере.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.).
            Все доступные наборы ресурсов перечислены в [документации](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск.
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
    Role_in_CreateSubclusterRequest_role:
      description: |-
        Обязательное поле.
        Роль, которую выполняют хосты подкластера.

         - MASTERNODE: Подкластер выполняет роль мастера.

        Мастер может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: Подкластер выполняет роль DATANODE в кластере Data Proc.

        DATANODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * библиотеки Spark
         - COMPUTENODE: Подкластер выполняет роль COMPUTENODE в кластере Data Proc.

        COMPUTENODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * YARN NodeManager
        * библиотеки Spark
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Resources_in_CreateSubclusterRequest_resources:
      description: |-
        Обязательное поле.
        Ресурсы, выделенные для каждого хоста в подкластере.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.).
            Все доступные наборы ресурсов перечислены в [документации](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск.
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
    Health_in_Host_health:
      description: |-
        Код состояния хоста.

         - HEALTH_UNKNOWN: Состояние кластера неизвестно (`health` для каждого хоста в кластере — UNKNOWN).
         - ALIVE: Кластер работает нормально (`health` для каждого хоста в кластере — ALIVE).
         - DEAD: Кластер не работает (`health` для каждого хоста в кластере — DEAD).
         - DEGRADED: Кластер работает неоптимально (`health` по крайней мере для одного хоста в кластере не
        ALIVE).
      type: string
      enum:
      - HEALTH_UNKNOWN
      - ALIVE
      - DEAD
      - DEGRADED
      default: HEALTH_UNKNOWN
    Role_in_Host_role:
      description: |-
        Роль хоста в кластере.

         - MASTERNODE: Подкластер выполняет роль мастера.

        Мастер может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: Подкластер выполняет роль DATANODE в кластере Data Proc.

        DATANODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * библиотеки Spark
         - COMPUTENODE: Подкластер выполняет роль COMPUTENODE в кластере Data Proc.

        COMPUTENODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * YARN NodeManager
        * библиотеки Spark
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Role_in_Subcluster_role:
      description: |-
        Роль, которую выполняют хосты подкластера.

         - MASTERNODE: Подкластер выполняет роль мастера.

        Мастер может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS: Namenode, Secondary Namenode
        * YARN: ResourceManager, Timeline Server
        * HBase Master
        * Hive: Server, Metastore, HCatalog
        * Spark History Server
        * Zeppelin
        * ZooKeeper
         - DATANODE: Подкластер выполняет роль DATANODE в кластере Data Proc.

        DATANODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * HDFS DataNode
        * YARN NodeManager
        * HBase RegionServer
        * библиотеки Spark
         - COMPUTENODE: Подкластер выполняет роль COMPUTENODE в кластере Data Proc.

        COMPUTENODE может запускать следующие сервисы, в зависимости от запрошенных компонентов:
        * YARN NodeManager
        * библиотеки Spark
      type: string
      enum:
      - MASTERNODE
      - DATANODE
      - COMPUTENODE
    Resources_in_Subcluster_resources:
      description: Ресурсы, выделенные для каждого хоста в подкластере.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.).
            Все доступные наборы ресурсов перечислены в [документации](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск.
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
    FieldMask_in_UpdateClusterRequest_updateMask:
      description: |-
        Маска поля, которая указывает, какие атрибуты кластера должны быть изменены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    UpdateClusterConfigSpec_in_UpdateClusterRequest_configSpec:
      description: Конфигурация и ресурсы хостов, которые должны быть созданы для
        кластера Data Proc.
      type: object
      properties:
        subclustersSpec:
          description: Новая конфигурация для подкластеров в кластере.
          type: array
          items:
            $ref: '#/components/schemas/UpdateSubclusterConfigSpec'
    Resources_in_UpdateSubclusterConfigSpec_resources:
      description: Конфигурация ресурсов для каждого хоста в подкластере.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.).
            Все доступные наборы ресурсов перечислены в [документации](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск.
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
    FieldMask_in_UpdateSubclusterRequest_updateMask:
      description: |-
        Маска, которая указывает, какие атрибуты подкластера должны быть изменены.

        Имена всех обновляемых полей, разделенные запятыми.
        Только значения указанных полей будут изменены. Остальные останутся нетронутыми.
        Если поле указано в параметре `` updateMask `` и в запросе не было отправлено значение для этого поля,
        значение поля будет сброшено на значение по умолчанию. Значение по умолчанию для большинства полей — null или 0.

        Если в запросе не передается `` updateMask ``, значения всех полей будут обновлены.
        Для полей, указанных в запросе, будут использованы переданные значения.
        Значения остальных полей будут сброшены на значения по умолчанию.
      type: string
    Resources_in_UpdateSubclusterRequest_resources:
      description: |-
        Новая конфигурация ресурсов, которые должны быть выделены для каждого хоста в
        подкластере.
      type: object
      properties:
        resourcePresetId:
          description: |-
            Идентификатор набора вычислительных ресурсов, доступных хосту (процессор, память и т. д.).
            Все доступные наборы ресурсов перечислены в [документации](/docs/data-proc/concepts/instance-types).
          type: string
        diskTypeId:
          description: |-
            Тип хранилища для хоста. Возможные значения:
            * network-hdd — сетевой HDD-диск;
            * network-ssd — сетевой SSD-диск.
          type: string
        diskSize:
          description: Объем хранилища, доступного хосту, в байтах.
          type: string
          format: int64
tags:
- name: Cluster
  description: Набор методов для управления кластерами Data Proc.
- name: Job
  description: Набор методов для управления задачами Data Proc.
- name: ResourcePreset
  description: Набор методов для управления ресурсами ResourcePreset.
- name: Subcluster
  description: Набор методов для управления подкластерами Data Proc.
